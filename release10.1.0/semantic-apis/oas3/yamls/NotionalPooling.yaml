openapi: 3.0.1
info:
  title: Notional Pooling
  description: 'Notional pooling allows corporate customer with multiple active accounts to pool credit and debit balances to provide a single centralized liquidity position and to minimize interest expense, simplify cash management and retain a degree of local autonomy to the accounts'
  contact:
    name: BIAN
    url: https://bian.org
  version: '10.1.0'
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/NotionalPooling/10.1.0
paths:
  '/NotionalPooling/{notionalpoolingid}/Control':
    put:
      tags:
        - CR - NotionalPoolingFacility
      summary: Control Notional Pooling Facility
      description: Control Notional Pooling Facility
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/notionalpoolingid'
      requestBody:
        $ref: '#/components/requestBodies/NotionalPoolingFacility'
      responses:
        '200':
          $ref: '#/components/responses/NotionalPoolingFacility'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/NotionalPooling/{notionalpoolingid}/Exchange':
    put:
      tags:
        - CR - NotionalPoolingFacility
      summary: Exchange Notional Pooling Facility
      description: Exchange Notional Pooling Facility
      operationId: Exchange
      parameters:
        - $ref: '#/components/parameters/notionalpoolingid'
      requestBody:
        $ref: '#/components/requestBodies/NotionalPoolingFacility'
      responses:
        '200':
          $ref: '#/components/responses/NotionalPoolingFacility'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/NotionalPooling/{notionalpoolingid}/Execute':
    put:
      tags:
        - CR - NotionalPoolingFacility
      summary: Execute Notional Pooling Facility
      description: Execute Notional Pooling Facility
      operationId: Execute
      parameters:
        - $ref: '#/components/parameters/notionalpoolingid'
      requestBody:
        $ref: '#/components/requestBodies/NotionalPoolingFacility'
      responses:
        '200':
          $ref: '#/components/responses/NotionalPoolingFacility'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /NotionalPooling/Initiate:
    post:
      tags:
        - CR - NotionalPoolingFacility
      summary: Initiate Notional Pooling Facility
      description: Initiate Notional Pooling Facility
      operationId: Initiate
      requestBody:
        $ref: '#/components/requestBodies/NotionalPoolingFacility'
      responses:
        '200':
          $ref: '#/components/responses/NotionalPoolingFacility'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/NotionalPooling/{notionalpoolingid}/Notify':
    get:
      tags:
        - CR - NotionalPoolingFacility
      summary: Notify Notional Pooling Facility
      description: Notify Notional Pooling Facility
      operationId: Notify
      parameters:
        - $ref: '#/components/parameters/notionalpoolingid'
      responses:
        '200':
          $ref: '#/components/responses/NotionalPoolingFacility'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/NotionalPooling/{notionalpoolingid}/Request':
    put:
      tags:
        - CR - NotionalPoolingFacility
      summary: Request Notional Pooling Facility
      description: Request Notional Pooling Facility
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/notionalpoolingid'
      requestBody:
        $ref: '#/components/requestBodies/NotionalPoolingFacility'
      responses:
        '200':
          $ref: '#/components/responses/NotionalPoolingFacility'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/NotionalPooling/{notionalpoolingid}/Retrieve':
    get:
      tags:
        - CR - NotionalPoolingFacility
      summary: Retrieve Notional Pooling Facility
      description: Retrieve Notional Pooling Facility
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/notionalpoolingid'
      responses:
        '200':
          $ref: '#/components/responses/NotionalPoolingFacility'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/NotionalPooling/{notionalpoolingid}/Update':
    put:
      tags:
        - CR - NotionalPoolingFacility
      summary: Update Notional Pooling Facility
      description: Update Notional Pooling Facility
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/notionalpoolingid'
      requestBody:
        $ref: '#/components/requestBodies/NotionalPoolingFacility'
      responses:
        '200':
          $ref: '#/components/responses/NotionalPoolingFacility'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/NotionalPooling/{notionalpoolingid}/NotionalAccountArrangementFulfillment/{notionalaccountarrangementfulfillmentid}/Exchange':
    put:
      tags:
        - BQ - NotionalAccountArrangementFulfillment
      summary: Exchange Notional Account Arrangement Fulfillment
      description: Exchange Notional Account Arrangement Fulfillment
      operationId: ExchangeNotionalAccountArrangementFulfillment
      parameters:
        - $ref: '#/components/parameters/notionalpoolingid'
        - $ref: '#/components/parameters/notionalaccountarrangementfulfillmentid'
      requestBody:
        $ref: '#/components/requestBodies/NotionalAccountArrangementFulfillment'
      responses:
        '200':
          $ref: '#/components/responses/NotionalAccountArrangementFulfillment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/NotionalPooling/{notionalpoolingid}/NotionalAccountConsolidatedPositionFulfillment/{notionalaccountconsolidatedpositionfulfillmentid}/Exchange':
    put:
      tags:
        - BQ - NotionalAccountConsolidatedPositionFulfillment
      summary: Exchange Notional Account Consolidated Position Fulfillment
      description: Exchange Notional Account Consolidated Position Fulfillment
      operationId: ExchangeNotionalAccountConsolidatedPositionFulfillment
      parameters:
        - $ref: '#/components/parameters/notionalpoolingid'
        - $ref: '#/components/parameters/notionalaccountconsolidatedpositionfulfillmentid'
      requestBody:
        $ref: '#/components/requestBodies/NotionalAccountConsolidatedPositionFulfillment'
      responses:
        '200':
          $ref: '#/components/responses/NotionalAccountConsolidatedPositionFulfillment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/NotionalPooling/{notionalpoolingid}/NotionalAccountInterestAllocationFulfillment/{notionalaccountinterestallocationfulfillmentid}/Exchange':
    put:
      tags:
        - BQ - NotionalAccountInterestAllocationFulfillment
      summary: Exchange Notional Account Interest Allocation Fulfillment
      description: Exchange Notional Account Interest Allocation Fulfillment
      operationId: ExchangeNotionalAccountInterestAllocationFulfillment
      parameters:
        - $ref: '#/components/parameters/notionalpoolingid'
        - $ref: '#/components/parameters/notionalaccountinterestallocationfulfillmentid'
      requestBody:
        $ref: '#/components/requestBodies/NotionalAccountInterestAllocationFulfillment'
      responses:
        '200':
          $ref: '#/components/responses/NotionalAccountInterestAllocationFulfillment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/NotionalPooling/{notionalpoolingid}/NotionalAccountArrangementFulfillment/{notionalaccountarrangementfulfillmentid}/Execute':
    put:
      tags:
        - BQ - NotionalAccountArrangementFulfillment
      summary: Execute Notional Account Arrangement Fulfillment
      description: Execute Notional Account Arrangement Fulfillment
      operationId: ExecuteNotionalAccountArrangementFulfillment
      parameters:
        - $ref: '#/components/parameters/notionalpoolingid'
        - $ref: '#/components/parameters/notionalaccountarrangementfulfillmentid'
      requestBody:
        $ref: '#/components/requestBodies/NotionalAccountArrangementFulfillment'
      responses:
        '200':
          $ref: '#/components/responses/NotionalAccountArrangementFulfillment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/NotionalPooling/{notionalpoolingid}/NotionalAccountConsolidatedPositionFulfillment/{notionalaccountconsolidatedpositionfulfillmentid}/Execute':
    put:
      tags:
        - BQ - NotionalAccountConsolidatedPositionFulfillment
      summary: Execute Notional Account Consolidated Position Fulfillment
      description: Execute Notional Account Consolidated Position Fulfillment
      operationId: ExecuteNotionalAccountConsolidatedPositionFulfillment
      parameters:
        - $ref: '#/components/parameters/notionalpoolingid'
        - $ref: '#/components/parameters/notionalaccountconsolidatedpositionfulfillmentid'
      requestBody:
        $ref: '#/components/requestBodies/NotionalAccountConsolidatedPositionFulfillment'
      responses:
        '200':
          $ref: '#/components/responses/NotionalAccountConsolidatedPositionFulfillment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/NotionalPooling/{notionalpoolingid}/NotionalAccountInterestAllocationFulfillment/{notionalaccountinterestallocationfulfillmentid}/Execute':
    put:
      tags:
        - BQ - NotionalAccountInterestAllocationFulfillment
      summary: Execute Notional Account Interest Allocation Fulfillment
      description: Execute Notional Account Interest Allocation Fulfillment
      operationId: ExecuteNotionalAccountInterestAllocationFulfillment
      parameters:
        - $ref: '#/components/parameters/notionalpoolingid'
        - $ref: '#/components/parameters/notionalaccountinterestallocationfulfillmentid'
      requestBody:
        $ref: '#/components/requestBodies/NotionalAccountInterestAllocationFulfillment'
      responses:
        '200':
          $ref: '#/components/responses/NotionalAccountInterestAllocationFulfillment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/NotionalPooling/{notionalpoolingid}/NotionalAccountArrangementFulfillment/{notionalaccountarrangementfulfillmentid}/Initiate':
    post:
      tags:
        - BQ - NotionalAccountArrangementFulfillment
      summary: Initiate Notional Account Arrangement Fulfillment
      description: Initiate Notional Account Arrangement Fulfillment
      operationId: InitiateNotionalAccountArrangementFulfillment
      parameters:
        - $ref: '#/components/parameters/notionalpoolingid'
        - $ref: '#/components/parameters/notionalaccountarrangementfulfillmentid'
      requestBody:
        $ref: '#/components/requestBodies/NotionalAccountArrangementFulfillment'
      responses:
        '200':
          $ref: '#/components/responses/NotionalAccountArrangementFulfillment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/NotionalPooling/{notionalpoolingid}/NotionalAccountConsolidatedPositionFulfillment/{notionalaccountconsolidatedpositionfulfillmentid}/Initiate':
    post:
      tags:
        - BQ - NotionalAccountConsolidatedPositionFulfillment
      summary: Initiate Notional Account Consolidated Position Fulfillment
      description: Initiate Notional Account Consolidated Position Fulfillment
      operationId: InitiateNotionalAccountConsolidatedPositionFulfillment
      parameters:
        - $ref: '#/components/parameters/notionalpoolingid'
        - $ref: '#/components/parameters/notionalaccountconsolidatedpositionfulfillmentid'
      requestBody:
        $ref: '#/components/requestBodies/NotionalAccountConsolidatedPositionFulfillment'
      responses:
        '200':
          $ref: '#/components/responses/NotionalAccountConsolidatedPositionFulfillment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/NotionalPooling/{notionalpoolingid}/NotionalAccountInterestAllocationFulfillment/{notionalaccountinterestallocationfulfillmentid}/Initiate':
    post:
      tags:
        - BQ - NotionalAccountInterestAllocationFulfillment
      summary: Initiate Notional Account Interest Allocation Fulfillment
      description: Initiate Notional Account Interest Allocation Fulfillment
      operationId: InitiateNotionalAccountInterestAllocationFulfillment
      parameters:
        - $ref: '#/components/parameters/notionalpoolingid'
        - $ref: '#/components/parameters/notionalaccountinterestallocationfulfillmentid'
      requestBody:
        $ref: '#/components/requestBodies/NotionalAccountInterestAllocationFulfillment'
      responses:
        '200':
          $ref: '#/components/responses/NotionalAccountInterestAllocationFulfillment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/NotionalPooling/{notionalpoolingid}/NotionalAccountArrangementFulfillment/{notionalaccountarrangementfulfillmentid}/Notify':
    get:
      tags:
        - BQ - NotionalAccountArrangementFulfillment
      summary: Notify Notional Account Arrangement Fulfillment
      description: Notify Notional Account Arrangement Fulfillment
      operationId: NotifyNotionalAccountArrangementFulfillment
      parameters:
        - $ref: '#/components/parameters/notionalpoolingid'
        - $ref: '#/components/parameters/notionalaccountarrangementfulfillmentid'
      responses:
        '200':
          $ref: '#/components/responses/NotionalAccountArrangementFulfillment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/NotionalPooling/{notionalpoolingid}/NotionalAccountConsolidatedPositionFulfillment/{notionalaccountconsolidatedpositionfulfillmentid}/Notify':
    get:
      tags:
        - BQ - NotionalAccountConsolidatedPositionFulfillment
      summary: Notify Notional Account Consolidated Position Fulfillment
      description: Notify Notional Account Consolidated Position Fulfillment
      operationId: NotifyNotionalAccountConsolidatedPositionFulfillment
      parameters:
        - $ref: '#/components/parameters/notionalpoolingid'
        - $ref: '#/components/parameters/notionalaccountconsolidatedpositionfulfillmentid'
      responses:
        '200':
          $ref: '#/components/responses/NotionalAccountConsolidatedPositionFulfillment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/NotionalPooling/{notionalpoolingid}/NotionalAccountInterestAllocationFulfillment/{notionalaccountinterestallocationfulfillmentid}/Notify':
    get:
      tags:
        - BQ - NotionalAccountInterestAllocationFulfillment
      summary: Notify Notional Account Interest Allocation Fulfillment
      description: Notify Notional Account Interest Allocation Fulfillment
      operationId: NotifyNotionalAccountInterestAllocationFulfillment
      parameters:
        - $ref: '#/components/parameters/notionalpoolingid'
        - $ref: '#/components/parameters/notionalaccountinterestallocationfulfillmentid'
      responses:
        '200':
          $ref: '#/components/responses/NotionalAccountInterestAllocationFulfillment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/NotionalPooling/{notionalpoolingid}/NotionalAccountArrangementFulfillment/{notionalaccountarrangementfulfillmentid}/Request':
    put:
      tags:
        - BQ - NotionalAccountArrangementFulfillment
      summary: Request Notional Account Arrangement Fulfillment
      description: Request Notional Account Arrangement Fulfillment
      operationId: RequestNotionalAccountArrangementFulfillment
      parameters:
        - $ref: '#/components/parameters/notionalpoolingid'
        - $ref: '#/components/parameters/notionalaccountarrangementfulfillmentid'
      requestBody:
        $ref: '#/components/requestBodies/NotionalAccountArrangementFulfillment'
      responses:
        '200':
          $ref: '#/components/responses/NotionalAccountArrangementFulfillment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/NotionalPooling/{notionalpoolingid}/NotionalAccountConsolidatedPositionFulfillment/{notionalaccountconsolidatedpositionfulfillmentid}/Request':
    put:
      tags:
        - BQ - NotionalAccountConsolidatedPositionFulfillment
      summary: Request Notional Account Consolidated Position Fulfillment
      description: Request Notional Account Consolidated Position Fulfillment
      operationId: RequestNotionalAccountConsolidatedPositionFulfillment
      parameters:
        - $ref: '#/components/parameters/notionalpoolingid'
        - $ref: '#/components/parameters/notionalaccountconsolidatedpositionfulfillmentid'
      requestBody:
        $ref: '#/components/requestBodies/NotionalAccountConsolidatedPositionFulfillment'
      responses:
        '200':
          $ref: '#/components/responses/NotionalAccountConsolidatedPositionFulfillment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/NotionalPooling/{notionalpoolingid}/NotionalAccountInterestAllocationFulfillment/{notionalaccountinterestallocationfulfillmentid}/Request':
    put:
      tags:
        - BQ - NotionalAccountInterestAllocationFulfillment
      summary: Request Notional Account Interest Allocation Fulfillment
      description: Request Notional Account Interest Allocation Fulfillment
      operationId: RequestNotionalAccountInterestAllocationFulfillment
      parameters:
        - $ref: '#/components/parameters/notionalpoolingid'
        - $ref: '#/components/parameters/notionalaccountinterestallocationfulfillmentid'
      requestBody:
        $ref: '#/components/requestBodies/NotionalAccountInterestAllocationFulfillment'
      responses:
        '200':
          $ref: '#/components/responses/NotionalAccountInterestAllocationFulfillment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/NotionalPooling/{notionalpoolingid}/NotionalAccountArrangementFulfillment/{notionalaccountarrangementfulfillmentid}/Retrieve':
    get:
      tags:
        - BQ - NotionalAccountArrangementFulfillment
      summary: Retrieve Notional Account Arrangement Fulfillment
      description: Retrieve Notional Account Arrangement Fulfillment
      operationId: RetrieveNotionalAccountArrangementFulfillment
      parameters:
        - $ref: '#/components/parameters/notionalpoolingid'
        - $ref: '#/components/parameters/notionalaccountarrangementfulfillmentid'
      responses:
        '200':
          $ref: '#/components/responses/NotionalAccountArrangementFulfillment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/NotionalPooling/{notionalpoolingid}/NotionalAccountConsolidatedPositionFulfillment/{notionalaccountconsolidatedpositionfulfillmentid}/Retrieve':
    get:
      tags:
        - BQ - NotionalAccountConsolidatedPositionFulfillment
      summary: Retrieve Notional Account Consolidated Position Fulfillment
      description: Retrieve Notional Account Consolidated Position Fulfillment
      operationId: RetrieveNotionalAccountConsolidatedPositionFulfillment
      parameters:
        - $ref: '#/components/parameters/notionalpoolingid'
        - $ref: '#/components/parameters/notionalaccountconsolidatedpositionfulfillmentid'
      responses:
        '200':
          $ref: '#/components/responses/NotionalAccountConsolidatedPositionFulfillment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/NotionalPooling/{notionalpoolingid}/NotionalAccountInterestAllocationFulfillment/{notionalaccountinterestallocationfulfillmentid}/Retrieve':
    get:
      tags:
        - BQ - NotionalAccountInterestAllocationFulfillment
      summary: Retrieve Notional Account Interest Allocation Fulfillment
      description: Retrieve Notional Account Interest Allocation Fulfillment
      operationId: RetrieveNotionalAccountInterestAllocationFulfillment
      parameters:
        - $ref: '#/components/parameters/notionalpoolingid'
        - $ref: '#/components/parameters/notionalaccountinterestallocationfulfillmentid'
      responses:
        '200':
          $ref: '#/components/responses/NotionalAccountInterestAllocationFulfillment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/NotionalPooling/{notionalpoolingid}/NotionalAccountArrangementFulfillment/{notionalaccountarrangementfulfillmentid}/Update':
    put:
      tags:
        - BQ - NotionalAccountArrangementFulfillment
      summary: Update Notional Account Arrangement Fulfillment
      description: Update Notional Account Arrangement Fulfillment
      operationId: UpdateNotionalAccountArrangementFulfillment
      parameters:
        - $ref: '#/components/parameters/notionalpoolingid'
        - $ref: '#/components/parameters/notionalaccountarrangementfulfillmentid'
      requestBody:
        $ref: '#/components/requestBodies/NotionalAccountArrangementFulfillment'
      responses:
        '200':
          $ref: '#/components/responses/NotionalAccountArrangementFulfillment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/NotionalPooling/{notionalpoolingid}/NotionalAccountConsolidatedPositionFulfillment/{notionalaccountconsolidatedpositionfulfillmentid}/Update':
    put:
      tags:
        - BQ - NotionalAccountConsolidatedPositionFulfillment
      summary: Update Notional Account Consolidated Position Fulfillment
      description: Update Notional Account Consolidated Position Fulfillment
      operationId: UpdateNotionalAccountConsolidatedPositionFulfillment
      parameters:
        - $ref: '#/components/parameters/notionalpoolingid'
        - $ref: '#/components/parameters/notionalaccountconsolidatedpositionfulfillmentid'
      requestBody:
        $ref: '#/components/requestBodies/NotionalAccountConsolidatedPositionFulfillment'
      responses:
        '200':
          $ref: '#/components/responses/NotionalAccountConsolidatedPositionFulfillment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/NotionalPooling/{notionalpoolingid}/NotionalAccountInterestAllocationFulfillment/{notionalaccountinterestallocationfulfillmentid}/Update':
    put:
      tags:
        - BQ - NotionalAccountInterestAllocationFulfillment
      summary: Update Notional Account Interest Allocation Fulfillment
      description: Update Notional Account Interest Allocation Fulfillment
      operationId: UpdateNotionalAccountInterestAllocationFulfillment
      parameters:
        - $ref: '#/components/parameters/notionalpoolingid'
        - $ref: '#/components/parameters/notionalaccountinterestallocationfulfillmentid'
      requestBody:
        $ref: '#/components/requestBodies/NotionalAccountInterestAllocationFulfillment'
      responses:
        '200':
          $ref: '#/components/responses/NotionalAccountInterestAllocationFulfillment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    condition:
      type: object
      properties:
        Condition:
          type: string
          description: "Condition is a premise upon which the fulfillment of an agreement depends \n\nGeneral and special arrangements, provisions, requirements, rules, specifications, and standards that form an integral part of an agreement or contract.\n\nRead more: http://www.businessdictionary.com/definition/terms-and-conditions.html\n\n"
          format: class
      description: The required status/situation prior to the implementation of the feature
    schedule:
      type: object
      properties:
        ScheduleType:
          type: string
          description: ''
          format: string
      description: The timing and key actions/milestones involved in completing the fulfillment feature instance
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: ''
    businessservice:
      type: object
      properties:
        BusinessServiceName:
          $ref: '#/components/schemas/name'
        BusinessService:
          type: string
          description: "A business service supports business capabilities through an explicitly defined interface and is explicitly governed by an organization. TOGAF 9.2\n\nA business service represents explicitly defined behavior that a business role, business actor, or business collaboration exposes to its environment. ArchiMate 3.1\n"
          format: class
      description: The Notional Account Consolidated Position Fulfillment specific Business Service
    financialfacility:
      type: object
      properties:
        FinancialFacility:
          type: string
          description: "A production or operational capacity to perform a business function for delivering a banking product or service\n\nA functional classification of banking product that provides ongoing capacity to deliver financial services (e.g. loan service, payment service)\n\n\n"
          format: class
      description: Reference to Notional Account Consolidated Position Fulfillment
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: The type of Notional Account Consolidated Position Fulfillment
    NotionalAccountConsolidatedPositionFulfillment:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        NotionalPoolingFacilityReference:
          $ref: '#/components/schemas/financialfacility'
        NotionalAccountConsolidatedPositionFulfillmentReference:
          type: string
          description: Reference to Notional Account Consolidated Position Fulfillment
          format: object
        NotionalAccountConsolidatedPositionFulfillmentType:
          $ref: '#/components/schemas/text'
      description: The configuration and execution of Notional Account Consolidated Position Fulfillment arrangement within the Notional Account Consolidated Position Fulfillment
    NotionalAccountInterestAllocationFulfillment:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        NotionalPoolingFacilityReference:
          $ref: '#/components/schemas/financialfacility'
        NotionalAccountInterestAllocationFulfillmentReference:
          type: string
          description: Reference to Notional Account Interest Allocation Fulfillment
          format: object
        NotionalAccountInterestAllocationFulfillmentType:
          $ref: '#/components/schemas/text'
      description: The configuration and execution of Notional Account Consolidated Position Fulfillment arrangement within the Notional Account Consolidated Position Fulfillment
    NotionalAccountArrangementFulfillment:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        NotionalPoolingFacilityReference:
          $ref: '#/components/schemas/financialfacility'
        NotionalAccountArrangementFulfillmentReference:
          type: string
          description: Reference to Notional Account Arrangement Fulfillment
          format: object
        NotionalAccountArrangementFulfillmentType:
          $ref: '#/components/schemas/text'
      description: The configuration and execution of Notional Account Consolidated Position Fulfillment arrangement within the Notional Account Consolidated Position Fulfillment
    workproduct:
      type: object
      properties:
        WorkProductType:
          type: string
          description: ''
          format: workproducttypevalues
        Workproduct:
          type: string
          description: 'Contact records, working papers, documents and activity logs produced during the execution of a work task'
          format: datatype
      description: ''
    NotionalPoolingOutcome:
      type: object
      properties:
        NotionalPoolingFinancialFacility:
          $ref: '#/components/schemas/financialfacility'
        NotionalPoolingWorkProduct:
          $ref: '#/components/schemas/workproduct'
      description: The configuration and execution of Notional Account Consolidated Position Fulfillment arrangement within the Notional Account Consolidated Position Fulfillment
    feature:
      type: object
      properties:
        FeatureType:
          type: string
          description: ''
          format: string
      description: A selected optional product feature as subject matter of Notional Pooling Facility
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        Status:
          type: string
          description: A characteristic that describe the object by referring to a state transition in its lifecycle.
          format: datatype
      description: The status of Notional Pooling Facility
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        Party:
          type: string
          description: "A party represents an autonomous entity in which a bank has a business interest. It has a legal definition and identity. A party is a Person, Organization, (a proposed definition for BIAN BOM adapted from BIAN Party Working Group) \n\n- Entity involved in an activity. (ISO20022)"
          format: class
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        Involvedparty:
          type: string
          description: ''
          format: datatype
      description: Reference to the party who is involved in Notional Pooling Facility
    currencycode:
      type: object
      properties:
        Currencycode:
          type: string
          description: "A code identifying a currency according to ISO-4217.\nA currency is a system of money in general use in a particular country.\n\nCode allocated to a currency, by a maintenance agency, under an international identification scheme as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\". Valid currency codes are registered with the ISO 4217 Maintenance Agency, and consist of three contiguous letters. (ISO20022)\n\n"
          format: datatype
      description: The curreny which is arranged in Notional Pooling Facility
    ruleset:
      type: object
      properties:
        RuleSetDefinition:
          type: string
          description: ''
          format: string
        RuleSet:
          type: string
          description: 'A set of rules (e.g., regulation, policy, law, guideline, principle, standard) to guide, direct or operate a subject matter.'
          format: class
      description: Reference to the regulation which is defined in Notional Pooling Facility
    rulesettype:
      type: object
      properties:
        RuleSetTypeName:
          $ref: '#/components/schemas/name'
        Rulesettype:
          type: string
          description: Data type specifies the classification of RuleSet
          format: datatype
      description: A Classification that distinguishes between the regularity domains of Notional Pooling Facility
    jurisdiction:
      type: object
      properties:
        Jurisdiction:
          type: string
          description: Jurisdiction that will be assigned in case of legal dispute.
          format: class
      description: Reference to the jurisdiction that is assigned to Notional Pooling Facility in case of legal dispute.
    businessunit:
      type: object
      properties:
        BusinessFunction:
          type: string
          description: ''
          format: string
        BusinessUnit:
          type: string
          description: "A unit of an organisation that does not have legal standing outside the organisation.\n\nA logical element or segment of a company (such as accounting, production, marketing) representing a specific business function, and a definite place on the organizational chart, under the domain of a manager. Also called department, division, or a functional area. (Business Dictionary)\n\nRead more: http://www.businessdictionary.com/definition/business-unit.html"
          format: class
      description: 'The financial accounting unit into which the financial events, with regard to the origination and fulfillment of the agreement in the context of Notional Pooling Facility, are entered.'
    accountstatus:
      type: object
      properties:
        AccountStatus:
          $ref: '#/components/schemas/status'
        Accountstatus:
          type: string
          description: Specifies the current state of an account. (ISO20022)
          format: datatype
      description: "A characteristic of account which refers to the LifecycleStatus of account like opened, closed, blocked, etc.\n\nSpecifies the current state of an account. (ISO20022)"
    account:
      type: object
      properties:
        AccountStatus:
          $ref: '#/components/schemas/accountstatus'
        Account:
          type: string
          description: "A measuring state on which movements in value or amounts of assets, rights and obligations are registered.\n\nComment: \nIt is a bookkeeping instrument holding the amount or value of something by registering the movements in plus and min when events happen which have an impact on the position.\nThe term \"account\" is usually associated to an accounting or bookkeeping concept to hold the financial or stock state of a business concept. An account will typically group the debit and credit entries for a specific aspect of the business resulting from transactions,\nOften accounts are represented as a T-account which is a visual aid used to depict an account. Above the top portion of the T would be the account title. On the left-side of the base of the T would be any debit amounts; on the right-side would be the credit amounts.\nA commonly used bookkeeping method is the double-entry method. This means that every transaction has at least 2 movements. If a customer pays 100 € in cash, there is\na decrease in the amount that the customer owes to the company (the customer position is decreased)\nan increase in the amount that the company has in cash (the cash position is increased)\n\nAn account can be assigning to one or more ledgers. A ledger is a group of accounts for a certain purpose. If there is need for multiple ledgers because of multiple purpose, an account can perfectly well assigned to multiple ledgers. When Ledgers are in real physical books, this is not possible. When ledgers are digital, accounts can be grouped into multiple groups at the same time. This practice is very rarely taught into courses for accounting, but in digital accounting, it is common practice.\n\nExamples: \nstock account of a shop, cash register, bank account, financial accounting account, customer account, supplier account, ...\nBank Account BE12 1234 5678 9012: is an individual banking account\nAccounts Payable, is a collective account keeping the balance of the amounts to pay by the organisation to its suppliers. The balance is the result of the financial movements related to suppliers. This account is managed usually in a General Ledger \nSupplier Account X, is an individual account keeping the balance of the amounts to pay by the organisation to an individual supplier. The balance is the result of the financial movements related to an individual supplier. This account is managed usually in a sub-ledger.\nStock Account x, is an individual account keeping the balance of the amounts in stock of a specific good.\nA payment service to take fund out of an account. "
          format: class
      description: Reference to the account which is linked to Notional Pooling Facility
    position:
      type: object
      properties:
        PositionValue:
          type: string
          description: ''
          format: string
        Position:
          type: string
          description: "The counted state (e.g., the amount of money, the value, the number) of something \n- It is the sum of entries\n- It is the derived attribute\n- It is an information object"
          format: class
      description: The position of Notional Pooling Facility
    value:
      type: object
      properties:
        Value:
          type: string
          description: 'A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)'
          format: datatype
      description: ''
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        Identifier:
          type: string
          description: An identifier is a character string used to uniquely identify one instance of an object within an identification scheme that is managed by an agency. (UN/CEFAT)
          format: datatype
      description: ''
    productidentification:
      type: object
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/identifier'
        Productidentification:
          type: string
          description: ''
          format: datatype
      description: The identifier of product e.g. ISIN Code.
    bankingproduct:
      type: object
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/productidentification'
        BankingProduct:
          type: string
          description: 'A package of services and/or goods, accompanied by term and condition which is offered as a whole to (internal or external) customers.'
          format: class
      description: Reference to the product which is linked to Notional Pooling Facility
    limittype:
      type: object
      properties:
        LimitTypeName:
          $ref: '#/components/schemas/name'
        Limittype:
          type: string
          description: ''
          format: datatype
      description: Nature of the limit.
    limitarrangement:
      type: object
      properties:
        LimitType:
          $ref: '#/components/schemas/limittype'
        LimitArrangement:
          type: string
          description: "An arrangement to limit something\ne.g., the number of transaction per week, the amount of money allowed to withdraw per week/day and etc. "
          format: class
      description: Reference to the limitation related to the position of Notional Pooling Facility
    NotionalPoolingFacility:
      type: object
      properties:
        NotionalPoolingFacilityParameterType:
          type: string
          description: A Classification value that distinguishes between arrangements according to the type of business services within Notional Pooling Facility
          format: string
        NotionalPoolingFacilitySelectedOption:
          $ref: '#/components/schemas/feature'
        NotionalPoolingFacilityType:
          type: string
          description: The type of Notional Pooling Facility
          format: bankingproducttype
        NotionalPoolingFacilityCalendarReference:
          type: string
          description: Reference to the calendar used to fulfill Notional Pooling Facility
          format: calendar
        NotionalPoolingFacilityStatus:
          $ref: '#/components/schemas/status'
        NotionalPoolingFacilityAssociatedParty:
          $ref: '#/components/schemas/involvedparty'
        NotionalPoolingFacilityCurrency:
          $ref: '#/components/schemas/currencycode'
        NotionalPoolingFacilityRegulationReference:
          $ref: '#/components/schemas/ruleset'
        NotionalPoolingFacilityRegulationType:
          $ref: '#/components/schemas/rulesettype'
        NotionalPoolingFacilityJurisdiction:
          $ref: '#/components/schemas/jurisdiction'
        NotionalPoolingFacilityBookingLocation:
          $ref: '#/components/schemas/businessunit'
        NotionalPoolingFacilityAccountType:
          type: string
          description: The type of account which is linked to Notional Pooling Facility
          format: actiontype
        NotionalPoolingFacilityAccountReference:
          $ref: '#/components/schemas/account'
        NotionalPoolingFacilityCustomerReference:
          $ref: '#/components/schemas/involvedparty'
        NotionalPoolingFacilityPosition:
          $ref: '#/components/schemas/position'
        NotionalPoolingFacilityProductReference:
          $ref: '#/components/schemas/bankingproduct'
        NotionalPoolingFacilityPositionLimit:
          $ref: '#/components/schemas/limitarrangement'
        NotionalPoolingFacilityReference:
          $ref: '#/components/schemas/financialfacility'
      description: 'Fulfill any scheduled and ad-hoc obligations under a service arrangement, most typically for a financial product or facility within Notional Pooling. '
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotionalPoolingFacility:
      description: NotionalPoolingFacility
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotionalPoolingFacility'
    NotionalAccountArrangementFulfillment:
      description: NotionalAccountArrangementFulfillment
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotionalAccountArrangementFulfillment'
    NotionalAccountConsolidatedPositionFulfillment:
      description: NotionalAccountConsolidatedPositionFulfillment
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotionalAccountConsolidatedPositionFulfillment'
    NotionalAccountInterestAllocationFulfillment:
      description: NotionalAccountInterestAllocationFulfillment
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotionalAccountInterestAllocationFulfillment'
  parameters:
    notionalpoolingid:
      name: notionalpoolingid
      in: path
      required: true
      style: simple
      schema:
        type: string
    notionalaccountarrangementfulfillmentid:
      name: notionalaccountarrangementfulfillmentid
      in: path
      required: true
      style: simple
      schema:
        type: string
    notionalaccountconsolidatedpositionfulfillmentid:
      name: notionalaccountconsolidatedpositionfulfillmentid
      in: path
      required: true
      style: simple
      schema:
        type: string
    notionalaccountinterestallocationfulfillmentid:
      name: notionalaccountinterestallocationfulfillmentid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    NotionalPoolingFacility:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotionalPoolingFacility'
      required: true
    NotionalAccountArrangementFulfillment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotionalAccountArrangementFulfillment'
      required: true
    NotionalAccountConsolidatedPositionFulfillment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotionalAccountConsolidatedPositionFulfillment'
      required: true
    NotionalAccountInterestAllocationFulfillment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotionalAccountInterestAllocationFulfillment'
      required: true