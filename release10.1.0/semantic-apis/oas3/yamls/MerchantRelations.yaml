openapi: 3.0.1
info:
  title: Merchant Relations
  description: This service domain maintains the terms and conditions agreed with merchants for cards related activity
  contact:
    name: BIAN
    url: https://bian.org
  version: '10.1.0'
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/MerchantRelations/10.1.0
paths:
  '/MerchantRelations/{merchantrelationsid}/Control':
    put:
      tags:
        - CR - MerchantRelationshipAgreement
      summary: Control Merchant Relationship Agreement
      description: Control Merchant Relationship Agreement
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
      requestBody:
        $ref: '#/components/requestBodies/MerchantRelationshipAgreement'
      responses:
        '200':
          $ref: '#/components/responses/MerchantRelationshipAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /MerchantRelations/Evaluate:
    post:
      tags:
        - CR - MerchantRelationshipAgreement
      summary: Evaluate Merchant Relationship Agreement
      description: Evaluate Merchant Relationship Agreement
      operationId: Evaluate
      requestBody:
        $ref: '#/components/requestBodies/MerchantRelationshipAgreement'
      responses:
        '200':
          $ref: '#/components/responses/MerchantRelationshipAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/Exchange':
    put:
      tags:
        - CR - MerchantRelationshipAgreement
      summary: Exchange Merchant Relationship Agreement
      description: Exchange Merchant Relationship Agreement
      operationId: Exchange
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
      requestBody:
        $ref: '#/components/requestBodies/MerchantRelationshipAgreement'
      responses:
        '200':
          $ref: '#/components/responses/MerchantRelationshipAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/Grant':
    put:
      tags:
        - CR - MerchantRelationshipAgreement
      summary: Grant Merchant Relationship Agreement
      description: Grant Merchant Relationship Agreement
      operationId: Grant
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
      requestBody:
        $ref: '#/components/requestBodies/MerchantRelationshipAgreement'
      responses:
        '200':
          $ref: '#/components/responses/MerchantRelationshipAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/Notify':
    get:
      tags:
        - CR - MerchantRelationshipAgreement
      summary: Notify Merchant Relationship Agreement
      description: Notify Merchant Relationship Agreement
      operationId: Notify
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
      responses:
        '200':
          $ref: '#/components/responses/MerchantRelationshipAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/Request':
    put:
      tags:
        - CR - MerchantRelationshipAgreement
      summary: Request Merchant Relationship Agreement
      description: Request Merchant Relationship Agreement
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
      requestBody:
        $ref: '#/components/requestBodies/MerchantRelationshipAgreement'
      responses:
        '200':
          $ref: '#/components/responses/MerchantRelationshipAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/Retrieve':
    get:
      tags:
        - CR - MerchantRelationshipAgreement
      summary: Retrieve Merchant Relationship Agreement
      description: Retrieve Merchant Relationship Agreement
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
      responses:
        '200':
          $ref: '#/components/responses/MerchantRelationshipAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/Update':
    put:
      tags:
        - CR - MerchantRelationshipAgreement
      summary: Update Merchant Relationship Agreement
      description: Update Merchant Relationship Agreement
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
      requestBody:
        $ref: '#/components/requestBodies/MerchantRelationshipAgreement'
      responses:
        '200':
          $ref: '#/components/responses/MerchantRelationshipAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/LegalTerm/{legaltermid}/Evaluate':
    post:
      tags:
        - BQ - LegalTerm
      summary: Evaluate Legal Term
      description: Evaluate Legal Term
      operationId: EvaluateLegalTerm
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
        - $ref: '#/components/parameters/legaltermid'
      requestBody:
        $ref: '#/components/requestBodies/LegalTerm'
      responses:
        '200':
          $ref: '#/components/responses/LegalTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/OperationalTerm/{operationaltermid}/Evaluate':
    post:
      tags:
        - BQ - OperationalTerm
      summary: Evaluate Operational Term
      description: Evaluate Operational Term
      operationId: EvaluateOperationalTerm
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
        - $ref: '#/components/parameters/operationaltermid'
      requestBody:
        $ref: '#/components/requestBodies/OperationalTerm'
      responses:
        '200':
          $ref: '#/components/responses/OperationalTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/RegulatoryTerm/{regulatorytermid}/Evaluate':
    post:
      tags:
        - BQ - RegulatoryTerm
      summary: Evaluate Regulatory Term
      description: Evaluate Regulatory Term
      operationId: EvaluateRegulatoryTerm
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
        - $ref: '#/components/parameters/regulatorytermid'
      requestBody:
        $ref: '#/components/requestBodies/RegulatoryTerm'
      responses:
        '200':
          $ref: '#/components/responses/RegulatoryTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/LegalTerm/{legaltermid}/Exchange':
    put:
      tags:
        - BQ - LegalTerm
      summary: Exchange Legal Term
      description: Exchange Legal Term
      operationId: ExchangeLegalTerm
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
        - $ref: '#/components/parameters/legaltermid'
      requestBody:
        $ref: '#/components/requestBodies/LegalTerm'
      responses:
        '200':
          $ref: '#/components/responses/LegalTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/OperationalTerm/{operationaltermid}/Exchange':
    put:
      tags:
        - BQ - OperationalTerm
      summary: Exchange Operational Term
      description: Exchange Operational Term
      operationId: ExchangeOperationalTerm
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
        - $ref: '#/components/parameters/operationaltermid'
      requestBody:
        $ref: '#/components/requestBodies/OperationalTerm'
      responses:
        '200':
          $ref: '#/components/responses/OperationalTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/RegulatoryTerm/{regulatorytermid}/Exchange':
    put:
      tags:
        - BQ - RegulatoryTerm
      summary: Exchange Regulatory Term
      description: Exchange Regulatory Term
      operationId: ExchangeRegulatoryTerm
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
        - $ref: '#/components/parameters/regulatorytermid'
      requestBody:
        $ref: '#/components/requestBodies/RegulatoryTerm'
      responses:
        '200':
          $ref: '#/components/responses/RegulatoryTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/LegalTerm/{legaltermid}/Notify':
    get:
      tags:
        - BQ - LegalTerm
      summary: Notify Legal Term
      description: Notify Legal Term
      operationId: NotifyLegalTerm
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
        - $ref: '#/components/parameters/legaltermid'
      responses:
        '200':
          $ref: '#/components/responses/LegalTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/OperationalTerm/{operationaltermid}/Notify':
    get:
      tags:
        - BQ - OperationalTerm
      summary: Notify Operational Term
      description: Notify Operational Term
      operationId: NotifyOperationalTerm
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
        - $ref: '#/components/parameters/operationaltermid'
      responses:
        '200':
          $ref: '#/components/responses/OperationalTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/RegulatoryTerm/{regulatorytermid}/Notify':
    get:
      tags:
        - BQ - RegulatoryTerm
      summary: Notify Regulatory Term
      description: Notify Regulatory Term
      operationId: NotifyRegulatoryTerm
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
        - $ref: '#/components/parameters/regulatorytermid'
      responses:
        '200':
          $ref: '#/components/responses/RegulatoryTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/LegalTerm/{legaltermid}/Request':
    put:
      tags:
        - BQ - LegalTerm
      summary: Request Legal Term
      description: Request Legal Term
      operationId: RequestLegalTerm
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
        - $ref: '#/components/parameters/legaltermid'
      requestBody:
        $ref: '#/components/requestBodies/LegalTerm'
      responses:
        '200':
          $ref: '#/components/responses/LegalTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/OperationalTerm/{operationaltermid}/Request':
    put:
      tags:
        - BQ - OperationalTerm
      summary: Request Operational Term
      description: Request Operational Term
      operationId: RequestOperationalTerm
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
        - $ref: '#/components/parameters/operationaltermid'
      requestBody:
        $ref: '#/components/requestBodies/OperationalTerm'
      responses:
        '200':
          $ref: '#/components/responses/OperationalTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/RegulatoryTerm/{regulatorytermid}/Request':
    put:
      tags:
        - BQ - RegulatoryTerm
      summary: Request Regulatory Term
      description: Request Regulatory Term
      operationId: RequestRegulatoryTerm
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
        - $ref: '#/components/parameters/regulatorytermid'
      requestBody:
        $ref: '#/components/requestBodies/RegulatoryTerm'
      responses:
        '200':
          $ref: '#/components/responses/RegulatoryTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/LegalTerm/{legaltermid}/Retrieve':
    get:
      tags:
        - BQ - LegalTerm
      summary: Retrieve Legal Term
      description: Retrieve Legal Term
      operationId: RetrieveLegalTerm
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
        - $ref: '#/components/parameters/legaltermid'
      responses:
        '200':
          $ref: '#/components/responses/LegalTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/OperationalTerm/{operationaltermid}/Retrieve':
    get:
      tags:
        - BQ - OperationalTerm
      summary: Retrieve Operational Term
      description: Retrieve Operational Term
      operationId: RetrieveOperationalTerm
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
        - $ref: '#/components/parameters/operationaltermid'
      responses:
        '200':
          $ref: '#/components/responses/OperationalTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/RegulatoryTerm/{regulatorytermid}/Retrieve':
    get:
      tags:
        - BQ - RegulatoryTerm
      summary: Retrieve Regulatory Term
      description: Retrieve Regulatory Term
      operationId: RetrieveRegulatoryTerm
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
        - $ref: '#/components/parameters/regulatorytermid'
      responses:
        '200':
          $ref: '#/components/responses/RegulatoryTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/LegalTerm/{legaltermid}/Update':
    put:
      tags:
        - BQ - LegalTerm
      summary: Update Legal Term
      description: Update Legal Term
      operationId: UpdateLegalTerm
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
        - $ref: '#/components/parameters/legaltermid'
      requestBody:
        $ref: '#/components/requestBodies/LegalTerm'
      responses:
        '200':
          $ref: '#/components/responses/LegalTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/OperationalTerm/{operationaltermid}/Update':
    put:
      tags:
        - BQ - OperationalTerm
      summary: Update Operational Term
      description: Update Operational Term
      operationId: UpdateOperationalTerm
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
        - $ref: '#/components/parameters/operationaltermid'
      requestBody:
        $ref: '#/components/requestBodies/OperationalTerm'
      responses:
        '200':
          $ref: '#/components/responses/OperationalTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/RegulatoryTerm/{regulatorytermid}/Update':
    put:
      tags:
        - BQ - RegulatoryTerm
      summary: Update Regulatory Term
      description: Update Regulatory Term
      operationId: UpdateRegulatoryTerm
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
        - $ref: '#/components/parameters/regulatorytermid'
      requestBody:
        $ref: '#/components/requestBodies/RegulatoryTerm'
      responses:
        '200':
          $ref: '#/components/responses/RegulatoryTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: object
          format: string
        status:
          type: object
          format: string
        message:
          type: object
          format: string
      description: Status Attributes
    schedule:
      type: object
      properties:
        Schedule:
          type: object
          description: "Defined sequence of planned tasks/actions or a timetable of available services\n\nA schedule is a time based series of something"
          format: datatype
      description: Any timing/duration considerations applying to the Legal Term
    name:
      type: object
      properties:
        Name:
          type: object
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: ''
    text:
      type: object
      properties:
        Text:
          type: object
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: ''
    businessservice:
      type: object
      properties:
        BusinessServiceName:
          $ref: '#/components/schemas/name'
        BusinessServiceType:
          type: object
          description: ''
          format: businessservicetypevalues(enumeration)
        BusinessServiceDescription:
          $ref: '#/components/schemas/text'
      description: The Legal Term specific Business Service
    date:
      type: object
      properties:
        Date:
          type: object
          description: "A date is a Gregorian calendar representation in various common resolutions: year, month, week, day. (UN/CEFACT)\n\nA particular point in the progression of time in a calendar year expressed in the YYYY-MM-DD format. This representation is defined in \"XML Schema Part 2: Datatypes Second Edition - W3C Recommendation 28 October 2004\" which is aligned with ISO 8601. (ISO20022)"
          format: datatype
      description: Date on which the agreement was signed by all parties. (ISO20022)
    agreementtypevalues:
      enum:
        - CustomerAgreement
        - SupplierAgreement
        - ProductBrokerAgreement
        - ProductSaleAgreement
        - FiduciaryAgreement
        - CommissionSaleAgreement
        - ServicingMandateAgreement
        - ChannelAccessAgreement
      type: string
      description: ">\n* `CustomerAgreement` - \n* `SupplierAgreement` - \n* `ProductBrokerAgreement` - \n* `ProductSaleAgreement` - \n* `FiduciaryAgreement` - \n* `CommissionSaleAgreement` - \n* `ServicingMandateAgreement` - \n* `ChannelAccessAgreement` - \n"
    datetimeperiod:
      type: object
      properties:
        Datetimeperiod:
          type: object
          description: 'Time span defined by a start date and time, and an end date and time. (ISO20022)'
          format: datatype
      description: "Period during which the agreement is valid\n"
    agreementlifecyclestatus:
      type: object
      properties:
        Agreementlifecyclestatus:
          type: object
          description: 'Data type that specifies the LifecycleStatus of agreement (e.g., potential, offered, confirmed, completed, signed, terminated).'
          format: datatype
      description: 'A characteristic of agreement which refers to the LifecycleStatus of agreement (e.g., potential, offered, confirmed, completed, signed, terminated).'
    identifier:
      type: object
      properties:
        Identifier:
          type: object
          description: An identifier is a character string used to uniquely identify one instance of an object within an identification scheme that is managed by an agency. (UN/CEFAT)
          format: datatype
      description: 'The identifier of agreement like Agreement Number, Contract Number, Contract Registration Number, etc. '
    datetime:
      type: object
      properties:
        Datetime:
          type: object
          description: "A date time identifies a date and time of day to various common resolutions: year, month, week, day, hour, minute, second, and fraction of second. (UN/CEFACT)\n\nA particular point in the progression of time defined by a mandatory date and a mandatory time component, expressed in either UTC time format (YYYY-MM-DDThh:mm:ss.sssZ), local time with UTC offset format (YYYY-MM-DDThh:mm:ss.sss+/-hh:mm), or local time format (YYYY-MM-DDThh:mm:ss.sss). These representations are defined in \"XML Schema Part 2: Datatypes Second Edition - W3C Recommendation 28 October 2004\" which is aligned with ISO 8601. (ISO20022)\nNote on the time format:\n1) beginning / end of calendar day\n00:00:00 = the beginning of a calendar day\n24:00:00 = the end of a calendar day\n2) fractions of second in time format\nDecimal fractions of seconds may be included. In this case, the involved parties shall agree on the maximum number of digits that are allowed."
          format: datatype
      description: 'A characteristic of agreement which refers to 1) LifecycleDate of agreement (e.g., SignedDate, TerminatedDate, FulfilledDate) OR 2) ArrangedDate of agreement (e.g., StartingDate, EndingDate, ValidityPeriod, EffectiveDate).'
    agreement:
      type: object
      properties:
        AgreementSignedDate:
          $ref: '#/components/schemas/date'
        AgreementType:
          $ref: '#/components/schemas/agreementtypevalues'
        AgreementValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        AgreementVersion:
          $ref: '#/components/schemas/text'
        AgreementStatus:
          $ref: '#/components/schemas/agreementlifecyclestatus'
        AgreementSubjectMatter:
          $ref: '#/components/schemas/text'
        AgreementIdentification:
          $ref: '#/components/schemas/identifier'
        AgreementDate:
          $ref: '#/components/schemas/datetime'
      description: Reference to Legal Term
    actiontypevalues:
      enum:
        - Initiate
        - Execute
        - Create
        - Transfer
        - Pay
        - Deliver
      type: string
      description: ">\n* `Initiate` - \n* `Execute` - \n* `Create` - \n* `Transfer` - \n* `Pay` - \n* `Deliver` - \n"
    action:
      type: object
      properties:
        ActionType:
          $ref: '#/components/schemas/actiontypevalues'
      description: ''
    arrangementlifecyclestatus:
      type: object
      properties:
        Arrangementlifecyclestatus:
          type: object
          description: 'Data type that specifies the LifecycleStatus of arrangement (e.g., requested, proposed, offered, accepted, cancelled, terminated, fulfilled, etc.).'
          format: datatype
      description: 'A characteristic of arrangement which refers to the LifecycleStatus of arrangement (e.g., requested, proposed, offered, accepted, cancelled, terminated, fulfilled, etc.)'
    arrangement:
      type: object
      properties:
        ArrangementAction:
          $ref: '#/components/schemas/action'
        ArrangementStartDate:
          $ref: '#/components/schemas/datetime'
        ArrangementEndDate:
          $ref: '#/components/schemas/datetime'
        ArrangementStatus:
          $ref: '#/components/schemas/arrangementlifecyclestatus'
        ArrangementSubjectMatter:
          type: object
          description: ''
          format: subject(class)
      description: Reference to Legal Term
    object:
      type: object
      properties:
        Object:
          type: object
          description: ''
          format: datatype
      description: Reference to any legal requirements
    LegalTerm:
      type: object
      properties:
        Preconditions:
          type: object
          description: The required status/situation for the terms to apply and or tasks that need to be completed prior to the initiation of the workstep
          format: condition(class)
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        MerchantRelationshipAgreementReference:
          $ref: '#/components/schemas/agreement'
        LegalTermReference:
          $ref: '#/components/schemas/arrangement'
        LegalTermType:
          $ref: '#/components/schemas/text'
        Jurisdiction:
          type: string
          description: The legal jurisdiction
          format: string
        ApplicableLawReference:
          $ref: '#/components/schemas/object'
        ApplicableLawInterpretation:
          type: string
          description: Explanation or interpretation of the law as applied
          format: string
      description: Covers the legal considerations of the agreement
    OperationalTerm:
      type: object
      properties:
        Preconditions:
          type: object
          description: The required status/situation for the terms to apply and or tasks that need to be completed prior to the initiation of the workstep
          format: condition(class)
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        MerchantRelationshipAgreementReference:
          $ref: '#/components/schemas/agreement'
        OperationalTermReference:
          $ref: '#/components/schemas/arrangement'
        OperationalTermType:
          type: string
          description: 'Type of term (e.g. fee waiver, rate discount, linked service)'
          format: string
        OperationalTermDescription:
          type: string
          description: 'Description of the term, including servicing and fulfillment details'
          format: string
        OperationalTermParameterType:
          type: string
          description: 'Parameters that govern the execution of the term (e.g. rate discounted by, fee reduced by)'
          format: string
        OperationalTermParameterSetting:
          type: string
          description: The value of the parameter for this instance
          format: string
        OperationalTermTransactionRecord:
          type: string
          description: Details of cash flows associated with fulfillment instances of the term (can be charges made to the customer or compensating transfers to the base product profit center)
          format: string
        OperationalTermTransactionType:
          type: string
          description: 'The type of transaction and the resulting cash adjustment (e.g. interest forgiveness, fee reduction)'
          format: string
        OperationalTermTransactionDescription:
          type: string
          description: Description of the transaction detailing amounts and source and the creditor of transfers
          format: string
        OperationalTermAugmentedCashFlows:
          type: string
          description: The actual cash flows associated with the fulfillment of the term
          format: string
        PaymentInitiationTransactionInstanceReference:
          $ref: '#/components/schemas/object'
      description: Covers the legal considerations of the agreement
    RegulatoryTerm:
      type: object
      properties:
        Preconditions:
          type: object
          description: The required status/situation for the terms to apply and or tasks that need to be completed prior to the initiation of the workstep
          format: condition(class)
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        MerchantRelationshipAgreementReference:
          $ref: '#/components/schemas/agreement'
        RegulatoryTermReference:
          $ref: '#/components/schemas/arrangement'
        RegulatoryTermType:
          $ref: '#/components/schemas/text'
        RegulatoryAuthority:
          type: string
          description: The applicable regulatory authority
          format: string
        ApplicableRegulationReference:
          $ref: '#/components/schemas/object'
        ApplicableRegulationInterpretation:
          type: string
          description: Explanation or interpretation of the regulation as applied
          format: string
      description: Covers the legal considerations of the agreement
    workproduct:
      type: object
      properties:
        Workproduct:
          type: object
          description: 'Contact records, working papers, documents and activity logs produced during the execution of a work task'
          format: datatype
      description: ''
    workproducttypevalues:
      enum:
        - Document
        - WorkingPaper
        - ActivityLog
        - Form
        - File
        - MeetingSchedule
        - MeetingMinute
      type: string
      description: ">\n* `Document` - \n* `WorkingPaper` - \n* `ActivityLog` - \n* `Form` - \n* `File` - File of consolidated notes, evaluations and recommendations for the work task\n* `MeetingSchedule` - \n* `MeetingMinute` - \n"
    MerchantRelationsOutcome:
      type: object
      properties:
        MerchantRelationsAgreement:
          $ref: '#/components/schemas/agreement'
        MerchantRelationsWorkProduct:
          $ref: '#/components/schemas/workproduct'
        MerchantRelationsWorkProductType:
          $ref: '#/components/schemas/workproducttypevalues'
      description: Covers the legal considerations of the agreement
    feature:
      type: object
      properties:
        FeatureType:
          type: string
          description: ''
          format: string
      description: 'A selected optional feature in a product, identified by Parameter Type'
    instructionlifecyclestatus:
      type: object
      properties:
        Instructionlifecyclestatus:
          type: object
          description: 'Data type that specifies the LifecycleStatus of instruction (e.g., requested, executed, fulfilled, etc.); '
          format: datatype
      description: 'A characteristic of instruction which refers to the LifecycleStatus of instruction (e.g., requested, executed, fulfilled, etc.); '
    instructiontypevalues:
      enum:
        - PaymentInstruction
        - DeliveryOrder
        - InformationRequest
        - ExchangeInstruction
        - AllocationInstruction
      type: string
      description: ">\n* `PaymentInstruction` - \n* `DeliveryOrder` - \n* `InformationRequest` - \n* `ExchangeInstruction` - \n* `AllocationInstruction` - \n"
    log:
      type: object
      properties:
        LogType:
          type: string
          description: ''
          format: string
        LogPeriod:
          type: string
          description: ''
          format: string
        LogDate:
          type: string
          description: Key dates associated with the log (e.g. start time).
          format: string
        LogIdentification:
          type: string
          description: ''
          format: string
      description: ''
    instruction:
      type: object
      properties:
        InstructionDueDate:
          $ref: '#/components/schemas/date'
        InstructionStatus:
          $ref: '#/components/schemas/instructionlifecyclestatus'
        InstructionIdentifier:
          $ref: '#/components/schemas/identifier'
        InstructionType:
          $ref: '#/components/schemas/instructiontypevalues'
        InstructionResult:
          $ref: '#/components/schemas/text'
        InstructionDescription:
          $ref: '#/components/schemas/text'
        InstructionLog:
          $ref: '#/components/schemas/log'
        InstructionPurpose:
          $ref: '#/components/schemas/text'
      description: Request to discharge Merchant Relationship Agreement
    involvedparty:
      type: object
      properties:
        Involvedparty:
          type: object
          description: ''
          format: datatype
      description: Party who is involved in Merchant Relationship Agreement
    rulesettype:
      type: object
      properties:
        Rulesettype:
          type: object
          description: Data type specifies the classification of RuleSet
          format: datatype
      description: ''
    ruleset:
      type: object
      properties:
        RuleSetDefinition:
          type: string
          description: ''
          format: string
        RuleSetInterpretation:
          type: string
          description: ''
          format: string
        RuleSetType:
          $ref: '#/components/schemas/rulesettype'
        RuleSetName:
          type: string
          description: ''
          format: string
        RuleSetIdentification:
          type: string
          description: ''
          format: string
      description: Reference to the regulation which is defined in Merchant Relationship Agreement
    accountstatus:
      type: object
      properties:
        Accountstatus:
          type: object
          description: Specifies the current state of an account. (ISO20022)
          format: datatype
      description: "A characteristic of account which refers to the LifecycleStatus of account like opened, closed, blocked, etc.\n\nSpecifies the current state of an account. (ISO20022)"
    accountidentification:
      type: object
      properties:
        Accountidentification:
          type: object
          description: ''
          format: datatype
      description: The identifier of account like Account Number.
    accountdate:
      type: object
      properties:
        Accountdate:
          type: object
          description: ''
          format: datatype
      description: 'A characteristic of account which refers to LifecycleDate of account (e.g., ClosingDate, OpeningDate, LiveDate, etc.) '
    accounttype:
      type: object
      properties:
        Accounttype:
          type: object
          description: 'A classification of accounts based on their purpose '
          format: datatype
      description: 'Specifies the category of account like payment account, loan account, cash account, securities account, etc. '
    accountbalance:
      type: object
      properties:
        Accountbalance:
          type: object
          description: "Numerical representation of the net increases and decreases in an account at a specific point in time. (ISO20022)\nhttps://www.iso20022.org/standardsrepository/type/Balance"
          format: datatype
      description: "The state of the obligations managed on the account, the result of all entries on the account.\n\nNumerical representation of the net increases and decreases in an account at a specific point in time. (ISO20022)\n\nBanking: Amount available in an account for withdrawal or use.\nRead more: http://www.businessdictionary.com/definition/balance.html\n\nBookkeeping: Difference between the debit and credit sides of an account.\nRead more: http://www.businessdictionary.com/definition/balance.html"
    accountcurrency:
      type: object
      properties:
        Accountcurrency:
          type: object
          description: ''
          format: datatype
      description: ''
    account:
      type: object
      properties:
        AccountStatus:
          $ref: '#/components/schemas/accountstatus'
        AccountIdentification:
          $ref: '#/components/schemas/accountidentification'
        AccountDate:
          $ref: '#/components/schemas/accountdate'
        AccountType:
          $ref: '#/components/schemas/accounttype'
        AccountPurpose:
          $ref: '#/components/schemas/text'
        AccountBalance:
          $ref: '#/components/schemas/accountbalance'
        AccountCurrency:
          $ref: '#/components/schemas/accountcurrency'
        AccountDescription:
          $ref: '#/components/schemas/text'
      description: "Reference to the account which is linked to Merchant Relationship Agreement\n\nA characteristic of agreement which refers to its involved account to specify the account that will be used to register for the transactions in position keeping management."
    productidentification:
      type: object
      properties:
        Productidentification:
          type: object
          description: ''
          format: datatype
      description: The identifier of product e.g. ISIN Code.
    producttypevalues:
      enum:
        - BankingProduct
        - FinancialProduct
        - LoanProduct
      type: string
      description: ">\n* `BankingProduct` - \n* `FinancialProduct` - \n* `LoanProduct` - \n"
    productlifecyclestatus:
      type: object
      properties:
        Productlifecyclestatus:
          type: object
          description: 'Refers to the lifecycle of a product (e.g., initiated, announced, active, obsolete, withdrawn).'
          format: datatype
      description: 'Refers to the lifecycle of a product (e.g., initiated, announced, active, obsolete, withdrawn).'
    bankingproduct:
      type: object
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/productidentification'
        ProductType:
          $ref: '#/components/schemas/producttypevalues'
        ProductLifecycleStatus:
          $ref: '#/components/schemas/productlifecyclestatus'
        ProductPriority:
          $ref: '#/components/schemas/text'
        ProductDescription:
          $ref: '#/components/schemas/text'
        ProductVersion:
          $ref: '#/components/schemas/text'
      description: "Reference to the product which is linked to Merchant Relationship Agreement\n\nComment: \nA characteristic of agreement which refers to its related products that are sold by agreement."
    calendar:
      type: object
      properties:
        Calendar:
          type: object
          description: 'A series of dates/times of specific types of actions/events associated with the fulfillment of some form of arrangement - planned and actual. '
          format: datatype
      description: The calendar of Merchant Relationship Agreement
    MerchantRelationshipAgreement:
      type: object
      properties:
        MerchantRelationshipAgreementParameterType:
          $ref: '#/components/schemas/text'
        MerchantRelationshipAgreementSelectedOption:
          $ref: '#/components/schemas/feature'
        MerchantRelationshipAgreementType:
          $ref: '#/components/schemas/agreementtypevalues'
        MerchantRelationshipAgreementReference:
          $ref: '#/components/schemas/agreement'
        MerchantRelationshipAgreementDischargeRequest:
          $ref: '#/components/schemas/instruction'
        MerchantRelationshipAgreementDischargeSchedule:
          $ref: '#/components/schemas/schedule'
        MerchantRelationshipAgreementStatus:
          $ref: '#/components/schemas/agreementlifecyclestatus'
        MerchantRelationshipAgreementAssociatedParty:
          $ref: '#/components/schemas/involvedparty'
        MerchantRelationshipAgreementCustomerReference:
          $ref: '#/components/schemas/involvedparty'
        MerchantRelationshipAgreementObligation:
          $ref: '#/components/schemas/arrangement'
        MerchantRelationshipAgreementEntitlement:
          $ref: '#/components/schemas/arrangement'
        MerchantRelationshipAgreementRegulationReference:
          $ref: '#/components/schemas/ruleset'
        MerchantRelationshipAgreementRegulationType:
          $ref: '#/components/schemas/rulesettype'
        MerchantRelationshipAgreementJurisdiction:
          type: object
          description: Reference to the jurisdiction that is assigned to Merchant Relationship Agreement in case of legal dispute.
          format: jurisdiction(class)
        MerchantRelationshipAgreementAccountReference:
          $ref: '#/components/schemas/account'
        MerchantRelationshipAgreementSubjectMatter:
          $ref: '#/components/schemas/object'
        MerchantRelationshipAgreementProductReference:
          $ref: '#/components/schemas/bankingproduct'
        MerchantRelationshipAgreementCalendarReference:
          $ref: '#/components/schemas/calendar'
        MerchantRelationshipAgreementAssociatedAgreementReference:
          $ref: '#/components/schemas/agreement'
      description: "Maintain the terms and conditions that apply to a commercial relationship within Merchant Relations.\n\n"
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    MerchantRelationshipAgreement:
      description: MerchantRelationshipAgreement
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MerchantRelationshipAgreement'
    LegalTerm:
      description: LegalTerm
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LegalTerm'
    OperationalTerm:
      description: OperationalTerm
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OperationalTerm'
    RegulatoryTerm:
      description: RegulatoryTerm
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RegulatoryTerm'
  parameters:
    merchantrelationsid:
      name: merchantrelationsid
      in: path
      required: true
      style: simple
      schema:
        type: string
    legaltermid:
      name: legaltermid
      in: path
      required: true
      style: simple
      schema:
        type: string
    operationaltermid:
      name: operationaltermid
      in: path
      required: true
      style: simple
      schema:
        type: string
    regulatorytermid:
      name: regulatorytermid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    MerchantRelationshipAgreement:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MerchantRelationshipAgreement'
      required: true
    LegalTerm:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LegalTerm'
      required: true
    OperationalTerm:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OperationalTerm'
      required: true
    RegulatoryTerm:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RegulatoryTerm'
      required: true