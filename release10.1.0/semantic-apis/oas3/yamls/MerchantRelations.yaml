openapi: 3.0.1
info:
  title: Merchant Relations
  description: This service domain maintains the terms and conditions agreed with merchants for cards related activity
  version: 10.1.0
servers:
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/B154/MerchantRelations/10.1.0
paths:
  /MerchantRelations/{merchantrelationsId}/Control:
    put:
      tags:
      - CR - MerchantRelationshipAgreement
      summary: Control Merchant Relationship Agreement
      description: Control Merchant Relationship Agreement
      operationId: Control
      parameters:
      - $ref: '#/components/parameters/MerchantRelationsID'
      requestBody:
        $ref: '#/components/requestBodies/MerchantRelationshipAgreement'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantRelationshipAgreement'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /MerchantRelations/Evaluate:
    post:
      tags:
      - CR - MerchantRelationshipAgreement
      summary: Evaluate Merchant Relationship Agreement
      description: Evaluate Merchant Relationship Agreement
      operationId: Evaluate
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/MerchantRelationshipAgreement'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantRelationshipAgreement'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /MerchantRelations/{merchantrelationsId}/Exchange:
    put:
      tags:
      - CR - MerchantRelationshipAgreement
      summary: Exchange Merchant Relationship Agreement
      description: Exchange Merchant Relationship Agreement
      operationId: Exchange
      parameters:
      - $ref: '#/components/parameters/MerchantRelationsID'
      requestBody:
        $ref: '#/components/requestBodies/MerchantRelationshipAgreement'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantRelationshipAgreement'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /MerchantRelations/{merchantrelationsId}/Grant:
    put:
      tags:
      - CR - MerchantRelationshipAgreement
      summary: Grant Merchant Relationship Agreement
      description: Grant Merchant Relationship Agreement
      operationId: Grant
      parameters:
      - $ref: '#/components/parameters/MerchantRelationsID'
      requestBody:
        $ref: '#/components/requestBodies/MerchantRelationshipAgreement'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantRelationshipAgreement'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /MerchantRelations/{merchantrelationsId}/Notify:
    get:
      tags:
      - CR - MerchantRelationshipAgreement
      summary: Notify Merchant Relationship Agreement
      description: Notify Merchant Relationship Agreement
      operationId: Notify
      parameters:
      - $ref: '#/components/parameters/MerchantRelationsID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantRelationshipAgreement'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /MerchantRelations/{merchantrelationsId}/Request:
    put:
      tags:
      - CR - MerchantRelationshipAgreement
      summary: Request Merchant Relationship Agreement
      description: Request Merchant Relationship Agreement
      operationId: Request
      parameters:
      - $ref: '#/components/parameters/MerchantRelationsID'
      requestBody:
        $ref: '#/components/requestBodies/MerchantRelationshipAgreement'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantRelationshipAgreement'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /MerchantRelations/{merchantrelationsId}/Retrieve:
    get:
      tags:
      - CR - MerchantRelationshipAgreement
      summary: Retrieve Merchant Relationship Agreement
      description: Retrieve Merchant Relationship Agreement
      operationId: Retrieve
      parameters:
      - $ref: '#/components/parameters/MerchantRelationsID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantRelationshipAgreement'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /MerchantRelations/{merchantrelationsId}/Update:
    put:
      tags:
      - CR - MerchantRelationshipAgreement
      summary: Update Merchant Relationship Agreement
      description: Update Merchant Relationship Agreement
      operationId: Update
      parameters:
      - $ref: '#/components/parameters/MerchantRelationsID'
      requestBody:
        $ref: '#/components/requestBodies/MerchantRelationshipAgreement'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantRelationshipAgreement'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /MerchantRelations/{merchantrelationsId}/LegalTerm/Evaluate:
    post:
      tags:
      - BQ - LegalTerm
      summary: Evaluate Legal Term
      description: Evaluate Legal Term
      operationId: EvaluateLegalTerm
      parameters:
      - $ref: '#/components/parameters/MerchantRelationsID'
      requestBody:
        $ref: '#/components/requestBodies/LegalTerm'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalTerm'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /MerchantRelations/{merchantrelationsId}/OperationalTerm/Evaluate:
    post:
      tags:
      - BQ - OperationalTerm
      summary: Evaluate Operational Term
      description: Evaluate Operational Term
      operationId: EvaluateOperationalTerm
      parameters:
      - $ref: '#/components/parameters/MerchantRelationsID'
      requestBody:
        $ref: '#/components/requestBodies/OperationalTerm'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationalTerm'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /MerchantRelations/{merchantrelationsId}/RegulatoryTerm/Evaluate:
    post:
      tags:
      - BQ - RegulatoryTerm
      summary: Evaluate Regulatory Term
      description: Evaluate Regulatory Term
      operationId: EvaluateRegulatoryTerm
      parameters:
      - $ref: '#/components/parameters/MerchantRelationsID'
      requestBody:
        $ref: '#/components/requestBodies/RegulatoryTerm'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegulatoryTerm'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /MerchantRelations/{merchantrelationsId}/LegalTerm/{legaltermId}/Exchange:
    put:
      tags:
      - BQ - LegalTerm
      summary: Exchange Legal Term
      description: Exchange Legal Term
      operationId: ExchangeLegalTerm
      parameters:
      - $ref: '#/components/parameters/MerchantRelationsID'
      - $ref: '#/components/parameters/LegalTermID'
      requestBody:
        $ref: '#/components/requestBodies/LegalTerm'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalTerm'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /MerchantRelations/{merchantrelationsId}/OperationalTerm/{operationaltermId}/Exchange:
    put:
      tags:
      - BQ - OperationalTerm
      summary: Exchange Operational Term
      description: Exchange Operational Term
      operationId: ExchangeOperationalTerm
      parameters:
      - $ref: '#/components/parameters/MerchantRelationsID'
      - $ref: '#/components/parameters/OperationalTermID'
      requestBody:
        $ref: '#/components/requestBodies/OperationalTerm'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationalTerm'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /MerchantRelations/{merchantrelationsId}/RegulatoryTerm/{regulatorytermId}/Exchange:
    put:
      tags:
      - BQ - RegulatoryTerm
      summary: Exchange Regulatory Term
      description: Exchange Regulatory Term
      operationId: ExchangeRegulatoryTerm
      parameters:
      - $ref: '#/components/parameters/MerchantRelationsID'
      - $ref: '#/components/parameters/RegulatoryTermID'
      requestBody:
        $ref: '#/components/requestBodies/RegulatoryTerm'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegulatoryTerm'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /MerchantRelations/{merchantrelationsId}/LegalTerm/{legaltermId}/Notify:
    get:
      tags:
      - BQ - LegalTerm
      summary: Notify Legal Term
      description: Notify Legal Term
      operationId: NotifyLegalTerm
      parameters:
      - $ref: '#/components/parameters/MerchantRelationsID'
      - $ref: '#/components/parameters/LegalTermID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalTerm'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /MerchantRelations/{merchantrelationsId}/OperationalTerm/{operationaltermId}/Notify:
    get:
      tags:
      - BQ - OperationalTerm
      summary: Notify Operational Term
      description: Notify Operational Term
      operationId: NotifyOperationalTerm
      parameters:
      - $ref: '#/components/parameters/MerchantRelationsID'
      - $ref: '#/components/parameters/OperationalTermID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationalTerm'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /MerchantRelations/{merchantrelationsId}/RegulatoryTerm/{regulatorytermId}/Notify:
    get:
      tags:
      - BQ - RegulatoryTerm
      summary: Notify Regulatory Term
      description: Notify Regulatory Term
      operationId: NotifyRegulatoryTerm
      parameters:
      - $ref: '#/components/parameters/MerchantRelationsID'
      - $ref: '#/components/parameters/RegulatoryTermID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegulatoryTerm'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /MerchantRelations/{merchantrelationsId}/LegalTerm/{legaltermId}/Request:
    put:
      tags:
      - BQ - LegalTerm
      summary: Request Legal Term
      description: Request Legal Term
      operationId: RequestLegalTerm
      parameters:
      - $ref: '#/components/parameters/MerchantRelationsID'
      - $ref: '#/components/parameters/LegalTermID'
      requestBody:
        $ref: '#/components/requestBodies/LegalTerm'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalTerm'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /MerchantRelations/{merchantrelationsId}/OperationalTerm/{operationaltermId}/Request:
    put:
      tags:
      - BQ - OperationalTerm
      summary: Request Operational Term
      description: Request Operational Term
      operationId: RequestOperationalTerm
      parameters:
      - $ref: '#/components/parameters/MerchantRelationsID'
      - $ref: '#/components/parameters/OperationalTermID'
      requestBody:
        $ref: '#/components/requestBodies/OperationalTerm'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationalTerm'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /MerchantRelations/{merchantrelationsId}/RegulatoryTerm/{regulatorytermId}/Request:
    put:
      tags:
      - BQ - RegulatoryTerm
      summary: Request Regulatory Term
      description: Request Regulatory Term
      operationId: RequestRegulatoryTerm
      parameters:
      - $ref: '#/components/parameters/MerchantRelationsID'
      - $ref: '#/components/parameters/RegulatoryTermID'
      requestBody:
        $ref: '#/components/requestBodies/RegulatoryTerm'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegulatoryTerm'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /MerchantRelations/{merchantrelationsId}/LegalTerm/{legaltermId}/Retrieve:
    get:
      tags:
      - BQ - LegalTerm
      summary: Retrieve Legal Term
      description: Retrieve Legal Term
      operationId: RetrieveLegalTerm
      parameters:
      - $ref: '#/components/parameters/MerchantRelationsID'
      - $ref: '#/components/parameters/LegalTermID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalTerm'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /MerchantRelations/{merchantrelationsId}/OperationalTerm/{operationaltermId}/Retrieve:
    get:
      tags:
      - BQ - OperationalTerm
      summary: Retrieve Operational Term
      description: Retrieve Operational Term
      operationId: RetrieveOperationalTerm
      parameters:
      - $ref: '#/components/parameters/MerchantRelationsID'
      - $ref: '#/components/parameters/OperationalTermID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationalTerm'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /MerchantRelations/{merchantrelationsId}/RegulatoryTerm/{regulatorytermId}/Retrieve:
    get:
      tags:
      - BQ - RegulatoryTerm
      summary: Retrieve Regulatory Term
      description: Retrieve Regulatory Term
      operationId: RetrieveRegulatoryTerm
      parameters:
      - $ref: '#/components/parameters/MerchantRelationsID'
      - $ref: '#/components/parameters/RegulatoryTermID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegulatoryTerm'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /MerchantRelations/{merchantrelationsId}/LegalTerm/{legaltermId}/Update:
    put:
      tags:
      - BQ - LegalTerm
      summary: Update Legal Term
      description: Update Legal Term
      operationId: UpdateLegalTerm
      parameters:
      - $ref: '#/components/parameters/MerchantRelationsID'
      - $ref: '#/components/parameters/LegalTermID'
      requestBody:
        $ref: '#/components/requestBodies/LegalTerm'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalTerm'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /MerchantRelations/{merchantrelationsId}/OperationalTerm/{operationaltermId}/Update:
    put:
      tags:
      - BQ - OperationalTerm
      summary: Update Operational Term
      description: Update Operational Term
      operationId: UpdateOperationalTerm
      parameters:
      - $ref: '#/components/parameters/MerchantRelationsID'
      - $ref: '#/components/parameters/OperationalTermID'
      requestBody:
        $ref: '#/components/requestBodies/OperationalTerm'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationalTerm'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /MerchantRelations/{merchantrelationsId}/RegulatoryTerm/{regulatorytermId}/Update:
    put:
      tags:
      - BQ - RegulatoryTerm
      summary: Update Regulatory Term
      description: Update Regulatory Term
      operationId: UpdateRegulatoryTerm
      parameters:
      - $ref: '#/components/parameters/MerchantRelationsID'
      - $ref: '#/components/parameters/RegulatoryTermID'
      requestBody:
        $ref: '#/components/requestBodies/RegulatoryTerm'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegulatoryTerm'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    MerchantRelationshipAgreement:
      type: object
      properties:
        MerchantRelationshipAgreementParameterType:
          type: string
          description: A Classification value that distinguishes between Options defined within Merchant Relationship Agreement
        MerchantRelationshipAgreementSelectedOption:
          type: string
          description: A selected optional feature in a product, identified by Parameter Type
        MerchantRelationshipAgreementType:
          type: string
          description: A Classification value that distinguishes between the subject matters of Merchant Relationship Agreement
        MerchantRelationshipAgreementReference:
          type: string
          description: An unique reference to an item or an occurrence of Merchant Relationship Agreement
        MerchantRelationshipAgreementDischargeRequest:
          type: string
          description: Request to discharge Merchant Relationship Agreement
        MerchantRelationshipAgreementDischargeSchedule:
          type: object
          description: Timetable to discharge Merchant Relationship Agreement
        MerchantRelationshipAgreementStatus:
          type: string
          description: The status of Merchant Relationship Agreement
        MerchantRelationshipAgreementAssociatedParty:
          type: object
          description: Party who is involved in Merchant Relationship Agreement
        MerchantRelationshipAgreementCustomerReference:
          type: object
          description: Reference to the customer who is involved in Merchant Relationship Agreement
        MerchantRelationshipAgreementObligation:
          type: string
          description: Liability or duty to do something under the terms of Merchant Relationship Agreement
        MerchantRelationshipAgreementEntitlement:
          type: string
          description: Right to do something under the terms of Merchant Relationship Agreement
        MerchantRelationshipAgreementRegulationReference:
          type: object
          description: Reference to the regulation which is defined in Merchant Relationship Agreement
        MerchantRelationshipAgreementRegulationType:
          type: string
          description: A Classification that distinguishes between the regularity domains of Merchant Relationship Agreement
        MerchantRelationshipAgreementJurisdiction:
          type: object
          description: Reference to the jurisdiction that is assigned to Merchant Relationship Agreement in case of legal dispute.
        MerchantRelationshipAgreementAccountReference:
          type: string
          description: >-
            Reference to the account which is linked to Merchant Relationship Agreement


            A characteristic of agreement which refers to its involved account to specify the account that will be used to register for the transactions in position keeping management.
        MerchantRelationshipAgreementSubjectMatter:
          type: object
          description: The subject matter of  Merchant Relationship Agreement
        MerchantRelationshipAgreementProductReference:
          type: object
          description: "Reference to the product which is linked to Merchant Relationship Agreement\n\nComment: \nA characteristic of agreement which refers to its related products that are sold by agreement."
        MerchantRelationshipAgreementCalendarReference:
          type: string
          description: The calendar of Merchant Relationship Agreement
        MerchantRelationshipAgreementAssociatedAgreementReference:
          type: string
          description: Reference to the agreement that is related to Merchant Relationship Agreement
    LegalTerm:
      type: object
      properties:
        Preconditions:
          type: object
          description: The required status/situation for the terms to apply and or tasks that need to be completed prior to the initiation of the workstep
        Schedule:
          type: object
          description: Any timing/duration considerations applying to the Legal Term
        BusinessService:
          type: object
          description: The Legal Term specific Business Service
        MerchantRelationshipAgreementReference:
          type: string
          description: Reference to Legal Term
        LegalTermReference:
          type: string
          description: Reference to Legal Term
        LegalTermType:
          type: string
          description: The type of Legal Term
        Jurisdiction:
          type: string
          description: The legal jurisdiction
        ApplicableLawReference:
          type: object
          description: Reference to any legal requirements
        ApplicableLawInterpretation:
          type: string
          description: Explanation or interpretation of the law as applied
    OperationalTerm:
      type: object
      properties:
        Preconditions:
          type: object
          description: The required status/situation for the terms to apply and or tasks that need to be completed prior to the initiation of the workstep
        Schedule:
          type: object
          description: Any timing/duration considerations applying to the Operational Term
        BusinessService:
          type: object
          description: The Operational Term specific Business Service
        MerchantRelationshipAgreementReference:
          type: string
          description: Reference to Operational Term
        OperationalTermReference:
          type: string
          description: Reference to Operational Term
        OperationalTermType:
          type: string
          description: Type of term (e.g. fee waiver, rate discount, linked service)
        OperationalTermDescription:
          type: string
          description: Description of the term, including servicing and fulfillment details
        OperationalTermParameterType:
          type: string
          description: Parameters that govern the execution of the term (e.g. rate discounted by, fee reduced by)
        OperationalTermParameterSetting:
          type: string
          description: The value of the parameter for this instance
        OperationalTermTransactionRecord:
          type: string
          description: Details of cash flows associated with fulfillment instances of the term (can be charges made to the customer or compensating transfers to the base product profit center)
        OperationalTermTransactionType:
          type: string
          description: The type of transaction and the resulting cash adjustment (e.g. interest forgiveness, fee reduction)
        OperationalTermTransactionDescription:
          type: string
          description: Description of the transaction detailing amounts and source and the creditor of transfers
        OperationalTermAugmentedCashFlows:
          type: string
          description: The actual cash flows associated with the fulfillment of the term
        PaymentInitiationTransactionInstanceReference:
          type: object
          description: Reference to the underlying funds transfer transaction
    RegulatoryTerm:
      type: object
      properties:
        Preconditions:
          type: object
          description: The required status/situation for the terms to apply and or tasks that need to be completed prior to the initiation of the workstep
        Schedule:
          type: object
          description: Any timing/duration considerations applying to the Regulatory Term
        BusinessService:
          type: object
          description: The Regulatory Term specific Business Service
        MerchantRelationshipAgreementReference:
          type: string
          description: Reference to Regulatory Term
        RegulatoryTermReference:
          type: string
          description: Reference to Regulatory Term
        RegulatoryTermType:
          type: string
          description: The type of Regulatory Term
        RegulatoryAuthority:
          type: string
          description: The applicable regulatory authority
        ApplicableRegulationReference:
          type: object
          description: Reference to any regulatory requirements
        ApplicableRegulationInterpretation:
          type: string
          description: Explanation or interpretation of the regulation as applied
    MerchantRelationsOutcome:
      type: object
      properties:
        MerchantRelationsAgreement:
          type: string
          description: ''
        MerchantRelationsWorkProduct:
          type: object
          description: ''
        MerchantRelationsWorkProductType:
          type: string
          description: ''
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          description: NA
        status:
          type: string
          description: NA
        message:
          type: string
          description: NA
  parameters:
    MerchantRelationsID:
      name: merchantrelationsId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    LegalTermID:
      name: legaltermId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    OperationalTermID:
      name: operationaltermId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    RegulatoryTermID:
      name: regulatorytermId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    MerchantRelationsOutcomeID:
      name: merchantrelationsoutcomeId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
  requestBodies:
    MerchantRelationshipAgreement:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MerchantRelationshipAgreement'
    LegalTerm:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LegalTerm'
    OperationalTerm:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OperationalTerm'
    RegulatoryTerm:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RegulatoryTerm'
  responses:
    HTTPError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    BadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequestsError:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
...
