openapi: 3.0.1
info:
  title: Merchant Relations
  description: This service domain maintains the terms and conditions agreed with merchants for cards related activity
  contact:
    name: BIAN
    url: https://bian.org
  version: '10.1.0'
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/MerchantRelations/10.1.0
paths:
  '/MerchantRelations/{merchantrelationsid}/Control':
    put:
      tags:
        - CR - MerchantRelationshipAgreement
      summary: Control Merchant Relationship Agreement
      description: Control Merchant Relationship Agreement
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
      requestBody:
        $ref: '#/components/requestBodies/MerchantRelationshipAgreement'
      responses:
        '200':
          $ref: '#/components/responses/MerchantRelationshipAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /MerchantRelations/Evaluate:
    post:
      tags:
        - CR - MerchantRelationshipAgreement
      summary: Evaluate Merchant Relationship Agreement
      description: Evaluate Merchant Relationship Agreement
      operationId: Evaluate
      requestBody:
        $ref: '#/components/requestBodies/MerchantRelationshipAgreement'
      responses:
        '200':
          $ref: '#/components/responses/MerchantRelationshipAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/Exchange':
    put:
      tags:
        - CR - MerchantRelationshipAgreement
      summary: Exchange Merchant Relationship Agreement
      description: Exchange Merchant Relationship Agreement
      operationId: Exchange
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
      requestBody:
        $ref: '#/components/requestBodies/MerchantRelationshipAgreement'
      responses:
        '200':
          $ref: '#/components/responses/MerchantRelationshipAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/Grant':
    put:
      tags:
        - CR - MerchantRelationshipAgreement
      summary: Grant Merchant Relationship Agreement
      description: Grant Merchant Relationship Agreement
      operationId: Grant
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
      requestBody:
        $ref: '#/components/requestBodies/MerchantRelationshipAgreement'
      responses:
        '200':
          $ref: '#/components/responses/MerchantRelationshipAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/Notify':
    get:
      tags:
        - CR - MerchantRelationshipAgreement
      summary: Notify Merchant Relationship Agreement
      description: Notify Merchant Relationship Agreement
      operationId: Notify
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
      responses:
        '200':
          $ref: '#/components/responses/MerchantRelationshipAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/Request':
    put:
      tags:
        - CR - MerchantRelationshipAgreement
      summary: Request Merchant Relationship Agreement
      description: Request Merchant Relationship Agreement
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
      requestBody:
        $ref: '#/components/requestBodies/MerchantRelationshipAgreement'
      responses:
        '200':
          $ref: '#/components/responses/MerchantRelationshipAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/Retrieve':
    get:
      tags:
        - CR - MerchantRelationshipAgreement
      summary: Retrieve Merchant Relationship Agreement
      description: Retrieve Merchant Relationship Agreement
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
      responses:
        '200':
          $ref: '#/components/responses/MerchantRelationshipAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/Update':
    put:
      tags:
        - CR - MerchantRelationshipAgreement
      summary: Update Merchant Relationship Agreement
      description: Update Merchant Relationship Agreement
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
      requestBody:
        $ref: '#/components/requestBodies/MerchantRelationshipAgreement'
      responses:
        '200':
          $ref: '#/components/responses/MerchantRelationshipAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/LegalTerm/{legaltermid}/Evaluate':
    post:
      tags:
        - BQ - LegalTerm
      summary: Evaluate Legal Term
      description: Evaluate Legal Term
      operationId: EvaluateLegalTerm
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
        - $ref: '#/components/parameters/legaltermid'
      requestBody:
        $ref: '#/components/requestBodies/LegalTerm'
      responses:
        '200':
          $ref: '#/components/responses/LegalTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/OperationalTerm/{operationaltermid}/Evaluate':
    post:
      tags:
        - BQ - OperationalTerm
      summary: Evaluate Operational Term
      description: Evaluate Operational Term
      operationId: EvaluateOperationalTerm
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
        - $ref: '#/components/parameters/operationaltermid'
      requestBody:
        $ref: '#/components/requestBodies/OperationalTerm'
      responses:
        '200':
          $ref: '#/components/responses/OperationalTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/RegulatoryTerm/{regulatorytermid}/Evaluate':
    post:
      tags:
        - BQ - RegulatoryTerm
      summary: Evaluate Regulatory Term
      description: Evaluate Regulatory Term
      operationId: EvaluateRegulatoryTerm
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
        - $ref: '#/components/parameters/regulatorytermid'
      requestBody:
        $ref: '#/components/requestBodies/RegulatoryTerm'
      responses:
        '200':
          $ref: '#/components/responses/RegulatoryTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/LegalTerm/{legaltermid}/Exchange':
    put:
      tags:
        - BQ - LegalTerm
      summary: Exchange Legal Term
      description: Exchange Legal Term
      operationId: ExchangeLegalTerm
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
        - $ref: '#/components/parameters/legaltermid'
      requestBody:
        $ref: '#/components/requestBodies/LegalTerm'
      responses:
        '200':
          $ref: '#/components/responses/LegalTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/OperationalTerm/{operationaltermid}/Exchange':
    put:
      tags:
        - BQ - OperationalTerm
      summary: Exchange Operational Term
      description: Exchange Operational Term
      operationId: ExchangeOperationalTerm
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
        - $ref: '#/components/parameters/operationaltermid'
      requestBody:
        $ref: '#/components/requestBodies/OperationalTerm'
      responses:
        '200':
          $ref: '#/components/responses/OperationalTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/RegulatoryTerm/{regulatorytermid}/Exchange':
    put:
      tags:
        - BQ - RegulatoryTerm
      summary: Exchange Regulatory Term
      description: Exchange Regulatory Term
      operationId: ExchangeRegulatoryTerm
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
        - $ref: '#/components/parameters/regulatorytermid'
      requestBody:
        $ref: '#/components/requestBodies/RegulatoryTerm'
      responses:
        '200':
          $ref: '#/components/responses/RegulatoryTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/LegalTerm/{legaltermid}/Notify':
    get:
      tags:
        - BQ - LegalTerm
      summary: Notify Legal Term
      description: Notify Legal Term
      operationId: NotifyLegalTerm
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
        - $ref: '#/components/parameters/legaltermid'
      responses:
        '200':
          $ref: '#/components/responses/LegalTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/OperationalTerm/{operationaltermid}/Notify':
    get:
      tags:
        - BQ - OperationalTerm
      summary: Notify Operational Term
      description: Notify Operational Term
      operationId: NotifyOperationalTerm
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
        - $ref: '#/components/parameters/operationaltermid'
      responses:
        '200':
          $ref: '#/components/responses/OperationalTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/RegulatoryTerm/{regulatorytermid}/Notify':
    get:
      tags:
        - BQ - RegulatoryTerm
      summary: Notify Regulatory Term
      description: Notify Regulatory Term
      operationId: NotifyRegulatoryTerm
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
        - $ref: '#/components/parameters/regulatorytermid'
      responses:
        '200':
          $ref: '#/components/responses/RegulatoryTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/LegalTerm/{legaltermid}/Request':
    put:
      tags:
        - BQ - LegalTerm
      summary: Request Legal Term
      description: Request Legal Term
      operationId: RequestLegalTerm
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
        - $ref: '#/components/parameters/legaltermid'
      requestBody:
        $ref: '#/components/requestBodies/LegalTerm'
      responses:
        '200':
          $ref: '#/components/responses/LegalTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/OperationalTerm/{operationaltermid}/Request':
    put:
      tags:
        - BQ - OperationalTerm
      summary: Request Operational Term
      description: Request Operational Term
      operationId: RequestOperationalTerm
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
        - $ref: '#/components/parameters/operationaltermid'
      requestBody:
        $ref: '#/components/requestBodies/OperationalTerm'
      responses:
        '200':
          $ref: '#/components/responses/OperationalTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/RegulatoryTerm/{regulatorytermid}/Request':
    put:
      tags:
        - BQ - RegulatoryTerm
      summary: Request Regulatory Term
      description: Request Regulatory Term
      operationId: RequestRegulatoryTerm
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
        - $ref: '#/components/parameters/regulatorytermid'
      requestBody:
        $ref: '#/components/requestBodies/RegulatoryTerm'
      responses:
        '200':
          $ref: '#/components/responses/RegulatoryTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/LegalTerm/{legaltermid}/Retrieve':
    get:
      tags:
        - BQ - LegalTerm
      summary: Retrieve Legal Term
      description: Retrieve Legal Term
      operationId: RetrieveLegalTerm
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
        - $ref: '#/components/parameters/legaltermid'
      responses:
        '200':
          $ref: '#/components/responses/LegalTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/OperationalTerm/{operationaltermid}/Retrieve':
    get:
      tags:
        - BQ - OperationalTerm
      summary: Retrieve Operational Term
      description: Retrieve Operational Term
      operationId: RetrieveOperationalTerm
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
        - $ref: '#/components/parameters/operationaltermid'
      responses:
        '200':
          $ref: '#/components/responses/OperationalTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/RegulatoryTerm/{regulatorytermid}/Retrieve':
    get:
      tags:
        - BQ - RegulatoryTerm
      summary: Retrieve Regulatory Term
      description: Retrieve Regulatory Term
      operationId: RetrieveRegulatoryTerm
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
        - $ref: '#/components/parameters/regulatorytermid'
      responses:
        '200':
          $ref: '#/components/responses/RegulatoryTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/LegalTerm/{legaltermid}/Update':
    put:
      tags:
        - BQ - LegalTerm
      summary: Update Legal Term
      description: Update Legal Term
      operationId: UpdateLegalTerm
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
        - $ref: '#/components/parameters/legaltermid'
      requestBody:
        $ref: '#/components/requestBodies/LegalTerm'
      responses:
        '200':
          $ref: '#/components/responses/LegalTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/OperationalTerm/{operationaltermid}/Update':
    put:
      tags:
        - BQ - OperationalTerm
      summary: Update Operational Term
      description: Update Operational Term
      operationId: UpdateOperationalTerm
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
        - $ref: '#/components/parameters/operationaltermid'
      requestBody:
        $ref: '#/components/requestBodies/OperationalTerm'
      responses:
        '200':
          $ref: '#/components/responses/OperationalTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/RegulatoryTerm/{regulatorytermid}/Update':
    put:
      tags:
        - BQ - RegulatoryTerm
      summary: Update Regulatory Term
      description: Update Regulatory Term
      operationId: UpdateRegulatoryTerm
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
        - $ref: '#/components/parameters/regulatorytermid'
      requestBody:
        $ref: '#/components/requestBodies/RegulatoryTerm'
      responses:
        '200':
          $ref: '#/components/responses/RegulatoryTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    condition:
      type: object
      properties:
        Condition:
          type: string
          description: "Condition is a premise upon which the fulfillment of an agreement depends \n\nGeneral and special arrangements, provisions, requirements, rules, specifications, and standards that form an integral part of an agreement or contract.\n\nRead more: http://www.businessdictionary.com/definition/terms-and-conditions.html\n\n"
          format: class
      description: The required status/situation for the terms to apply and or tasks that need to be completed prior to the initiation of the workstep
    schedule:
      type: object
      properties:
        ScheduleType:
          type: string
          description: ''
          format: string
      description: Any timing/duration considerations applying to the Legal Term
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: ''
    businessservice:
      type: object
      properties:
        BusinessServiceName:
          $ref: '#/components/schemas/name'
        BusinessService:
          type: string
          description: "A business service supports business capabilities through an explicitly defined interface and is explicitly governed by an organization. TOGAF 9.2\n\nA business service represents explicitly defined behavior that a business role, business actor, or business collaboration exposes to its environment. ArchiMate 3.1\n"
          format: class
      description: The Legal Term specific Business Service
    date:
      type: object
      properties:
        DateContent:
          type: string
          description: ''
          format: string
      description: Date on which the agreement was signed by all parties. (ISO20022)
    agreement:
      type: object
      properties:
        AgreementSignedDate:
          $ref: '#/components/schemas/date'
        Agreement:
          type: string
          description: 'A formal or informal common understanding between two or more (legal competent) parties concerning one or more subject matters expressed in a set of arrangements, terms and conditions. (adapted from Legal System and FIBO) '
          format: class
      description: Reference to Legal Term
    actiontypevalues:
      enum:
        - Initiate
        - Execute
        - Create
        - Transfer
        - Pay
        - Deliver
        - Apply
        - Calculate
      type: string
      description: ">\n* `Initiate` - \n* `Execute` - \n* `Create` - \n* `Transfer` - \n* `Pay` - \n* `Deliver` - \n* `Apply` - \n* `Calculate` - \n"
    action:
      type: object
      properties:
        ActionType:
          $ref: '#/components/schemas/actiontypevalues'
      description: ''
    arrangement:
      type: object
      properties:
        ArrangementAction:
          $ref: '#/components/schemas/action'
        Arrangement:
          type: string
          description: An agreed commitment to perform actions that meet obligations under an agreement
          format: class
      description: Reference to Legal Term
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: The type of Legal Term
    LegalTerm:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        MerchantRelationshipAgreementReference:
          $ref: '#/components/schemas/agreement'
        LegalTermReference:
          $ref: '#/components/schemas/arrangement'
        LegalTermType:
          $ref: '#/components/schemas/text'
        Jurisdiction:
          type: string
          description: The legal jurisdiction
          format: string
        ApplicableLawReference:
          type: string
          description: Reference to any legal requirements
          format: object
        ApplicableLawInterpretation:
          type: string
          description: Explanation or interpretation of the law as applied
          format: string
      description: Covers the legal considerations of the agreement
    OperationalTerm:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        MerchantRelationshipAgreementReference:
          $ref: '#/components/schemas/agreement'
        OperationalTermReference:
          $ref: '#/components/schemas/arrangement'
        OperationalTermType:
          type: string
          description: 'Type of term (e.g. fee waiver, rate discount, linked service)'
          format: string
        OperationalTermDescription:
          type: string
          description: 'Description of the term, including servicing and fulfillment details'
          format: string
        OperationalTermParameterType:
          type: string
          description: 'Parameters that govern the execution of the term (e.g. rate discounted by, fee reduced by)'
          format: string
        OperationalTermParameterSetting:
          type: string
          description: The value of the parameter for this instance
          format: string
        OperationalTermTransactionRecord:
          type: string
          description: Details of cash flows associated with fulfillment instances of the term (can be charges made to the customer or compensating transfers to the base product profit center)
          format: string
        OperationalTermTransactionType:
          type: string
          description: 'The type of transaction and the resulting cash adjustment (e.g. interest forgiveness, fee reduction)'
          format: string
        OperationalTermTransactionDescription:
          type: string
          description: Description of the transaction detailing amounts and source and the creditor of transfers
          format: string
        OperationalTermAugmentedCashFlows:
          type: string
          description: The actual cash flows associated with the fulfillment of the term
          format: string
        PaymentInitiationTransactionInstanceReference:
          type: string
          description: Reference to the underlying funds transfer transaction
          format: object
      description: Covers the legal considerations of the agreement
    RegulatoryTerm:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        MerchantRelationshipAgreementReference:
          $ref: '#/components/schemas/agreement'
        RegulatoryTermReference:
          $ref: '#/components/schemas/arrangement'
        RegulatoryTermType:
          $ref: '#/components/schemas/text'
        RegulatoryAuthority:
          type: string
          description: The applicable regulatory authority
          format: string
        ApplicableRegulationReference:
          type: string
          description: Reference to any regulatory requirements
          format: object
        ApplicableRegulationInterpretation:
          type: string
          description: Explanation or interpretation of the regulation as applied
          format: string
      description: Covers the legal considerations of the agreement
    workproduct:
      type: object
      properties:
        WorkProductType:
          type: string
          description: ''
          format: workproducttypevalues
        Workproduct:
          type: string
          description: 'Contact records, working papers, documents and activity logs produced during the execution of a work task'
          format: datatype
      description: ''
    MerchantRelationsOutcome:
      type: object
      properties:
        MerchantRelationsAgreement:
          $ref: '#/components/schemas/agreement'
        MerchantRelationsWorkProduct:
          $ref: '#/components/schemas/workproduct'
        MerchantRelationsWorkProductType:
          type: string
          description: ''
          format: workproducttypevalues
      description: Covers the legal considerations of the agreement
    feature:
      type: object
      properties:
        FeatureType:
          type: string
          description: ''
          format: string
      description: 'A selected optional feature in a product, identified by Parameter Type'
    agreementtypevalues:
      enum:
        - CustomerAgreement
        - SupplierAgreement
        - BrokerAgreement
        - SalesAgreement
        - PurchaseAgreement
        - MaintenanceAgreement
        - ProductAgreement
        - ProductSalesAgreement
        - ResourceAgreement
      type: string
      description: ">\n* `CustomerAgreement` - \n* `SupplierAgreement` - \n* `BrokerAgreement` - \n* `SalesAgreement` - \n* `PurchaseAgreement` - \n* `MaintenanceAgreement` - \n* `ProductAgreement` - \n* `ProductSalesAgreement` - \n* `ResourceAgreement` - \n"
    instructiondate:
      type: object
      properties:
        InstructionDate:
          $ref: '#/components/schemas/date'
        Instructiondate:
          type: string
          description: ''
          format: datatype
      description: ''
    instruction:
      type: object
      properties:
        InstructionDate:
          $ref: '#/components/schemas/instructiondate'
        Instruction:
          type: string
          description: 'A request to do something. '
          format: class
      description: Request to discharge Merchant Relationship Agreement
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        Status:
          type: string
          description: A characteristic that describe the object by referring to a state transition in its lifecycle.
          format: datatype
      description: ''
    agreementlifecyclestatus:
      type: object
      properties:
        AgreementLifecycleStatus:
          $ref: '#/components/schemas/status'
        Agreementlifecyclestatus:
          type: string
          description: 'Data type that specifies the LifecycleStatus of agreement (e.g., potential, offered, confirmed, completed, signed, terminated).'
          format: datatype
      description: The status of Merchant Relationship Agreement
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        Party:
          type: string
          description: "A party represents an autonomous entity in which a bank has a business interest. It has a legal definition and identity. A party is a Person, Organization, (a proposed definition for BIAN BOM adapted from BIAN Party Working Group) \n\n- Entity involved in an activity. (ISO20022)"
          format: class
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        Involvedparty:
          type: string
          description: ''
          format: datatype
      description: Party who is involved in Merchant Relationship Agreement
    ruleset:
      type: object
      properties:
        RuleSetDefinition:
          type: string
          description: ''
          format: string
        RuleSet:
          type: string
          description: 'A set of rules (e.g., regulation, policy, law, guideline, principle, standard) to guide, direct or operate a subject matter.'
          format: class
      description: Reference to the regulation which is defined in Merchant Relationship Agreement
    rulesettype:
      type: object
      properties:
        RuleSetTypeName:
          $ref: '#/components/schemas/name'
        Rulesettype:
          type: string
          description: Data type specifies the classification of RuleSet
          format: datatype
      description: A Classification that distinguishes between the regularity domains of Merchant Relationship Agreement
    jurisdiction:
      type: object
      properties:
        Jurisdiction:
          type: string
          description: Jurisdiction that will be assigned in case of legal dispute.
          format: class
      description: Reference to the jurisdiction that is assigned to Merchant Relationship Agreement in case of legal dispute.
    accountstatus:
      type: object
      properties:
        AccountStatus:
          $ref: '#/components/schemas/status'
        Accountstatus:
          type: string
          description: Specifies the current state of an account. (ISO20022)
          format: datatype
      description: "A characteristic of account which refers to the LifecycleStatus of account like opened, closed, blocked, etc.\n\nSpecifies the current state of an account. (ISO20022)"
    account:
      type: object
      properties:
        AccountStatus:
          $ref: '#/components/schemas/accountstatus'
        Account:
          type: string
          description: "A measuring state on which movements in value or amounts of assets, rights and obligations are registered.\n\nComment: \nIt is a bookkeeping instrument holding the amount or value of something by registering the movements in plus and min when events happen which have an impact on the position.\nThe term \"account\" is usually associated to an accounting or bookkeeping concept to hold the financial or stock state of a business concept. An account will typically group the debit and credit entries for a specific aspect of the business resulting from transactions,\nOften accounts are represented as a T-account which is a visual aid used to depict an account. Above the top portion of the T would be the account title. On the left-side of the base of the T would be any debit amounts; on the right-side would be the credit amounts.\nA commonly used bookkeeping method is the double-entry method. This means that every transaction has at least 2 movements. If a customer pays 100 € in cash, there is\na decrease in the amount that the customer owes to the company (the customer position is decreased)\nan increase in the amount that the company has in cash (the cash position is increased)\n\nAn account can be assigning to one or more ledgers. A ledger is a group of accounts for a certain purpose. If there is need for multiple ledgers because of multiple purpose, an account can perfectly well assigned to multiple ledgers. When Ledgers are in real physical books, this is not possible. When ledgers are digital, accounts can be grouped into multiple groups at the same time. This practice is very rarely taught into courses for accounting, but in digital accounting, it is common practice.\n\nExamples: \nstock account of a shop, cash register, bank account, financial accounting account, customer account, supplier account, ...\nBank Account BE12 1234 5678 9012: is an individual banking account\nAccounts Payable, is a collective account keeping the balance of the amounts to pay by the organisation to its suppliers. The balance is the result of the financial movements related to suppliers. This account is managed usually in a General Ledger \nSupplier Account X, is an individual account keeping the balance of the amounts to pay by the organisation to an individual supplier. The balance is the result of the financial movements related to an individual supplier. This account is managed usually in a sub-ledger.\nStock Account x, is an individual account keeping the balance of the amounts in stock of a specific good.\nA payment service to take fund out of an account. "
          format: class
      description: "Reference to the account which is linked to Merchant Relationship Agreement\n\nA characteristic of agreement which refers to its involved account to specify the account that will be used to register for the transactions in position keeping management."
    value:
      type: object
      properties:
        Value:
          type: string
          description: 'A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)'
          format: datatype
      description: ''
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        Identifier:
          type: string
          description: An identifier is a character string used to uniquely identify one instance of an object within an identification scheme that is managed by an agency. (UN/CEFAT)
          format: datatype
      description: ''
    productidentification:
      type: object
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/identifier'
        Productidentification:
          type: string
          description: ''
          format: datatype
      description: The identifier of product e.g. ISIN Code.
    bankingproduct:
      type: object
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/productidentification'
        BankingProduct:
          type: string
          description: 'A package of services and/or goods, accompanied by term and condition which is offered as a whole to (internal or external) customers.'
          format: class
      description: "Reference to the product which is linked to Merchant Relationship Agreement\n\nComment: \nA characteristic of agreement which refers to its related products that are sold by agreement."
    MerchantRelationshipAgreement:
      type: object
      properties:
        MerchantRelationshipAgreementParameterType:
          $ref: '#/components/schemas/text'
        MerchantRelationshipAgreementSelectedOption:
          $ref: '#/components/schemas/feature'
        MerchantRelationshipAgreementType:
          $ref: '#/components/schemas/agreementtypevalues'
        MerchantRelationshipAgreementReference:
          $ref: '#/components/schemas/agreement'
        MerchantRelationshipAgreementDischargeRequest:
          $ref: '#/components/schemas/instruction'
        MerchantRelationshipAgreementDischargeSchedule:
          $ref: '#/components/schemas/schedule'
        MerchantRelationshipAgreementStatus:
          $ref: '#/components/schemas/agreementlifecyclestatus'
        MerchantRelationshipAgreementAssociatedParty:
          $ref: '#/components/schemas/involvedparty'
        MerchantRelationshipAgreementCustomerReference:
          $ref: '#/components/schemas/involvedparty'
        MerchantRelationshipAgreementObligation:
          $ref: '#/components/schemas/arrangement'
        MerchantRelationshipAgreementEntitlement:
          $ref: '#/components/schemas/arrangement'
        MerchantRelationshipAgreementRegulationReference:
          $ref: '#/components/schemas/ruleset'
        MerchantRelationshipAgreementRegulationType:
          $ref: '#/components/schemas/rulesettype'
        MerchantRelationshipAgreementJurisdiction:
          $ref: '#/components/schemas/jurisdiction'
        MerchantRelationshipAgreementAccountReference:
          $ref: '#/components/schemas/account'
        MerchantRelationshipAgreementSubjectMatter:
          type: string
          description: The subject matter of  Merchant Relationship Agreement
          format: object
        MerchantRelationshipAgreementProductReference:
          $ref: '#/components/schemas/bankingproduct'
        MerchantRelationshipAgreementCalendarReference:
          type: string
          description: The calendar of Merchant Relationship Agreement
          format: calendar
        MerchantRelationshipAgreementAssociatedAgreementReference:
          $ref: '#/components/schemas/agreement'
      description: "Maintain the terms and conditions that apply to a commercial relationship within Merchant Relations.\n\n"
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    MerchantRelationshipAgreement:
      description: MerchantRelationshipAgreement
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MerchantRelationshipAgreement'
    LegalTerm:
      description: LegalTerm
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LegalTerm'
    OperationalTerm:
      description: OperationalTerm
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OperationalTerm'
    RegulatoryTerm:
      description: RegulatoryTerm
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RegulatoryTerm'
  parameters:
    merchantrelationsid:
      name: merchantrelationsid
      in: path
      required: true
      style: simple
      schema:
        type: string
    legaltermid:
      name: legaltermid
      in: path
      required: true
      style: simple
      schema:
        type: string
    operationaltermid:
      name: operationaltermid
      in: path
      required: true
      style: simple
      schema:
        type: string
    regulatorytermid:
      name: regulatorytermid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    MerchantRelationshipAgreement:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MerchantRelationshipAgreement'
      required: true
    LegalTerm:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LegalTerm'
      required: true
    OperationalTerm:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OperationalTerm'
      required: true
    RegulatoryTerm:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RegulatoryTerm'
      required: true