openapi: 3.0.1
info:
  title: Point of Service
  description: 'This service domain operates servicing positions within the bank. It administers all media connections, inventory holdings (e.g. cash), provides access to support utilities and tracks servicing activity -e.g. time spent, activity logs, capturing servicing events including commission and training related actions. In cases servicing positions can be automated'
  contact:
    name: BIAN
    url: https://bian.org
  version: '10.1.0'
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/PointofService/10.1.0
paths:
  /PointofService/Initiate:
    post:
      tags:
        - CR - PointofServiceOperatingSession
      summary: InCR Initiate a point of service session
      description: InCR Initiate a point of service session
      operationId: Initiate
      requestBody:
        $ref: '#/components/requestBodies/InitiatePointofServiceOperatingSessionRequest'
      responses:
        '200':
          $ref: '#/components/responses/InitiatePointofServiceOperatingSessionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PointofService/{pointofserviceid}/Update':
    put:
      tags:
        - CR - PointofServiceOperatingSession
      summary: UpCR Update details for a point of service session
      description: UpCR Update details for a point of service session
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/pointofserviceid'
      requestBody:
        $ref: '#/components/requestBodies/UpdatePointofServiceOperatingSessionRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdatePointofServiceOperatingSessionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PointofService/{pointofserviceid}/Execute':
    put:
      tags:
        - CR - PointofServiceOperatingSession
      summary: ExCR Execute an automated task (e.g. assign a contact)
      description: ExCR Execute an automated task (e.g. assign a contact)
      operationId: Execute
      parameters:
        - $ref: '#/components/parameters/pointofserviceid'
      requestBody:
        $ref: '#/components/requestBodies/ExecutePointofServiceOperatingSessionRequest'
      responses:
        '200':
          $ref: '#/components/responses/ExecutePointofServiceOperatingSessionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PointofService/{pointofserviceid}/Request':
    put:
      tags:
        - CR - PointofServiceOperatingSession
      summary: RqCR Request manual intervention (e.g. book future time)
      description: RqCR Request manual intervention (e.g. book future time)
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/pointofserviceid'
      requestBody:
        $ref: '#/components/requestBodies/RequestPointofServiceOperatingSessionRequest'
      responses:
        '200':
          $ref: '#/components/responses/RequestPointofServiceOperatingSessionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PointofService/{pointofserviceid}/Retrieve':
    get:
      tags:
        - CR - PointofServiceOperatingSession
      summary: ReCR Retrieve details about a servicing position session
      description: ReCR Retrieve details about a servicing position session
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/pointofserviceid'
      responses:
        '200':
          $ref: '#/components/responses/RetrievePointofServiceOperatingSessionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PointofService/{pointofserviceid}/Assisted/{assistedid}/Initiate':
    post:
      tags:
        - BQ - Assisted
      summary: InBQ Initiate an assisted contact
      description: InBQ Initiate an assisted contact
      operationId: InitiateAssisted
      parameters:
        - $ref: '#/components/parameters/pointofserviceid'
        - $ref: '#/components/parameters/assistedid'
      requestBody:
        $ref: '#/components/requestBodies/InitiateAssistedRequest'
      responses:
        '200':
          $ref: '#/components/responses/InitiateAssistedRequest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PointofService/{pointofserviceid}/Assisted/{assistedid}/Update':
    put:
      tags:
        - BQ - Assisted
      summary: UpBQ Update details about an assisted contact
      description: UpBQ Update details about an assisted contact
      operationId: UpdateAssisted
      parameters:
        - $ref: '#/components/parameters/pointofserviceid'
        - $ref: '#/components/parameters/assistedid'
      requestBody:
        $ref: '#/components/requestBodies/UpdateAssistedRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateAssistedResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PointofService/{pointofserviceid}/Assisted/{assistedid}/Retrieve':
    get:
      tags:
        - BQ - Assisted
      summary: ReBQ Retrieve details about an assisted contact
      description: ReBQ Retrieve details about an assisted contact
      operationId: RetrieveAssisted
      parameters:
        - $ref: '#/components/parameters/pointofserviceid'
        - $ref: '#/components/parameters/assistedid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveAssistedResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PointofService/{pointofserviceid}/Automated/{automatedid}/Initiate':
    post:
      tags:
        - BQ - Automated
      summary: InBQ Initiate an automated contact
      description: InBQ Initiate an automated contact
      operationId: InitiateAutomated
      parameters:
        - $ref: '#/components/parameters/pointofserviceid'
        - $ref: '#/components/parameters/automatedid'
      requestBody:
        $ref: '#/components/requestBodies/Automated'
      responses:
        '200':
          $ref: '#/components/responses/Automated'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PointofService/{pointofserviceid}/Automated/{automatedid}/Update':
    put:
      tags:
        - BQ - Automated
      summary: UpBQ Update details about an automated contact
      description: UpBQ Update details about an automated contact
      operationId: UpdateAutomated
      parameters:
        - $ref: '#/components/parameters/pointofserviceid'
        - $ref: '#/components/parameters/automatedid'
      requestBody:
        $ref: '#/components/requestBodies/UpdateAutomatedRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateAutomatedResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PointofService/{pointofserviceid}/Automated/{automatedid}/Retrieve':
    get:
      tags:
        - BQ - Automated
      summary: ReBQ Retrieve details about an automated contact
      description: ReBQ Retrieve details about an automated contact
      operationId: RetrieveAutomated
      parameters:
        - $ref: '#/components/parameters/pointofserviceid'
        - $ref: '#/components/parameters/automatedid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveAutomatedResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PointofService/{pointofserviceid}/Interaction/{interactionid}/Update':
    put:
      tags:
        - BQ - Interaction
      summary: UpBQ Update details for a customer interaction session
      description: UpBQ Update details for a customer interaction session
      operationId: UpdateInteraction
      parameters:
        - $ref: '#/components/parameters/pointofserviceid'
        - $ref: '#/components/parameters/interactionid'
      requestBody:
        $ref: '#/components/requestBodies/Interaction'
      responses:
        '200':
          $ref: '#/components/responses/Interaction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PointofService/{pointofserviceid}/Interaction/{interactionid}/Retrieve':
    get:
      tags:
        - BQ - Interaction
      summary: ReBQ Retrieve details about a customer interaction session
      description: ReBQ Retrieve details about a customer interaction session
      operationId: RetrieveInteraction
      parameters:
        - $ref: '#/components/parameters/pointofserviceid'
        - $ref: '#/components/parameters/interactionid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveInteractionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PointofService/{pointofserviceid}/Inventory/{inventoryid}/Update':
    put:
      tags:
        - BQ - Inventory
      summary: UpBQ Update inventory details
      description: UpBQ Update inventory details
      operationId: UpdateInventory
      parameters:
        - $ref: '#/components/parameters/pointofserviceid'
        - $ref: '#/components/parameters/inventoryid'
      requestBody:
        $ref: '#/components/requestBodies/Inventory'
      responses:
        '200':
          $ref: '#/components/responses/Inventory'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PointofService/{pointofserviceid}/Inventory/{inventoryid}/Execute':
    put:
      tags:
        - BQ - Inventory
      summary: ExBQ Execute transactions against the inventory position
      description: ExBQ Execute transactions against the inventory position
      operationId: ExecuteInventory
      parameters:
        - $ref: '#/components/parameters/pointofserviceid'
        - $ref: '#/components/parameters/inventoryid'
      requestBody:
        $ref: '#/components/requestBodies/ExecuteInventoryRequest'
      responses:
        '200':
          $ref: '#/components/responses/ExecuteInventoryResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PointofService/{pointofserviceid}/Inventory/{inventoryid}/Retrieve':
    get:
      tags:
        - BQ - Inventory
      summary: ReBQ Retrieve details about inventory holdings and usage
      description: ReBQ Retrieve details about inventory holdings and usage
      operationId: RetrieveInventory
      parameters:
        - $ref: '#/components/parameters/pointofserviceid'
        - $ref: '#/components/parameters/inventoryid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveInventoryResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PointofService/{pointofserviceid}/CashPosition/{cashpositionid}/Update':
    put:
      tags:
        - BQ - CashPosition
      summary: UpBQ Update the cash position
      description: UpBQ Update the cash position
      operationId: UpdateCashPosition
      parameters:
        - $ref: '#/components/parameters/pointofserviceid'
        - $ref: '#/components/parameters/cashpositionid'
      requestBody:
        $ref: '#/components/requestBodies/CashPosition'
      responses:
        '200':
          $ref: '#/components/responses/CashPosition'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PointofService/{pointofserviceid}/CashPosition/{cashpositionid}/Execute':
    put:
      tags:
        - BQ - CashPosition
      summary: ExBQ Execute transactions against the cash position
      description: ExBQ Execute transactions against the cash position
      operationId: ExecuteCashPosition
      parameters:
        - $ref: '#/components/parameters/pointofserviceid'
        - $ref: '#/components/parameters/cashpositionid'
      requestBody:
        $ref: '#/components/requestBodies/ExecuteCashPositionRequest'
      responses:
        '200':
          $ref: '#/components/responses/ExecuteCashPositionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PointofService/{pointofserviceid}/CashPosition/{cashpositionid}/Retrieve':
    get:
      tags:
        - BQ - CashPosition
      summary: ReBQ Retrieve details about the cash inventory
      description: ReBQ Retrieve details about the cash inventory
      operationId: RetrieveCashPosition
      parameters:
        - $ref: '#/components/parameters/pointofserviceid'
        - $ref: '#/components/parameters/cashpositionid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveCashPositionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    string:
      type: object
    HTTPError:
      type: object
      properties:
        status_code:
          $ref: '#/components/schemas/string'
        status:
          $ref: '#/components/schemas/string'
        message:
          $ref: '#/components/schemas/string'
      description: Status Attributes
    datatype:
      type: object
      description: "A code identifying a currency according to ISO-4217.\nA currency is a system of money in general use in a particular country.\n\nCode allocated to a currency, by a maintenance agency, under an international identification scheme as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\". Valid currency codes are registered with the ISO 4217 Maintenance Agency, and consist of three contiguous letters. (ISO20022)\n\n"
    currencycode:
      type: object
      properties:
        Currencycode:
          $ref: '#/components/schemas/string'
      description: The currency being tracked
    object:
      type: object
      properties:
        Object:
          $ref: '#/components/schemas/string'
      description: Reference to a cash transaction
    CashPosition:
      type: object
      properties:
        ServicingCurrency:
          $ref: '#/components/schemas/currencycode'
        ServicingCashHoldingRecord:
          type: string
          description: The current holding by currency/instrument
          format: string
        ServicingCashTransactionReference:
          $ref: '#/components/schemas/object'
        ServicingCashTransactionRecord:
          type: string
          description: Details of the cash transaction (e.g. cash deposited to customer account)
          format: string
        ProductInstanceReference:
          $ref: '#/components/schemas/object'
      description: "The collection of operational serivces/functions offered by the operational facility\n\nExamples: messages, capture, routines"
    Assisted:
      type: object
      properties:
        Employee/BusinessUnitReference:
          $ref: '#/components/schemas/object'
        CustomerContactReference:
          $ref: '#/components/schemas/object'
      description: "The collection of operational serivces/functions offered by the operational facility\n\nExamples: messages, capture, routines"
    Inventory:
      type: object
      properties:
        ServicingInventoryType:
          type: string
          description: 'The type of non-cash inventory (e.g. documents/forms, brochures)'
          format: string
        ServicingPositionInventoryRecord:
          type: string
          description: Used to track inventory holdings at the position
          format: string
        ServicingInventoryTransactionRecord:
          type: string
          description: Details of the transfer of inventory (e.g. documents issued)
          format: string
      description: "The collection of operational serivces/functions offered by the operational facility\n\nExamples: messages, capture, routines"
    Automated:
      type: object
      properties:
        BusinessUnitReference:
          $ref: '#/components/schemas/object'
      description: "The collection of operational serivces/functions offered by the operational facility\n\nExamples: messages, capture, routines"
    Interaction:
      type: object
      properties:
        CustomerSessionDialogueReference:
          $ref: '#/components/schemas/object'
      description: "The collection of operational serivces/functions offered by the operational facility\n\nExamples: messages, capture, routines"
    PointofServiceOperatingSession:
      type: object
      properties:
        ServicingPositionConfigurationOrSet-up:
          type: string
          description: Defines how the servicing position is set-up in terms of supporting functions and application connections
          format: string
        ServicingPositionReference:
          $ref: '#/components/schemas/object'
        ServicingPositionType:
          type: string
          description: 'Defines the type of position (e.g. teller, relationship manager, servicing agent)'
          format: string
        ServicingPositionLocation:
          type: string
          description: 'The physical address/location of the position, branch reference etc.'
          format: string
        ServicingPositionFacilityType:
          type: string
          description: 'The type of function supported at the POS  (e.g. customer servicing, FX, teller services, commissions)'
          format: string
        ServicingPositionFacilityReference:
          $ref: '#/components/schemas/object'
        ServicingPositionSchedule:
          type: string
          description: The times the position will be available/staffed within this session. Allows for booking time in advance
          format: string
        ServicingPositionActivityReport:
          type: string
          description: Log of the activities during the session
          format: string
        ServicingPositionOperatingSessionStatistics:
          type: string
          description: 'Service activity statistics that are maintained during the session  (e.g. average contact time, wait time, service utilization, facility usage)'
          format: string
        ServicingPositionOperatingSessionReportType:
          type: string
          description: 'Session reports that can be accessed during the session (e.g. real-time status, session statistics)'
          format: string
        ServicingPositionOperatingSessionReport:
          type: string
          description: The session activity report
          format: string
      description: 'Operate equipment and/or a largely automated facility within Point of Service. '
    InitiatePointofServiceOperatingSessionRequest:
      type: object
      properties:
        PointofServiceOperatingSession:
          type: object
          properties:
            ServicingPositionConfigurationOrSet-up:
              type: string
              description: Defines how the servicing position is set-up in terms of supporting functions and application connections
              format: string
            ServicingPositionType:
              type: string
              description: 'Defines the type of position (e.g. teller, relationship manager, servicing agent)'
              format: string
            ServicingPositionLocation:
              type: string
              description: 'The physical address/location of the position, branch reference etc.'
              format: string
            ServicingPositionFacilityType:
              type: string
              description: 'The type of function supported at the POS  (e.g. customer servicing, FX, teller services, commissions)'
              format: string
            ServicingPositionFacilityReference:
              $ref: '#/components/schemas/object'
            ServicingPositionSchedule:
              type: string
              description: The times the position will be available/staffed within this session. Allows for booking time in advance
              format: string
            ServicingPositionOperatingSessionReportType:
              type: string
              description: 'Session reports that can be accessed during the session (e.g. real-time status, session statistics)'
              format: string
      description: 'Input: InCR Initiate a point of service session'
    InitiatePointofServiceOperatingSessionResponse:
      type: object
      properties:
        PointofServiceOperatingSession:
          type: object
          properties:
            ServicingPositionConfigurationOrSet-up:
              type: string
              description: Defines how the servicing position is set-up in terms of supporting functions and application connections
              format: string
            ServicingPositionReference:
              $ref: '#/components/schemas/object'
            ServicingPositionSchedule:
              type: string
              description: The times the position will be available/staffed within this session. Allows for booking time in advance
              format: string
            ServicingPositionActivityReport:
              type: string
              description: Log of the activities during the session
              format: string
            ServicingPositionOperatingSessionStatistics:
              type: string
              description: 'Service activity statistics that are maintained during the session  (e.g. average contact time, wait time, service utilization, facility usage)'
              format: string
            ServicingPositionOperatingSessionReportType:
              type: string
              description: 'Session reports that can be accessed during the session (e.g. real-time status, session statistics)'
              format: string
      description: 'Output: InCR Initiate a point of service session'
    UpdatePointofServiceOperatingSessionRequest:
      type: object
      properties:
        PointofServiceOperatingSession:
          type: object
          properties:
            ServicingPositionConfigurationOrSet-up:
              type: string
              description: Defines how the servicing position is set-up in terms of supporting functions and application connections
              format: string
            ServicingPositionReference:
              $ref: '#/components/schemas/object'
            ServicingPositionType:
              type: string
              description: 'Defines the type of position (e.g. teller, relationship manager, servicing agent)'
              format: string
            ServicingPositionLocation:
              type: string
              description: 'The physical address/location of the position, branch reference etc.'
              format: string
            ServicingPositionFacilityType:
              type: string
              description: 'The type of function supported at the POS  (e.g. customer servicing, FX, teller services, commissions)'
              format: string
            ServicingPositionFacilityReference:
              $ref: '#/components/schemas/object'
            ServicingPositionSchedule:
              type: string
              description: The times the position will be available/staffed within this session. Allows for booking time in advance
              format: string
            ServicingPositionActivityReport:
              type: string
              description: Log of the activities during the session
              format: string
            ServicingPositionOperatingSessionStatistics:
              type: string
              description: 'Service activity statistics that are maintained during the session  (e.g. average contact time, wait time, service utilization, facility usage)'
              format: string
            ServicingPositionOperatingSessionReportType:
              type: string
              description: 'Session reports that can be accessed during the session (e.g. real-time status, session statistics)'
              format: string
      description: 'Input: UpCR Update details for a point of service session'
    UpdatePointofServiceOperatingSessionResponse:
      type: object
      properties:
        PointofServiceOperatingSession:
          type: object
          properties:
            ServicingPositionConfigurationOrSet-up:
              type: string
              description: Defines how the servicing position is set-up in terms of supporting functions and application connections
              format: string
            ServicingPositionReference:
              $ref: '#/components/schemas/object'
            ServicingPositionType:
              type: string
              description: 'Defines the type of position (e.g. teller, relationship manager, servicing agent)'
              format: string
            ServicingPositionLocation:
              type: string
              description: 'The physical address/location of the position, branch reference etc.'
              format: string
            ServicingPositionFacilityType:
              type: string
              description: 'The type of function supported at the POS  (e.g. customer servicing, FX, teller services, commissions)'
              format: string
            ServicingPositionFacilityReference:
              $ref: '#/components/schemas/object'
            ServicingPositionSchedule:
              type: string
              description: The times the position will be available/staffed within this session. Allows for booking time in advance
              format: string
            ServicingPositionActivityReport:
              type: string
              description: Log of the activities during the session
              format: string
            ServicingPositionOperatingSessionStatistics:
              type: string
              description: 'Service activity statistics that are maintained during the session  (e.g. average contact time, wait time, service utilization, facility usage)'
              format: string
            ServicingPositionOperatingSessionReportType:
              type: string
              description: 'Session reports that can be accessed during the session (e.g. real-time status, session statistics)'
              format: string
      description: 'Output: UpCR Update details for a point of service session'
    ExecutePointofServiceOperatingSessionRequest:
      type: object
      properties:
        PointofServiceOperatingSession:
          type: object
          properties:
            ServicingPositionConfigurationOrSet-up:
              type: string
              description: Defines how the servicing position is set-up in terms of supporting functions and application connections
              format: string
            ServicingPositionType:
              type: string
              description: 'Defines the type of position (e.g. teller, relationship manager, servicing agent)'
              format: string
            ServicingPositionLocation:
              type: string
              description: 'The physical address/location of the position, branch reference etc.'
              format: string
            ServicingPositionFacilityType:
              type: string
              description: 'The type of function supported at the POS  (e.g. customer servicing, FX, teller services, commissions)'
              format: string
            ServicingPositionFacilityReference:
              $ref: '#/components/schemas/object'
            ServicingPositionSchedule:
              type: string
              description: The times the position will be available/staffed within this session. Allows for booking time in advance
              format: string
            ServicingPositionOperatingSessionReportType:
              type: string
              description: 'Session reports that can be accessed during the session (e.g. real-time status, session statistics)'
              format: string
      description: 'Input: ExCR Execute an automated task (e.g. assign a contact)'
    ExecutePointofServiceOperatingSessionResponse:
      type: object
      properties:
        PointofServiceOperatingSession:
          type: object
          properties:
            ServicingPositionConfigurationOrSet-up:
              type: string
              description: Defines how the servicing position is set-up in terms of supporting functions and application connections
              format: string
            ServicingPositionReference:
              $ref: '#/components/schemas/object'
            ServicingPositionSchedule:
              type: string
              description: The times the position will be available/staffed within this session. Allows for booking time in advance
              format: string
            ServicingPositionActivityReport:
              type: string
              description: Log of the activities during the session
              format: string
            ServicingPositionOperatingSessionStatistics:
              type: string
              description: 'Service activity statistics that are maintained during the session  (e.g. average contact time, wait time, service utilization, facility usage)'
              format: string
            ServicingPositionOperatingSessionReportType:
              type: string
              description: 'Session reports that can be accessed during the session (e.g. real-time status, session statistics)'
              format: string
      description: 'Output: ExCR Execute an automated task (e.g. assign a contact)'
    RequestPointofServiceOperatingSessionRequest:
      type: object
      properties:
        PointofServiceOperatingSession:
          type: object
          properties:
            ServicingPositionConfigurationOrSet-up:
              type: string
              description: Defines how the servicing position is set-up in terms of supporting functions and application connections
              format: string
            ServicingPositionType:
              type: string
              description: 'Defines the type of position (e.g. teller, relationship manager, servicing agent)'
              format: string
            ServicingPositionLocation:
              type: string
              description: 'The physical address/location of the position, branch reference etc.'
              format: string
            ServicingPositionFacilityType:
              type: string
              description: 'The type of function supported at the POS  (e.g. customer servicing, FX, teller services, commissions)'
              format: string
            ServicingPositionFacilityReference:
              $ref: '#/components/schemas/object'
            ServicingPositionSchedule:
              type: string
              description: The times the position will be available/staffed within this session. Allows for booking time in advance
              format: string
            ServicingPositionOperatingSessionReportType:
              type: string
              description: 'Session reports that can be accessed during the session (e.g. real-time status, session statistics)'
              format: string
      description: 'Input: RqCR Request manual intervention (e.g. book future time)'
    RequestPointofServiceOperatingSessionResponse:
      type: object
      properties:
        PointofServiceOperatingSession:
          type: object
          properties:
            ServicingPositionConfigurationOrSet-up:
              type: string
              description: Defines how the servicing position is set-up in terms of supporting functions and application connections
              format: string
            ServicingPositionReference:
              $ref: '#/components/schemas/object'
            ServicingPositionSchedule:
              type: string
              description: The times the position will be available/staffed within this session. Allows for booking time in advance
              format: string
            ServicingPositionActivityReport:
              type: string
              description: Log of the activities during the session
              format: string
            ServicingPositionOperatingSessionStatistics:
              type: string
              description: 'Service activity statistics that are maintained during the session  (e.g. average contact time, wait time, service utilization, facility usage)'
              format: string
            ServicingPositionOperatingSessionReportType:
              type: string
              description: 'Session reports that can be accessed during the session (e.g. real-time status, session statistics)'
              format: string
      description: 'Output: RqCR Request manual intervention (e.g. book future time)'
    RetrievePointofServiceOperatingSessionResponse:
      type: object
      properties:
        PointofServiceOperatingSession:
          type: object
          properties:
            ServicingPositionConfigurationOrSet-up:
              type: string
              description: Defines how the servicing position is set-up in terms of supporting functions and application connections
              format: string
            ServicingPositionReference:
              $ref: '#/components/schemas/object'
            ServicingPositionType:
              type: string
              description: 'Defines the type of position (e.g. teller, relationship manager, servicing agent)'
              format: string
            ServicingPositionLocation:
              type: string
              description: 'The physical address/location of the position, branch reference etc.'
              format: string
            ServicingPositionFacilityType:
              type: string
              description: 'The type of function supported at the POS  (e.g. customer servicing, FX, teller services, commissions)'
              format: string
            ServicingPositionFacilityReference:
              $ref: '#/components/schemas/object'
            ServicingPositionSchedule:
              type: string
              description: The times the position will be available/staffed within this session. Allows for booking time in advance
              format: string
            ServicingPositionActivityReport:
              type: string
              description: Log of the activities during the session
              format: string
            ServicingPositionOperatingSessionStatistics:
              type: string
              description: 'Service activity statistics that are maintained during the session  (e.g. average contact time, wait time, service utilization, facility usage)'
              format: string
            ServicingPositionOperatingSessionReportType:
              type: string
              description: 'Session reports that can be accessed during the session (e.g. real-time status, session statistics)'
              format: string
      description: 'Output: ReCR Retrieve details about a servicing position session'
    InitiateAssistedResponse:
      type: object
      properties:
        Assisted:
          type: object
          properties:
            EmployeeOrBusinessUnitReference:
              $ref: '#/components/schemas/object'
            CustomerContactReference:
              $ref: '#/components/schemas/object'
        Interaction:
          type: object
          properties:
            CustomerSessionDialogueReference:
              $ref: '#/components/schemas/object'
      description: 'Output: InBQ Initiate an assisted contact'
    InitiateAssistedRequest:
      type: object
      properties:
        Assisted:
          type: object
          properties:
            EmployeeOrBusinessUnitReference:
              $ref: '#/components/schemas/object'
      description: 'Input: InBQ Initiate an assisted contact'
    UpdateAssistedRequest:
      type: object
      properties:
        Assisted:
          type: object
          properties:
            EmployeeOrBusinessUnitReference:
              $ref: '#/components/schemas/object'
            CustomerContactReference:
              $ref: '#/components/schemas/object'
        Interaction:
          type: object
          properties:
            CustomerSessionDialogueReference:
              $ref: '#/components/schemas/object'
      description: 'Input: UpBQ Update details about an assisted contact'
    UpdateAssistedResponse:
      type: object
      properties:
        Assisted:
          type: object
          properties:
            EmployeeOrBusinessUnitReference:
              $ref: '#/components/schemas/object'
            CustomerContactReference:
              $ref: '#/components/schemas/object'
        Interaction:
          type: object
          properties:
            CustomerSessionDialogueReference:
              $ref: '#/components/schemas/object'
      description: 'Output: UpBQ Update details about an assisted contact'
    RetrieveAssistedResponse:
      type: object
      properties:
        Assisted:
          type: object
          properties:
            EmployeeOrBusinessUnitReference:
              $ref: '#/components/schemas/object'
            CustomerContactReference:
              $ref: '#/components/schemas/object'
        Interaction:
          type: object
          properties:
            CustomerSessionDialogueReference:
              $ref: '#/components/schemas/object'
      description: 'Output: ReBQ Retrieve details about an assisted contact'
    InitiateAutomatedResponse:
      type: object
      properties:
        Assisted:
          type: object
          properties:
            CustomerContactReference:
              $ref: '#/components/schemas/object'
        Automated:
          type: object
          properties:
            BusinessUnitReference:
              $ref: '#/components/schemas/object'
        Interaction:
          type: object
          properties:
            CustomerSessionDialogueReference:
              $ref: '#/components/schemas/object'
      description: 'Output: InBQ Initiate an automated contact'
    UpdateAutomatedRequest:
      type: object
      properties:
        Assisted:
          type: object
          properties:
            CustomerContactReference:
              $ref: '#/components/schemas/object'
        Automated:
          type: object
          properties:
            BusinessUnitReference:
              $ref: '#/components/schemas/object'
        Interaction:
          type: object
          properties:
            CustomerSessionDialogueReference:
              $ref: '#/components/schemas/object'
      description: 'Input: UpBQ Update details about an automated contact'
    UpdateAutomatedResponse:
      type: object
      properties:
        Assisted:
          type: object
          properties:
            CustomerContactReference:
              $ref: '#/components/schemas/object'
        Automated:
          type: object
          properties:
            BusinessUnitReference:
              $ref: '#/components/schemas/object'
        Interaction:
          type: object
          properties:
            CustomerSessionDialogueReference:
              $ref: '#/components/schemas/object'
      description: 'Output: UpBQ Update details about an automated contact'
    RetrieveAutomatedResponse:
      type: object
      properties:
        Assisted:
          type: object
          properties:
            CustomerContactReference:
              $ref: '#/components/schemas/object'
        Automated:
          type: object
          properties:
            BusinessUnitReference:
              $ref: '#/components/schemas/object'
        Interaction:
          type: object
          properties:
            CustomerSessionDialogueReference:
              $ref: '#/components/schemas/object'
      description: 'Output: ReBQ Retrieve details about an automated contact'
    RetrieveInteractionResponse:
      type: object
      properties:
        Assisted:
          type: object
          properties:
            CustomerContactReference:
              $ref: '#/components/schemas/object'
        Interaction:
          type: object
          properties:
            CustomerSessionDialogueReference:
              $ref: '#/components/schemas/object'
      description: 'Output: ReBQ Retrieve details about a customer interaction session'
    ExecuteInventoryRequest:
      type: object
      properties:
        Inventory:
          type: object
          properties:
            ServicingInventoryType:
              type: string
              description: 'The type of non-cash inventory (e.g. documents/forms, brochures)'
              format: string
      description: 'Input: ExBQ Execute transactions against the inventory position'
    ExecuteInventoryResponse:
      type: object
      properties:
        Inventory:
          type: object
          properties:
            ServicingPositionInventoryRecord:
              type: string
              description: Used to track inventory holdings at the position
              format: string
            ServicingInventoryTransactionRecord:
              type: string
              description: Details of the transfer of inventory (e.g. documents issued)
              format: string
      description: 'Output: ExBQ Execute transactions against the inventory position'
    RetrieveInventoryResponse:
      type: object
      properties:
        Inventory:
          type: object
          properties:
            ServicingInventoryType:
              type: string
              description: 'The type of non-cash inventory (e.g. documents/forms, brochures)'
              format: string
            ServicingPositionInventoryRecord:
              type: string
              description: Used to track inventory holdings at the position
              format: string
            ServicingInventoryTransactionRecord:
              type: string
              description: Details of the transfer of inventory (e.g. documents issued)
              format: string
      description: 'Output: ReBQ Retrieve details about inventory holdings and usage'
    ExecuteCashPositionRequest:
      type: object
      properties:
        CashPosition:
          type: object
          properties:
            ServicingCurrency:
              $ref: '#/components/schemas/currencycode'
            ProductInstanceReference:
              $ref: '#/components/schemas/object'
      description: 'Input: ExBQ Execute transactions against the cash position'
    ExecuteCashPositionResponse:
      type: object
      properties:
        CashPosition:
          type: object
          properties:
            ServicingCurrency:
              $ref: '#/components/schemas/currencycode'
            ServicingCashHoldingRecord:
              type: string
              description: The current holding by currency/instrument
              format: string
            ServicingCashTransactionReference:
              $ref: '#/components/schemas/object'
            ServicingCashTransactionRecord:
              type: string
              description: Details of the cash transaction (e.g. cash deposited to customer account)
              format: string
            ProductInstanceReference:
              $ref: '#/components/schemas/object'
      description: 'Output: ExBQ Execute transactions against the cash position'
    RetrieveCashPositionResponse:
      type: object
      properties:
        CashPosition:
          type: object
          properties:
            ServicingCurrency:
              $ref: '#/components/schemas/currencycode'
            ServicingCashHoldingRecord:
              type: string
              description: The current holding by currency/instrument
              format: string
            ServicingCashTransactionReference:
              $ref: '#/components/schemas/object'
            ServicingCashTransactionRecord:
              type: string
              description: Details of the cash transaction (e.g. cash deposited to customer account)
              format: string
            ProductInstanceReference:
              $ref: '#/components/schemas/object'
      description: 'Output: ReBQ Retrieve details about the cash inventory'
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InitiatePointofServiceOperatingSessionResponse:
      description: InitiatePointofServiceOperatingSessionResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiatePointofServiceOperatingSessionResponse'
    UpdatePointofServiceOperatingSessionResponse:
      description: UpdatePointofServiceOperatingSessionResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdatePointofServiceOperatingSessionResponse'
    ExecutePointofServiceOperatingSessionResponse:
      description: ExecutePointofServiceOperatingSessionResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExecutePointofServiceOperatingSessionResponse'
    RequestPointofServiceOperatingSessionResponse:
      description: RequestPointofServiceOperatingSessionResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestPointofServiceOperatingSessionResponse'
    RetrievePointofServiceOperatingSessionResponse:
      description: RetrievePointofServiceOperatingSessionResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrievePointofServiceOperatingSessionResponse'
    InitiateAssistedRequest:
      description: InitiateAssistedRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateAssistedRequest'
    UpdateAssistedResponse:
      description: UpdateAssistedResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateAssistedResponse'
    RetrieveAssistedResponse:
      description: RetrieveAssistedResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveAssistedResponse'
    Automated:
      description: Automated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Automated'
    UpdateAutomatedResponse:
      description: UpdateAutomatedResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateAutomatedResponse'
    RetrieveAutomatedResponse:
      description: RetrieveAutomatedResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveAutomatedResponse'
    Interaction:
      description: Interaction
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Interaction'
    RetrieveInteractionResponse:
      description: RetrieveInteractionResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveInteractionResponse'
    Inventory:
      description: Inventory
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Inventory'
    ExecuteInventoryResponse:
      description: ExecuteInventoryResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExecuteInventoryResponse'
    RetrieveInventoryResponse:
      description: RetrieveInventoryResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveInventoryResponse'
    CashPosition:
      description: CashPosition
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CashPosition'
    ExecuteCashPositionResponse:
      description: ExecuteCashPositionResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExecuteCashPositionResponse'
    RetrieveCashPositionResponse:
      description: RetrieveCashPositionResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveCashPositionResponse'
  parameters:
    pointofserviceid:
      name: pointofserviceid
      in: path
      required: true
      style: simple
      schema:
        type: string
    assistedid:
      name: assistedid
      in: path
      required: true
      style: simple
      schema:
        type: string
    automatedid:
      name: automatedid
      in: path
      required: true
      style: simple
      schema:
        type: string
    interactionid:
      name: interactionid
      in: path
      required: true
      style: simple
      schema:
        type: string
    inventoryid:
      name: inventoryid
      in: path
      required: true
      style: simple
      schema:
        type: string
    cashpositionid:
      name: cashpositionid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    InitiatePointofServiceOperatingSessionRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiatePointofServiceOperatingSessionRequest'
      required: true
    UpdatePointofServiceOperatingSessionRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdatePointofServiceOperatingSessionRequest'
      required: true
    ExecutePointofServiceOperatingSessionRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExecutePointofServiceOperatingSessionRequest'
      required: true
    RequestPointofServiceOperatingSessionRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestPointofServiceOperatingSessionRequest'
      required: true
    InitiateAssistedRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateAssistedRequest'
      required: true
    UpdateAssistedRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateAssistedRequest'
      required: true
    Automated:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Automated'
      required: true
    UpdateAutomatedRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateAutomatedRequest'
      required: true
    Interaction:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Interaction'
      required: true
    Inventory:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Inventory'
      required: true
    ExecuteInventoryRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExecuteInventoryRequest'
      required: true
    CashPosition:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CashPosition'
      required: true
    ExecuteCashPositionRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExecuteCashPositionRequest'
      required: true