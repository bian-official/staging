openapi: 3.0.1
info:
  title: Sub Custodian Agreement
  description: This Service Domain establishes and maintains the terms governing sub custodian relationship
  contact:
    name: BIAN
    url: https://bian.org
  version: '10.1.0'
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/SubCustodianAgreement/10.1.0
paths:
  '/SubCustodianAgreement/{subcustodianagreementid}/Control':
    put:
      tags:
        - CR - SubCustodianAgreement
      summary: Control Sub Custodian Agreement
      description: Control Sub Custodian Agreement
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/subcustodianagreementid'
      requestBody:
        $ref: '#/components/requestBodies/SubCustodianAgreement'
      responses:
        '200':
          $ref: '#/components/responses/SubCustodianAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /SubCustodianAgreement/Evaluate:
    post:
      tags:
        - CR - SubCustodianAgreement
      summary: Evaluate Sub Custodian Agreement
      description: Evaluate Sub Custodian Agreement
      operationId: Evaluate
      requestBody:
        $ref: '#/components/requestBodies/SubCustodianAgreement'
      responses:
        '200':
          $ref: '#/components/responses/SubCustodianAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SubCustodianAgreement/{subcustodianagreementid}/Exchange':
    put:
      tags:
        - CR - SubCustodianAgreement
      summary: Exchange Sub Custodian Agreement
      description: Exchange Sub Custodian Agreement
      operationId: Exchange
      parameters:
        - $ref: '#/components/parameters/subcustodianagreementid'
      requestBody:
        $ref: '#/components/requestBodies/SubCustodianAgreement'
      responses:
        '200':
          $ref: '#/components/responses/SubCustodianAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SubCustodianAgreement/{subcustodianagreementid}/Grant':
    put:
      tags:
        - CR - SubCustodianAgreement
      summary: Grant Sub Custodian Agreement
      description: Grant Sub Custodian Agreement
      operationId: Grant
      parameters:
        - $ref: '#/components/parameters/subcustodianagreementid'
      requestBody:
        $ref: '#/components/requestBodies/SubCustodianAgreement'
      responses:
        '200':
          $ref: '#/components/responses/SubCustodianAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SubCustodianAgreement/{subcustodianagreementid}/Notify':
    get:
      tags:
        - CR - SubCustodianAgreement
      summary: Notify Sub Custodian Agreement
      description: Notify Sub Custodian Agreement
      operationId: Notify
      parameters:
        - $ref: '#/components/parameters/subcustodianagreementid'
      responses:
        '200':
          $ref: '#/components/responses/SubCustodianAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SubCustodianAgreement/{subcustodianagreementid}/Request':
    put:
      tags:
        - CR - SubCustodianAgreement
      summary: Request Sub Custodian Agreement
      description: Request Sub Custodian Agreement
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/subcustodianagreementid'
      requestBody:
        $ref: '#/components/requestBodies/SubCustodianAgreement'
      responses:
        '200':
          $ref: '#/components/responses/SubCustodianAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SubCustodianAgreement/{subcustodianagreementid}/Retrieve':
    get:
      tags:
        - CR - SubCustodianAgreement
      summary: Retrieve Sub Custodian Agreement
      description: Retrieve Sub Custodian Agreement
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/subcustodianagreementid'
      responses:
        '200':
          $ref: '#/components/responses/SubCustodianAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SubCustodianAgreement/{subcustodianagreementid}/Update':
    put:
      tags:
        - CR - SubCustodianAgreement
      summary: Update Sub Custodian Agreement
      description: Update Sub Custodian Agreement
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/subcustodianagreementid'
      requestBody:
        $ref: '#/components/requestBodies/SubCustodianAgreement'
      responses:
        '200':
          $ref: '#/components/responses/SubCustodianAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SubCustodianAgreement/{subcustodianagreementid}/LegalTerm/{legaltermid}/Evaluate':
    post:
      tags:
        - BQ - LegalTerm
      summary: Evaluate Legal Term
      description: Evaluate Legal Term
      operationId: EvaluateLegalTerm
      parameters:
        - $ref: '#/components/parameters/subcustodianagreementid'
        - $ref: '#/components/parameters/legaltermid'
      requestBody:
        $ref: '#/components/requestBodies/LegalTerm'
      responses:
        '200':
          $ref: '#/components/responses/LegalTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SubCustodianAgreement/{subcustodianagreementid}/PolicyTerm/{policytermid}/Evaluate':
    post:
      tags:
        - BQ - PolicyTerm
      summary: Evaluate Policy Term
      description: Evaluate Policy Term
      operationId: EvaluatePolicyTerm
      parameters:
        - $ref: '#/components/parameters/subcustodianagreementid'
        - $ref: '#/components/parameters/policytermid'
      requestBody:
        $ref: '#/components/requestBodies/PolicyTerm'
      responses:
        '200':
          $ref: '#/components/responses/PolicyTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SubCustodianAgreement/{subcustodianagreementid}/RegulatoryTerm/{regulatorytermid}/Evaluate':
    post:
      tags:
        - BQ - RegulatoryTerm
      summary: Evaluate Regulatory Term
      description: Evaluate Regulatory Term
      operationId: EvaluateRegulatoryTerm
      parameters:
        - $ref: '#/components/parameters/subcustodianagreementid'
        - $ref: '#/components/parameters/regulatorytermid'
      requestBody:
        $ref: '#/components/requestBodies/RegulatoryTerm'
      responses:
        '200':
          $ref: '#/components/responses/RegulatoryTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SubCustodianAgreement/{subcustodianagreementid}/LegalTerm/{legaltermid}/Exchange':
    put:
      tags:
        - BQ - LegalTerm
      summary: Exchange Legal Term
      description: Exchange Legal Term
      operationId: ExchangeLegalTerm
      parameters:
        - $ref: '#/components/parameters/subcustodianagreementid'
        - $ref: '#/components/parameters/legaltermid'
      requestBody:
        $ref: '#/components/requestBodies/LegalTerm'
      responses:
        '200':
          $ref: '#/components/responses/LegalTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SubCustodianAgreement/{subcustodianagreementid}/PolicyTerm/{policytermid}/Exchange':
    put:
      tags:
        - BQ - PolicyTerm
      summary: Exchange Policy Term
      description: Exchange Policy Term
      operationId: ExchangePolicyTerm
      parameters:
        - $ref: '#/components/parameters/subcustodianagreementid'
        - $ref: '#/components/parameters/policytermid'
      requestBody:
        $ref: '#/components/requestBodies/PolicyTerm'
      responses:
        '200':
          $ref: '#/components/responses/PolicyTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SubCustodianAgreement/{subcustodianagreementid}/RegulatoryTerm/{regulatorytermid}/Exchange':
    put:
      tags:
        - BQ - RegulatoryTerm
      summary: Exchange Regulatory Term
      description: Exchange Regulatory Term
      operationId: ExchangeRegulatoryTerm
      parameters:
        - $ref: '#/components/parameters/subcustodianagreementid'
        - $ref: '#/components/parameters/regulatorytermid'
      requestBody:
        $ref: '#/components/requestBodies/RegulatoryTerm'
      responses:
        '200':
          $ref: '#/components/responses/RegulatoryTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SubCustodianAgreement/{subcustodianagreementid}/LegalTerm/{legaltermid}/Notify':
    get:
      tags:
        - BQ - LegalTerm
      summary: Notify Legal Term
      description: Notify Legal Term
      operationId: NotifyLegalTerm
      parameters:
        - $ref: '#/components/parameters/subcustodianagreementid'
        - $ref: '#/components/parameters/legaltermid'
      responses:
        '200':
          $ref: '#/components/responses/LegalTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SubCustodianAgreement/{subcustodianagreementid}/PolicyTerm/{policytermid}/Notify':
    get:
      tags:
        - BQ - PolicyTerm
      summary: Notify Policy Term
      description: Notify Policy Term
      operationId: NotifyPolicyTerm
      parameters:
        - $ref: '#/components/parameters/subcustodianagreementid'
        - $ref: '#/components/parameters/policytermid'
      responses:
        '200':
          $ref: '#/components/responses/PolicyTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SubCustodianAgreement/{subcustodianagreementid}/RegulatoryTerm/{regulatorytermid}/Notify':
    get:
      tags:
        - BQ - RegulatoryTerm
      summary: Notify Regulatory Term
      description: Notify Regulatory Term
      operationId: NotifyRegulatoryTerm
      parameters:
        - $ref: '#/components/parameters/subcustodianagreementid'
        - $ref: '#/components/parameters/regulatorytermid'
      responses:
        '200':
          $ref: '#/components/responses/RegulatoryTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SubCustodianAgreement/{subcustodianagreementid}/LegalTerm/{legaltermid}/Request':
    put:
      tags:
        - BQ - LegalTerm
      summary: Request Legal Term
      description: Request Legal Term
      operationId: RequestLegalTerm
      parameters:
        - $ref: '#/components/parameters/subcustodianagreementid'
        - $ref: '#/components/parameters/legaltermid'
      requestBody:
        $ref: '#/components/requestBodies/LegalTerm'
      responses:
        '200':
          $ref: '#/components/responses/LegalTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SubCustodianAgreement/{subcustodianagreementid}/PolicyTerm/{policytermid}/Request':
    put:
      tags:
        - BQ - PolicyTerm
      summary: Request Policy Term
      description: Request Policy Term
      operationId: RequestPolicyTerm
      parameters:
        - $ref: '#/components/parameters/subcustodianagreementid'
        - $ref: '#/components/parameters/policytermid'
      requestBody:
        $ref: '#/components/requestBodies/PolicyTerm'
      responses:
        '200':
          $ref: '#/components/responses/PolicyTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SubCustodianAgreement/{subcustodianagreementid}/RegulatoryTerm/{regulatorytermid}/Request':
    put:
      tags:
        - BQ - RegulatoryTerm
      summary: Request Regulatory Term
      description: Request Regulatory Term
      operationId: RequestRegulatoryTerm
      parameters:
        - $ref: '#/components/parameters/subcustodianagreementid'
        - $ref: '#/components/parameters/regulatorytermid'
      requestBody:
        $ref: '#/components/requestBodies/RegulatoryTerm'
      responses:
        '200':
          $ref: '#/components/responses/RegulatoryTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SubCustodianAgreement/{subcustodianagreementid}/LegalTerm/{legaltermid}/Retrieve':
    get:
      tags:
        - BQ - LegalTerm
      summary: Retrieve Legal Term
      description: Retrieve Legal Term
      operationId: RetrieveLegalTerm
      parameters:
        - $ref: '#/components/parameters/subcustodianagreementid'
        - $ref: '#/components/parameters/legaltermid'
      responses:
        '200':
          $ref: '#/components/responses/LegalTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SubCustodianAgreement/{subcustodianagreementid}/PolicyTerm/{policytermid}/Retrieve':
    get:
      tags:
        - BQ - PolicyTerm
      summary: Retrieve Policy Term
      description: Retrieve Policy Term
      operationId: RetrievePolicyTerm
      parameters:
        - $ref: '#/components/parameters/subcustodianagreementid'
        - $ref: '#/components/parameters/policytermid'
      responses:
        '200':
          $ref: '#/components/responses/PolicyTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SubCustodianAgreement/{subcustodianagreementid}/RegulatoryTerm/{regulatorytermid}/Retrieve':
    get:
      tags:
        - BQ - RegulatoryTerm
      summary: Retrieve Regulatory Term
      description: Retrieve Regulatory Term
      operationId: RetrieveRegulatoryTerm
      parameters:
        - $ref: '#/components/parameters/subcustodianagreementid'
        - $ref: '#/components/parameters/regulatorytermid'
      responses:
        '200':
          $ref: '#/components/responses/RegulatoryTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SubCustodianAgreement/{subcustodianagreementid}/LegalTerm/{legaltermid}/Update':
    put:
      tags:
        - BQ - LegalTerm
      summary: Update Legal Term
      description: Update Legal Term
      operationId: UpdateLegalTerm
      parameters:
        - $ref: '#/components/parameters/subcustodianagreementid'
        - $ref: '#/components/parameters/legaltermid'
      requestBody:
        $ref: '#/components/requestBodies/LegalTerm'
      responses:
        '200':
          $ref: '#/components/responses/LegalTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SubCustodianAgreement/{subcustodianagreementid}/PolicyTerm/{policytermid}/Update':
    put:
      tags:
        - BQ - PolicyTerm
      summary: Update Policy Term
      description: Update Policy Term
      operationId: UpdatePolicyTerm
      parameters:
        - $ref: '#/components/parameters/subcustodianagreementid'
        - $ref: '#/components/parameters/policytermid'
      requestBody:
        $ref: '#/components/requestBodies/PolicyTerm'
      responses:
        '200':
          $ref: '#/components/responses/PolicyTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SubCustodianAgreement/{subcustodianagreementid}/RegulatoryTerm/{regulatorytermid}/Update':
    put:
      tags:
        - BQ - RegulatoryTerm
      summary: Update Regulatory Term
      description: Update Regulatory Term
      operationId: UpdateRegulatoryTerm
      parameters:
        - $ref: '#/components/parameters/subcustodianagreementid'
        - $ref: '#/components/parameters/regulatorytermid'
      requestBody:
        $ref: '#/components/requestBodies/RegulatoryTerm'
      responses:
        '200':
          $ref: '#/components/responses/RegulatoryTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    condition:
      type: object
      properties:
        Condition:
          type: string
          description: "Condition is a premise upon which the fulfillment of an agreement depends \n\nGeneral and special arrangements, provisions, requirements, rules, specifications, and standards that form an integral part of an agreement or contract.\n\nRead more: http://www.businessdictionary.com/definition/terms-and-conditions.html\n\n"
          format: class
      description: The required status/situation for the terms to apply and or tasks that need to be completed prior to the initiation of the workstep
    schedule:
      type: object
      properties:
        Schedule:
          type: string
          description: "Defined sequence of planned tasks/actions or a timetable of available services\n\nA schedule is a time based series of something"
          format: datatype
      description: Any timing/duration considerations applying to the Regulatory Term
    attribute:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: ''
    businessservice:
      type: object
      properties:
        BusinessServiceName:
          $ref: '#/components/schemas/attribute'
        BusinessServiceType:
          $ref: '#/components/schemas/attribute'
        BusinessServiceDescription:
          $ref: '#/components/schemas/attribute'
      description: The Regulatory Term specific Business Service
    agreement:
      type: object
      properties:
        AgreementSignedDate:
          $ref: '#/components/schemas/attribute'
        AgreementType:
          $ref: '#/components/schemas/attribute'
        AgreementValidityPeriod:
          $ref: '#/components/schemas/attribute'
        AgreementVersion:
          $ref: '#/components/schemas/attribute'
        AgreementStatus:
          $ref: '#/components/schemas/attribute'
        AgreementSubjectMatter:
          $ref: '#/components/schemas/attribute'
        AgreementIdentification:
          $ref: '#/components/schemas/attribute'
        AgreementDate:
          $ref: '#/components/schemas/attribute'
      description: Reference to Regulatory Term
    arrangement:
      type: object
      properties:
        ArrangementAction:
          $ref: '#/components/schemas/attribute'
        ArrangementStartDate:
          $ref: '#/components/schemas/attribute'
        ArrangementEndDate:
          $ref: '#/components/schemas/attribute'
        ArrangementStatus:
          $ref: '#/components/schemas/attribute'
        ArrangementSubjectMatter:
          $ref: '#/components/schemas/attribute'
      description: Reference to Regulatory Term
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: The type of Regulatory Term
    object:
      type: object
      properties:
        Object:
          type: string
          description: ''
          format: datatype
      description: Reference to any regulatory requirements
    RegulatoryTerm:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        SubCustodianAgreementReference:
          $ref: '#/components/schemas/agreement'
        RegulatoryTermReference:
          $ref: '#/components/schemas/arrangement'
        RegulatoryTermType:
          $ref: '#/components/schemas/text'
        RegulatoryAuthority:
          type: string
          description: The applicable regulatory authority
          format: string
        ApplicableRegulationReference:
          $ref: '#/components/schemas/object'
        ApplicableRegulationInterpretation:
          type: string
          description: Explanation or interpretation of the regulation as applied
          format: string
      description: Covers the regulatory considerations of the agreement
    LegalTerm:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        SubCustodianAgreementReference:
          $ref: '#/components/schemas/agreement'
        LegalTermReference:
          $ref: '#/components/schemas/arrangement'
        LegalTermType:
          $ref: '#/components/schemas/text'
        Jurisdiction:
          type: string
          description: The legal jurisdiction
          format: string
        ApplicableLawReference:
          $ref: '#/components/schemas/object'
        ApplicableLawInterpretation:
          type: string
          description: Explanation or interpretation of the law as applied
          format: string
      description: Covers the regulatory considerations of the agreement
    PolicyTerm:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        SubCustodianAgreementReference:
          $ref: '#/components/schemas/agreement'
        PolicyTermReference:
          $ref: '#/components/schemas/arrangement'
        PolicyTermType:
          $ref: '#/components/schemas/text'
        BankPolicy-RuleType:
          type: string
          description: The type of bank policy referenced (e.g. staff certification)
          format: string
        ApplicableBankPolicy-RuleReference:
          $ref: '#/components/schemas/object'
        ApplicableBankPolicy-RuleInterpretation:
          type: string
          description: Explanation or interpretation of the policy or rule as applied
          format: string
      description: Covers the regulatory considerations of the agreement
    workproduct:
      type: object
      properties:
        Workproduct:
          type: string
          description: 'Contact records, working papers, documents and activity logs produced during the execution of a work task'
          format: datatype
      description: ''
    workproducttypevalues:
      enum:
        - Document
        - WorkingPaper
        - ActivityLog
        - Form
        - File
        - MeetingSchedule
        - MeetingMinute
      type: string
      description: ">\n* `Document` - \n* `WorkingPaper` - \n* `ActivityLog` - \n* `Form` - \n* `File` - File of consolidated notes, evaluations and recommendations for the work task\n* `MeetingSchedule` - \n* `MeetingMinute` - \n"
    SubCustodianAgreementOutcome:
      type: object
      properties:
        SubCustodianAgreementAgreement:
          $ref: '#/components/schemas/agreement'
        SubCustodianAgreementWorkProduct:
          $ref: '#/components/schemas/workproduct'
        SubCustodianAgreementWorkProductType:
          $ref: '#/components/schemas/workproducttypevalues'
      description: Covers the regulatory considerations of the agreement
    feature:
      type: object
      properties:
        FeatureType:
          $ref: '#/components/schemas/attribute'
      description: 'A selected optional feature in a product, identified by Parameter Type'
    agreementtypevalues:
      enum:
        - CustomerAgreement
        - SupplierAgreement
        - ProductBrokerAgreement
        - ProductSaleAgreement
        - FiduciaryAgreement
        - CommissionSaleAgreement
        - ServicingMandateAgreement
        - ChannelAccessAgreement
      type: string
      description: ">\n* `CustomerAgreement` - \n* `SupplierAgreement` - \n* `ProductBrokerAgreement` - \n* `ProductSaleAgreement` - \n* `FiduciaryAgreement` - \n* `CommissionSaleAgreement` - \n* `ServicingMandateAgreement` - \n* `ChannelAccessAgreement` - \n"
    instruction:
      type: object
      properties:
        InstructionDueDate:
          $ref: '#/components/schemas/attribute'
        InstructionStatus:
          $ref: '#/components/schemas/attribute'
        InstructionIdentifier:
          $ref: '#/components/schemas/attribute'
        InstructionType:
          $ref: '#/components/schemas/attribute'
        InstructionResult:
          $ref: '#/components/schemas/attribute'
        InstructionDescription:
          $ref: '#/components/schemas/attribute'
        InstructionLog:
          $ref: '#/components/schemas/attribute'
        InstructionPurpose:
          $ref: '#/components/schemas/attribute'
      description: Request to discharge Sub Custodian Agreement
    agreementlifecyclestatus:
      type: object
      properties:
        Agreementlifecyclestatus:
          type: string
          description: 'Data type that specifies the LifecycleStatus of agreement (e.g., potential, offered, confirmed, completed, signed, terminated).'
          format: datatype
      description: The status of Sub Custodian Agreement
    involvedparty:
      type: object
      properties:
        Involvedparty:
          type: string
          description: ''
          format: datatype
      description: Party who is involved in Sub Custodian Agreement
    ruleset:
      type: object
      properties:
        RuleSetDefinition:
          $ref: '#/components/schemas/attribute'
        RuleSetInterpretation:
          $ref: '#/components/schemas/attribute'
        RuleSetType:
          $ref: '#/components/schemas/attribute'
        RuleSetName:
          $ref: '#/components/schemas/attribute'
        RuleSetIdentification:
          $ref: '#/components/schemas/attribute'
      description: Reference to the regulation which is defined in Sub Custodian Agreement
    rulesettype:
      type: object
      properties:
        Rulesettype:
          type: string
          description: Data type specifies the classification of RuleSet
          format: datatype
      description: A Classification that distinguishes between the regularity domains of Sub Custodian Agreement
    jurisdiction:
      type: object
      properties:
        Jurisdiction:
          type: string
          description: Jurisdiction that will be assigned in case of legal dispute.
          format: class
      description: Reference to the jurisdiction that is assigned to Sub Custodian Agreement in case of legal dispute.
    account:
      type: object
      properties:
        AccountStatus:
          $ref: '#/components/schemas/attribute'
        AccountIdentification:
          $ref: '#/components/schemas/attribute'
        AccountDate:
          $ref: '#/components/schemas/attribute'
        AccountType:
          $ref: '#/components/schemas/attribute'
        AccountPurpose:
          $ref: '#/components/schemas/attribute'
        AccountBalance:
          $ref: '#/components/schemas/attribute'
        AccountCurrency:
          $ref: '#/components/schemas/attribute'
        AccountDescription:
          $ref: '#/components/schemas/attribute'
      description: "Reference to the account which is linked to Sub Custodian Agreement\n\nA characteristic of agreement which refers to its involved account to specify the account that will be used to register for the transactions in position keeping management."
    bankingproduct:
      type: object
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/attribute'
        ProductType:
          $ref: '#/components/schemas/attribute'
        ProductLifecycleStatus:
          $ref: '#/components/schemas/attribute'
        ProductPriority:
          $ref: '#/components/schemas/attribute'
        ProductDescription:
          $ref: '#/components/schemas/attribute'
        ProductVersion:
          $ref: '#/components/schemas/attribute'
      description: "Reference to the product which is linked to Sub Custodian Agreement\n\nComment: \nA characteristic of agreement which refers to its related products that are sold by agreement."
    calendar:
      type: object
      properties:
        Calendar:
          type: string
          description: 'A series of dates/times of specific types of actions/events associated with the fulfillment of some form of arrangement - planned and actual. '
          format: datatype
      description: The calendar of Sub Custodian Agreement
    SubCustodianAgreement:
      type: object
      properties:
        SubCustodianAgreementParameterType:
          $ref: '#/components/schemas/text'
        SubCustodianAgreementSelectedOption:
          $ref: '#/components/schemas/feature'
        SubCustodianAgreementType:
          $ref: '#/components/schemas/agreementtypevalues'
        SubCustodianAgreementReference:
          $ref: '#/components/schemas/agreement'
        SubCustodianAgreementDischargeRequest:
          $ref: '#/components/schemas/instruction'
        SubCustodianAgreementDischargeSchedule:
          $ref: '#/components/schemas/schedule'
        SubCustodianAgreementStatus:
          $ref: '#/components/schemas/agreementlifecyclestatus'
        SubCustodianAgreementAssociatedParty:
          $ref: '#/components/schemas/involvedparty'
        SubCustodianAgreementCustomerReference:
          $ref: '#/components/schemas/involvedparty'
        SubCustodianAgreementObligation:
          $ref: '#/components/schemas/arrangement'
        SubCustodianAgreementEntitlement:
          $ref: '#/components/schemas/arrangement'
        SubCustodianAgreementRegulationReference:
          $ref: '#/components/schemas/ruleset'
        SubCustodianAgreementRegulationType:
          $ref: '#/components/schemas/rulesettype'
        SubCustodianAgreementJurisdiction:
          $ref: '#/components/schemas/jurisdiction'
        SubCustodianAgreementAccountReference:
          $ref: '#/components/schemas/account'
        SubCustodianAgreementSubjectMatter:
          $ref: '#/components/schemas/object'
        SubCustodianAgreementProductReference:
          $ref: '#/components/schemas/bankingproduct'
        SubCustodianAgreementCalendarReference:
          $ref: '#/components/schemas/calendar'
        SubCustodianAgreementAssociatedAgreementReference:
          $ref: '#/components/schemas/agreement'
      description: "Maintain the terms and conditions that apply to a commercial relationship within Sub Custodian Agreement.\n\n"
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    SubCustodianAgreement:
      description: SubCustodianAgreement
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SubCustodianAgreement'
    LegalTerm:
      description: LegalTerm
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LegalTerm'
    PolicyTerm:
      description: PolicyTerm
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PolicyTerm'
    RegulatoryTerm:
      description: RegulatoryTerm
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RegulatoryTerm'
  parameters:
    subcustodianagreementid:
      name: subcustodianagreementid
      in: path
      required: true
      style: simple
      schema:
        type: string
    legaltermid:
      name: legaltermid
      in: path
      required: true
      style: simple
      schema:
        type: string
    policytermid:
      name: policytermid
      in: path
      required: true
      style: simple
      schema:
        type: string
    regulatorytermid:
      name: regulatorytermid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    SubCustodianAgreement:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SubCustodianAgreement'
      required: true
    LegalTerm:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LegalTerm'
      required: true
    PolicyTerm:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PolicyTerm'
      required: true
    RegulatoryTerm:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RegulatoryTerm'
      required: true