openapi: 3.0.1
info:
  title: Program Trading
  description: This Service Domain supports a program trading capability where the trading decisions are made based on predefined/programmed rules and policies. Manual oversight and monitoring capabilities are supported as appropriate
  contact:
    name: BIAN
    url: https://bian.org
  version: '10.1.0'
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/ProgramTrading/10.1.0
paths:
  '/ProgramTrading/{programtradingid}/Control':
    put:
      tags:
        - CR - ProgramTradingOperatingSession
      summary: Control Program Trading Operating Session
      description: Control Program Trading Operating Session
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/programtradingid'
      requestBody:
        $ref: '#/components/requestBodies/ProgramTradingOperatingSession'
      responses:
        '200':
          $ref: '#/components/responses/ProgramTradingOperatingSession'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProgramTrading/{programtradingid}/Exchange':
    put:
      tags:
        - CR - ProgramTradingOperatingSession
      summary: Exchange Program Trading Operating Session
      description: Exchange Program Trading Operating Session
      operationId: Exchange
      parameters:
        - $ref: '#/components/parameters/programtradingid'
      requestBody:
        $ref: '#/components/requestBodies/ProgramTradingOperatingSession'
      responses:
        '200':
          $ref: '#/components/responses/ProgramTradingOperatingSession'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProgramTrading/{programtradingid}/Execute':
    put:
      tags:
        - CR - ProgramTradingOperatingSession
      summary: Execute Program Trading Operating Session
      description: Execute Program Trading Operating Session
      operationId: Execute
      parameters:
        - $ref: '#/components/parameters/programtradingid'
      requestBody:
        $ref: '#/components/requestBodies/ProgramTradingOperatingSession'
      responses:
        '200':
          $ref: '#/components/responses/ProgramTradingOperatingSession'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /ProgramTrading/Initiate:
    post:
      tags:
        - CR - ProgramTradingOperatingSession
      summary: Initiate Program Trading Operating Session
      description: Initiate Program Trading Operating Session
      operationId: Initiate
      requestBody:
        $ref: '#/components/requestBodies/ProgramTradingOperatingSession'
      responses:
        '200':
          $ref: '#/components/responses/ProgramTradingOperatingSession'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProgramTrading/{programtradingid}/Notify':
    get:
      tags:
        - CR - ProgramTradingOperatingSession
      summary: Notify Program Trading Operating Session
      description: Notify Program Trading Operating Session
      operationId: Notify
      parameters:
        - $ref: '#/components/parameters/programtradingid'
      responses:
        '200':
          $ref: '#/components/responses/ProgramTradingOperatingSession'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProgramTrading/{programtradingid}/Request':
    put:
      tags:
        - CR - ProgramTradingOperatingSession
      summary: Request Program Trading Operating Session
      description: Request Program Trading Operating Session
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/programtradingid'
      requestBody:
        $ref: '#/components/requestBodies/ProgramTradingOperatingSession'
      responses:
        '200':
          $ref: '#/components/responses/ProgramTradingOperatingSession'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProgramTrading/{programtradingid}/Retrieve':
    get:
      tags:
        - CR - ProgramTradingOperatingSession
      summary: Retrieve Program Trading Operating Session
      description: Retrieve Program Trading Operating Session
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/programtradingid'
      responses:
        '200':
          $ref: '#/components/responses/ProgramTradingOperatingSession'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProgramTrading/{programtradingid}/Update':
    put:
      tags:
        - CR - ProgramTradingOperatingSession
      summary: Update Program Trading Operating Session
      description: Update Program Trading Operating Session
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/programtradingid'
      requestBody:
        $ref: '#/components/requestBodies/ProgramTradingOperatingSession'
      responses:
        '200':
          $ref: '#/components/responses/ProgramTradingOperatingSession'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProgramTrading/{programtradingid}/ProgramTradeExecutionFunction/{programtradeexecutionfunctionid}/Exchange':
    put:
      tags:
        - BQ - ProgramTradeExecutionFunction
      summary: Exchange Program Trade Execution Function
      description: Exchange Program Trade Execution Function
      operationId: ExchangeProgramTradeExecutionFunction
      parameters:
        - $ref: '#/components/parameters/programtradingid'
        - $ref: '#/components/parameters/programtradeexecutionfunctionid'
      requestBody:
        $ref: '#/components/requestBodies/ProgramTradeExecutionFunction'
      responses:
        '200':
          $ref: '#/components/responses/ProgramTradeExecutionFunction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProgramTrading/{programtradingid}/ProgramTradedPortfolioAlgorithmFunction/{programtradedportfolioalgorithmfunctionid}/Exchange':
    put:
      tags:
        - BQ - ProgramTradedPortfolioAlgorithmFunction
      summary: Exchange Program Traded Portfolio Algorithm Function
      description: Exchange Program Traded Portfolio Algorithm Function
      operationId: ExchangeProgramTradedPortfolioAlgorithmFunction
      parameters:
        - $ref: '#/components/parameters/programtradingid'
        - $ref: '#/components/parameters/programtradedportfolioalgorithmfunctionid'
      requestBody:
        $ref: '#/components/requestBodies/ProgramTradedPortfolioAlgorithmFunction'
      responses:
        '200':
          $ref: '#/components/responses/ProgramTradedPortfolioAlgorithmFunction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProgramTrading/{programtradingid}/ProgramTradedPortfolioMaintenanceFunction/{programtradedportfoliomaintenancefunctionid}/Exchange':
    put:
      tags:
        - BQ - ProgramTradedPortfolioMaintenanceFunction
      summary: Exchange Program Traded Portfolio Maintenance Function
      description: Exchange Program Traded Portfolio Maintenance Function
      operationId: ExchangeProgramTradedPortfolioMaintenanceFunction
      parameters:
        - $ref: '#/components/parameters/programtradingid'
        - $ref: '#/components/parameters/programtradedportfoliomaintenancefunctionid'
      requestBody:
        $ref: '#/components/requestBodies/ProgramTradedPortfolioMaintenanceFunction'
      responses:
        '200':
          $ref: '#/components/responses/ProgramTradedPortfolioMaintenanceFunction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProgramTrading/{programtradingid}/ProgramTradeExecutionFunction/{programtradeexecutionfunctionid}/Execute':
    put:
      tags:
        - BQ - ProgramTradeExecutionFunction
      summary: Execute Program Trade Execution Function
      description: Execute Program Trade Execution Function
      operationId: ExecuteProgramTradeExecutionFunction
      parameters:
        - $ref: '#/components/parameters/programtradingid'
        - $ref: '#/components/parameters/programtradeexecutionfunctionid'
      requestBody:
        $ref: '#/components/requestBodies/ProgramTradeExecutionFunction'
      responses:
        '200':
          $ref: '#/components/responses/ProgramTradeExecutionFunction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProgramTrading/{programtradingid}/ProgramTradedPortfolioAlgorithmFunction/{programtradedportfolioalgorithmfunctionid}/Execute':
    put:
      tags:
        - BQ - ProgramTradedPortfolioAlgorithmFunction
      summary: Execute Program Traded Portfolio Algorithm Function
      description: Execute Program Traded Portfolio Algorithm Function
      operationId: ExecuteProgramTradedPortfolioAlgorithmFunction
      parameters:
        - $ref: '#/components/parameters/programtradingid'
        - $ref: '#/components/parameters/programtradedportfolioalgorithmfunctionid'
      requestBody:
        $ref: '#/components/requestBodies/ProgramTradedPortfolioAlgorithmFunction'
      responses:
        '200':
          $ref: '#/components/responses/ProgramTradedPortfolioAlgorithmFunction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProgramTrading/{programtradingid}/ProgramTradedPortfolioMaintenanceFunction/{programtradedportfoliomaintenancefunctionid}/Execute':
    put:
      tags:
        - BQ - ProgramTradedPortfolioMaintenanceFunction
      summary: Execute Program Traded Portfolio Maintenance Function
      description: Execute Program Traded Portfolio Maintenance Function
      operationId: ExecuteProgramTradedPortfolioMaintenanceFunction
      parameters:
        - $ref: '#/components/parameters/programtradingid'
        - $ref: '#/components/parameters/programtradedportfoliomaintenancefunctionid'
      requestBody:
        $ref: '#/components/requestBodies/ProgramTradedPortfolioMaintenanceFunction'
      responses:
        '200':
          $ref: '#/components/responses/ProgramTradedPortfolioMaintenanceFunction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProgramTrading/{programtradingid}/ProgramTradeExecutionFunction/{programtradeexecutionfunctionid}/Initiate':
    post:
      tags:
        - BQ - ProgramTradeExecutionFunction
      summary: Initiate Program Trade Execution Function
      description: Initiate Program Trade Execution Function
      operationId: InitiateProgramTradeExecutionFunction
      parameters:
        - $ref: '#/components/parameters/programtradingid'
        - $ref: '#/components/parameters/programtradeexecutionfunctionid'
      requestBody:
        $ref: '#/components/requestBodies/ProgramTradeExecutionFunction'
      responses:
        '200':
          $ref: '#/components/responses/ProgramTradeExecutionFunction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProgramTrading/{programtradingid}/ProgramTradedPortfolioAlgorithmFunction/{programtradedportfolioalgorithmfunctionid}/Initiate':
    post:
      tags:
        - BQ - ProgramTradedPortfolioAlgorithmFunction
      summary: Initiate Program Traded Portfolio Algorithm Function
      description: Initiate Program Traded Portfolio Algorithm Function
      operationId: InitiateProgramTradedPortfolioAlgorithmFunction
      parameters:
        - $ref: '#/components/parameters/programtradingid'
        - $ref: '#/components/parameters/programtradedportfolioalgorithmfunctionid'
      requestBody:
        $ref: '#/components/requestBodies/ProgramTradedPortfolioAlgorithmFunction'
      responses:
        '200':
          $ref: '#/components/responses/ProgramTradedPortfolioAlgorithmFunction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProgramTrading/{programtradingid}/ProgramTradedPortfolioMaintenanceFunction/{programtradedportfoliomaintenancefunctionid}/Initiate':
    post:
      tags:
        - BQ - ProgramTradedPortfolioMaintenanceFunction
      summary: Initiate Program Traded Portfolio Maintenance Function
      description: Initiate Program Traded Portfolio Maintenance Function
      operationId: InitiateProgramTradedPortfolioMaintenanceFunction
      parameters:
        - $ref: '#/components/parameters/programtradingid'
        - $ref: '#/components/parameters/programtradedportfoliomaintenancefunctionid'
      requestBody:
        $ref: '#/components/requestBodies/ProgramTradedPortfolioMaintenanceFunction'
      responses:
        '200':
          $ref: '#/components/responses/ProgramTradedPortfolioMaintenanceFunction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProgramTrading/{programtradingid}/ProgramTradeExecutionFunction/{programtradeexecutionfunctionid}/Notify':
    get:
      tags:
        - BQ - ProgramTradeExecutionFunction
      summary: Notify Program Trade Execution Function
      description: Notify Program Trade Execution Function
      operationId: NotifyProgramTradeExecutionFunction
      parameters:
        - $ref: '#/components/parameters/programtradingid'
        - $ref: '#/components/parameters/programtradeexecutionfunctionid'
      responses:
        '200':
          $ref: '#/components/responses/ProgramTradeExecutionFunction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProgramTrading/{programtradingid}/ProgramTradedPortfolioAlgorithmFunction/{programtradedportfolioalgorithmfunctionid}/Notify':
    get:
      tags:
        - BQ - ProgramTradedPortfolioAlgorithmFunction
      summary: Notify Program Traded Portfolio Algorithm Function
      description: Notify Program Traded Portfolio Algorithm Function
      operationId: NotifyProgramTradedPortfolioAlgorithmFunction
      parameters:
        - $ref: '#/components/parameters/programtradingid'
        - $ref: '#/components/parameters/programtradedportfolioalgorithmfunctionid'
      responses:
        '200':
          $ref: '#/components/responses/ProgramTradedPortfolioAlgorithmFunction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProgramTrading/{programtradingid}/ProgramTradedPortfolioMaintenanceFunction/{programtradedportfoliomaintenancefunctionid}/Notify':
    get:
      tags:
        - BQ - ProgramTradedPortfolioMaintenanceFunction
      summary: Notify Program Traded Portfolio Maintenance Function
      description: Notify Program Traded Portfolio Maintenance Function
      operationId: NotifyProgramTradedPortfolioMaintenanceFunction
      parameters:
        - $ref: '#/components/parameters/programtradingid'
        - $ref: '#/components/parameters/programtradedportfoliomaintenancefunctionid'
      responses:
        '200':
          $ref: '#/components/responses/ProgramTradedPortfolioMaintenanceFunction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProgramTrading/{programtradingid}/ProgramTradeExecutionFunction/{programtradeexecutionfunctionid}/Request':
    put:
      tags:
        - BQ - ProgramTradeExecutionFunction
      summary: Request Program Trade Execution Function
      description: Request Program Trade Execution Function
      operationId: RequestProgramTradeExecutionFunction
      parameters:
        - $ref: '#/components/parameters/programtradingid'
        - $ref: '#/components/parameters/programtradeexecutionfunctionid'
      requestBody:
        $ref: '#/components/requestBodies/ProgramTradeExecutionFunction'
      responses:
        '200':
          $ref: '#/components/responses/ProgramTradeExecutionFunction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProgramTrading/{programtradingid}/ProgramTradedPortfolioAlgorithmFunction/{programtradedportfolioalgorithmfunctionid}/Request':
    put:
      tags:
        - BQ - ProgramTradedPortfolioAlgorithmFunction
      summary: Request Program Traded Portfolio Algorithm Function
      description: Request Program Traded Portfolio Algorithm Function
      operationId: RequestProgramTradedPortfolioAlgorithmFunction
      parameters:
        - $ref: '#/components/parameters/programtradingid'
        - $ref: '#/components/parameters/programtradedportfolioalgorithmfunctionid'
      requestBody:
        $ref: '#/components/requestBodies/ProgramTradedPortfolioAlgorithmFunction'
      responses:
        '200':
          $ref: '#/components/responses/ProgramTradedPortfolioAlgorithmFunction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProgramTrading/{programtradingid}/ProgramTradedPortfolioMaintenanceFunction/{programtradedportfoliomaintenancefunctionid}/Request':
    put:
      tags:
        - BQ - ProgramTradedPortfolioMaintenanceFunction
      summary: Request Program Traded Portfolio Maintenance Function
      description: Request Program Traded Portfolio Maintenance Function
      operationId: RequestProgramTradedPortfolioMaintenanceFunction
      parameters:
        - $ref: '#/components/parameters/programtradingid'
        - $ref: '#/components/parameters/programtradedportfoliomaintenancefunctionid'
      requestBody:
        $ref: '#/components/requestBodies/ProgramTradedPortfolioMaintenanceFunction'
      responses:
        '200':
          $ref: '#/components/responses/ProgramTradedPortfolioMaintenanceFunction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProgramTrading/{programtradingid}/ProgramTradeExecutionFunction/{programtradeexecutionfunctionid}/Retrieve':
    get:
      tags:
        - BQ - ProgramTradeExecutionFunction
      summary: Retrieve Program Trade Execution Function
      description: Retrieve Program Trade Execution Function
      operationId: RetrieveProgramTradeExecutionFunction
      parameters:
        - $ref: '#/components/parameters/programtradingid'
        - $ref: '#/components/parameters/programtradeexecutionfunctionid'
      responses:
        '200':
          $ref: '#/components/responses/ProgramTradeExecutionFunction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProgramTrading/{programtradingid}/ProgramTradedPortfolioAlgorithmFunction/{programtradedportfolioalgorithmfunctionid}/Retrieve':
    get:
      tags:
        - BQ - ProgramTradedPortfolioAlgorithmFunction
      summary: Retrieve Program Traded Portfolio Algorithm Function
      description: Retrieve Program Traded Portfolio Algorithm Function
      operationId: RetrieveProgramTradedPortfolioAlgorithmFunction
      parameters:
        - $ref: '#/components/parameters/programtradingid'
        - $ref: '#/components/parameters/programtradedportfolioalgorithmfunctionid'
      responses:
        '200':
          $ref: '#/components/responses/ProgramTradedPortfolioAlgorithmFunction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProgramTrading/{programtradingid}/ProgramTradedPortfolioMaintenanceFunction/{programtradedportfoliomaintenancefunctionid}/Retrieve':
    get:
      tags:
        - BQ - ProgramTradedPortfolioMaintenanceFunction
      summary: Retrieve Program Traded Portfolio Maintenance Function
      description: Retrieve Program Traded Portfolio Maintenance Function
      operationId: RetrieveProgramTradedPortfolioMaintenanceFunction
      parameters:
        - $ref: '#/components/parameters/programtradingid'
        - $ref: '#/components/parameters/programtradedportfoliomaintenancefunctionid'
      responses:
        '200':
          $ref: '#/components/responses/ProgramTradedPortfolioMaintenanceFunction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProgramTrading/{programtradingid}/ProgramTradeExecutionFunction/{programtradeexecutionfunctionid}/Update':
    put:
      tags:
        - BQ - ProgramTradeExecutionFunction
      summary: Update Program Trade Execution Function
      description: Update Program Trade Execution Function
      operationId: UpdateProgramTradeExecutionFunction
      parameters:
        - $ref: '#/components/parameters/programtradingid'
        - $ref: '#/components/parameters/programtradeexecutionfunctionid'
      requestBody:
        $ref: '#/components/requestBodies/ProgramTradeExecutionFunction'
      responses:
        '200':
          $ref: '#/components/responses/ProgramTradeExecutionFunction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProgramTrading/{programtradingid}/ProgramTradedPortfolioAlgorithmFunction/{programtradedportfolioalgorithmfunctionid}/Update':
    put:
      tags:
        - BQ - ProgramTradedPortfolioAlgorithmFunction
      summary: Update Program Traded Portfolio Algorithm Function
      description: Update Program Traded Portfolio Algorithm Function
      operationId: UpdateProgramTradedPortfolioAlgorithmFunction
      parameters:
        - $ref: '#/components/parameters/programtradingid'
        - $ref: '#/components/parameters/programtradedportfolioalgorithmfunctionid'
      requestBody:
        $ref: '#/components/requestBodies/ProgramTradedPortfolioAlgorithmFunction'
      responses:
        '200':
          $ref: '#/components/responses/ProgramTradedPortfolioAlgorithmFunction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProgramTrading/{programtradingid}/ProgramTradedPortfolioMaintenanceFunction/{programtradedportfoliomaintenancefunctionid}/Update':
    put:
      tags:
        - BQ - ProgramTradedPortfolioMaintenanceFunction
      summary: Update Program Traded Portfolio Maintenance Function
      description: Update Program Traded Portfolio Maintenance Function
      operationId: UpdateProgramTradedPortfolioMaintenanceFunction
      parameters:
        - $ref: '#/components/parameters/programtradingid'
        - $ref: '#/components/parameters/programtradedportfoliomaintenancefunctionid'
      requestBody:
        $ref: '#/components/requestBodies/ProgramTradedPortfolioMaintenanceFunction'
      responses:
        '200':
          $ref: '#/components/responses/ProgramTradedPortfolioMaintenanceFunction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    ProgramTradeExecutionFunction:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        ProgramTradingOperatingSessionReference:
          $ref: '#/components/schemas/session'
        ProgramTradeExecutionFunctionReference:
          $ref: '#/components/schemas/function'
        ProgramTradeExecutionFunctionType:
          $ref: '#/components/schemas/text'
      description: An operational service or function supported within the Program Trade Execution Function for doing Program Trade Execution Function
    ProgramTradedPortfolioMaintenanceFunction:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        ProgramTradingOperatingSessionReference:
          $ref: '#/components/schemas/session'
        ProgramTradedPortfolioMaintenanceFunctionReference:
          $ref: '#/components/schemas/function'
        ProgramTradedPortfolioMaintenanceFunctionType:
          $ref: '#/components/schemas/text'
      description: An operational service or function supported within the Program Trade Execution Function for doing Program Trade Execution Function
    ProgramTradedPortfolioAlgorithmFunction:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        ProgramTradingOperatingSessionReference:
          $ref: '#/components/schemas/session'
        ProgramTradedPortfolioAlgorithmFunctionReference:
          $ref: '#/components/schemas/function'
        ProgramTradedPortfolioAlgorithmFunctionType:
          $ref: '#/components/schemas/text'
      description: An operational service or function supported within the Program Trade Execution Function for doing Program Trade Execution Function
    ProgramTradingOutcome:
      type: object
      properties:
        ProgramTradingIncident:
          $ref: '#/components/schemas/event'
        ProgramTradingProvision:
          $ref: '#/components/schemas/text'
      description: An operational service or function supported within the Program Trade Execution Function for doing Program Trade Execution Function
    ProgramTradingOperatingSession:
      type: object
      properties:
        ProgramTradingOperatingSessionSchedule:
          $ref: '#/components/schemas/schedule'
        ProgramTradingOperatingSessionStatus:
          $ref: '#/components/schemas/status'
        ProgramTradingOperatingSessionUsageLog:
          $ref: '#/components/schemas/log'
        ProgramTradingOperatingSessionAssociatedPartyReference:
          $ref: '#/components/schemas/involvedparty'
        ProgramTradingOperatingSessionServiceProviderReference:
          $ref: '#/components/schemas/involvedparty'
        ProgramTradingOperatingSessionType:
          $ref: '#/components/schemas/sessiontype'
        ProgramTradingOperatingSessionServiceProviderSchedule:
          $ref: '#/components/schemas/schedule'
        ProgramTradingOperatingSessionServiceType:
          $ref: '#/components/schemas/servicetype'
        ProgramTradingOperatingSessionServiceConfiguration:
          $ref: '#/components/schemas/systemconfigurationoption'
        ProgramTradingOperatingSessionReference:
          $ref: '#/components/schemas/session'
      description: 'Operate equipment and/or a largely automated facility within Program Trading. '
    condition:
      type: object
      properties:
        Condition:
          type: string
          description: "Condition is a premise upon which the fulfillment of an agreement depends \n\nGeneral and special arrangements, provisions, requirements, rules, specifications, and standards that form an integral part of an agreement or contract.\n\nRead more: http://www.businessdictionary.com/definition/terms-and-conditions.html\n\n"
          format: class
    schedule:
      type: object
      properties:
        Schedule:
          type: string
          description: "Defined sequence of planned tasks/actions or a timetable of available services\n\nA schedule is a time based series of something"
          format: datatype
    businessservice:
      type: object
      properties:
        BusinessServiceName:
          $ref: '#/components/schemas/name'
        BusinessServiceType:
          $ref: '#/components/schemas/businessservicetypevalues'
        BusinessServiceDescription:
          $ref: '#/components/schemas/text'
    session:
      type: object
      properties:
        SessionDuration:
          $ref: '#/components/schemas/duration'
        SessionDateTime:
          $ref: '#/components/schemas/datetime'
        SessionStatus:
          $ref: '#/components/schemas/status'
        SessionType:
          $ref: '#/components/schemas/sessiontype'
        SessionScheduel:
          $ref: '#/components/schemas/schedule'
    function:
      type: object
      properties:
        Function:
          type: string
          description: "A kind of action.\n\nFunctions as Behaviour Qualifier: The collection of operational services/functions offered by the operational facility."
          format: class
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
    event:
      type: object
      properties:
        EventType:
          type: string
          description: ''
          format: string
        EventDateTime:
          type: string
          description: ''
          format: string
        EventDescription:
          type: string
          description: ''
          format: string
        EventSource:
          type: string
          description: ''
          format: string
        EventLocation:
          type: string
          description: ''
          format: string
        EventAction:
          type: string
          description: ''
          format: string
        EventStatus:
          type: string
          description: ''
          format: string
        EventValue:
          type: string
          description: ''
          format: string
        EventValidityPeriod:
          type: string
          description: ''
          format: string
        EventIdentification:
          type: string
          description: ''
          format: string
    status:
      type: object
      properties:
        Status:
          type: string
          description: A characteristic that describe the object by referring to a state transition in its lifecycle.
          format: datatype
    log:
      type: object
      properties:
        LogType:
          type: string
          description: ''
          format: string
        LogPeriod:
          type: string
          description: ''
          format: string
        LogDate:
          type: string
          description: Key dates associated with the log (e.g. start time).
          format: string
        LogIdentification:
          type: string
          description: ''
          format: string
    involvedparty:
      type: object
      properties:
        Involvedparty:
          type: string
          description: ''
          format: datatype
    sessiontype:
      type: object
      properties:
        Sessiontype:
          type: string
          description: "A Classification value that distinguishes between the type of operations within the session like\n- Customer Contact Session\n- Customer Dialogue Session\n- Channel Operating Session\n- Gateway Operating Session\n- Switch Operating Session"
          format: datatype
    servicetype:
      type: object
      properties:
        Servicetype:
          type: string
          description: Data type specifies the classification of service
          format: datatype
    systemconfigurationoption:
      type: object
      properties:
        SystemConfigurationOption:
          type: string
          description: "Options for configuring the system or the function/feature of system.\n"
          format: class
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ProgramTradingOperatingSession:
      description: ProgramTradingOperatingSession
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProgramTradingOperatingSession'
    ProgramTradeExecutionFunction:
      description: ProgramTradeExecutionFunction
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProgramTradeExecutionFunction'
    ProgramTradedPortfolioAlgorithmFunction:
      description: ProgramTradedPortfolioAlgorithmFunction
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProgramTradedPortfolioAlgorithmFunction'
    ProgramTradedPortfolioMaintenanceFunction:
      description: ProgramTradedPortfolioMaintenanceFunction
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProgramTradedPortfolioMaintenanceFunction'
  parameters:
    programtradingid:
      name: programtradingid
      in: path
      required: true
      style: simple
      schema:
        type: string
    programtradeexecutionfunctionid:
      name: programtradeexecutionfunctionid
      in: path
      required: true
      style: simple
      schema:
        type: string
    programtradedportfolioalgorithmfunctionid:
      name: programtradedportfolioalgorithmfunctionid
      in: path
      required: true
      style: simple
      schema:
        type: string
    programtradedportfoliomaintenancefunctionid:
      name: programtradedportfoliomaintenancefunctionid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    ProgramTradingOperatingSession:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProgramTradingOperatingSession'
      required: true
    ProgramTradeExecutionFunction:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProgramTradeExecutionFunction'
      required: true
    ProgramTradedPortfolioAlgorithmFunction:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProgramTradedPortfolioAlgorithmFunction'
      required: true
    ProgramTradedPortfolioMaintenanceFunction:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProgramTradedPortfolioMaintenanceFunction'
      required: true