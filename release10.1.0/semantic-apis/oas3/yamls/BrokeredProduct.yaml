openapi: 3.0.1
info:
  title: Brokered Product
  description: This Service Domain oversees all activities associated with the coordinated delivery of 3rd party products and services
  contact:
    name: BIAN
    url: https://bian.org
  version: '10.1.0'
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/BrokeredProduct/10.1.0
paths:
  '/BrokeredProduct/{brokeredproductid}/Control':
    put:
      tags:
        - CR - BrokeredProductManagementPlan
      summary: Control Brokered Product Management Plan
      description: Control Brokered Product Management Plan
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/brokeredproductid'
      requestBody:
        $ref: '#/components/requestBodies/ControlBrokeredProductManagementPlanRequest'
      responses:
        '200':
          $ref: '#/components/responses/ControlBrokeredProductManagementPlanResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /BrokeredProduct/Create:
    post:
      tags:
        - CR - BrokeredProductManagementPlan
      summary: Create Brokered Product Management Plan
      description: Create Brokered Product Management Plan
      operationId: Create
      requestBody:
        $ref: '#/components/requestBodies/CreateBrokeredProductManagementPlanRequest'
      responses:
        '200':
          $ref: '#/components/responses/CreateBrokeredProductManagementPlanResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BrokeredProduct/{brokeredproductid}/Exchange':
    put:
      tags:
        - CR - BrokeredProductManagementPlan
      summary: Exchange Brokered Product Management Plan
      description: Exchange Brokered Product Management Plan
      operationId: Exchange
      parameters:
        - $ref: '#/components/parameters/brokeredproductid'
      requestBody:
        $ref: '#/components/requestBodies/ExchangeBrokeredProductManagementPlanRequest'
      responses:
        '200':
          $ref: '#/components/responses/ExchangeBrokeredProductManagementPlanResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BrokeredProduct/{brokeredproductid}/Grant':
    put:
      tags:
        - CR - BrokeredProductManagementPlan
      summary: Grant Brokered Product Management Plan
      description: Grant Brokered Product Management Plan
      operationId: Grant
      parameters:
        - $ref: '#/components/parameters/brokeredproductid'
      requestBody:
        $ref: '#/components/requestBodies/GrantBrokeredProductManagementPlanRequest'
      responses:
        '200':
          $ref: '#/components/responses/GrantBrokeredProductManagementPlanResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BrokeredProduct/{brokeredproductid}/Notify':
    get:
      tags:
        - CR - BrokeredProductManagementPlan
      summary: Notify Brokered Product Management Plan
      description: Notify Brokered Product Management Plan
      operationId: Notify
      parameters:
        - $ref: '#/components/parameters/brokeredproductid'
      responses:
        '200':
          $ref: '#/components/responses/NotifyBrokeredProductManagementPlanResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BrokeredProduct/{brokeredproductid}/Request':
    put:
      tags:
        - CR - BrokeredProductManagementPlan
      summary: Request Brokered Product Management Plan
      description: Request Brokered Product Management Plan
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/brokeredproductid'
      requestBody:
        $ref: '#/components/requestBodies/RequestBrokeredProductManagementPlanRequest'
      responses:
        '200':
          $ref: '#/components/responses/RequestBrokeredProductManagementPlanResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BrokeredProduct/{brokeredproductid}/Retrieve':
    get:
      tags:
        - CR - BrokeredProductManagementPlan
      summary: Retrieve Brokered Product Management Plan
      description: Retrieve Brokered Product Management Plan
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/brokeredproductid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveBrokeredProductManagementPlanResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BrokeredProduct/{brokeredproductid}/Update':
    put:
      tags:
        - CR - BrokeredProductManagementPlan
      summary: Update Brokered Product Management Plan
      description: Update Brokered Product Management Plan
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/brokeredproductid'
      requestBody:
        $ref: '#/components/requestBodies/UpdateBrokeredProductManagementPlanRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateBrokeredProductManagementPlanResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BrokeredProduct/{brokeredproductid}/ProductionPerformanceAssessmentDuty/{productionperformanceassessmentdutyid}/Exchange':
    put:
      tags:
        - BQ - ProductionPerformanceAssessmentDuty
      summary: Exchange Production Performance Assessment Duty
      description: Exchange Production Performance Assessment Duty
      operationId: ExchangeProductionPerformanceAssessmentDuty
      parameters:
        - $ref: '#/components/parameters/brokeredproductid'
        - $ref: '#/components/parameters/productionperformanceassessmentdutyid'
      requestBody:
        $ref: '#/components/requestBodies/ProductionPerformanceAssessmentDuty'
      responses:
        '200':
          $ref: '#/components/responses/ProductionPerformanceAssessmentDuty'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BrokeredProduct/{brokeredproductid}/ProductionTroubleshootingDuty/{productiontroubleshootingdutyid}/Exchange':
    put:
      tags:
        - BQ - ProductionTroubleshootingDuty
      summary: Exchange Production Troubleshooting Duty
      description: Exchange Production Troubleshooting Duty
      operationId: ExchangeProductionTroubleshootingDuty
      parameters:
        - $ref: '#/components/parameters/brokeredproductid'
        - $ref: '#/components/parameters/productiontroubleshootingdutyid'
      requestBody:
        $ref: '#/components/requestBodies/ProductionTroubleshootingDuty'
      responses:
        '200':
          $ref: '#/components/responses/ProductionTroubleshootingDuty'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BrokeredProduct/{brokeredproductid}/ServiceLevelAgreementOversightDuty/{servicelevelagreementoversightdutyid}/Exchange':
    put:
      tags:
        - BQ - ServiceLevelAgreementOversightDuty
      summary: Exchange Service Level Agreement Oversight Duty
      description: Exchange Service Level Agreement Oversight Duty
      operationId: ExchangeServiceLevelAgreementOversightDuty
      parameters:
        - $ref: '#/components/parameters/brokeredproductid'
        - $ref: '#/components/parameters/servicelevelagreementoversightdutyid'
      requestBody:
        $ref: '#/components/requestBodies/ServiceLevelAgreementOversightDuty'
      responses:
        '200':
          $ref: '#/components/responses/ServiceLevelAgreementOversightDuty'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BrokeredProduct/{brokeredproductid}/ProductionPerformanceAssessmentDuty/{productionperformanceassessmentdutyid}/Grant':
    put:
      tags:
        - BQ - ProductionPerformanceAssessmentDuty
      summary: Grant Production Performance Assessment Duty
      description: Grant Production Performance Assessment Duty
      operationId: GrantProductionPerformanceAssessmentDuty
      parameters:
        - $ref: '#/components/parameters/brokeredproductid'
        - $ref: '#/components/parameters/productionperformanceassessmentdutyid'
      requestBody:
        $ref: '#/components/requestBodies/ProductionPerformanceAssessmentDuty'
      responses:
        '200':
          $ref: '#/components/responses/ProductionPerformanceAssessmentDuty'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BrokeredProduct/{brokeredproductid}/ProductionTroubleshootingDuty/{productiontroubleshootingdutyid}/Grant':
    put:
      tags:
        - BQ - ProductionTroubleshootingDuty
      summary: Grant Production Troubleshooting Duty
      description: Grant Production Troubleshooting Duty
      operationId: GrantProductionTroubleshootingDuty
      parameters:
        - $ref: '#/components/parameters/brokeredproductid'
        - $ref: '#/components/parameters/productiontroubleshootingdutyid'
      requestBody:
        $ref: '#/components/requestBodies/ProductionTroubleshootingDuty'
      responses:
        '200':
          $ref: '#/components/responses/ProductionTroubleshootingDuty'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BrokeredProduct/{brokeredproductid}/ServiceLevelAgreementOversightDuty/{servicelevelagreementoversightdutyid}/Grant':
    put:
      tags:
        - BQ - ServiceLevelAgreementOversightDuty
      summary: Grant Service Level Agreement Oversight Duty
      description: Grant Service Level Agreement Oversight Duty
      operationId: GrantServiceLevelAgreementOversightDuty
      parameters:
        - $ref: '#/components/parameters/brokeredproductid'
        - $ref: '#/components/parameters/servicelevelagreementoversightdutyid'
      requestBody:
        $ref: '#/components/requestBodies/ServiceLevelAgreementOversightDuty'
      responses:
        '200':
          $ref: '#/components/responses/ServiceLevelAgreementOversightDuty'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BrokeredProduct/{brokeredproductid}/ProductionPerformanceAssessmentDuty/{productionperformanceassessmentdutyid}/Notify':
    get:
      tags:
        - BQ - ProductionPerformanceAssessmentDuty
      summary: Notify Production Performance Assessment Duty
      description: Notify Production Performance Assessment Duty
      operationId: NotifyProductionPerformanceAssessmentDuty
      parameters:
        - $ref: '#/components/parameters/brokeredproductid'
        - $ref: '#/components/parameters/productionperformanceassessmentdutyid'
      responses:
        '200':
          $ref: '#/components/responses/ProductionPerformanceAssessmentDuty'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BrokeredProduct/{brokeredproductid}/ProductionTroubleshootingDuty/{productiontroubleshootingdutyid}/Notify':
    get:
      tags:
        - BQ - ProductionTroubleshootingDuty
      summary: Notify Production Troubleshooting Duty
      description: Notify Production Troubleshooting Duty
      operationId: NotifyProductionTroubleshootingDuty
      parameters:
        - $ref: '#/components/parameters/brokeredproductid'
        - $ref: '#/components/parameters/productiontroubleshootingdutyid'
      responses:
        '200':
          $ref: '#/components/responses/ProductionTroubleshootingDuty'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BrokeredProduct/{brokeredproductid}/ServiceLevelAgreementOversightDuty/{servicelevelagreementoversightdutyid}/Notify':
    get:
      tags:
        - BQ - ServiceLevelAgreementOversightDuty
      summary: Notify Service Level Agreement Oversight Duty
      description: Notify Service Level Agreement Oversight Duty
      operationId: NotifyServiceLevelAgreementOversightDuty
      parameters:
        - $ref: '#/components/parameters/brokeredproductid'
        - $ref: '#/components/parameters/servicelevelagreementoversightdutyid'
      responses:
        '200':
          $ref: '#/components/responses/ServiceLevelAgreementOversightDuty'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BrokeredProduct/{brokeredproductid}/ProductionPerformanceAssessmentDuty/{productionperformanceassessmentdutyid}/Request':
    put:
      tags:
        - BQ - ProductionPerformanceAssessmentDuty
      summary: Request Production Performance Assessment Duty
      description: Request Production Performance Assessment Duty
      operationId: RequestProductionPerformanceAssessmentDuty
      parameters:
        - $ref: '#/components/parameters/brokeredproductid'
        - $ref: '#/components/parameters/productionperformanceassessmentdutyid'
      requestBody:
        $ref: '#/components/requestBodies/ProductionPerformanceAssessmentDuty'
      responses:
        '200':
          $ref: '#/components/responses/ProductionPerformanceAssessmentDuty'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BrokeredProduct/{brokeredproductid}/ProductionTroubleshootingDuty/{productiontroubleshootingdutyid}/Request':
    put:
      tags:
        - BQ - ProductionTroubleshootingDuty
      summary: Request Production Troubleshooting Duty
      description: Request Production Troubleshooting Duty
      operationId: RequestProductionTroubleshootingDuty
      parameters:
        - $ref: '#/components/parameters/brokeredproductid'
        - $ref: '#/components/parameters/productiontroubleshootingdutyid'
      requestBody:
        $ref: '#/components/requestBodies/ProductionTroubleshootingDuty'
      responses:
        '200':
          $ref: '#/components/responses/ProductionTroubleshootingDuty'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BrokeredProduct/{brokeredproductid}/ServiceLevelAgreementOversightDuty/{servicelevelagreementoversightdutyid}/Request':
    put:
      tags:
        - BQ - ServiceLevelAgreementOversightDuty
      summary: Request Service Level Agreement Oversight Duty
      description: Request Service Level Agreement Oversight Duty
      operationId: RequestServiceLevelAgreementOversightDuty
      parameters:
        - $ref: '#/components/parameters/brokeredproductid'
        - $ref: '#/components/parameters/servicelevelagreementoversightdutyid'
      requestBody:
        $ref: '#/components/requestBodies/ServiceLevelAgreementOversightDuty'
      responses:
        '200':
          $ref: '#/components/responses/ServiceLevelAgreementOversightDuty'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BrokeredProduct/{brokeredproductid}/ProductionPerformanceAssessmentDuty/{productionperformanceassessmentdutyid}/Retrieve':
    get:
      tags:
        - BQ - ProductionPerformanceAssessmentDuty
      summary: Retrieve Production Performance Assessment Duty
      description: Retrieve Production Performance Assessment Duty
      operationId: RetrieveProductionPerformanceAssessmentDuty
      parameters:
        - $ref: '#/components/parameters/brokeredproductid'
        - $ref: '#/components/parameters/productionperformanceassessmentdutyid'
      responses:
        '200':
          $ref: '#/components/responses/ProductionPerformanceAssessmentDuty'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BrokeredProduct/{brokeredproductid}/ProductionTroubleshootingDuty/{productiontroubleshootingdutyid}/Retrieve':
    get:
      tags:
        - BQ - ProductionTroubleshootingDuty
      summary: Retrieve Production Troubleshooting Duty
      description: Retrieve Production Troubleshooting Duty
      operationId: RetrieveProductionTroubleshootingDuty
      parameters:
        - $ref: '#/components/parameters/brokeredproductid'
        - $ref: '#/components/parameters/productiontroubleshootingdutyid'
      responses:
        '200':
          $ref: '#/components/responses/ProductionTroubleshootingDuty'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BrokeredProduct/{brokeredproductid}/ServiceLevelAgreementOversightDuty/{servicelevelagreementoversightdutyid}/Retrieve':
    get:
      tags:
        - BQ - ServiceLevelAgreementOversightDuty
      summary: Retrieve Service Level Agreement Oversight Duty
      description: Retrieve Service Level Agreement Oversight Duty
      operationId: RetrieveServiceLevelAgreementOversightDuty
      parameters:
        - $ref: '#/components/parameters/brokeredproductid'
        - $ref: '#/components/parameters/servicelevelagreementoversightdutyid'
      responses:
        '200':
          $ref: '#/components/responses/ServiceLevelAgreementOversightDuty'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BrokeredProduct/{brokeredproductid}/ProductionPerformanceAssessmentDuty/{productionperformanceassessmentdutyid}/Update':
    put:
      tags:
        - BQ - ProductionPerformanceAssessmentDuty
      summary: Update Production Performance Assessment Duty
      description: Update Production Performance Assessment Duty
      operationId: UpdateProductionPerformanceAssessmentDuty
      parameters:
        - $ref: '#/components/parameters/brokeredproductid'
        - $ref: '#/components/parameters/productionperformanceassessmentdutyid'
      requestBody:
        $ref: '#/components/requestBodies/ProductionPerformanceAssessmentDuty'
      responses:
        '200':
          $ref: '#/components/responses/ProductionPerformanceAssessmentDuty'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BrokeredProduct/{brokeredproductid}/ProductionTroubleshootingDuty/{productiontroubleshootingdutyid}/Update':
    put:
      tags:
        - BQ - ProductionTroubleshootingDuty
      summary: Update Production Troubleshooting Duty
      description: Update Production Troubleshooting Duty
      operationId: UpdateProductionTroubleshootingDuty
      parameters:
        - $ref: '#/components/parameters/brokeredproductid'
        - $ref: '#/components/parameters/productiontroubleshootingdutyid'
      requestBody:
        $ref: '#/components/requestBodies/ProductionTroubleshootingDuty'
      responses:
        '200':
          $ref: '#/components/responses/ProductionTroubleshootingDuty'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BrokeredProduct/{brokeredproductid}/ServiceLevelAgreementOversightDuty/{servicelevelagreementoversightdutyid}/Update':
    put:
      tags:
        - BQ - ServiceLevelAgreementOversightDuty
      summary: Update Service Level Agreement Oversight Duty
      description: Update Service Level Agreement Oversight Duty
      operationId: UpdateServiceLevelAgreementOversightDuty
      parameters:
        - $ref: '#/components/parameters/brokeredproductid'
        - $ref: '#/components/parameters/servicelevelagreementoversightdutyid'
      requestBody:
        $ref: '#/components/requestBodies/ServiceLevelAgreementOversightDuty'
      responses:
        '200':
          $ref: '#/components/responses/ServiceLevelAgreementOversightDuty'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    condition:
      type: object
      properties:
        Condition:
          type: string
          description: "Condition is a premise upon which the fulfillment of an agreement depends \n\nGeneral and special arrangements, provisions, requirements, rules, specifications, and standards that form an integral part of an agreement or contract.\n\nRead more: http://www.businessdictionary.com/definition/terms-and-conditions.html\n\n"
          format: class
      description: The required status/situation before the duty/obligation can be met
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: Name by which a party is known and which is usually used to identify that party. (ISO20022)
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\n"
    datetime:
      type: object
      properties:
        DateTimeContent:
          type: string
          description: ''
          format: string
        TimeZoneCode:
          type: string
          description: ''
          format: string
        DaylightSavingIndicator:
          type: string
          description: ''
          format: string
      description: ''
    value:
      type: object
      properties:
        Value:
          type: string
          description: 'A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)'
          format: datatype
      description: ''
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          type: string
          description: ''
          format: partyidentificationtypevalues
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
      description: ''
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: ''
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\n* `Agreementinvolvement` - \n* `Partyinvolvement` - \n* `Arrangementinvolvement` - \n* `Designspecificationinvolvement` - \n* `Relationshipinvolvement` - \n* `Locationinvolvement` - \n* `Bankguaranteeinvolvement` - \n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: The operating unit/employee responsible for undertaking the duty
    schedule:
      type: object
      properties:
        ScheduleType:
          type: string
          description: ''
          format: string
      description: The timing and key actions/milestones involved in fulfilling the duty
    businessservicetypevalues:
      type: object
      properties:
        Businessservicetypevalues:
          type: string
          description: ''
          format: enumeration
      description: ''
    businessservice:
      type: object
      properties:
        BusinessServiceName:
          $ref: '#/components/schemas/name'
        BusinessServiceType:
          $ref: '#/components/schemas/businessservicetypevalues'
        BusinessServiceDescription:
          $ref: '#/components/schemas/text'
      description: The Service Level Agreement Oversight Duty specific Business Service
    goal:
      type: object
      properties:
        GoalType:
          type: string
          description: The type of goal
          format: string
        GoalDefinition:
          type: string
          description: 'A definition of the goal, including the intended actions required to achieve the goal'
          format: string
        GoalOrganisation:
          type: string
          description: Identifies the interested parties and their roles and responsibilities for the specific actions supporting the achievement of the goal
          format: ''
        GoalResult:
          type: string
          description: 'Assessment of how the work is progressing towards achieving the goal, including projections of likely outcomes'
          format: string
      description: ''
    budgettype:
      type: object
      properties:
        BudgetTypeName:
          $ref: '#/components/schemas/name'
        BudgetType:
          type: string
          description: ''
          format: budgettypevalues
      description: A Classification value that specifies the type of Budget
    currencycode:
      type: object
      properties:
        Currencycode:
          type: string
          description: "A code identifying a currency according to ISO-4217.\nA currency is a system of money in general use in a particular country.\n\nCode allocated to a currency, by a maintenance agency, under an international identification scheme as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\". Valid currency codes are registered with the ISO 4217 Maintenance Agency, and consist of three contiguous letters. (ISO20022)\n\n"
          format: datatype
      description: ''
    amount:
      type: object
      properties:
        AmountValue:
          type: string
          description: ''
          format: string
        AmountCurrency:
          $ref: '#/components/schemas/currencycode'
        DecimalPointPosition:
          type: string
          description: "Decimal point position starts calulating from the right\n"
          format: string
      description: ''
    budgetarrangement:
      type: object
      properties:
        BudgetType:
          $ref: '#/components/schemas/budgettype'
        BudgetAmount:
          $ref: '#/components/schemas/amount'
      description: 'An arrangement which is specifying an estimate of costs, revenues, and resources over a specified period, reflecting a reading of future financial conditions and goals. (adapted from Business Dictionary)'
    plannedaction:
      type: object
      properties:
        PlannedAction:
          type: string
          description: 'An action that is arranged in a plan for doing or achieving something '
          format: class
      description: 'An action that is arranged in a plan for doing or achieving something '
    plantype:
      type: object
      properties:
        PlanTypeName:
          $ref: '#/components/schemas/name'
        PlanType:
          type: string
          description: ''
          format: plantypevalues
      description: A Classification value that specifies the type of Plan
    plan:
      type: object
      properties:
        PlanGoal:
          $ref: '#/components/schemas/goal'
        PlanBudget:
          $ref: '#/components/schemas/budgetarrangement'
        PlannedAction:
          $ref: '#/components/schemas/plannedaction'
        PlanType:
          $ref: '#/components/schemas/plantype'
        PlanOrganisation:
          type: string
          description: ''
          format: string
        PlanValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PlanDescription:
          $ref: '#/components/schemas/text'
      description: Reference to Service Level Agreement Oversight Duty
    ServiceLevelAgreementOversightDuty:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        BusinessUnitEmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        BrokeredProductManagementPlanReference:
          $ref: '#/components/schemas/plan'
        ServiceLevelAgreementOversightDutyReference:
          $ref: '#/components/schemas/plannedaction'
        ServiceLevelAgreementOversightDutyType:
          $ref: '#/components/schemas/text'
      description: The Service Level Agreement Oversight Duty is a specific role or responsibility that is one aspect of Service Level Agreement Oversight Duty
    ProductionTroubleshootingDuty:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        BusinessUnitEmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        BrokeredProductManagementPlanReference:
          $ref: '#/components/schemas/plan'
        ProductionTroubleshootingDutyReference:
          $ref: '#/components/schemas/plannedaction'
        ProductionTroubleshootingDutyType:
          $ref: '#/components/schemas/text'
      description: The Service Level Agreement Oversight Duty is a specific role or responsibility that is one aspect of Service Level Agreement Oversight Duty
    ProductionPerformanceAssessmentDuty:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        BusinessUnitEmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        BrokeredProductManagementPlanReference:
          $ref: '#/components/schemas/plan'
        ProductionPerformanceAssessmentDutyReference:
          $ref: '#/components/schemas/plannedaction'
        ProductionPerformanceAssessmentDutyType:
          $ref: '#/components/schemas/text'
      description: The Service Level Agreement Oversight Duty is a specific role or responsibility that is one aspect of Service Level Agreement Oversight Duty
    analysistypevalues:
      enum:
        - PerformanceAnalysis
        - ActivityAnalysis
      type: string
      description: ">\n* `PerformanceAnalysis` - \n* `ActivityAnalysis` - \n"
    documenttypevalues:
      enum:
        - Meteredserviceinvoice
        - Creditnoterelatedtofinancialadjustment
        - Debitnoterelatedtofinancialadjustment
        - Commercialinvoice
        - Creditnote
        - Debitnote
        - Hireinvoice
        - Selfbilledinvoice
        - Remittanceadvicemessage
        - Relatedpaymentinstruction
        - Commercialcontract
        - Foreignexchangedealreference
        - Statementofaccount
        - Dispatchadvice
        - Purchaseorder
        - Structuredcommunicationreference
        - Billoflading
        - Voucher
        - Accountreceivableopenitem
        - Tradeservicesutilitytransaction
        - Cashierreceipt
        - Customerreceipt
        - Journal
        - Salereceipt
      type: string
      description: ">\n* `Meteredserviceinvoice` - Document is an invoice claiming payment for the supply of metered services, for example gas or electricity supplied to a fixed meter.\n* `Creditnoterelatedtofinancialadjustment` - Document is a credit note for the final amount settled for a commercial transaction.\n* `Debitnoterelatedtofinancialadjustment` - Document is a debit note for the final amount settled for a commercial transaction.\n* `Commercialinvoice` - Document is an invoice.\n* `Creditnote` - Document is a credit note.\n* `Debitnote` - Document is a debit note.\n* `Hireinvoice` - Document is an invoice for the hiring of human resources or renting goods or equipment.\n* `Selfbilledinvoice` - Document is an invoice issued by the debtor.\n* `Remittanceadvicemessage` - Document is a remittance advice sent separately from the current transaction.\n* `Relatedpaymentinstruction` - Document is a linked payment instruction to which the current payment instruction is related, for example, in a cover scenario.\n* `Commercialcontract` - Document is an agreement between the parties, stipulating the terms and conditions of the delivery of goods or services.\n* `Foreignexchangedealreference` - Document is a pre-agreed or pre-arranged foreign exchange transaction to which the payment transaction refers.\n* `Statementofaccount` - Document is a statement of the transactions posted to the debtor's account at the supplier.\n* `Dispatchadvice` - Document is a dispatch advice.\n* `Purchaseorder` - Document is a purchase order.\n* `Structuredcommunicationreference` - Document is a structured communication reference provided by the creditor to identify the referred transaction.\n* `Billoflading` - Document is a shipping notice.\n* `Voucher` - Document is an electronic payment document.\n* `Accountreceivableopenitem` - Document is a payment that applies to a specific source document.\n* `Tradeservicesutilitytransaction` - Document is a transaction identifier as assigned by the Trade Services Utility.\n* `Cashierreceipt` - When the Sale system print the Cashier copy of the Payment receipt.\n* `Customerreceipt` - When the Sale System requires   the POI system to print the Customer receipt.\n* `Journal` - When the POI or the Sale System wants to store a message on the journal printer or electronic journal of the Sale Terminal (it is sometimes a Sale Logging/Journal Printer).\n* `Salereceipt` - When the Sale System requires the POI system to print the Sale receipt.\n"
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: 'Status of the document (e.g. delivered, paid, etc.). ISO20022'
    documentdatetimetypevalues:
      enum:
        - Creationdate
        - Capturingdate
        - Versiondate
        - Valuedate
        - Issuedate
      type: string
      description: ">\n* `Creationdate` - \n* `Capturingdate` - \n* `Versiondate` - \n* `Valuedate` - \n* `Issuedate` - \n"
    document:
      type: object
      properties:
        DocumentIdentifer:
          $ref: '#/components/schemas/identifier'
        DocumentVersion:
          $ref: '#/components/schemas/text'
        DocumentType:
          $ref: '#/components/schemas/documenttypevalues'
        DocumentStatus:
          $ref: '#/components/schemas/status'
        DocumentDateTime:
          $ref: '#/components/schemas/datetime'
        DocumentName:
          $ref: '#/components/schemas/name'
        DocumentDateTimeType:
          $ref: '#/components/schemas/documentdatetimetypevalues'
        DocumentPurpose:
          $ref: '#/components/schemas/text'
        DocumentFormat:
          $ref: '#/components/schemas/text'
        DocumentSubject:
          $ref: '#/components/schemas/text'
        DocumentDescription:
          $ref: '#/components/schemas/text'
      description: ''
    analysis:
      type: object
      properties:
        AnalysisType:
          $ref: '#/components/schemas/analysistypevalues'
        AnalysisResult:
          $ref: '#/components/schemas/text'
        AnalysisPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        AnalysisDocument:
          $ref: '#/components/schemas/document'
        AnalysisDateTime:
          $ref: '#/components/schemas/datetime'
        AnalysisSpecification:
          $ref: '#/components/schemas/text'
      description: ''
    project:
      type: object
      properties:
        ProjectName:
          type: string
          description: The name of project
          format: string
        ProjectType:
          type: string
          description: A classification of the project
          format: string
        ProjectDescription:
          type: string
          description: 'A description of the scope, goal and make-up of the project'
          format: string
        ProjectOrganisation:
          type: string
          description: ''
          format: string
        ProjectSchedule:
          type: string
          description: ''
          format: string
        ProjectDateTime:
          type: string
          description: ''
          format: string
      description: ''
    BrokeredProductOutcome:
      type: object
      properties:
        BrokeredProductPerformanceAnalysis:
          $ref: '#/components/schemas/analysis'
        BrokeredProductActivityAnalysis:
          $ref: '#/components/schemas/analysis'
        BrokeredProductCharter:
          $ref: '#/components/schemas/plan'
        BrokeredProductTask:
          type: string
          description: ''
          format: task
        BrokeredProductProject:
          $ref: '#/components/schemas/project'
      description: The Service Level Agreement Oversight Duty is a specific role or responsibility that is one aspect of Service Level Agreement Oversight Duty
    actiontypevalues:
      enum:
        - Initiate
        - Execute
        - Create
        - Transfer
        - Pay
        - Deliver
        - Apply
        - Calculate
      type: string
      description: ">\n* `Initiate` - \n* `Execute` - \n* `Create` - \n* `Transfer` - \n* `Pay` - \n* `Deliver` - \n* `Apply` - \n* `Calculate` - \n"
    action:
      type: object
      properties:
        ActionType:
          $ref: '#/components/schemas/actiontypevalues'
      description: ''
    arrangementlifecyclestatus:
      type: object
      properties:
        ArrangementLifecycleStatus:
          $ref: '#/components/schemas/status'
        ArrangementLifecycleStatusType:
          type: string
          description: ''
          format: arrangementlifecyclestatustypevalues
      description: 'A characteristic of arrangement which refers to the LifecycleStatus of arrangement (e.g., requested, proposed, offered, accepted, cancelled, terminated, fulfilled, etc.)'
    subject:
      type: object
      properties:
        Subject:
          type: string
          description: A thing that is discussed or dealt whit in agreement/arrangement about doing or not doing (as action) something.
          format: class
      description: ''
    arrangementtypevalues:
      enum:
        - SweepArrangement
        - WithdrawalArrangement
        - DepositArrangement
        - InterestArrangement
        - FeeArrangement
        - LienArrangement
        - InformationArrangement
        - PaymentServiceArrangement
        - EntitlementArrangement
        - PeriodArrangement
        - CollateralArrangement
        - LimitArrangement
        - AccessArrangement
        - CardPaymentArrangement
        - StandingOrderArrangement
        - OverdraftArrangement
        - RepaymentArrangement
        - StatementArrangement
        - CreditTransferArrangement
        - ProductAndServiceArrangement
        - FactoringArrangement
      type: string
      description: ">\n* `SweepArrangement` - An arrangement into which is promised for the set-up and execution of structured sweeps to and from the facility to a linked account.\n* `WithdrawalArrangement` - An arrangement into which is promised to deliver Withdraw Service  to take fund out of an account. \n* `DepositArrangement` - An arrangement into which is promised to deliver Deposit Service  to place funds into an account for safekeeping. \n* `InterestArrangement` - An arrangement into which is promised to apply a pricing element expressed in a percentage  to a principal amount.\n* `FeeArrangement` - An arrangement into which is promised to apply a charge for services rendered. \n* `LienArrangement` - An arrangement into which is promised for placing a lien or block on the account for a specified purpose, amount, and period. \n* `InformationArrangement` - An arrangement concerning the information the bank will provide about the agreement/account\n* `PaymentServiceArrangement` - An arrangement into which is promised to deliver a specific payment service including regular payments, standing orders, direct debits and bill pay instructions. \n* `EntitlementArrangement` - Right or obligation linked to the involvement of a party in an agreement\n* `PeriodArrangement` - \n* `CollateralArrangement` - An arrangement into which is promised for handling the oversight of the allocation, valuation and administration of collateral associated with the facility. \n* `LimitArrangement` - An arrangement to limit something\ne.g., the number of transaction per week, the amount of money allowed to withdraw per week/day and etc. \n* `AccessArrangement` - An arrangement that allows or restricts the access to a service or product, channel or device through a specific access point\n* `CardPaymentArrangement` - An arrangement into which is promised to deliver Card payment Service to execute payment transactions through a payment card, including online payments. \n* `StandingOrderArrangement` - An arrangement into which is promised to deliver Standing Order Service to make regular transfers on given dates to a named beneﬁciary. \n* `OverdraftArrangement` - An arrangement into which is promised to deliver Overdraft Service  that allows fund transfer even if there is no provision on the account. \n* `RepaymentArrangement` - An arrangement into which is promised for paying back money previously borrowed from a lender. \n* `StatementArrangement` - An arrangement into which is promised to deliver a reporting service on payment transactions registered on an account. \n* `CreditTransferArrangement` - An arrangement into which is promised to allow a payer to transfer fund to a beneficiary. \n* `ProductAndServiceArrangement` - \n* `FactoringArrangement` - \n"
    arrangement:
      type: object
      properties:
        ArrangementAction:
          $ref: '#/components/schemas/action'
        ArrangementStartDate:
          $ref: '#/components/schemas/datetime'
        ArrangementEndDate:
          $ref: '#/components/schemas/datetime'
        ArrangementStatus:
          $ref: '#/components/schemas/arrangementlifecyclestatus'
        ArrangementSubjectMatter:
          $ref: '#/components/schemas/subject'
        Arrangementtype:
          $ref: '#/components/schemas/arrangementtypevalues'
      description: The set of management responsibilities defined in Brokered Product Management Plan
    accountbalance:
      type: object
      properties:
        AccountBalance:
          $ref: '#/components/schemas/amount'
        AccountBalanceType:
          type: string
          description: ''
          format: accountbalancetypevalues
        AccounBalanceDate:
          $ref: '#/components/schemas/datetime'
      description: Balance of budget which is arranged whitin Brokered Product Management Plan
    BrokeredProductManagementPlan:
      type: object
      properties:
        BrokeredProductManagementPlanType:
          $ref: '#/components/schemas/plantype'
        BrokeredProductManagementPlanReference:
          $ref: '#/components/schemas/plan'
        BrokeredProductManagementPlanBudgetType:
          $ref: '#/components/schemas/budgettype'
        BrokeredProductManagementPlanBudget:
          $ref: '#/components/schemas/amount'
        BrokeredProductManagementPlanAssignment:
          type: string
          description: The assignment of a required activity to a responsibe party in Brokered Product Management Plan
          format: assignment
        BrokeredProductManagementPlanDuty:
          $ref: '#/components/schemas/arrangement'
        BrokeredProductManagementPlanDescription:
          $ref: '#/components/schemas/text'
        BrokeredProductManagementPlanBudgetBalance:
          $ref: '#/components/schemas/accountbalance'
        BrokeredProductManagementPlanAssociatedParty:
          $ref: '#/components/schemas/involvedparty'
        BrokeredProductManagementPlanSubjectMatter:
          type: string
          description: The subject matter of Brokered Product Management Plan
          format: object
      description: 'Oversee the working of a business unit, assign work, manage against a plan and troubleshoot issues within Brokered Product.'
    ControlBrokeredProductManagementPlanRequest:
      type: object
      properties:
        BrokeredProductManagementPlan:
          type: object
          properties:
            BrokeredProductManagementPlanType:
              $ref: '#/components/schemas/plantype'
            BrokeredProductManagementPlanReference:
              $ref: '#/components/schemas/plan'
            BrokeredProductManagementPlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            BrokeredProductManagementPlanAssignment:
              type: string
              description: The assignment of a required activity to a responsibe party in Brokered Product Management Plan
              format: assignment
            BrokeredProductManagementPlanDuty:
              $ref: '#/components/schemas/arrangement'
            BrokeredProductManagementPlanDescription:
              $ref: '#/components/schemas/text'
            BrokeredProductManagementPlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            BrokeredProductManagementPlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            BrokeredProductManagementPlanSubjectMatter:
              type: string
              description: The subject matter of Brokered Product Management Plan
              format: object
      description: 'Input: Control Brokered Product Management Plan'
    ControlBrokeredProductManagementPlanResponse:
      type: object
      properties:
        BrokeredProductManagementPlan:
          type: object
          properties:
            BrokeredProductManagementPlanType:
              $ref: '#/components/schemas/plantype'
            BrokeredProductManagementPlanReference:
              $ref: '#/components/schemas/plan'
            BrokeredProductManagementPlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            BrokeredProductManagementPlanAssignment:
              type: string
              description: The assignment of a required activity to a responsibe party in Brokered Product Management Plan
              format: assignment
            BrokeredProductManagementPlanDuty:
              $ref: '#/components/schemas/arrangement'
            BrokeredProductManagementPlanDescription:
              $ref: '#/components/schemas/text'
            BrokeredProductManagementPlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            BrokeredProductManagementPlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            BrokeredProductManagementPlanSubjectMatter:
              type: string
              description: The subject matter of Brokered Product Management Plan
              format: object
      description: 'Output: Control Brokered Product Management Plan'
    CreateBrokeredProductManagementPlanRequest:
      type: object
      properties:
        BrokeredProductManagementPlan:
          type: object
          properties:
            BrokeredProductManagementPlanType:
              $ref: '#/components/schemas/plantype'
            BrokeredProductManagementPlanReference:
              $ref: '#/components/schemas/plan'
            BrokeredProductManagementPlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            BrokeredProductManagementPlanAssignment:
              type: string
              description: The assignment of a required activity to a responsibe party in Brokered Product Management Plan
              format: assignment
            BrokeredProductManagementPlanDuty:
              $ref: '#/components/schemas/arrangement'
            BrokeredProductManagementPlanDescription:
              $ref: '#/components/schemas/text'
            BrokeredProductManagementPlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            BrokeredProductManagementPlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            BrokeredProductManagementPlanSubjectMatter:
              type: string
              description: The subject matter of Brokered Product Management Plan
              format: object
      description: 'Input: Create Brokered Product Management Plan'
    CreateBrokeredProductManagementPlanResponse:
      type: object
      properties:
        BrokeredProductManagementPlan:
          type: object
          properties:
            BrokeredProductManagementPlanType:
              $ref: '#/components/schemas/plantype'
            BrokeredProductManagementPlanReference:
              $ref: '#/components/schemas/plan'
            BrokeredProductManagementPlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            BrokeredProductManagementPlanAssignment:
              type: string
              description: The assignment of a required activity to a responsibe party in Brokered Product Management Plan
              format: assignment
            BrokeredProductManagementPlanDuty:
              $ref: '#/components/schemas/arrangement'
            BrokeredProductManagementPlanDescription:
              $ref: '#/components/schemas/text'
            BrokeredProductManagementPlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            BrokeredProductManagementPlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            BrokeredProductManagementPlanSubjectMatter:
              type: string
              description: The subject matter of Brokered Product Management Plan
              format: object
      description: 'Output: Create Brokered Product Management Plan'
    ExchangeBrokeredProductManagementPlanRequest:
      type: object
      properties:
        BrokeredProductManagementPlan:
          type: object
          properties:
            BrokeredProductManagementPlanType:
              $ref: '#/components/schemas/plantype'
            BrokeredProductManagementPlanReference:
              $ref: '#/components/schemas/plan'
            BrokeredProductManagementPlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            BrokeredProductManagementPlanAssignment:
              type: string
              description: The assignment of a required activity to a responsibe party in Brokered Product Management Plan
              format: assignment
            BrokeredProductManagementPlanDuty:
              $ref: '#/components/schemas/arrangement'
            BrokeredProductManagementPlanDescription:
              $ref: '#/components/schemas/text'
            BrokeredProductManagementPlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            BrokeredProductManagementPlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            BrokeredProductManagementPlanSubjectMatter:
              type: string
              description: The subject matter of Brokered Product Management Plan
              format: object
      description: 'Input: Exchange Brokered Product Management Plan'
    ExchangeBrokeredProductManagementPlanResponse:
      type: object
      properties:
        BrokeredProductManagementPlan:
          type: object
          properties:
            BrokeredProductManagementPlanType:
              $ref: '#/components/schemas/plantype'
            BrokeredProductManagementPlanReference:
              $ref: '#/components/schemas/plan'
            BrokeredProductManagementPlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            BrokeredProductManagementPlanAssignment:
              type: string
              description: The assignment of a required activity to a responsibe party in Brokered Product Management Plan
              format: assignment
            BrokeredProductManagementPlanDuty:
              $ref: '#/components/schemas/arrangement'
            BrokeredProductManagementPlanDescription:
              $ref: '#/components/schemas/text'
            BrokeredProductManagementPlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            BrokeredProductManagementPlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            BrokeredProductManagementPlanSubjectMatter:
              type: string
              description: The subject matter of Brokered Product Management Plan
              format: object
      description: 'Output: Exchange Brokered Product Management Plan'
    GrantBrokeredProductManagementPlanRequest:
      type: object
      properties:
        BrokeredProductManagementPlan:
          type: object
          properties:
            BrokeredProductManagementPlanType:
              $ref: '#/components/schemas/plantype'
            BrokeredProductManagementPlanReference:
              $ref: '#/components/schemas/plan'
            BrokeredProductManagementPlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            BrokeredProductManagementPlanAssignment:
              type: string
              description: The assignment of a required activity to a responsibe party in Brokered Product Management Plan
              format: assignment
            BrokeredProductManagementPlanDuty:
              $ref: '#/components/schemas/arrangement'
            BrokeredProductManagementPlanDescription:
              $ref: '#/components/schemas/text'
            BrokeredProductManagementPlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            BrokeredProductManagementPlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            BrokeredProductManagementPlanSubjectMatter:
              type: string
              description: The subject matter of Brokered Product Management Plan
              format: object
      description: 'Input: Grant Brokered Product Management Plan'
    GrantBrokeredProductManagementPlanResponse:
      type: object
      properties:
        BrokeredProductManagementPlan:
          type: object
          properties:
            BrokeredProductManagementPlanType:
              $ref: '#/components/schemas/plantype'
            BrokeredProductManagementPlanReference:
              $ref: '#/components/schemas/plan'
            BrokeredProductManagementPlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            BrokeredProductManagementPlanAssignment:
              type: string
              description: The assignment of a required activity to a responsibe party in Brokered Product Management Plan
              format: assignment
            BrokeredProductManagementPlanDuty:
              $ref: '#/components/schemas/arrangement'
            BrokeredProductManagementPlanDescription:
              $ref: '#/components/schemas/text'
            BrokeredProductManagementPlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            BrokeredProductManagementPlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            BrokeredProductManagementPlanSubjectMatter:
              type: string
              description: The subject matter of Brokered Product Management Plan
              format: object
      description: 'Output: Grant Brokered Product Management Plan'
    NotifyBrokeredProductManagementPlanRequest:
      type: object
      properties:
        BrokeredProductManagementPlan:
          type: object
          properties:
            BrokeredProductManagementPlanType:
              $ref: '#/components/schemas/plantype'
            BrokeredProductManagementPlanReference:
              $ref: '#/components/schemas/plan'
            BrokeredProductManagementPlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            BrokeredProductManagementPlanAssignment:
              type: string
              description: The assignment of a required activity to a responsibe party in Brokered Product Management Plan
              format: assignment
            BrokeredProductManagementPlanDuty:
              $ref: '#/components/schemas/arrangement'
            BrokeredProductManagementPlanDescription:
              $ref: '#/components/schemas/text'
            BrokeredProductManagementPlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            BrokeredProductManagementPlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            BrokeredProductManagementPlanSubjectMatter:
              type: string
              description: The subject matter of Brokered Product Management Plan
              format: object
      description: 'Input: Notify Brokered Product Management Plan'
    NotifyBrokeredProductManagementPlanResponse:
      type: object
      properties:
        BrokeredProductManagementPlan:
          type: object
          properties:
            BrokeredProductManagementPlanType:
              $ref: '#/components/schemas/plantype'
            BrokeredProductManagementPlanReference:
              $ref: '#/components/schemas/plan'
            BrokeredProductManagementPlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            BrokeredProductManagementPlanAssignment:
              type: string
              description: The assignment of a required activity to a responsibe party in Brokered Product Management Plan
              format: assignment
            BrokeredProductManagementPlanDuty:
              $ref: '#/components/schemas/arrangement'
            BrokeredProductManagementPlanDescription:
              $ref: '#/components/schemas/text'
            BrokeredProductManagementPlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            BrokeredProductManagementPlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            BrokeredProductManagementPlanSubjectMatter:
              type: string
              description: The subject matter of Brokered Product Management Plan
              format: object
      description: 'Output: Notify Brokered Product Management Plan'
    RequestBrokeredProductManagementPlanRequest:
      type: object
      properties:
        BrokeredProductManagementPlan:
          type: object
          properties:
            BrokeredProductManagementPlanType:
              $ref: '#/components/schemas/plantype'
            BrokeredProductManagementPlanReference:
              $ref: '#/components/schemas/plan'
            BrokeredProductManagementPlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            BrokeredProductManagementPlanAssignment:
              type: string
              description: The assignment of a required activity to a responsibe party in Brokered Product Management Plan
              format: assignment
            BrokeredProductManagementPlanDuty:
              $ref: '#/components/schemas/arrangement'
            BrokeredProductManagementPlanDescription:
              $ref: '#/components/schemas/text'
            BrokeredProductManagementPlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            BrokeredProductManagementPlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            BrokeredProductManagementPlanSubjectMatter:
              type: string
              description: The subject matter of Brokered Product Management Plan
              format: object
      description: 'Input: Request Brokered Product Management Plan'
    RequestBrokeredProductManagementPlanResponse:
      type: object
      properties:
        BrokeredProductManagementPlan:
          type: object
          properties:
            BrokeredProductManagementPlanType:
              $ref: '#/components/schemas/plantype'
            BrokeredProductManagementPlanReference:
              $ref: '#/components/schemas/plan'
            BrokeredProductManagementPlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            BrokeredProductManagementPlanAssignment:
              type: string
              description: The assignment of a required activity to a responsibe party in Brokered Product Management Plan
              format: assignment
            BrokeredProductManagementPlanDuty:
              $ref: '#/components/schemas/arrangement'
            BrokeredProductManagementPlanDescription:
              $ref: '#/components/schemas/text'
            BrokeredProductManagementPlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            BrokeredProductManagementPlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            BrokeredProductManagementPlanSubjectMatter:
              type: string
              description: The subject matter of Brokered Product Management Plan
              format: object
      description: 'Output: Request Brokered Product Management Plan'
    RetrieveBrokeredProductManagementPlanRequest:
      type: object
      properties:
        BrokeredProductManagementPlan:
          type: object
          properties:
            BrokeredProductManagementPlanType:
              $ref: '#/components/schemas/plantype'
            BrokeredProductManagementPlanReference:
              $ref: '#/components/schemas/plan'
            BrokeredProductManagementPlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            BrokeredProductManagementPlanAssignment:
              type: string
              description: The assignment of a required activity to a responsibe party in Brokered Product Management Plan
              format: assignment
            BrokeredProductManagementPlanDuty:
              $ref: '#/components/schemas/arrangement'
            BrokeredProductManagementPlanDescription:
              $ref: '#/components/schemas/text'
            BrokeredProductManagementPlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            BrokeredProductManagementPlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            BrokeredProductManagementPlanSubjectMatter:
              type: string
              description: The subject matter of Brokered Product Management Plan
              format: object
      description: 'Input: Retrieve Brokered Product Management Plan'
    RetrieveBrokeredProductManagementPlanResponse:
      type: object
      properties:
        BrokeredProductManagementPlan:
          type: object
          properties:
            BrokeredProductManagementPlanType:
              $ref: '#/components/schemas/plantype'
            BrokeredProductManagementPlanReference:
              $ref: '#/components/schemas/plan'
            BrokeredProductManagementPlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            BrokeredProductManagementPlanAssignment:
              type: string
              description: The assignment of a required activity to a responsibe party in Brokered Product Management Plan
              format: assignment
            BrokeredProductManagementPlanDuty:
              $ref: '#/components/schemas/arrangement'
            BrokeredProductManagementPlanDescription:
              $ref: '#/components/schemas/text'
            BrokeredProductManagementPlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            BrokeredProductManagementPlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            BrokeredProductManagementPlanSubjectMatter:
              type: string
              description: The subject matter of Brokered Product Management Plan
              format: object
      description: 'Output: Retrieve Brokered Product Management Plan'
    UpdateBrokeredProductManagementPlanRequest:
      type: object
      properties:
        BrokeredProductManagementPlan:
          type: object
          properties:
            BrokeredProductManagementPlanType:
              $ref: '#/components/schemas/plantype'
            BrokeredProductManagementPlanReference:
              $ref: '#/components/schemas/plan'
            BrokeredProductManagementPlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            BrokeredProductManagementPlanAssignment:
              type: string
              description: The assignment of a required activity to a responsibe party in Brokered Product Management Plan
              format: assignment
            BrokeredProductManagementPlanDuty:
              $ref: '#/components/schemas/arrangement'
            BrokeredProductManagementPlanDescription:
              $ref: '#/components/schemas/text'
            BrokeredProductManagementPlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            BrokeredProductManagementPlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            BrokeredProductManagementPlanSubjectMatter:
              type: string
              description: The subject matter of Brokered Product Management Plan
              format: object
      description: 'Input: Update Brokered Product Management Plan'
    UpdateBrokeredProductManagementPlanResponse:
      type: object
      properties:
        BrokeredProductManagementPlan:
          type: object
          properties:
            BrokeredProductManagementPlanType:
              $ref: '#/components/schemas/plantype'
            BrokeredProductManagementPlanReference:
              $ref: '#/components/schemas/plan'
            BrokeredProductManagementPlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            BrokeredProductManagementPlanAssignment:
              type: string
              description: The assignment of a required activity to a responsibe party in Brokered Product Management Plan
              format: assignment
            BrokeredProductManagementPlanDuty:
              $ref: '#/components/schemas/arrangement'
            BrokeredProductManagementPlanDescription:
              $ref: '#/components/schemas/text'
            BrokeredProductManagementPlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            BrokeredProductManagementPlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            BrokeredProductManagementPlanSubjectMatter:
              type: string
              description: The subject matter of Brokered Product Management Plan
              format: object
      description: 'Output: Update Brokered Product Management Plan'
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ControlBrokeredProductManagementPlanResponse:
      description: ControlBrokeredProductManagementPlanResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ControlBrokeredProductManagementPlanResponse'
    CreateBrokeredProductManagementPlanResponse:
      description: CreateBrokeredProductManagementPlanResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateBrokeredProductManagementPlanResponse'
    ExchangeBrokeredProductManagementPlanResponse:
      description: ExchangeBrokeredProductManagementPlanResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExchangeBrokeredProductManagementPlanResponse'
    GrantBrokeredProductManagementPlanResponse:
      description: GrantBrokeredProductManagementPlanResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GrantBrokeredProductManagementPlanResponse'
    NotifyBrokeredProductManagementPlanResponse:
      description: NotifyBrokeredProductManagementPlanResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotifyBrokeredProductManagementPlanResponse'
    RequestBrokeredProductManagementPlanResponse:
      description: RequestBrokeredProductManagementPlanResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestBrokeredProductManagementPlanResponse'
    RetrieveBrokeredProductManagementPlanResponse:
      description: RetrieveBrokeredProductManagementPlanResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveBrokeredProductManagementPlanResponse'
    UpdateBrokeredProductManagementPlanResponse:
      description: UpdateBrokeredProductManagementPlanResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateBrokeredProductManagementPlanResponse'
    ProductionPerformanceAssessmentDuty:
      description: ProductionPerformanceAssessmentDuty
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProductionPerformanceAssessmentDuty'
    ProductionTroubleshootingDuty:
      description: ProductionTroubleshootingDuty
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProductionTroubleshootingDuty'
    ServiceLevelAgreementOversightDuty:
      description: ServiceLevelAgreementOversightDuty
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceLevelAgreementOversightDuty'
  parameters:
    brokeredproductid:
      name: brokeredproductid
      in: path
      required: true
      style: simple
      schema:
        type: string
    productionperformanceassessmentdutyid:
      name: productionperformanceassessmentdutyid
      in: path
      required: true
      style: simple
      schema:
        type: string
    productiontroubleshootingdutyid:
      name: productiontroubleshootingdutyid
      in: path
      required: true
      style: simple
      schema:
        type: string
    servicelevelagreementoversightdutyid:
      name: servicelevelagreementoversightdutyid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    ControlBrokeredProductManagementPlanRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ControlBrokeredProductManagementPlanRequest'
      required: true
    CreateBrokeredProductManagementPlanRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateBrokeredProductManagementPlanRequest'
      required: true
    ExchangeBrokeredProductManagementPlanRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExchangeBrokeredProductManagementPlanRequest'
      required: true
    GrantBrokeredProductManagementPlanRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GrantBrokeredProductManagementPlanRequest'
      required: true
    RequestBrokeredProductManagementPlanRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestBrokeredProductManagementPlanRequest'
      required: true
    UpdateBrokeredProductManagementPlanRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateBrokeredProductManagementPlanRequest'
      required: true
    ProductionPerformanceAssessmentDuty:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProductionPerformanceAssessmentDuty'
      required: true
    ProductionTroubleshootingDuty:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProductionTroubleshootingDuty'
      required: true
    ServiceLevelAgreementOversightDuty:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceLevelAgreementOversightDuty'
      required: true