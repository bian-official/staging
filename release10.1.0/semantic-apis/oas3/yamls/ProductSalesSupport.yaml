openapi: 3.0.1
info:
  title: Product Sales Support
  description: This Service Domain administers customer access to product specialists
  contact:
    name: BIAN
    url: https://bian.org
  version: '10.1.0'
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/ProductSalesSupport/10.1.0
paths:
  '/ProductSalesSupport/{productsalessupportid}/Control':
    put:
      tags:
        - CR - ProductSalesSupportAdministrativePlan
      summary: Control Product Sales Support Administrative Plan
      description: Control Product Sales Support Administrative Plan
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/productsalessupportid'
      requestBody:
        $ref: '#/components/requestBodies/ControlProductSalesSupportAdministrativePlanRequest'
      responses:
        '200':
          $ref: '#/components/responses/ControlProductSalesSupportAdministrativePlanResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /ProductSalesSupport/Create:
    post:
      tags:
        - CR - ProductSalesSupportAdministrativePlan
      summary: Create Product Sales Support Administrative Plan
      description: Create Product Sales Support Administrative Plan
      operationId: Create
      requestBody:
        $ref: '#/components/requestBodies/CreateProductSalesSupportAdministrativePlanRequest'
      responses:
        '200':
          $ref: '#/components/responses/CreateProductSalesSupportAdministrativePlanResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductSalesSupport/{productsalessupportid}/Exchange':
    put:
      tags:
        - CR - ProductSalesSupportAdministrativePlan
      summary: Exchange Product Sales Support Administrative Plan
      description: Exchange Product Sales Support Administrative Plan
      operationId: Exchange
      parameters:
        - $ref: '#/components/parameters/productsalessupportid'
      requestBody:
        $ref: '#/components/requestBodies/ExchangeProductSalesSupportAdministrativePlanRequest'
      responses:
        '200':
          $ref: '#/components/responses/ExchangeProductSalesSupportAdministrativePlanResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductSalesSupport/{productsalessupportid}/Grant':
    put:
      tags:
        - CR - ProductSalesSupportAdministrativePlan
      summary: Grant Product Sales Support Administrative Plan
      description: Grant Product Sales Support Administrative Plan
      operationId: Grant
      parameters:
        - $ref: '#/components/parameters/productsalessupportid'
      requestBody:
        $ref: '#/components/requestBodies/GrantProductSalesSupportAdministrativePlanRequest'
      responses:
        '200':
          $ref: '#/components/responses/GrantProductSalesSupportAdministrativePlanResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductSalesSupport/{productsalessupportid}/Notify':
    get:
      tags:
        - CR - ProductSalesSupportAdministrativePlan
      summary: Notify Product Sales Support Administrative Plan
      description: Notify Product Sales Support Administrative Plan
      operationId: Notify
      parameters:
        - $ref: '#/components/parameters/productsalessupportid'
      responses:
        '200':
          $ref: '#/components/responses/NotifyProductSalesSupportAdministrativePlanResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductSalesSupport/{productsalessupportid}/Request':
    put:
      tags:
        - CR - ProductSalesSupportAdministrativePlan
      summary: Request Product Sales Support Administrative Plan
      description: Request Product Sales Support Administrative Plan
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/productsalessupportid'
      requestBody:
        $ref: '#/components/requestBodies/RequestProductSalesSupportAdministrativePlanRequest'
      responses:
        '200':
          $ref: '#/components/responses/RequestProductSalesSupportAdministrativePlanResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductSalesSupport/{productsalessupportid}/Retrieve':
    get:
      tags:
        - CR - ProductSalesSupportAdministrativePlan
      summary: Retrieve Product Sales Support Administrative Plan
      description: Retrieve Product Sales Support Administrative Plan
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/productsalessupportid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveProductSalesSupportAdministrativePlanResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductSalesSupport/{productsalessupportid}/Update':
    put:
      tags:
        - CR - ProductSalesSupportAdministrativePlan
      summary: Update Product Sales Support Administrative Plan
      description: Update Product Sales Support Administrative Plan
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/productsalessupportid'
      requestBody:
        $ref: '#/components/requestBodies/UpdateProductSalesSupportAdministrativePlanRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateProductSalesSupportAdministrativePlanResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductSalesSupport/{productsalessupportid}/StaffAssignmentRoutine/{staffassignmentroutineid}/Exchange':
    put:
      tags:
        - BQ - StaffAssignmentRoutine
      summary: Exchange Staff Assignment Routine
      description: Exchange Staff Assignment Routine
      operationId: ExchangeStaffAssignmentRoutine
      parameters:
        - $ref: '#/components/parameters/productsalessupportid'
        - $ref: '#/components/parameters/staffassignmentroutineid'
      requestBody:
        $ref: '#/components/requestBodies/ExchangeStaffAssignmentRoutineRequest'
      responses:
        '200':
          $ref: '#/components/responses/ExchangeStaffAssignmentRoutineResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductSalesSupport/{productsalessupportid}/StaffAvailabilityTrackingRoutine/{staffavailabilitytrackingroutineid}/Exchange':
    put:
      tags:
        - BQ - StaffAvailabilityTrackingRoutine
      summary: Exchange Staff Availability Tracking Routine
      description: Exchange Staff Availability Tracking Routine
      operationId: ExchangeStaffAvailabilityTrackingRoutine
      parameters:
        - $ref: '#/components/parameters/productsalessupportid'
        - $ref: '#/components/parameters/staffavailabilitytrackingroutineid'
      requestBody:
        $ref: '#/components/requestBodies/ExchangeStaffAvailabilityTrackingRoutineRequest'
      responses:
        '200':
          $ref: '#/components/responses/ExchangeStaffAvailabilityTrackingRoutineResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductSalesSupport/{productsalessupportid}/StaffAssignmentRoutine/{staffassignmentroutineid}/Grant':
    put:
      tags:
        - BQ - StaffAssignmentRoutine
      summary: Grant Staff Assignment Routine
      description: Grant Staff Assignment Routine
      operationId: GrantStaffAssignmentRoutine
      parameters:
        - $ref: '#/components/parameters/productsalessupportid'
        - $ref: '#/components/parameters/staffassignmentroutineid'
      requestBody:
        $ref: '#/components/requestBodies/GrantStaffAssignmentRoutineRequest'
      responses:
        '200':
          $ref: '#/components/responses/GrantStaffAssignmentRoutineResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductSalesSupport/{productsalessupportid}/StaffAvailabilityTrackingRoutine/{staffavailabilitytrackingroutineid}/Grant':
    put:
      tags:
        - BQ - StaffAvailabilityTrackingRoutine
      summary: Grant Staff Availability Tracking Routine
      description: Grant Staff Availability Tracking Routine
      operationId: GrantStaffAvailabilityTrackingRoutine
      parameters:
        - $ref: '#/components/parameters/productsalessupportid'
        - $ref: '#/components/parameters/staffavailabilitytrackingroutineid'
      requestBody:
        $ref: '#/components/requestBodies/GrantStaffAvailabilityTrackingRoutineRequest'
      responses:
        '200':
          $ref: '#/components/responses/GrantStaffAvailabilityTrackingRoutineResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductSalesSupport/{productsalessupportid}/StaffAssignmentRoutine/{staffassignmentroutineid}/Notify':
    get:
      tags:
        - BQ - StaffAssignmentRoutine
      summary: Notify Staff Assignment Routine
      description: Notify Staff Assignment Routine
      operationId: NotifyStaffAssignmentRoutine
      parameters:
        - $ref: '#/components/parameters/productsalessupportid'
        - $ref: '#/components/parameters/staffassignmentroutineid'
      responses:
        '200':
          $ref: '#/components/responses/NotifyStaffAssignmentRoutineResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductSalesSupport/{productsalessupportid}/StaffAvailabilityTrackingRoutine/{staffavailabilitytrackingroutineid}/Notify':
    get:
      tags:
        - BQ - StaffAvailabilityTrackingRoutine
      summary: Notify Staff Availability Tracking Routine
      description: Notify Staff Availability Tracking Routine
      operationId: NotifyStaffAvailabilityTrackingRoutine
      parameters:
        - $ref: '#/components/parameters/productsalessupportid'
        - $ref: '#/components/parameters/staffavailabilitytrackingroutineid'
      responses:
        '200':
          $ref: '#/components/responses/NotifyStaffAvailabilityTrackingRoutineResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductSalesSupport/{productsalessupportid}/StaffAssignmentRoutine/{staffassignmentroutineid}/Request':
    put:
      tags:
        - BQ - StaffAssignmentRoutine
      summary: Request Staff Assignment Routine
      description: Request Staff Assignment Routine
      operationId: RequestStaffAssignmentRoutine
      parameters:
        - $ref: '#/components/parameters/productsalessupportid'
        - $ref: '#/components/parameters/staffassignmentroutineid'
      requestBody:
        $ref: '#/components/requestBodies/RequestStaffAssignmentRoutineRequest'
      responses:
        '200':
          $ref: '#/components/responses/RequestStaffAssignmentRoutineResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductSalesSupport/{productsalessupportid}/StaffAvailabilityTrackingRoutine/{staffavailabilitytrackingroutineid}/Request':
    put:
      tags:
        - BQ - StaffAvailabilityTrackingRoutine
      summary: Request Staff Availability Tracking Routine
      description: Request Staff Availability Tracking Routine
      operationId: RequestStaffAvailabilityTrackingRoutine
      parameters:
        - $ref: '#/components/parameters/productsalessupportid'
        - $ref: '#/components/parameters/staffavailabilitytrackingroutineid'
      requestBody:
        $ref: '#/components/requestBodies/RequestStaffAvailabilityTrackingRoutineRequest'
      responses:
        '200':
          $ref: '#/components/responses/RequestStaffAvailabilityTrackingRoutineResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductSalesSupport/{productsalessupportid}/StaffAssignmentRoutine/{staffassignmentroutineid}/Retrieve':
    get:
      tags:
        - BQ - StaffAssignmentRoutine
      summary: Retrieve Staff Assignment Routine
      description: Retrieve Staff Assignment Routine
      operationId: RetrieveStaffAssignmentRoutine
      parameters:
        - $ref: '#/components/parameters/productsalessupportid'
        - $ref: '#/components/parameters/staffassignmentroutineid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveStaffAssignmentRoutineResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductSalesSupport/{productsalessupportid}/StaffAvailabilityTrackingRoutine/{staffavailabilitytrackingroutineid}/Retrieve':
    get:
      tags:
        - BQ - StaffAvailabilityTrackingRoutine
      summary: Retrieve Staff Availability Tracking Routine
      description: Retrieve Staff Availability Tracking Routine
      operationId: RetrieveStaffAvailabilityTrackingRoutine
      parameters:
        - $ref: '#/components/parameters/productsalessupportid'
        - $ref: '#/components/parameters/staffavailabilitytrackingroutineid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveStaffAvailabilityTrackingRoutineResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductSalesSupport/{productsalessupportid}/StaffAssignmentRoutine/{staffassignmentroutineid}/Update':
    put:
      tags:
        - BQ - StaffAssignmentRoutine
      summary: Update Staff Assignment Routine
      description: Update Staff Assignment Routine
      operationId: UpdateStaffAssignmentRoutine
      parameters:
        - $ref: '#/components/parameters/productsalessupportid'
        - $ref: '#/components/parameters/staffassignmentroutineid'
      requestBody:
        $ref: '#/components/requestBodies/UpdateStaffAssignmentRoutineRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateStaffAssignmentRoutineResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductSalesSupport/{productsalessupportid}/StaffAvailabilityTrackingRoutine/{staffavailabilitytrackingroutineid}/Update':
    put:
      tags:
        - BQ - StaffAvailabilityTrackingRoutine
      summary: Update Staff Availability Tracking Routine
      description: Update Staff Availability Tracking Routine
      operationId: UpdateStaffAvailabilityTrackingRoutine
      parameters:
        - $ref: '#/components/parameters/productsalessupportid'
        - $ref: '#/components/parameters/staffavailabilitytrackingroutineid'
      requestBody:
        $ref: '#/components/requestBodies/UpdateStaffAvailabilityTrackingRoutineRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateStaffAvailabilityTrackingRoutineResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: object
          format: string
        status:
          type: object
          format: string
        message:
          type: object
          format: string
      description: Status Attributes
    involvedparty:
      type: object
      properties:
        Involvedparty:
          type: object
          description: ''
          format: datatype
      description: The operating unit/employee responsible for performing the routine
    schedule:
      type: object
      properties:
        Schedule:
          type: object
          description: "Defined sequence of planned tasks/actions or a timetable of available services\n\nA schedule is a time based series of something"
          format: datatype
      description: The timing and key actions/milestones involved in completing the routine
    name:
      type: object
      properties:
        Name:
          type: object
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: ''
    text:
      type: object
      properties:
        Text:
          type: object
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: ''
    businessservice:
      type: object
      properties:
        BusinessServiceName:
          $ref: '#/components/schemas/name'
        BusinessServiceType:
          type: object
          description: ''
          format: businessservicetypevalues(enumeration)
        BusinessServiceDescription:
          $ref: '#/components/schemas/text'
      description: The Staff Availability Tracking Routine specific Business Service
    goal:
      type: object
      properties:
        GoalType:
          type: string
          description: The type of goal
          format: string
        GoalDefinition:
          type: string
          description: 'A definition of the goal, including the intended actions required to achieve the goal'
          format: string
        GoalOrganization:
          type: string
          description: Identifies the interested parties and their roles and responsibilities for the specific actions supporting the achievement of the goal
          format: string
        GoalResult:
          type: string
          description: 'Assessment of how the work is progressing towards achieving the goal, including projections of likely outcomes'
          format: string
      description: ''
    budgettype:
      type: object
      properties:
        Budgettype:
          type: object
          description: ''
          format: datatype
      description: A Classification value that specifies the type of Budget
    amount:
      type: object
      properties:
        Amount:
          type: object
          description: "Number of monetary units specified in a currency, where the unit of currency is explicit and compliant with ISO 4217. (UN/CEFACT)\n\nThe decimal seperator is a dot.\n\n\nNumber of monetary units specified in a currency, where the unit of currency is explicit and compliant with ISO 4217. The decimal separator is a dot. (ISO20022)\nNote: A zero amount is considered a positive amount.\n- total number of digits: 18\n- number of digits in fractional part: 5\n- minInclusive: 0"
          format: datatype
      description: ''
    budgetarrangement:
      type: object
      properties:
        BudgetType:
          $ref: '#/components/schemas/budgettype'
        BudgetAmount:
          $ref: '#/components/schemas/amount'
      description: 'An arrangement which is specifying an estimate of costs, revenues, and resources over a specified period, reflecting a reading of future financial conditions and goals. (adapted from Business Dictionary)'
    plantype:
      type: object
      properties:
        Plantype:
          type: object
          description: 'Data type specifies the classification of a Plan '
          format: datatype
      description: A Classification value that specifies the type of Plan
    datetimeperiod:
      type: object
      properties:
        Datetimeperiod:
          type: object
          description: 'Time span defined by a start date and time, and an end date and time. (ISO20022)'
          format: datatype
      description: ''
    plan:
      type: object
      properties:
        PlanGoal:
          $ref: '#/components/schemas/goal'
        PlanBudget:
          $ref: '#/components/schemas/budgetarrangement'
        PlannedAction:
          type: object
          description: 'An action that is arranged in a plan for doing or achieving something '
          format: plannedaction(class)
        PlanType:
          $ref: '#/components/schemas/plantype'
        PlanOrganisation:
          type: string
          description: ''
          format: string
        PlanValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PlanDescription:
          $ref: '#/components/schemas/text'
      description: Reference to Staff Availability Tracking Routine
    StaffAvailabilityTrackingRoutine:
      type: object
      properties:
        Preconditions:
          type: object
          description: The required status/situation before the routine can be undertaken
          format: condition(class)
        BusinessUnit/EmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          type: object
          description: The completion status once the routine has been completed (note the need to fulfill a routine may recur frequently)
          format: condition(class)
        ProductSalesSupportAdministrativePlanReference:
          $ref: '#/components/schemas/plan'
        StaffAvailabilityTrackingRoutineReference:
          type: object
          description: Reference to Staff Availability Tracking Routine
          format: plannedaction(class)
        StaffAvailabilityTrackingRoutineType:
          $ref: '#/components/schemas/text'
      description: The Staff Availability Tracking Routine is an activity that is performed as one aspect of carrying out the Staff Availability Tracking Routine
    StaffAssignmentRoutine:
      type: object
      properties:
        Preconditions:
          type: object
          description: The required status/situation before the routine can be undertaken
          format: condition(class)
        BusinessUnit/EmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          type: object
          description: The completion status once the routine has been completed (note the need to fulfill a routine may recur frequently)
          format: condition(class)
        ProductSalesSupportAdministrativePlanReference:
          $ref: '#/components/schemas/plan'
        StaffAssignmentRoutineReference:
          type: object
          description: Reference to Staff Assignment Routine
          format: plannedaction(class)
        StaffAssignmentRoutineType:
          $ref: '#/components/schemas/text'
      description: The Staff Availability Tracking Routine is an activity that is performed as one aspect of carrying out the Staff Availability Tracking Routine
    analysistypevalues:
      enum:
        - PerformanceAnalysis
        - ActivityAnalysis
      type: string
      description: ">\n* `PerformanceAnalysis` - \n* `ActivityAnalysis` - \n"
    identifier:
      type: object
      properties:
        Identifier:
          type: object
          description: An identifier is a character string used to uniquely identify one instance of an object within an identification scheme that is managed by an agency. (UN/CEFAT)
          format: datatype
      description: An identifier that allows to uniquely refer to an instance of a Document.
    status:
      type: object
      properties:
        Status:
          type: object
          description: A characteristic that describe the object by referring to a state transition in its lifecycle.
          format: datatype
      description: 'Status of the document (e.g. delivered, paid, etc.). ISO20022'
    datetime:
      type: object
      properties:
        Datetime:
          type: object
          description: "A date time identifies a date and time of day to various common resolutions: year, month, week, day, hour, minute, second, and fraction of second. (UN/CEFACT)\n\nA particular point in the progression of time defined by a mandatory date and a mandatory time component, expressed in either UTC time format (YYYY-MM-DDThh:mm:ss.sssZ), local time with UTC offset format (YYYY-MM-DDThh:mm:ss.sss+/-hh:mm), or local time format (YYYY-MM-DDThh:mm:ss.sss). These representations are defined in \"XML Schema Part 2: Datatypes Second Edition - W3C Recommendation 28 October 2004\" which is aligned with ISO 8601. (ISO20022)\nNote on the time format:\n1) beginning / end of calendar day\n00:00:00 = the beginning of a calendar day\n24:00:00 = the end of a calendar day\n2) fractions of second in time format\nDecimal fractions of seconds may be included. In this case, the involved parties shall agree on the maximum number of digits that are allowed."
          format: datatype
      description: ''
    documentdatetimetypevalues:
      enum:
        - Creationdate
        - Capturingdate
        - Versiondate
        - Valuedate
        - Issuedate
      type: string
      description: ">\n* `Creationdate` - \n* `Capturingdate` - \n* `Versiondate` - \n* `Valuedate` - \n* `Issuedate` - \n"
    document:
      type: object
      properties:
        DocumentIdentifer:
          $ref: '#/components/schemas/identifier'
        DocumentVersion:
          $ref: '#/components/schemas/text'
        DocumentType:
          type: object
          description: 'Specifies the type of the document, for example commercial invoice. (ISO20022)'
          format: documenttype(class)
        DocumentStatus:
          $ref: '#/components/schemas/status'
        DocumentDateTime:
          $ref: '#/components/schemas/datetime'
        DocumentName:
          $ref: '#/components/schemas/name'
        DocumentDateTimeType:
          $ref: '#/components/schemas/documentdatetimetypevalues'
        DocumentPurpose:
          $ref: '#/components/schemas/text'
        DocumentFormat:
          $ref: '#/components/schemas/text'
        DocumentSubject:
          $ref: '#/components/schemas/text'
        DocumentDescription:
          $ref: '#/components/schemas/text'
      description: ''
    analysis:
      type: object
      properties:
        AnalysisType:
          $ref: '#/components/schemas/analysistypevalues'
        AnalysisResult:
          $ref: '#/components/schemas/text'
        AnalysisPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        AnalysisDocument:
          $ref: '#/components/schemas/document'
        AnalysisDateTime:
          $ref: '#/components/schemas/datetime'
        AnalysisSpecification:
          $ref: '#/components/schemas/text'
      description: ''
    actiontypevalues:
      enum:
        - Initiate
        - Execute
        - Create
        - Transfer
        - Pay
        - Deliver
      type: string
      description: ">\n* `Initiate` - \n* `Execute` - \n* `Create` - \n* `Transfer` - \n* `Pay` - \n* `Deliver` - \n"
    action:
      type: object
      properties:
        ActionType:
          $ref: '#/components/schemas/actiontypevalues'
      description: ''
    arrangementlifecyclestatus:
      type: object
      properties:
        Arrangementlifecyclestatus:
          type: object
          description: 'Data type that specifies the LifecycleStatus of arrangement (e.g., requested, proposed, offered, accepted, cancelled, terminated, fulfilled, etc.).'
          format: datatype
      description: 'A characteristic of arrangement which refers to the LifecycleStatus of arrangement (e.g., requested, proposed, offered, accepted, cancelled, terminated, fulfilled, etc.)'
    arrangement:
      type: object
      properties:
        ArrangementAction:
          $ref: '#/components/schemas/action'
        ArrangementStartDate:
          $ref: '#/components/schemas/datetime'
        ArrangementEndDate:
          $ref: '#/components/schemas/datetime'
        ArrangementStatus:
          $ref: '#/components/schemas/arrangementlifecyclestatus'
        ArrangementSubjectMatter:
          type: object
          description: ''
          format: subject(class)
      description: ''
    ProductSalesSupportOutcome:
      type: object
      properties:
        ProductSalesSupportPerformanceAnalysis:
          $ref: '#/components/schemas/analysis'
        ProductSalesSupportActivityAnalysis:
          $ref: '#/components/schemas/analysis'
        ProductSalesSupportAdministrativePlan:
          $ref: '#/components/schemas/plan'
        ProductSalesSupportAdministrationTask:
          $ref: '#/components/schemas/arrangement'
      description: The Staff Availability Tracking Routine is an activity that is performed as one aspect of carrying out the Staff Availability Tracking Routine
    assignment:
      type: object
      properties:
        Assignment:
          type: object
          description: "Assignment of something to an InvolvedParty\n\nMake-up of staff allocation and delivery expectations !!!!\n"
          format: datatype
      description: The assignment of a required activity to a responsibe party in Product Sales Support Administrative Plan
    accountbalance:
      type: object
      properties:
        Accountbalance:
          type: object
          description: "Numerical representation of the net increases and decreases in an account at a specific point in time. (ISO20022)\nhttps://www.iso20022.org/standardsrepository/type/Balance"
          format: datatype
      description: Balance of budget which is arranged whitin Product Sales Support Administrative Plan
    object:
      type: object
      properties:
        ObjectProperties:
          type: string
          description: ''
          format: string
        ObjectDescription:
          type: string
          description: ''
          format: string
      description: The subject matter of Product Sales Support Administrative Plan
    ProductSalesSupportAdministrativePlan:
      type: object
      properties:
        ProductSalesSupportAdministrativePlanBudgetType:
          $ref: '#/components/schemas/budgettype'
        ProductSalesSupportAdministrativePlanBudget:
          $ref: '#/components/schemas/amount'
        ProductSalesSupportAdministrativePlanAssignment:
          $ref: '#/components/schemas/assignment'
        ProductSalesSupportAdministrativePlanDuty:
          $ref: '#/components/schemas/arrangement'
        ProductSalesSupportAdministrativePlanAssociatedParty:
          $ref: '#/components/schemas/involvedparty'
        ProductSalesSupportAdministrativePlanBudgetBalance:
          $ref: '#/components/schemas/accountbalance'
        ProductSalesSupportAdministrativePlanSubjectMatter:
          $ref: '#/components/schemas/object'
        ProductSalesSupportAdministrativePlanType:
          $ref: '#/components/schemas/plantype'
        ProductSalesSupportAdministrativePlanReference:
          $ref: '#/components/schemas/plan'
        ProductSalesSupportAdministrativePlanDescription:
          $ref: '#/components/schemas/text'
      description: 'Handle and assign the day to day activities, capture time, costs and income for an operational unit within Product Sales Support. '
    ControlProductSalesSupportAdministrativePlanRequest:
      type: object
      properties:
        ProductSalesSupportAdministrativePlan:
          type: object
          properties:
            ProductSalesSupportAdministrativePlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            ProductSalesSupportAdministrativePlanAssignment:
              $ref: '#/components/schemas/assignment'
            ProductSalesSupportAdministrativePlanDuty:
              $ref: '#/components/schemas/arrangement'
            ProductSalesSupportAdministrativePlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            ProductSalesSupportAdministrativePlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            ProductSalesSupportAdministrativePlanSubjectMatter:
              $ref: '#/components/schemas/object'
            ProductSalesSupportAdministrativePlanType:
              $ref: '#/components/schemas/plantype'
            ProductSalesSupportAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            ProductSalesSupportAdministrativePlanDescription:
              $ref: '#/components/schemas/text'
      description: 'Input: Control Product Sales Support Administrative Plan'
    ControlProductSalesSupportAdministrativePlanResponse:
      type: object
      properties:
        ProductSalesSupportAdministrativePlan:
          type: object
          properties:
            ProductSalesSupportAdministrativePlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            ProductSalesSupportAdministrativePlanAssignment:
              $ref: '#/components/schemas/assignment'
            ProductSalesSupportAdministrativePlanDuty:
              $ref: '#/components/schemas/arrangement'
            ProductSalesSupportAdministrativePlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            ProductSalesSupportAdministrativePlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            ProductSalesSupportAdministrativePlanSubjectMatter:
              $ref: '#/components/schemas/object'
            ProductSalesSupportAdministrativePlanType:
              $ref: '#/components/schemas/plantype'
            ProductSalesSupportAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            ProductSalesSupportAdministrativePlanDescription:
              $ref: '#/components/schemas/text'
      description: 'Output: Control Product Sales Support Administrative Plan'
    CreateProductSalesSupportAdministrativePlanRequest:
      type: object
      properties:
        ProductSalesSupportAdministrativePlan:
          type: object
          properties:
            ProductSalesSupportAdministrativePlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            ProductSalesSupportAdministrativePlanAssignment:
              $ref: '#/components/schemas/assignment'
            ProductSalesSupportAdministrativePlanDuty:
              $ref: '#/components/schemas/arrangement'
            ProductSalesSupportAdministrativePlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            ProductSalesSupportAdministrativePlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            ProductSalesSupportAdministrativePlanSubjectMatter:
              $ref: '#/components/schemas/object'
            ProductSalesSupportAdministrativePlanType:
              $ref: '#/components/schemas/plantype'
            ProductSalesSupportAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            ProductSalesSupportAdministrativePlanDescription:
              $ref: '#/components/schemas/text'
      description: 'Input: Create Product Sales Support Administrative Plan'
    CreateProductSalesSupportAdministrativePlanResponse:
      type: object
      properties:
        ProductSalesSupportAdministrativePlan:
          type: object
          properties:
            ProductSalesSupportAdministrativePlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            ProductSalesSupportAdministrativePlanAssignment:
              $ref: '#/components/schemas/assignment'
            ProductSalesSupportAdministrativePlanDuty:
              $ref: '#/components/schemas/arrangement'
            ProductSalesSupportAdministrativePlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            ProductSalesSupportAdministrativePlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            ProductSalesSupportAdministrativePlanSubjectMatter:
              $ref: '#/components/schemas/object'
            ProductSalesSupportAdministrativePlanType:
              $ref: '#/components/schemas/plantype'
            ProductSalesSupportAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            ProductSalesSupportAdministrativePlanDescription:
              $ref: '#/components/schemas/text'
      description: 'Output: Create Product Sales Support Administrative Plan'
    ExchangeProductSalesSupportAdministrativePlanRequest:
      type: object
      properties:
        ProductSalesSupportAdministrativePlan:
          type: object
          properties:
            ProductSalesSupportAdministrativePlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            ProductSalesSupportAdministrativePlanAssignment:
              $ref: '#/components/schemas/assignment'
            ProductSalesSupportAdministrativePlanDuty:
              $ref: '#/components/schemas/arrangement'
            ProductSalesSupportAdministrativePlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            ProductSalesSupportAdministrativePlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            ProductSalesSupportAdministrativePlanSubjectMatter:
              $ref: '#/components/schemas/object'
            ProductSalesSupportAdministrativePlanType:
              $ref: '#/components/schemas/plantype'
            ProductSalesSupportAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            ProductSalesSupportAdministrativePlanDescription:
              $ref: '#/components/schemas/text'
      description: 'Input: Exchange Product Sales Support Administrative Plan'
    ExchangeProductSalesSupportAdministrativePlanResponse:
      type: object
      properties:
        ProductSalesSupportAdministrativePlan:
          type: object
          properties:
            ProductSalesSupportAdministrativePlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            ProductSalesSupportAdministrativePlanAssignment:
              $ref: '#/components/schemas/assignment'
            ProductSalesSupportAdministrativePlanDuty:
              $ref: '#/components/schemas/arrangement'
            ProductSalesSupportAdministrativePlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            ProductSalesSupportAdministrativePlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            ProductSalesSupportAdministrativePlanSubjectMatter:
              $ref: '#/components/schemas/object'
            ProductSalesSupportAdministrativePlanType:
              $ref: '#/components/schemas/plantype'
            ProductSalesSupportAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            ProductSalesSupportAdministrativePlanDescription:
              $ref: '#/components/schemas/text'
      description: 'Output: Exchange Product Sales Support Administrative Plan'
    GrantProductSalesSupportAdministrativePlanRequest:
      type: object
      properties:
        ProductSalesSupportAdministrativePlan:
          type: object
          properties:
            ProductSalesSupportAdministrativePlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            ProductSalesSupportAdministrativePlanAssignment:
              $ref: '#/components/schemas/assignment'
            ProductSalesSupportAdministrativePlanDuty:
              $ref: '#/components/schemas/arrangement'
            ProductSalesSupportAdministrativePlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            ProductSalesSupportAdministrativePlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            ProductSalesSupportAdministrativePlanSubjectMatter:
              $ref: '#/components/schemas/object'
            ProductSalesSupportAdministrativePlanType:
              $ref: '#/components/schemas/plantype'
            ProductSalesSupportAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            ProductSalesSupportAdministrativePlanDescription:
              $ref: '#/components/schemas/text'
      description: 'Input: Grant Product Sales Support Administrative Plan'
    GrantProductSalesSupportAdministrativePlanResponse:
      type: object
      properties:
        ProductSalesSupportAdministrativePlan:
          type: object
          properties:
            ProductSalesSupportAdministrativePlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            ProductSalesSupportAdministrativePlanAssignment:
              $ref: '#/components/schemas/assignment'
            ProductSalesSupportAdministrativePlanDuty:
              $ref: '#/components/schemas/arrangement'
            ProductSalesSupportAdministrativePlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            ProductSalesSupportAdministrativePlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            ProductSalesSupportAdministrativePlanSubjectMatter:
              $ref: '#/components/schemas/object'
            ProductSalesSupportAdministrativePlanType:
              $ref: '#/components/schemas/plantype'
            ProductSalesSupportAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            ProductSalesSupportAdministrativePlanDescription:
              $ref: '#/components/schemas/text'
      description: 'Output: Grant Product Sales Support Administrative Plan'
    NotifyProductSalesSupportAdministrativePlanRequest:
      type: object
      properties:
        ProductSalesSupportAdministrativePlan:
          type: object
          properties:
            ProductSalesSupportAdministrativePlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            ProductSalesSupportAdministrativePlanAssignment:
              $ref: '#/components/schemas/assignment'
            ProductSalesSupportAdministrativePlanDuty:
              $ref: '#/components/schemas/arrangement'
            ProductSalesSupportAdministrativePlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            ProductSalesSupportAdministrativePlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            ProductSalesSupportAdministrativePlanSubjectMatter:
              $ref: '#/components/schemas/object'
            ProductSalesSupportAdministrativePlanType:
              $ref: '#/components/schemas/plantype'
            ProductSalesSupportAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            ProductSalesSupportAdministrativePlanDescription:
              $ref: '#/components/schemas/text'
      description: 'Input: Notify Product Sales Support Administrative Plan'
    NotifyProductSalesSupportAdministrativePlanResponse:
      type: object
      properties:
        ProductSalesSupportAdministrativePlan:
          type: object
          properties:
            ProductSalesSupportAdministrativePlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            ProductSalesSupportAdministrativePlanAssignment:
              $ref: '#/components/schemas/assignment'
            ProductSalesSupportAdministrativePlanDuty:
              $ref: '#/components/schemas/arrangement'
            ProductSalesSupportAdministrativePlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            ProductSalesSupportAdministrativePlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            ProductSalesSupportAdministrativePlanSubjectMatter:
              $ref: '#/components/schemas/object'
            ProductSalesSupportAdministrativePlanType:
              $ref: '#/components/schemas/plantype'
            ProductSalesSupportAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            ProductSalesSupportAdministrativePlanDescription:
              $ref: '#/components/schemas/text'
      description: 'Output: Notify Product Sales Support Administrative Plan'
    RequestProductSalesSupportAdministrativePlanRequest:
      type: object
      properties:
        ProductSalesSupportAdministrativePlan:
          type: object
          properties:
            ProductSalesSupportAdministrativePlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            ProductSalesSupportAdministrativePlanAssignment:
              $ref: '#/components/schemas/assignment'
            ProductSalesSupportAdministrativePlanDuty:
              $ref: '#/components/schemas/arrangement'
            ProductSalesSupportAdministrativePlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            ProductSalesSupportAdministrativePlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            ProductSalesSupportAdministrativePlanSubjectMatter:
              $ref: '#/components/schemas/object'
            ProductSalesSupportAdministrativePlanType:
              $ref: '#/components/schemas/plantype'
            ProductSalesSupportAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            ProductSalesSupportAdministrativePlanDescription:
              $ref: '#/components/schemas/text'
      description: 'Input: Request Product Sales Support Administrative Plan'
    RequestProductSalesSupportAdministrativePlanResponse:
      type: object
      properties:
        ProductSalesSupportAdministrativePlan:
          type: object
          properties:
            ProductSalesSupportAdministrativePlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            ProductSalesSupportAdministrativePlanAssignment:
              $ref: '#/components/schemas/assignment'
            ProductSalesSupportAdministrativePlanDuty:
              $ref: '#/components/schemas/arrangement'
            ProductSalesSupportAdministrativePlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            ProductSalesSupportAdministrativePlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            ProductSalesSupportAdministrativePlanSubjectMatter:
              $ref: '#/components/schemas/object'
            ProductSalesSupportAdministrativePlanType:
              $ref: '#/components/schemas/plantype'
            ProductSalesSupportAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            ProductSalesSupportAdministrativePlanDescription:
              $ref: '#/components/schemas/text'
      description: 'Output: Request Product Sales Support Administrative Plan'
    RetrieveProductSalesSupportAdministrativePlanRequest:
      type: object
      properties:
        ProductSalesSupportAdministrativePlan:
          type: object
          properties:
            ProductSalesSupportAdministrativePlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            ProductSalesSupportAdministrativePlanAssignment:
              $ref: '#/components/schemas/assignment'
            ProductSalesSupportAdministrativePlanDuty:
              $ref: '#/components/schemas/arrangement'
            ProductSalesSupportAdministrativePlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            ProductSalesSupportAdministrativePlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            ProductSalesSupportAdministrativePlanSubjectMatter:
              $ref: '#/components/schemas/object'
            ProductSalesSupportAdministrativePlanType:
              $ref: '#/components/schemas/plantype'
            ProductSalesSupportAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            ProductSalesSupportAdministrativePlanDescription:
              $ref: '#/components/schemas/text'
      description: 'Input: Retrieve Product Sales Support Administrative Plan'
    RetrieveProductSalesSupportAdministrativePlanResponse:
      type: object
      properties:
        ProductSalesSupportAdministrativePlan:
          type: object
          properties:
            ProductSalesSupportAdministrativePlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            ProductSalesSupportAdministrativePlanAssignment:
              $ref: '#/components/schemas/assignment'
            ProductSalesSupportAdministrativePlanDuty:
              $ref: '#/components/schemas/arrangement'
            ProductSalesSupportAdministrativePlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            ProductSalesSupportAdministrativePlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            ProductSalesSupportAdministrativePlanSubjectMatter:
              $ref: '#/components/schemas/object'
            ProductSalesSupportAdministrativePlanType:
              $ref: '#/components/schemas/plantype'
            ProductSalesSupportAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            ProductSalesSupportAdministrativePlanDescription:
              $ref: '#/components/schemas/text'
      description: 'Output: Retrieve Product Sales Support Administrative Plan'
    UpdateProductSalesSupportAdministrativePlanRequest:
      type: object
      properties:
        ProductSalesSupportAdministrativePlan:
          type: object
          properties:
            ProductSalesSupportAdministrativePlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            ProductSalesSupportAdministrativePlanAssignment:
              $ref: '#/components/schemas/assignment'
            ProductSalesSupportAdministrativePlanDuty:
              $ref: '#/components/schemas/arrangement'
            ProductSalesSupportAdministrativePlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            ProductSalesSupportAdministrativePlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            ProductSalesSupportAdministrativePlanSubjectMatter:
              $ref: '#/components/schemas/object'
            ProductSalesSupportAdministrativePlanType:
              $ref: '#/components/schemas/plantype'
            ProductSalesSupportAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            ProductSalesSupportAdministrativePlanDescription:
              $ref: '#/components/schemas/text'
      description: 'Input: Update Product Sales Support Administrative Plan'
    UpdateProductSalesSupportAdministrativePlanResponse:
      type: object
      properties:
        ProductSalesSupportAdministrativePlan:
          type: object
          properties:
            ProductSalesSupportAdministrativePlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            ProductSalesSupportAdministrativePlanAssignment:
              $ref: '#/components/schemas/assignment'
            ProductSalesSupportAdministrativePlanDuty:
              $ref: '#/components/schemas/arrangement'
            ProductSalesSupportAdministrativePlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            ProductSalesSupportAdministrativePlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            ProductSalesSupportAdministrativePlanSubjectMatter:
              $ref: '#/components/schemas/object'
            ProductSalesSupportAdministrativePlanType:
              $ref: '#/components/schemas/plantype'
            ProductSalesSupportAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            ProductSalesSupportAdministrativePlanDescription:
              $ref: '#/components/schemas/text'
      description: 'Output: Update Product Sales Support Administrative Plan'
    ExchangeStaffAssignmentRoutineRequest:
      type: object
      properties:
        StaffAssignmentRoutine:
          type: object
          properties:
            Preconditions:
              type: object
              description: The required status/situation before the routine can be undertaken
              format: condition(class)
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Schedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            Postconditions:
              type: object
              description: The completion status once the routine has been completed (note the need to fulfill a routine may recur frequently)
              format: condition(class)
            ProductSalesSupportAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            StaffAssignmentRoutineReference:
              type: object
              description: Reference to Staff Assignment Routine
              format: plannedaction(class)
            StaffAssignmentRoutineType:
              $ref: '#/components/schemas/text'
      description: 'Input: Exchange Staff Assignment Routine'
    ExchangeStaffAssignmentRoutineResponse:
      type: object
      properties:
        StaffAssignmentRoutine:
          type: object
          properties:
            Preconditions:
              type: object
              description: The required status/situation before the routine can be undertaken
              format: condition(class)
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Schedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            Postconditions:
              type: object
              description: The completion status once the routine has been completed (note the need to fulfill a routine may recur frequently)
              format: condition(class)
            ProductSalesSupportAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            StaffAssignmentRoutineReference:
              type: object
              description: Reference to Staff Assignment Routine
              format: plannedaction(class)
            StaffAssignmentRoutineType:
              $ref: '#/components/schemas/text'
      description: 'Output: Exchange Staff Assignment Routine'
    ExchangeStaffAvailabilityTrackingRoutineRequest:
      type: object
      properties:
        StaffAvailabilityTrackingRoutine:
          type: object
          properties:
            Preconditions:
              type: object
              description: The required status/situation before the routine can be undertaken
              format: condition(class)
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Schedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            Postconditions:
              type: object
              description: The completion status once the routine has been completed (note the need to fulfill a routine may recur frequently)
              format: condition(class)
            ProductSalesSupportAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            StaffAvailabilityTrackingRoutineReference:
              type: object
              description: Reference to Staff Availability Tracking Routine
              format: plannedaction(class)
            StaffAvailabilityTrackingRoutineType:
              $ref: '#/components/schemas/text'
      description: 'Input: Exchange Staff Availability Tracking Routine'
    ExchangeStaffAvailabilityTrackingRoutineResponse:
      type: object
      properties:
        StaffAvailabilityTrackingRoutine:
          type: object
          properties:
            Preconditions:
              type: object
              description: The required status/situation before the routine can be undertaken
              format: condition(class)
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Schedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            Postconditions:
              type: object
              description: The completion status once the routine has been completed (note the need to fulfill a routine may recur frequently)
              format: condition(class)
            ProductSalesSupportAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            StaffAvailabilityTrackingRoutineReference:
              type: object
              description: Reference to Staff Availability Tracking Routine
              format: plannedaction(class)
            StaffAvailabilityTrackingRoutineType:
              $ref: '#/components/schemas/text'
      description: 'Output: Exchange Staff Availability Tracking Routine'
    GrantStaffAssignmentRoutineRequest:
      type: object
      properties:
        StaffAssignmentRoutine:
          type: object
          properties:
            Preconditions:
              type: object
              description: The required status/situation before the routine can be undertaken
              format: condition(class)
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Schedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            Postconditions:
              type: object
              description: The completion status once the routine has been completed (note the need to fulfill a routine may recur frequently)
              format: condition(class)
            ProductSalesSupportAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            StaffAssignmentRoutineReference:
              type: object
              description: Reference to Staff Assignment Routine
              format: plannedaction(class)
            StaffAssignmentRoutineType:
              $ref: '#/components/schemas/text'
      description: 'Input: Grant Staff Assignment Routine'
    GrantStaffAssignmentRoutineResponse:
      type: object
      properties:
        StaffAssignmentRoutine:
          type: object
          properties:
            Preconditions:
              type: object
              description: The required status/situation before the routine can be undertaken
              format: condition(class)
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Schedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            Postconditions:
              type: object
              description: The completion status once the routine has been completed (note the need to fulfill a routine may recur frequently)
              format: condition(class)
            ProductSalesSupportAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            StaffAssignmentRoutineReference:
              type: object
              description: Reference to Staff Assignment Routine
              format: plannedaction(class)
            StaffAssignmentRoutineType:
              $ref: '#/components/schemas/text'
      description: 'Output: Grant Staff Assignment Routine'
    GrantStaffAvailabilityTrackingRoutineRequest:
      type: object
      properties:
        StaffAvailabilityTrackingRoutine:
          type: object
          properties:
            Preconditions:
              type: object
              description: The required status/situation before the routine can be undertaken
              format: condition(class)
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Schedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            Postconditions:
              type: object
              description: The completion status once the routine has been completed (note the need to fulfill a routine may recur frequently)
              format: condition(class)
            ProductSalesSupportAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            StaffAvailabilityTrackingRoutineReference:
              type: object
              description: Reference to Staff Availability Tracking Routine
              format: plannedaction(class)
            StaffAvailabilityTrackingRoutineType:
              $ref: '#/components/schemas/text'
      description: 'Input: Grant Staff Availability Tracking Routine'
    GrantStaffAvailabilityTrackingRoutineResponse:
      type: object
      properties:
        StaffAvailabilityTrackingRoutine:
          type: object
          properties:
            Preconditions:
              type: object
              description: The required status/situation before the routine can be undertaken
              format: condition(class)
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Schedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            Postconditions:
              type: object
              description: The completion status once the routine has been completed (note the need to fulfill a routine may recur frequently)
              format: condition(class)
            ProductSalesSupportAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            StaffAvailabilityTrackingRoutineReference:
              type: object
              description: Reference to Staff Availability Tracking Routine
              format: plannedaction(class)
            StaffAvailabilityTrackingRoutineType:
              $ref: '#/components/schemas/text'
      description: 'Output: Grant Staff Availability Tracking Routine'
    NotifyStaffAssignmentRoutineRequest:
      type: object
      properties:
        StaffAssignmentRoutine:
          type: object
          properties:
            Preconditions:
              type: object
              description: The required status/situation before the routine can be undertaken
              format: condition(class)
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Schedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            Postconditions:
              type: object
              description: The completion status once the routine has been completed (note the need to fulfill a routine may recur frequently)
              format: condition(class)
            ProductSalesSupportAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            StaffAssignmentRoutineReference:
              type: object
              description: Reference to Staff Assignment Routine
              format: plannedaction(class)
            StaffAssignmentRoutineType:
              $ref: '#/components/schemas/text'
      description: 'Input: Notify Staff Assignment Routine'
    NotifyStaffAssignmentRoutineResponse:
      type: object
      properties:
        StaffAssignmentRoutine:
          type: object
          properties:
            Preconditions:
              type: object
              description: The required status/situation before the routine can be undertaken
              format: condition(class)
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Schedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            Postconditions:
              type: object
              description: The completion status once the routine has been completed (note the need to fulfill a routine may recur frequently)
              format: condition(class)
            ProductSalesSupportAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            StaffAssignmentRoutineReference:
              type: object
              description: Reference to Staff Assignment Routine
              format: plannedaction(class)
            StaffAssignmentRoutineType:
              $ref: '#/components/schemas/text'
      description: 'Output: Notify Staff Assignment Routine'
    NotifyStaffAvailabilityTrackingRoutineRequest:
      type: object
      properties:
        StaffAvailabilityTrackingRoutine:
          type: object
          properties:
            Preconditions:
              type: object
              description: The required status/situation before the routine can be undertaken
              format: condition(class)
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Schedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            Postconditions:
              type: object
              description: The completion status once the routine has been completed (note the need to fulfill a routine may recur frequently)
              format: condition(class)
            ProductSalesSupportAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            StaffAvailabilityTrackingRoutineReference:
              type: object
              description: Reference to Staff Availability Tracking Routine
              format: plannedaction(class)
            StaffAvailabilityTrackingRoutineType:
              $ref: '#/components/schemas/text'
      description: 'Input: Notify Staff Availability Tracking Routine'
    NotifyStaffAvailabilityTrackingRoutineResponse:
      type: object
      properties:
        StaffAvailabilityTrackingRoutine:
          type: object
          properties:
            Preconditions:
              type: object
              description: The required status/situation before the routine can be undertaken
              format: condition(class)
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Schedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            Postconditions:
              type: object
              description: The completion status once the routine has been completed (note the need to fulfill a routine may recur frequently)
              format: condition(class)
            ProductSalesSupportAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            StaffAvailabilityTrackingRoutineReference:
              type: object
              description: Reference to Staff Availability Tracking Routine
              format: plannedaction(class)
            StaffAvailabilityTrackingRoutineType:
              $ref: '#/components/schemas/text'
      description: 'Output: Notify Staff Availability Tracking Routine'
    RequestStaffAssignmentRoutineRequest:
      type: object
      properties:
        StaffAssignmentRoutine:
          type: object
          properties:
            Preconditions:
              type: object
              description: The required status/situation before the routine can be undertaken
              format: condition(class)
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Schedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            Postconditions:
              type: object
              description: The completion status once the routine has been completed (note the need to fulfill a routine may recur frequently)
              format: condition(class)
            ProductSalesSupportAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            StaffAssignmentRoutineReference:
              type: object
              description: Reference to Staff Assignment Routine
              format: plannedaction(class)
            StaffAssignmentRoutineType:
              $ref: '#/components/schemas/text'
      description: 'Input: Request Staff Assignment Routine'
    RequestStaffAssignmentRoutineResponse:
      type: object
      properties:
        StaffAssignmentRoutine:
          type: object
          properties:
            Preconditions:
              type: object
              description: The required status/situation before the routine can be undertaken
              format: condition(class)
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Schedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            Postconditions:
              type: object
              description: The completion status once the routine has been completed (note the need to fulfill a routine may recur frequently)
              format: condition(class)
            ProductSalesSupportAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            StaffAssignmentRoutineReference:
              type: object
              description: Reference to Staff Assignment Routine
              format: plannedaction(class)
            StaffAssignmentRoutineType:
              $ref: '#/components/schemas/text'
      description: 'Output: Request Staff Assignment Routine'
    RequestStaffAvailabilityTrackingRoutineRequest:
      type: object
      properties:
        StaffAvailabilityTrackingRoutine:
          type: object
          properties:
            Preconditions:
              type: object
              description: The required status/situation before the routine can be undertaken
              format: condition(class)
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Schedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            Postconditions:
              type: object
              description: The completion status once the routine has been completed (note the need to fulfill a routine may recur frequently)
              format: condition(class)
            ProductSalesSupportAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            StaffAvailabilityTrackingRoutineReference:
              type: object
              description: Reference to Staff Availability Tracking Routine
              format: plannedaction(class)
            StaffAvailabilityTrackingRoutineType:
              $ref: '#/components/schemas/text'
      description: 'Input: Request Staff Availability Tracking Routine'
    RequestStaffAvailabilityTrackingRoutineResponse:
      type: object
      properties:
        StaffAvailabilityTrackingRoutine:
          type: object
          properties:
            Preconditions:
              type: object
              description: The required status/situation before the routine can be undertaken
              format: condition(class)
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Schedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            Postconditions:
              type: object
              description: The completion status once the routine has been completed (note the need to fulfill a routine may recur frequently)
              format: condition(class)
            ProductSalesSupportAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            StaffAvailabilityTrackingRoutineReference:
              type: object
              description: Reference to Staff Availability Tracking Routine
              format: plannedaction(class)
            StaffAvailabilityTrackingRoutineType:
              $ref: '#/components/schemas/text'
      description: 'Output: Request Staff Availability Tracking Routine'
    RetrieveStaffAssignmentRoutineRequest:
      type: object
      properties:
        StaffAssignmentRoutine:
          type: object
          properties:
            Preconditions:
              type: object
              description: The required status/situation before the routine can be undertaken
              format: condition(class)
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Schedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            Postconditions:
              type: object
              description: The completion status once the routine has been completed (note the need to fulfill a routine may recur frequently)
              format: condition(class)
            ProductSalesSupportAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            StaffAssignmentRoutineReference:
              type: object
              description: Reference to Staff Assignment Routine
              format: plannedaction(class)
            StaffAssignmentRoutineType:
              $ref: '#/components/schemas/text'
      description: 'Input: Retrieve Staff Assignment Routine'
    RetrieveStaffAssignmentRoutineResponse:
      type: object
      properties:
        StaffAssignmentRoutine:
          type: object
          properties:
            Preconditions:
              type: object
              description: The required status/situation before the routine can be undertaken
              format: condition(class)
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Schedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            Postconditions:
              type: object
              description: The completion status once the routine has been completed (note the need to fulfill a routine may recur frequently)
              format: condition(class)
            ProductSalesSupportAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            StaffAssignmentRoutineReference:
              type: object
              description: Reference to Staff Assignment Routine
              format: plannedaction(class)
            StaffAssignmentRoutineType:
              $ref: '#/components/schemas/text'
      description: 'Output: Retrieve Staff Assignment Routine'
    RetrieveStaffAvailabilityTrackingRoutineRequest:
      type: object
      properties:
        StaffAvailabilityTrackingRoutine:
          type: object
          properties:
            Preconditions:
              type: object
              description: The required status/situation before the routine can be undertaken
              format: condition(class)
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Schedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            Postconditions:
              type: object
              description: The completion status once the routine has been completed (note the need to fulfill a routine may recur frequently)
              format: condition(class)
            ProductSalesSupportAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            StaffAvailabilityTrackingRoutineReference:
              type: object
              description: Reference to Staff Availability Tracking Routine
              format: plannedaction(class)
            StaffAvailabilityTrackingRoutineType:
              $ref: '#/components/schemas/text'
      description: 'Input: Retrieve Staff Availability Tracking Routine'
    RetrieveStaffAvailabilityTrackingRoutineResponse:
      type: object
      properties:
        StaffAvailabilityTrackingRoutine:
          type: object
          properties:
            Preconditions:
              type: object
              description: The required status/situation before the routine can be undertaken
              format: condition(class)
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Schedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            Postconditions:
              type: object
              description: The completion status once the routine has been completed (note the need to fulfill a routine may recur frequently)
              format: condition(class)
            ProductSalesSupportAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            StaffAvailabilityTrackingRoutineReference:
              type: object
              description: Reference to Staff Availability Tracking Routine
              format: plannedaction(class)
            StaffAvailabilityTrackingRoutineType:
              $ref: '#/components/schemas/text'
      description: 'Output: Retrieve Staff Availability Tracking Routine'
    UpdateStaffAssignmentRoutineRequest:
      type: object
      properties:
        StaffAssignmentRoutine:
          type: object
          properties:
            Preconditions:
              type: object
              description: The required status/situation before the routine can be undertaken
              format: condition(class)
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Schedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            Postconditions:
              type: object
              description: The completion status once the routine has been completed (note the need to fulfill a routine may recur frequently)
              format: condition(class)
            ProductSalesSupportAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            StaffAssignmentRoutineReference:
              type: object
              description: Reference to Staff Assignment Routine
              format: plannedaction(class)
            StaffAssignmentRoutineType:
              $ref: '#/components/schemas/text'
      description: 'Input: Update Staff Assignment Routine'
    UpdateStaffAssignmentRoutineResponse:
      type: object
      properties:
        StaffAssignmentRoutine:
          type: object
          properties:
            Preconditions:
              type: object
              description: The required status/situation before the routine can be undertaken
              format: condition(class)
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Schedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            Postconditions:
              type: object
              description: The completion status once the routine has been completed (note the need to fulfill a routine may recur frequently)
              format: condition(class)
            ProductSalesSupportAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            StaffAssignmentRoutineReference:
              type: object
              description: Reference to Staff Assignment Routine
              format: plannedaction(class)
            StaffAssignmentRoutineType:
              $ref: '#/components/schemas/text'
      description: 'Output: Update Staff Assignment Routine'
    UpdateStaffAvailabilityTrackingRoutineRequest:
      type: object
      properties:
        StaffAvailabilityTrackingRoutine:
          type: object
          properties:
            Preconditions:
              type: object
              description: The required status/situation before the routine can be undertaken
              format: condition(class)
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Schedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            Postconditions:
              type: object
              description: The completion status once the routine has been completed (note the need to fulfill a routine may recur frequently)
              format: condition(class)
            ProductSalesSupportAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            StaffAvailabilityTrackingRoutineReference:
              type: object
              description: Reference to Staff Availability Tracking Routine
              format: plannedaction(class)
            StaffAvailabilityTrackingRoutineType:
              $ref: '#/components/schemas/text'
      description: 'Input: Update Staff Availability Tracking Routine'
    UpdateStaffAvailabilityTrackingRoutineResponse:
      type: object
      properties:
        StaffAvailabilityTrackingRoutine:
          type: object
          properties:
            Preconditions:
              type: object
              description: The required status/situation before the routine can be undertaken
              format: condition(class)
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Schedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            Postconditions:
              type: object
              description: The completion status once the routine has been completed (note the need to fulfill a routine may recur frequently)
              format: condition(class)
            ProductSalesSupportAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            StaffAvailabilityTrackingRoutineReference:
              type: object
              description: Reference to Staff Availability Tracking Routine
              format: plannedaction(class)
            StaffAvailabilityTrackingRoutineType:
              $ref: '#/components/schemas/text'
      description: 'Output: Update Staff Availability Tracking Routine'
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ControlProductSalesSupportAdministrativePlanResponse:
      description: ControlProductSalesSupportAdministrativePlanResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ControlProductSalesSupportAdministrativePlanResponse'
    CreateProductSalesSupportAdministrativePlanResponse:
      description: CreateProductSalesSupportAdministrativePlanResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateProductSalesSupportAdministrativePlanResponse'
    ExchangeProductSalesSupportAdministrativePlanResponse:
      description: ExchangeProductSalesSupportAdministrativePlanResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExchangeProductSalesSupportAdministrativePlanResponse'
    GrantProductSalesSupportAdministrativePlanResponse:
      description: GrantProductSalesSupportAdministrativePlanResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GrantProductSalesSupportAdministrativePlanResponse'
    NotifyProductSalesSupportAdministrativePlanResponse:
      description: NotifyProductSalesSupportAdministrativePlanResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotifyProductSalesSupportAdministrativePlanResponse'
    RequestProductSalesSupportAdministrativePlanResponse:
      description: RequestProductSalesSupportAdministrativePlanResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestProductSalesSupportAdministrativePlanResponse'
    RetrieveProductSalesSupportAdministrativePlanResponse:
      description: RetrieveProductSalesSupportAdministrativePlanResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveProductSalesSupportAdministrativePlanResponse'
    UpdateProductSalesSupportAdministrativePlanResponse:
      description: UpdateProductSalesSupportAdministrativePlanResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateProductSalesSupportAdministrativePlanResponse'
    ExchangeStaffAssignmentRoutineResponse:
      description: ExchangeStaffAssignmentRoutineResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExchangeStaffAssignmentRoutineResponse'
    ExchangeStaffAvailabilityTrackingRoutineResponse:
      description: ExchangeStaffAvailabilityTrackingRoutineResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExchangeStaffAvailabilityTrackingRoutineResponse'
    GrantStaffAssignmentRoutineResponse:
      description: GrantStaffAssignmentRoutineResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GrantStaffAssignmentRoutineResponse'
    GrantStaffAvailabilityTrackingRoutineResponse:
      description: GrantStaffAvailabilityTrackingRoutineResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GrantStaffAvailabilityTrackingRoutineResponse'
    NotifyStaffAssignmentRoutineResponse:
      description: NotifyStaffAssignmentRoutineResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotifyStaffAssignmentRoutineResponse'
    NotifyStaffAvailabilityTrackingRoutineResponse:
      description: NotifyStaffAvailabilityTrackingRoutineResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotifyStaffAvailabilityTrackingRoutineResponse'
    RequestStaffAssignmentRoutineResponse:
      description: RequestStaffAssignmentRoutineResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestStaffAssignmentRoutineResponse'
    RequestStaffAvailabilityTrackingRoutineResponse:
      description: RequestStaffAvailabilityTrackingRoutineResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestStaffAvailabilityTrackingRoutineResponse'
    RetrieveStaffAssignmentRoutineResponse:
      description: RetrieveStaffAssignmentRoutineResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveStaffAssignmentRoutineResponse'
    RetrieveStaffAvailabilityTrackingRoutineResponse:
      description: RetrieveStaffAvailabilityTrackingRoutineResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveStaffAvailabilityTrackingRoutineResponse'
    UpdateStaffAssignmentRoutineResponse:
      description: UpdateStaffAssignmentRoutineResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateStaffAssignmentRoutineResponse'
    UpdateStaffAvailabilityTrackingRoutineResponse:
      description: UpdateStaffAvailabilityTrackingRoutineResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateStaffAvailabilityTrackingRoutineResponse'
  parameters:
    productsalessupportid:
      name: productsalessupportid
      in: path
      required: true
      style: simple
      schema:
        type: string
    staffassignmentroutineid:
      name: staffassignmentroutineid
      in: path
      required: true
      style: simple
      schema:
        type: string
    staffavailabilitytrackingroutineid:
      name: staffavailabilitytrackingroutineid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    ControlProductSalesSupportAdministrativePlanRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ControlProductSalesSupportAdministrativePlanRequest'
      required: true
    CreateProductSalesSupportAdministrativePlanRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateProductSalesSupportAdministrativePlanRequest'
      required: true
    ExchangeProductSalesSupportAdministrativePlanRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExchangeProductSalesSupportAdministrativePlanRequest'
      required: true
    GrantProductSalesSupportAdministrativePlanRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GrantProductSalesSupportAdministrativePlanRequest'
      required: true
    RequestProductSalesSupportAdministrativePlanRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestProductSalesSupportAdministrativePlanRequest'
      required: true
    UpdateProductSalesSupportAdministrativePlanRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateProductSalesSupportAdministrativePlanRequest'
      required: true
    ExchangeStaffAssignmentRoutineRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExchangeStaffAssignmentRoutineRequest'
      required: true
    ExchangeStaffAvailabilityTrackingRoutineRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExchangeStaffAvailabilityTrackingRoutineRequest'
      required: true
    GrantStaffAssignmentRoutineRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GrantStaffAssignmentRoutineRequest'
      required: true
    GrantStaffAvailabilityTrackingRoutineRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GrantStaffAvailabilityTrackingRoutineRequest'
      required: true
    RequestStaffAssignmentRoutineRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestStaffAssignmentRoutineRequest'
      required: true
    RequestStaffAvailabilityTrackingRoutineRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestStaffAvailabilityTrackingRoutineRequest'
      required: true
    UpdateStaffAssignmentRoutineRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateStaffAssignmentRoutineRequest'
      required: true
    UpdateStaffAvailabilityTrackingRoutineRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateStaffAvailabilityTrackingRoutineRequest'
      required: true