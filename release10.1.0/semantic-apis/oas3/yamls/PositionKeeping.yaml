openapi: 3.0.1
info:
  title: Position Keeping
  description: This service domain maintains a financial transaction log to support production. Reconciled financial transactions are subsequently posted to the accounting systems
  contact:
    name: BIAN
    url: https://bian.org
  version: '10.1.0'
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/PositionKeeping/10.1.0
paths:
  /PositionKeeping/Initiate:
    post:
      tags:
        - CR - FinancialPositionLog
      summary: InCR Initiate a position keeping transaction log
      description: InCR Initiate a position keeping transaction log
      operationId: Initiate
      requestBody:
        $ref: '#/components/requestBodies/InitiateFinancialPositionLogRequest'
      responses:
        '200':
          $ref: '#/components/responses/InitiateFinancialPositionLogResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PositionKeeping/{positionkeepingid}/Update':
    put:
      tags:
        - CR - FinancialPositionLog
      summary: 'UpCR Update details for an active financial transaction log, including reflecting an account block'
      description: 'UpCR Update details for an active financial transaction log, including reflecting an account block'
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/positionkeepingid'
      requestBody:
        $ref: '#/components/requestBodies/UpdateFinancialPositionLogRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateFinancialPositionLogResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PositionKeeping/{positionkeepingid}/Retrieve':
    get:
      tags:
        - CR - FinancialPositionLog
      summary: ReCR Retrieve information about the log
      description: ReCR Retrieve information about the log
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/positionkeepingid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveFinancialPositionLogResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PositionKeeping/{positionkeepingid}/FinancialTransactionCapture/{financialtransactioncaptureid}/Update':
    put:
      tags:
        - BQ - FinancialTransactionCapture
      summary: UpBQ Update details of a captured financial transaction
      description: UpBQ Update details of a captured financial transaction
      operationId: UpdateFinancialTransactionCapture
      parameters:
        - $ref: '#/components/parameters/positionkeepingid'
        - $ref: '#/components/parameters/financialtransactioncaptureid'
      requestBody:
        $ref: '#/components/requestBodies/FinancialTransactionCapture'
      responses:
        '200':
          $ref: '#/components/responses/FinancialTransactionCapture'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PositionKeeping/{positionkeepingid}/FinancialTransactionCapture/{financialtransactioncaptureid}/Capture':
    put:
      tags:
        - BQ - FinancialTransactionCapture
      summary: CaBQ Capture details of a financial transaction in the log
      description: CaBQ Capture details of a financial transaction in the log
      operationId: CaptureFinancialTransactionCapture
      parameters:
        - $ref: '#/components/parameters/positionkeepingid'
        - $ref: '#/components/parameters/financialtransactioncaptureid'
      requestBody:
        $ref: '#/components/requestBodies/FinancialTransactionCapture'
      responses:
        '200':
          $ref: '#/components/responses/FinancialTransactionCapture'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PositionKeeping/{positionkeepingid}/FinancialTransactionCapture/{financialtransactioncaptureid}/Retrieve':
    get:
      tags:
        - BQ - FinancialTransactionCapture
      summary: ReBQ Retrieve details of financial transactions captured in the log
      description: ReBQ Retrieve details of financial transactions captured in the log
      operationId: RetrieveFinancialTransactionCapture
      parameters:
        - $ref: '#/components/parameters/positionkeepingid'
        - $ref: '#/components/parameters/financialtransactioncaptureid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveFinancialTransactionCaptureResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    FinancialTransactionCapture:
      type: object
      properties:
        PostingDescription:
          type: string
          description: The description of purpose of the financial transaction
          format: string
        PostingTransaction:
          type: string
          description: The logged financial transaction. Note the log can be structured with double entry representations (i.e. capture credit/debit pair)
          format: string
        PostingValueDate:
          type: string
          description: The date of the transaction
          format: date
      description: "A collection of the events/transactions recorded by the log\n\nExamples: Customer life event, Servicing event"
    FinancialPositionLog:
      type: object
      properties:
        TransactionLogType:
          type: string
          description: The type of financial transaction log (e.g. customer transactions)
          format: string
        ProductInstanceReference:
          type: string
          description: The product/service for which this is a financial transaction log
          format: object
        CustomerReference:
          type: string
          description: Reference to the product or service account holder/customer for the log if appropriate
          format: object
        CounterpartyReference:
          type: string
          description: 'Reference to a counterparty for the log if appropriate (e.g. merchant reference, card network reference)'
          format: object
        BaseCurrency:
          type: string
          description: The currency for the logged  transactions
          format: currencycode
        InterestApplicationRecord:
          type: string
          description: The record of applied interest if interest calculations are supported
          format: string
        InterestTransaction:
          type: string
          description: A record of applied interest
          format: string
        TransactionDescription:
          type: string
          description: General description of the interest transaction
          format: string
        TransactionRateType:
          type: string
          description: Applicable rate type
          format: string
        TransactionInterestCharge:
          type: string
          description: The derived interest amount to be applied
          format: string
        ManagedPositionLimits:
          type: string
          description: Basic position limits that are maintained as an aspect of the log
          format: string
        PositionLimitType:
          type: string
          description: The type of position maintained for the log (e.g. cumulative balance)
          format: string
        PositionLimitSettings:
          type: string
          description: 'The position definition, associated limit settings and rules'
          format: string
        PositionLimitValue:
          type: string
          description: The current calculated position
          format: string
        AmountBlock:
          type: string
          description: Support for recording blocks on the log position (handling is by the associated fulfillment service domain)
          format: string
        AmountBlockType:
          type: string
          description: 'The type of block applied to the tracked position (e.g. pending, final)'
          format: string
        Priority:
          type: string
          description: Priority classification for the block
          format: string
        Amount:
          type: string
          description: The amount of the block
          format: string
        DateType:
          type: string
          description: 'The type of key dates associated with the block  (e.g. start, expiry)'
          format: string
        Date:
          type: string
          description: Value of the specific date type
          format: string
        InitiationDate:
          type: string
          description: The date and time the log was initiated. Note the log will have a complex internal calendar structure for extract and reporting
          format: date
        Status:
          type: string
          description: 'The status of the log entry (e.g. active, in-suspense etc.)'
          format: string
      description: 'Maintain a log of transactions or activity, typically a financial account/journal or a log of activity to support behavioral analysis within Position Keeping. '
    currencycode:
      type: object
      properties:
        Currencycode:
          type: string
          description: "A code identifying a currency according to ISO-4217.\nA currency is a system of money in general use in a particular country.\n\nCode allocated to a currency, by a maintenance agency, under an international identification scheme as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\". Valid currency codes are registered with the ISO 4217 Maintenance Agency, and consist of three contiguous letters. (ISO20022)\n\n"
          format: datatype
      description: The currency for the logged  transactions
    date:
      type: object
      properties:
        DateContent:
          type: string
          description: ''
          format: string
      description: The date and time the log was initiated. Note the log will have a complex internal calendar structure for extract and reporting
    InitiateFinancialPositionLogRequest:
      type: object
      properties:
        FinancialPositionLog:
          type: object
          properties:
            TransactionLogType:
              type: string
              description: The type of financial transaction log (e.g. customer transactions)
              format: string
            ProductInstanceReference:
              type: string
              description: The product/service for which this is a financial transaction log
              format: object
            CustomerReference:
              type: string
              description: Reference to the product or service account holder/customer for the log if appropriate
              format: object
            CounterpartyReference:
              type: string
              description: 'Reference to a counterparty for the log if appropriate (e.g. merchant reference, card network reference)'
              format: object
            BaseCurrency:
              $ref: '#/components/schemas/currencycode'
            InterestApplicationRecord:
              type: string
              description: The record of applied interest if interest calculations are supported
              format: string
            ManagedPositionLimits:
              type: string
              description: Basic position limits that are maintained as an aspect of the log
              format: string
            PositionLimitType:
              type: string
              description: The type of position maintained for the log (e.g. cumulative balance)
              format: string
            PositionLimitSettings:
              type: string
              description: 'The position definition, associated limit settings and rules'
              format: string
            AmountBlock:
              type: string
              description: Support for recording blocks on the log position (handling is by the associated fulfillment service domain)
              format: string
            AmountBlockType:
              type: string
              description: 'The type of block applied to the tracked position (e.g. pending, final)'
              format: string
            Priority:
              type: string
              description: Priority classification for the block
              format: string
            DateType:
              type: string
              description: 'The type of key dates associated with the block  (e.g. start, expiry)'
              format: string
            InitiationDate:
              $ref: '#/components/schemas/date'
      description: 'Input: InCR Initiate a position keeping transaction log'
    InitiateFinancialPositionLogResponse:
      type: object
      properties:
        FinancialPositionLog:
          type: object
          properties:
            InterestApplicationRecord:
              type: string
              description: The record of applied interest if interest calculations are supported
              format: string
            InterestTransaction:
              type: string
              description: A record of applied interest
              format: string
            TransactionDescription:
              type: string
              description: General description of the interest transaction
              format: string
            TransactionRateType:
              type: string
              description: Applicable rate type
              format: string
            TransactionInterestCharge:
              type: string
              description: The derived interest amount to be applied
              format: string
            ManagedPositionLimits:
              type: string
              description: Basic position limits that are maintained as an aspect of the log
              format: string
            PositionLimitValue:
              type: string
              description: The current calculated position
              format: string
            AmountBlock:
              type: string
              description: Support for recording blocks on the log position (handling is by the associated fulfillment service domain)
              format: string
            DateType:
              type: string
              description: 'The type of key dates associated with the block  (e.g. start, expiry)'
              format: string
            Status:
              type: string
              description: 'The status of the log entry (e.g. active, in-suspense etc.)'
              format: string
      description: 'Output: InCR Initiate a position keeping transaction log'
    UpdateFinancialPositionLogRequest:
      type: object
      properties:
        FinancialPositionLog:
          type: object
          properties:
            TransactionLogType:
              type: string
              description: The type of financial transaction log (e.g. customer transactions)
              format: string
            ProductInstanceReference:
              type: string
              description: The product/service for which this is a financial transaction log
              format: object
            CustomerReference:
              type: string
              description: Reference to the product or service account holder/customer for the log if appropriate
              format: object
            CounterpartyReference:
              type: string
              description: 'Reference to a counterparty for the log if appropriate (e.g. merchant reference, card network reference)'
              format: object
            BaseCurrency:
              $ref: '#/components/schemas/currencycode'
            InterestApplicationRecord:
              type: string
              description: The record of applied interest if interest calculations are supported
              format: string
            ManagedPositionLimits:
              type: string
              description: Basic position limits that are maintained as an aspect of the log
              format: string
            PositionLimitType:
              type: string
              description: The type of position maintained for the log (e.g. cumulative balance)
              format: string
            PositionLimitSettings:
              type: string
              description: 'The position definition, associated limit settings and rules'
              format: string
            AmountBlock:
              type: string
              description: Support for recording blocks on the log position (handling is by the associated fulfillment service domain)
              format: string
            AmountBlockType:
              type: string
              description: 'The type of block applied to the tracked position (e.g. pending, final)'
              format: string
            Priority:
              type: string
              description: Priority classification for the block
              format: string
            DateType:
              type: string
              description: 'The type of key dates associated with the block  (e.g. start, expiry)'
              format: string
            InitiationDate:
              $ref: '#/components/schemas/date'
            Status:
              type: string
              description: 'The status of the log entry (e.g. active, in-suspense etc.)'
              format: string
      description: 'Input: UpCR Update details for an active financial transaction log, including reflecting an account block'
    UpdateFinancialPositionLogResponse:
      type: object
      properties:
        FinancialPositionLog:
          type: object
          properties:
            TransactionLogType:
              type: string
              description: The type of financial transaction log (e.g. customer transactions)
              format: string
            ProductInstanceReference:
              type: string
              description: The product/service for which this is a financial transaction log
              format: object
            CustomerReference:
              type: string
              description: Reference to the product or service account holder/customer for the log if appropriate
              format: object
            CounterpartyReference:
              type: string
              description: 'Reference to a counterparty for the log if appropriate (e.g. merchant reference, card network reference)'
              format: object
            BaseCurrency:
              $ref: '#/components/schemas/currencycode'
            InterestApplicationRecord:
              type: string
              description: The record of applied interest if interest calculations are supported
              format: string
            ManagedPositionLimits:
              type: string
              description: Basic position limits that are maintained as an aspect of the log
              format: string
            PositionLimitType:
              type: string
              description: The type of position maintained for the log (e.g. cumulative balance)
              format: string
            PositionLimitSettings:
              type: string
              description: 'The position definition, associated limit settings and rules'
              format: string
            AmountBlock:
              type: string
              description: Support for recording blocks on the log position (handling is by the associated fulfillment service domain)
              format: string
            AmountBlockType:
              type: string
              description: 'The type of block applied to the tracked position (e.g. pending, final)'
              format: string
            Priority:
              type: string
              description: Priority classification for the block
              format: string
            DateType:
              type: string
              description: 'The type of key dates associated with the block  (e.g. start, expiry)'
              format: string
            InitiationDate:
              $ref: '#/components/schemas/date'
            Status:
              type: string
              description: 'The status of the log entry (e.g. active, in-suspense etc.)'
              format: string
      description: 'Output: UpCR Update details for an active financial transaction log, including reflecting an account block'
    RetrieveFinancialPositionLogResponse:
      type: object
      properties:
        FinancialPositionLog:
          type: object
          properties:
            TransactionLogType:
              type: string
              description: The type of financial transaction log (e.g. customer transactions)
              format: string
            ProductInstanceReference:
              type: string
              description: The product/service for which this is a financial transaction log
              format: object
            CustomerReference:
              type: string
              description: Reference to the product or service account holder/customer for the log if appropriate
              format: object
            CounterpartyReference:
              type: string
              description: 'Reference to a counterparty for the log if appropriate (e.g. merchant reference, card network reference)'
              format: object
            BaseCurrency:
              $ref: '#/components/schemas/currencycode'
            InterestApplicationRecord:
              type: string
              description: The record of applied interest if interest calculations are supported
              format: string
            InterestTransaction:
              type: string
              description: A record of applied interest
              format: string
            TransactionDescription:
              type: string
              description: General description of the interest transaction
              format: string
            TransactionRateType:
              type: string
              description: Applicable rate type
              format: string
            TransactionInterestCharge:
              type: string
              description: The derived interest amount to be applied
              format: string
            ManagedPositionLimits:
              type: string
              description: Basic position limits that are maintained as an aspect of the log
              format: string
            PositionLimitType:
              type: string
              description: The type of position maintained for the log (e.g. cumulative balance)
              format: string
            PositionLimitSettings:
              type: string
              description: 'The position definition, associated limit settings and rules'
              format: string
            PositionLimitValue:
              type: string
              description: The current calculated position
              format: string
            AmountBlock:
              type: string
              description: Support for recording blocks on the log position (handling is by the associated fulfillment service domain)
              format: string
            AmountBlockType:
              type: string
              description: 'The type of block applied to the tracked position (e.g. pending, final)'
              format: string
            Priority:
              type: string
              description: Priority classification for the block
              format: string
            DateType:
              type: string
              description: 'The type of key dates associated with the block  (e.g. start, expiry)'
              format: string
            InitiationDate:
              $ref: '#/components/schemas/date'
            Status:
              type: string
              description: 'The status of the log entry (e.g. active, in-suspense etc.)'
              format: string
      description: 'Output: ReCR Retrieve information about the log'
    RetrieveFinancialTransactionCaptureResponse:
      type: object
      properties:
        FinancialTransactionCapture:
          type: object
          properties:
            PostingDescription:
              type: string
              description: The description of purpose of the financial transaction
              format: string
            PostingTransaction:
              type: string
              description: The logged financial transaction. Note the log can be structured with double entry representations (i.e. capture credit/debit pair)
              format: string
            PostingValueDate:
              $ref: '#/components/schemas/date'
      description: 'Output: ReBQ Retrieve details of financial transactions captured in the log'
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InitiateFinancialPositionLogResponse:
      description: InitiateFinancialPositionLogResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateFinancialPositionLogResponse'
    UpdateFinancialPositionLogResponse:
      description: UpdateFinancialPositionLogResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateFinancialPositionLogResponse'
    RetrieveFinancialPositionLogResponse:
      description: RetrieveFinancialPositionLogResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveFinancialPositionLogResponse'
    FinancialTransactionCapture:
      description: FinancialTransactionCapture
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FinancialTransactionCapture'
    RetrieveFinancialTransactionCaptureResponse:
      description: RetrieveFinancialTransactionCaptureResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveFinancialTransactionCaptureResponse'
  parameters:
    positionkeepingid:
      name: positionkeepingid
      in: path
      required: true
      style: simple
      schema:
        type: string
    financialtransactioncaptureid:
      name: financialtransactioncaptureid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    InitiateFinancialPositionLogRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateFinancialPositionLogRequest'
      required: true
    UpdateFinancialPositionLogRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateFinancialPositionLogRequest'
      required: true
    FinancialTransactionCapture:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FinancialTransactionCapture'
      required: true