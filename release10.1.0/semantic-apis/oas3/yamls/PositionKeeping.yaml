openapi: 3.0.1
info:
  title: Position Keeping
  description: This service domain maintains a financial transaction log to support production. Reconciled financial transactions are subsequently posted to the accounting systems
  version: 10.1.0
servers:
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/B154/PositionKeeping/10.1.0
paths:
  /PositionKeeping/Initiate:
    post:
      tags:
      - CR - FinancialPositionLog
      summary: InCR Initiate a position keeping transaction log
      description: InCR Initiate a position keeping transaction log
      operationId: Initiate
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/InitiateFinancialPositionLogRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitiateFinancialPositionLogResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /PositionKeeping/{positionkeepingId}/Update:
    put:
      tags:
      - CR - FinancialPositionLog
      summary: UpCR Update details for an active financial transaction log, including reflecting an account block
      description: UpCR Update details for an active financial transaction log, including reflecting an account block
      operationId: Update
      parameters:
      - $ref: '#/components/parameters/PositionKeepingID'
      requestBody:
        $ref: '#/components/requestBodies/UpdateFinancialPositionLogRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateFinancialPositionLogResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /PositionKeeping/{positionkeepingId}/Retrieve:
    get:
      tags:
      - CR - FinancialPositionLog
      summary: ReCR Retrieve information about the log
      description: ReCR Retrieve information about the log
      operationId: Retrieve
      parameters:
      - $ref: '#/components/parameters/PositionKeepingID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveFinancialPositionLogResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /PositionKeeping/{positionkeepingId}/FinancialTransactionCapture/{financialtransactioncaptureId}/Update:
    put:
      tags:
      - BQ - FinancialTransactionCapture
      summary: UpBQ Update details of a captured financial transaction
      description: UpBQ Update details of a captured financial transaction
      operationId: UpdateFinancialTransactionCapture
      parameters:
      - $ref: '#/components/parameters/PositionKeepingID'
      - $ref: '#/components/parameters/FinancialTransactionCaptureID'
      requestBody:
        $ref: '#/components/requestBodies/FinancialTransactionCapture'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinancialTransactionCapture'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /PositionKeeping/{positionkeepingId}/FinancialTransactionCapture/{financialtransactioncaptureId}/Capture:
    put:
      tags:
      - BQ - FinancialTransactionCapture
      summary: CaBQ Capture details of a financial transaction in the log
      description: CaBQ Capture details of a financial transaction in the log
      operationId: CaptureFinancialTransactionCapture
      parameters:
      - $ref: '#/components/parameters/PositionKeepingID'
      - $ref: '#/components/parameters/FinancialTransactionCaptureID'
      requestBody:
        $ref: '#/components/requestBodies/FinancialTransactionCapture'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: boolean
                example: true
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /PositionKeeping/{positionkeepingId}/FinancialTransactionCapture/{financialtransactioncaptureId}/Retrieve:
    get:
      tags:
      - BQ - FinancialTransactionCapture
      summary: ReBQ Retrieve details of financial transactions captured in the log
      description: ReBQ Retrieve details of financial transactions captured in the log
      operationId: RetrieveFinancialTransactionCapture
      parameters:
      - $ref: '#/components/parameters/PositionKeepingID'
      - $ref: '#/components/parameters/FinancialTransactionCaptureID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinancialTransactionCapture'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    FinancialPositionLog:
      type: object
      properties:
        TransactionLogType:
          type: string
          description: The type of financial transaction log (e.g. customer transactions)
        ProductInstanceReference:
          type: object
          description: The product/service for which this is a financial transaction log
        CustomerReference:
          type: object
          description: Reference to the product or service account holder/customer for the log if appropriate
        CounterpartyReference:
          type: object
          description: Reference to a counterparty for the log if appropriate (e.g. merchant reference, card network reference)
        BaseCurrency:
          type: string
          description: The currency for the logged  transactions
        InterestApplicationRecord:
          type: string
          description: The record of applied interest if interest calculations are supported
        InterestTransaction:
          type: string
          description: A record of applied interest
        TransactionDescription:
          type: string
          description: General description of the interest transaction
        TransactionRateType:
          type: string
          description: Applicable rate type
        TransactionInterestCharge:
          type: string
          description: The derived interest amount to be applied
        ManagedPositionLimits:
          type: string
          description: Basic position limits that are maintained as an aspect of the log
        PositionLimitType:
          type: string
          description: The type of position maintained for the log (e.g. cumulative balance)
        PositionLimitSettings:
          type: string
          description: The position definition, associated limit settings and rules
        PositionLimitValue:
          type: string
          description: The current calculated position
        AmountBlock:
          type: string
          description: Support for recording blocks on the log position (handling is by the associated fulfillment service domain)
        AmountBlockType:
          type: string
          description: The type of block applied to the tracked position (e.g. pending, final)
        Priority:
          type: string
          description: Priority classification for the block
        Amount:
          type: string
          description: The amount of the block
        DateType:
          type: string
          description: The type of key dates associated with the block  (e.g. start, expiry)
        Date:
          type: string
          description: Value of the specific date type
        InitiationDate:
          type: string
          description: The date and time the log was initiated. Note the log will have a complex internal calendar structure for extract and reporting
        Status:
          type: string
          description: The status of the log entry (e.g. active, in-suspense etc.)
    FinancialTransactionCapture:
      type: object
      properties:
        PostingDescription:
          type: string
          description: The description of purpose of the financial transaction
        PostingTransaction:
          type: string
          description: The logged financial transaction. Note the log can be structured with double entry representations (i.e. capture credit/debit pair)
        PostingValueDate:
          type: string
          description: The date of the transaction
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          description: NA
        status:
          type: string
          description: NA
        message:
          type: string
          description: NA
    InitiateFinancialPositionLogRequest:
      type: object
      properties:
        FinancialPositionLog:
          type: object
          properties:
            TransactionLogType:
              type: string
              description: The type of financial transaction log (e.g. customer transactions)
            ProductInstanceReference:
              type: object
              description: The product/service for which this is a financial transaction log
            CustomerReference:
              type: object
              description: Reference to the product or service account holder/customer for the log if appropriate
            CounterpartyReference:
              type: object
              description: Reference to a counterparty for the log if appropriate (e.g. merchant reference, card network reference)
            BaseCurrency:
              type: string
              description: The currency for the logged  transactions
            InterestApplicationRecord:
              type: string
              description: The record of applied interest if interest calculations are supported
            ManagedPositionLimits:
              type: string
              description: Basic position limits that are maintained as an aspect of the log
            PositionLimitType:
              type: string
              description: The type of position maintained for the log (e.g. cumulative balance)
            PositionLimitSettings:
              type: string
              description: The position definition, associated limit settings and rules
            AmountBlock:
              type: string
              description: Support for recording blocks on the log position (handling is by the associated fulfillment service domain)
            AmountBlockType:
              type: string
              description: The type of block applied to the tracked position (e.g. pending, final)
            Priority:
              type: string
              description: Priority classification for the block
            DateType:
              type: string
              description: The type of key dates associated with the block  (e.g. start, expiry)
            InitiationDate:
              type: string
              description: The date and time the log was initiated. Note the log will have a complex internal calendar structure for extract and reporting
    InitiateFinancialPositionLogResponse:
      type: object
      properties:
        FinancialPositionLog:
          type: object
          properties:
            InterestApplicationRecord:
              type: string
              description: The record of applied interest if interest calculations are supported
            InterestTransaction:
              type: string
              description: A record of applied interest
            TransactionDescription:
              type: string
              description: General description of the interest transaction
            TransactionRateType:
              type: string
              description: Applicable rate type
            TransactionInterestCharge:
              type: string
              description: The derived interest amount to be applied
            ManagedPositionLimits:
              type: string
              description: Basic position limits that are maintained as an aspect of the log
            PositionLimitValue:
              type: string
              description: The current calculated position
            AmountBlock:
              type: string
              description: Support for recording blocks on the log position (handling is by the associated fulfillment service domain)
            DateType:
              type: string
              description: The type of key dates associated with the block  (e.g. start, expiry)
            Status:
              type: string
              description: The status of the log entry (e.g. active, in-suspense etc.)
    UpdateFinancialPositionLogRequest:
      type: object
      properties:
        FinancialPositionLog:
          type: object
          properties:
            TransactionLogType:
              type: string
              description: The type of financial transaction log (e.g. customer transactions)
            ProductInstanceReference:
              type: object
              description: The product/service for which this is a financial transaction log
            CustomerReference:
              type: object
              description: Reference to the product or service account holder/customer for the log if appropriate
            CounterpartyReference:
              type: object
              description: Reference to a counterparty for the log if appropriate (e.g. merchant reference, card network reference)
            BaseCurrency:
              type: string
              description: The currency for the logged  transactions
            InterestApplicationRecord:
              type: string
              description: The record of applied interest if interest calculations are supported
            ManagedPositionLimits:
              type: string
              description: Basic position limits that are maintained as an aspect of the log
            PositionLimitType:
              type: string
              description: The type of position maintained for the log (e.g. cumulative balance)
            PositionLimitSettings:
              type: string
              description: The position definition, associated limit settings and rules
            AmountBlock:
              type: string
              description: Support for recording blocks on the log position (handling is by the associated fulfillment service domain)
            AmountBlockType:
              type: string
              description: The type of block applied to the tracked position (e.g. pending, final)
            Priority:
              type: string
              description: Priority classification for the block
            DateType:
              type: string
              description: The type of key dates associated with the block  (e.g. start, expiry)
            InitiationDate:
              type: string
              description: The date and time the log was initiated. Note the log will have a complex internal calendar structure for extract and reporting
            Status:
              type: string
              description: The status of the log entry (e.g. active, in-suspense etc.)
    UpdateFinancialPositionLogResponse:
      type: object
      properties:
        FinancialPositionLog:
          type: object
          properties:
            TransactionLogType:
              type: string
              description: The type of financial transaction log (e.g. customer transactions)
            ProductInstanceReference:
              type: object
              description: The product/service for which this is a financial transaction log
            CustomerReference:
              type: object
              description: Reference to the product or service account holder/customer for the log if appropriate
            CounterpartyReference:
              type: object
              description: Reference to a counterparty for the log if appropriate (e.g. merchant reference, card network reference)
            BaseCurrency:
              type: string
              description: The currency for the logged  transactions
            InterestApplicationRecord:
              type: string
              description: The record of applied interest if interest calculations are supported
            ManagedPositionLimits:
              type: string
              description: Basic position limits that are maintained as an aspect of the log
            PositionLimitType:
              type: string
              description: The type of position maintained for the log (e.g. cumulative balance)
            PositionLimitSettings:
              type: string
              description: The position definition, associated limit settings and rules
            AmountBlock:
              type: string
              description: Support for recording blocks on the log position (handling is by the associated fulfillment service domain)
            AmountBlockType:
              type: string
              description: The type of block applied to the tracked position (e.g. pending, final)
            Priority:
              type: string
              description: Priority classification for the block
            DateType:
              type: string
              description: The type of key dates associated with the block  (e.g. start, expiry)
            InitiationDate:
              type: string
              description: The date and time the log was initiated. Note the log will have a complex internal calendar structure for extract and reporting
            Status:
              type: string
              description: The status of the log entry (e.g. active, in-suspense etc.)
    RetrieveFinancialPositionLogResponse:
      type: object
      properties:
        FinancialPositionLog:
          type: object
          properties:
            TransactionLogType:
              type: string
              description: The type of financial transaction log (e.g. customer transactions)
            ProductInstanceReference:
              type: object
              description: The product/service for which this is a financial transaction log
            CustomerReference:
              type: object
              description: Reference to the product or service account holder/customer for the log if appropriate
            CounterpartyReference:
              type: object
              description: Reference to a counterparty for the log if appropriate (e.g. merchant reference, card network reference)
            BaseCurrency:
              type: string
              description: The currency for the logged  transactions
            InterestApplicationRecord:
              type: string
              description: The record of applied interest if interest calculations are supported
            InterestTransaction:
              type: string
              description: A record of applied interest
            TransactionDescription:
              type: string
              description: General description of the interest transaction
            TransactionRateType:
              type: string
              description: Applicable rate type
            TransactionInterestCharge:
              type: string
              description: The derived interest amount to be applied
            ManagedPositionLimits:
              type: string
              description: Basic position limits that are maintained as an aspect of the log
            PositionLimitType:
              type: string
              description: The type of position maintained for the log (e.g. cumulative balance)
            PositionLimitSettings:
              type: string
              description: The position definition, associated limit settings and rules
            PositionLimitValue:
              type: string
              description: The current calculated position
            AmountBlock:
              type: string
              description: Support for recording blocks on the log position (handling is by the associated fulfillment service domain)
            AmountBlockType:
              type: string
              description: The type of block applied to the tracked position (e.g. pending, final)
            Priority:
              type: string
              description: Priority classification for the block
            DateType:
              type: string
              description: The type of key dates associated with the block  (e.g. start, expiry)
            InitiationDate:
              type: string
              description: The date and time the log was initiated. Note the log will have a complex internal calendar structure for extract and reporting
            Status:
              type: string
              description: The status of the log entry (e.g. active, in-suspense etc.)
  parameters:
    PositionKeepingID:
      name: positionkeepingId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    FinancialTransactionCaptureID:
      name: financialtransactioncaptureId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
  requestBodies:
    InitiateFinancialPositionLogRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateFinancialPositionLogRequest'
    UpdateFinancialPositionLogRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateFinancialPositionLogRequest'
    FinancialTransactionCapture:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FinancialTransactionCapture'
  responses:
    HTTPError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    BadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequestsError:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
...
