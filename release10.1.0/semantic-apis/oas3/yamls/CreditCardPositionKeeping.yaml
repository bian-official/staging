openapi: 3.0.1
info:
  title: Credit Card Position Keeping
  description: 'Maintain a log of credit card bookings and authorizations for operational and management information, tracking and reconciliation purposes.'
  contact:
    name: BIAN
    url: https://bian.org
  version: '10.1.0'
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/CreditCardPositionKeeping/10.1.0
paths:
  '/CreditCardPositionKeeping/{creditcardpositionkeepingid}/Capture':
    put:
      tags:
        - CR - CreditCardPositionLog
      summary: Capture Credit Card Position Log
      description: Capture Credit Card Position Log
      operationId: Capture
      parameters:
        - $ref: '#/components/parameters/creditcardpositionkeepingid'
      requestBody:
        $ref: '#/components/requestBodies/CreditCardPositionLog'
      responses:
        '200':
          $ref: '#/components/responses/CreditCardPositionLog'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CreditCardPositionKeeping/{creditcardpositionkeepingid}/Control':
    put:
      tags:
        - CR - CreditCardPositionLog
      summary: Control Credit Card Position Log
      description: Control Credit Card Position Log
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/creditcardpositionkeepingid'
      requestBody:
        $ref: '#/components/requestBodies/CreditCardPositionLog'
      responses:
        '200':
          $ref: '#/components/responses/CreditCardPositionLog'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /CreditCardPositionKeeping/Initiate:
    post:
      tags:
        - CR - CreditCardPositionLog
      summary: Initiate Credit Card Position Log
      description: Initiate Credit Card Position Log
      operationId: Initiate
      requestBody:
        $ref: '#/components/requestBodies/CreditCardPositionLog'
      responses:
        '200':
          $ref: '#/components/responses/CreditCardPositionLog'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CreditCardPositionKeeping/{creditcardpositionkeepingid}/Notify':
    get:
      tags:
        - CR - CreditCardPositionLog
      summary: Notify Credit Card Position Log
      description: Notify Credit Card Position Log
      operationId: Notify
      parameters:
        - $ref: '#/components/parameters/creditcardpositionkeepingid'
      responses:
        '200':
          $ref: '#/components/responses/CreditCardPositionLog'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CreditCardPositionKeeping/{creditcardpositionkeepingid}/Retrieve':
    get:
      tags:
        - CR - CreditCardPositionLog
      summary: Retrieve Credit Card Position Log
      description: Retrieve Credit Card Position Log
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/creditcardpositionkeepingid'
      responses:
        '200':
          $ref: '#/components/responses/CreditCardPositionLog'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CreditCardPositionKeeping/{creditcardpositionkeepingid}/Update':
    put:
      tags:
        - CR - CreditCardPositionLog
      summary: Update Credit Card Position Log
      description: Update Credit Card Position Log
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/creditcardpositionkeepingid'
      requestBody:
        $ref: '#/components/requestBodies/CreditCardPositionLog'
      responses:
        '200':
          $ref: '#/components/responses/CreditCardPositionLog'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CreditCardPositionKeeping/{creditcardpositionkeepingid}/CardTransactionEvent/{cardtransactioneventid}/Capture':
    put:
      tags:
        - BQ - CardTransactionEvent
      summary: Capture Card Transaction Event
      description: Capture Card Transaction Event
      operationId: CaptureCardTransactionEvent
      parameters:
        - $ref: '#/components/parameters/creditcardpositionkeepingid'
        - $ref: '#/components/parameters/cardtransactioneventid'
      requestBody:
        $ref: '#/components/requestBodies/CardTransactionEvent'
      responses:
        '200':
          $ref: '#/components/responses/CardTransactionEvent'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CreditCardPositionKeeping/{creditcardpositionkeepingid}/CardTransactionEvent/{cardtransactioneventid}/Notify':
    get:
      tags:
        - BQ - CardTransactionEvent
      summary: Notify Card Transaction Event
      description: Notify Card Transaction Event
      operationId: NotifyCardTransactionEvent
      parameters:
        - $ref: '#/components/parameters/creditcardpositionkeepingid'
        - $ref: '#/components/parameters/cardtransactioneventid'
      responses:
        '200':
          $ref: '#/components/responses/CardTransactionEvent'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CreditCardPositionKeeping/{creditcardpositionkeepingid}/CardTransactionEvent/{cardtransactioneventid}/Retrieve':
    get:
      tags:
        - BQ - CardTransactionEvent
      summary: Retrieve Card Transaction Event
      description: Retrieve Card Transaction Event
      operationId: RetrieveCardTransactionEvent
      parameters:
        - $ref: '#/components/parameters/creditcardpositionkeepingid'
        - $ref: '#/components/parameters/cardtransactioneventid'
      responses:
        '200':
          $ref: '#/components/responses/CardTransactionEvent'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CreditCardPositionKeeping/{creditcardpositionkeepingid}/CardTransactionEvent/{cardtransactioneventid}/Update':
    put:
      tags:
        - BQ - CardTransactionEvent
      summary: Update Card Transaction Event
      description: Update Card Transaction Event
      operationId: UpdateCardTransactionEvent
      parameters:
        - $ref: '#/components/parameters/creditcardpositionkeepingid'
        - $ref: '#/components/parameters/cardtransactioneventid'
      requestBody:
        $ref: '#/components/requestBodies/CardTransactionEvent'
      responses:
        '200':
          $ref: '#/components/responses/CardTransactionEvent'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    CardTransactionEvent:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        CreditCardPositionLogReference:
          $ref: '#/components/schemas/log'
        CardTransactionEventReference:
          $ref: '#/components/schemas/event'
        CardTransactionEventType:
          $ref: '#/components/schemas/text'
      description: The Card Transaction Event is one of the specific types of events that is recorded in the Card Transaction Event
    CreditCardPositionKeepingOutcome:
      type: object
      properties:
        CreditCardPositionKeepingIncident:
          $ref: '#/components/schemas/event'
        CreditCardPositionKeepingLog:
          $ref: '#/components/schemas/log'
      description: The Card Transaction Event is one of the specific types of events that is recorded in the Card Transaction Event
    CreditCardPositionLog:
      type: object
      properties:
        CreditCardPositionLogParameterType:
          $ref: '#/components/schemas/text'
        CreditCardPositionLogSelectedOption:
          $ref: '#/components/schemas/service'
        CreditCardPositionLogType:
          $ref: '#/components/schemas/text'
        CreditCardPositionLogSchedule:
          $ref: '#/components/schemas/schedule'
        CreditCardPositionLogUsageLog:
          $ref: '#/components/schemas/log'
        CreditCardPositionLogUpdateLog:
          $ref: '#/components/schemas/log'
        CreditCardPositionLogAssociatedParty:
          $ref: '#/components/schemas/involvedparty'
        CreditCardPositionLogBusinessUnitReference:
          $ref: '#/components/schemas/businessunit'
        CreditCardPositionLogCustomerReference:
          $ref: '#/components/schemas/involvedparty'
        CreditCardPositionLogServiceConfiguration:
          $ref: '#/components/schemas/text'
        CreditCardPositionLogPosition:
          $ref: '#/components/schemas/position'
        CreditCardPositionLogPositionType:
          $ref: '#/components/schemas/positiontype'
        CreditCardPositionLogPositionLimitTime:
          $ref: '#/components/schemas/limitarrangement'
        CreditCardPositionLogReference:
          $ref: '#/components/schemas/log'
      description: 'Maintain a log of transactions or activity, typically a financial account/journal or a log of activity to support behavioral analysis within Credit Card Position Keeping. '
    condition:
      type: object
      properties:
        Condition:
          type: string
          description: "Condition is a premise upon which the fulfillment of an agreement depends \n\nGeneral and special arrangements, provisions, requirements, rules, specifications, and standards that form an integral part of an agreement or contract.\n\nRead more: http://www.businessdictionary.com/definition/terms-and-conditions.html\n\n"
          format: class
    schedule:
      type: object
      properties:
        Schedule:
          type: string
          description: "Defined sequence of planned tasks/actions or a timetable of available services\n\nA schedule is a time based series of something"
          format: datatype
    businessservice:
      type: object
      properties:
        BusinessServiceName:
          $ref: '#/components/schemas/name'
        BusinessServiceType:
          $ref: '#/components/schemas/businessservicetypevalues'
        BusinessServiceDescription:
          $ref: '#/components/schemas/text'
    log:
      type: object
      properties:
        LogType:
          type: string
          description: ''
          format: string
        LogPeriod:
          type: string
          description: ''
          format: string
        LogDate:
          type: string
          description: Key dates associated with the log (e.g. start time).
          format: string
        LogIdentification:
          type: string
          description: ''
          format: string
    event:
      type: object
      properties:
        EventType:
          type: string
          description: ''
          format: string
        EventDateTime:
          type: string
          description: ''
          format: string
        EventDescription:
          type: string
          description: ''
          format: string
        EventSource:
          type: string
          description: ''
          format: string
        EventLocation:
          type: string
          description: ''
          format: string
        EventAction:
          type: string
          description: ''
          format: string
        EventStatus:
          type: string
          description: ''
          format: string
        EventValue:
          type: string
          description: ''
          format: string
        EventValidityPeriod:
          type: string
          description: ''
          format: string
        EventIdentification:
          type: string
          description: ''
          format: string
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
    service:
      type: object
      properties:
        ServiceName:
          $ref: '#/components/schemas/name'
        ServiceDescription:
          $ref: '#/components/schemas/text'
        ServiceType:
          $ref: '#/components/schemas/servicetype'
    involvedparty:
      type: object
      properties:
        Involvedparty:
          type: string
          description: ''
          format: datatype
    businessunit:
      type: object
      properties:
        BusinessFunction:
          type: string
          description: ''
          format: string
        Goal:
          type: string
          description: ''
          format: string
    position:
      type: object
      properties:
        PositionValue:
          type: string
          description: ''
          format: string
        PositionQuantity:
          type: string
          description: ''
          format: string
        PositionDate:
          type: string
          description: The date on which the state of something is calculated
          format: string
        PositionAmount:
          type: string
          description: ''
          format: string
    positiontype:
      type: object
      properties:
        PositionType:
          type: string
          description: 'A classification of the position. '
          format: class
    limitarrangement:
      type: object
      properties:
        LimitType:
          $ref: '#/components/schemas/limittype'
        LimitCurrency:
          $ref: '#/components/schemas/currencycode'
        LimitValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        LimitAmount:
          $ref: '#/components/schemas/amount'
        LimitStatus:
          $ref: '#/components/schemas/limitstatus'
        LimitRate:
          $ref: '#/components/schemas/rate'
        LimitFrequency:
          $ref: '#/components/schemas/frequency'
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    CreditCardPositionLog:
      description: CreditCardPositionLog
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreditCardPositionLog'
    CardTransactionEvent:
      description: CardTransactionEvent
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CardTransactionEvent'
  parameters:
    creditcardpositionkeepingid:
      name: creditcardpositionkeepingid
      in: path
      required: true
      style: simple
      schema:
        type: string
    cardtransactioneventid:
      name: cardtransactioneventid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    CreditCardPositionLog:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreditCardPositionLog'
      required: true
    CardTransactionEvent:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CardTransactionEvent'
      required: true