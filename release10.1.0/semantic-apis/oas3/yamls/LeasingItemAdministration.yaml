openapi: 3.0.1
info:
  title: Leasing Item Administration
  description: Track the status of the assets underlying leasing agreements as they represent collateral items that could be accessed in the event of account recovery
  version: 10.1.0
servers:
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/B154/LeasingItemAdministration/10.1.0
paths:
  /LeasingItemAdministration/{leasingitemadministrationId}/Capture:
    put:
      tags:
      - CR - LeasingItemAdministrativePlan
      summary: CaCR Capture Leasing Item Administrative Plan activity or event related information
      description: CaCR Capture Leasing Item Administrative Plan activity or event related information
      operationId: Capture
      parameters:
      - $ref: '#/components/parameters/LeasingItemAdministrationID'
      requestBody:
        $ref: '#/components/requestBodies/CaptureLeasingItemAdministrativePlanRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaptureLeasingItemAdministrativePlanResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /LeasingItemAdministration/{leasingitemadministrationId}/Control:
    put:
      tags:
      - CR - LeasingItemAdministrativePlan
      summary: CoCR Control the processing of Leasing Item Administrative Plan
      description: CoCR Control the processing of Leasing Item Administrative Plan
      operationId: Control
      parameters:
      - $ref: '#/components/parameters/LeasingItemAdministrationID'
      requestBody:
        $ref: '#/components/requestBodies/ControlLeasingItemAdministrativePlanRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ControlLeasingItemAdministrativePlanResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /LeasingItemAdministration/{leasingitemadministrationId}/Exchange:
    put:
      tags:
      - CR - LeasingItemAdministrativePlan
      summary: EcCR Accept, verify, etc. aspects of Leasing Item Administrative Plan processing
      description: EcCR Accept, verify, etc. aspects of Leasing Item Administrative Plan processing
      operationId: Exchange
      parameters:
      - $ref: '#/components/parameters/LeasingItemAdministrationID'
      requestBody:
        $ref: '#/components/requestBodies/ExchangeLeasingItemAdministrativePlanRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExchangeLeasingItemAdministrativePlanResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /LeasingItemAdministration/{leasingitemadministrationId}/Grant:
    put:
      tags:
      - CR - LeasingItemAdministrativePlan
      summary: GrCR Obtain permission to act in relation to Leasing Item Administrative Plan
      description: GrCR Obtain permission to act in relation to Leasing Item Administrative Plan
      operationId: Grant
      parameters:
      - $ref: '#/components/parameters/LeasingItemAdministrationID'
      requestBody:
        $ref: '#/components/requestBodies/GrantLeasingItemAdministrativePlanRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GrantLeasingItemAdministrativePlanResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /LeasingItemAdministration/Initiate:
    post:
      tags:
      - CR - LeasingItemAdministrativePlan
      summary: InCR Instantiate a new Leasing Item Administrative Plan
      description: InCR Instantiate a new Leasing Item Administrative Plan
      operationId: Initiate
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/InitiateLeasingItemAdministrativePlanRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitiateLeasingItemAdministrativePlanResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /LeasingItemAdministration/{leasingitemadministrationId}/Retrieve:
    get:
      tags:
      - CR - LeasingItemAdministrativePlan
      summary: ReCR Retrieve details about any aspect of Leasing Item Administrative Plan
      description: ReCR Retrieve details about any aspect of Leasing Item Administrative Plan
      operationId: Retrieve
      parameters:
      - $ref: '#/components/parameters/LeasingItemAdministrationID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveLeasingItemAdministrativePlanResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /LeasingItemAdministration/{leasingitemadministrationId}/Request:
    put:
      tags:
      - CR - LeasingItemAdministrativePlan
      summary: RqCR Request manual intervention or a decision with respect to Leasing Item Administrative Plan
      description: RqCR Request manual intervention or a decision with respect to Leasing Item Administrative Plan
      operationId: Request
      parameters:
      - $ref: '#/components/parameters/LeasingItemAdministrationID'
      requestBody:
        $ref: '#/components/requestBodies/RequestLeasingItemAdministrativePlanRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestLeasingItemAdministrativePlanResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /LeasingItemAdministration/{leasingitemadministrationId}/Update:
    put:
      tags:
      - CR - LeasingItemAdministrativePlan
      summary: UpCR Update details relating to Leasing Item Administrative Plan
      description: UpCR Update details relating to Leasing Item Administrative Plan
      operationId: Update
      parameters:
      - $ref: '#/components/parameters/LeasingItemAdministrationID'
      requestBody:
        $ref: '#/components/requestBodies/UpdateLeasingItemAdministrativePlanRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateLeasingItemAdministrativePlanResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /LeasingItemAdministration/{leasingitemadministrationId}/Assurance/{assuranceId}/Capture:
    put:
      tags:
      - BQ - Assurance
      summary: CaBQ Capture Assurance activity or event related information
      description: CaBQ Capture Assurance activity or event related information
      operationId: CaptureAssurance
      parameters:
      - $ref: '#/components/parameters/LeasingItemAdministrationID'
      - $ref: '#/components/parameters/AssuranceID'
      requestBody:
        $ref: '#/components/requestBodies/Assurance'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assurance'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /LeasingItemAdministration/{leasingitemadministrationId}/Registration/{registrationId}/Capture:
    put:
      tags:
      - BQ - Registration
      summary: CaBQ Capture Registration activity or event related information
      description: CaBQ Capture Registration activity or event related information
      operationId: CaptureRegistration
      parameters:
      - $ref: '#/components/parameters/LeasingItemAdministrationID'
      - $ref: '#/components/parameters/RegistrationID'
      requestBody:
        $ref: '#/components/requestBodies/Registration'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registration'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /LeasingItemAdministration/{leasingitemadministrationId}/Valuation/{valuationId}/Capture:
    put:
      tags:
      - BQ - Valuation
      summary: CaBQ Capture Valuation activity or event related information
      description: CaBQ Capture Valuation activity or event related information
      operationId: CaptureValuation
      parameters:
      - $ref: '#/components/parameters/LeasingItemAdministrationID'
      - $ref: '#/components/parameters/ValuationID'
      requestBody:
        $ref: '#/components/requestBodies/Valuation'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Valuation'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /LeasingItemAdministration/{leasingitemadministrationId}/Assurance/Initiate:
    post:
      tags:
      - BQ - Assurance
      summary: InBQ Instantiate a new Assurance
      description: InBQ Instantiate a new Assurance
      operationId: InitiateAssurance
      parameters:
      - $ref: '#/components/parameters/LeasingItemAdministrationID'
      requestBody:
        $ref: '#/components/requestBodies/Assurance'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assurance'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /LeasingItemAdministration/{leasingitemadministrationId}/Registration/Initiate:
    post:
      tags:
      - BQ - Registration
      summary: InBQ Instantiate a new Registration
      description: InBQ Instantiate a new Registration
      operationId: InitiateRegistration
      parameters:
      - $ref: '#/components/parameters/LeasingItemAdministrationID'
      requestBody:
        $ref: '#/components/requestBodies/Registration'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registration'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /LeasingItemAdministration/{leasingitemadministrationId}/Valuation/Initiate:
    post:
      tags:
      - BQ - Valuation
      summary: InBQ Instantiate a new Valuation
      description: InBQ Instantiate a new Valuation
      operationId: InitiateValuation
      parameters:
      - $ref: '#/components/parameters/LeasingItemAdministrationID'
      requestBody:
        $ref: '#/components/requestBodies/Valuation'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Valuation'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /LeasingItemAdministration/{leasingitemadministrationId}/Assurance/{assuranceId}/Retrieve:
    get:
      tags:
      - BQ - Assurance
      summary: ReBQ Retrieve details about any aspect of Assurance
      description: ReBQ Retrieve details about any aspect of Assurance
      operationId: RetrieveAssurance
      parameters:
      - $ref: '#/components/parameters/LeasingItemAdministrationID'
      - $ref: '#/components/parameters/AssuranceID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assurance'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /LeasingItemAdministration/{leasingitemadministrationId}/Registration/{registrationId}/Retrieve:
    get:
      tags:
      - BQ - Registration
      summary: ReBQ Retrieve details about any aspect of Registration
      description: ReBQ Retrieve details about any aspect of Registration
      operationId: RetrieveRegistration
      parameters:
      - $ref: '#/components/parameters/LeasingItemAdministrationID'
      - $ref: '#/components/parameters/RegistrationID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registration'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /LeasingItemAdministration/{leasingitemadministrationId}/Valuation/{valuationId}/Retrieve:
    get:
      tags:
      - BQ - Valuation
      summary: ReBQ Retrieve details about any aspect of Valuation
      description: ReBQ Retrieve details about any aspect of Valuation
      operationId: RetrieveValuation
      parameters:
      - $ref: '#/components/parameters/LeasingItemAdministrationID'
      - $ref: '#/components/parameters/ValuationID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Valuation'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /LeasingItemAdministration/{leasingitemadministrationId}/Assurance/{assuranceId}/Update:
    put:
      tags:
      - BQ - Assurance
      summary: UpBQ Update details relating to Assurance
      description: UpBQ Update details relating to Assurance
      operationId: UpdateAssurance
      parameters:
      - $ref: '#/components/parameters/LeasingItemAdministrationID'
      - $ref: '#/components/parameters/AssuranceID'
      requestBody:
        $ref: '#/components/requestBodies/Assurance'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assurance'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /LeasingItemAdministration/{leasingitemadministrationId}/Registration/{registrationId}/Update:
    put:
      tags:
      - BQ - Registration
      summary: UpBQ Update details relating to Registration
      description: UpBQ Update details relating to Registration
      operationId: UpdateRegistration
      parameters:
      - $ref: '#/components/parameters/LeasingItemAdministrationID'
      - $ref: '#/components/parameters/RegistrationID'
      requestBody:
        $ref: '#/components/requestBodies/Registration'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registration'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /LeasingItemAdministration/{leasingitemadministrationId}/Valuation/{valuationId}/Update:
    put:
      tags:
      - BQ - Valuation
      summary: UpBQ Update details relating to Valuation
      description: UpBQ Update details relating to Valuation
      operationId: UpdateValuation
      parameters:
      - $ref: '#/components/parameters/LeasingItemAdministrationID'
      - $ref: '#/components/parameters/ValuationID'
      requestBody:
        $ref: '#/components/requestBodies/Valuation'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Valuation'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    LeasingItemAdministrativePlan:
      type: object
      properties:
        LeasingItemAdministrativePlanBudgetType:
          type: string
          description: A Classification value that distinguishes between Budgets within Leasing Item Administrative Plan according to the type of resource and/or activity that is budgetted
        LeasingItemAdministrativePlanBudget:
          type: string
          description: An estimate of costs, revenues, and resources  over a specified period which is defined for Leasing Item Administrative Plan
        LeasingItemAdministrativePlanAssignment:
          type: string
          description: The allocation of someone or something which is specified for Leasing Item Administrative Plan
        LeasingItemAdministrativePlan:
          type: string
          description: A plan that defines clerical support for LeasingItem
        LeasingItemAdministrativePlanReference:
          type: object
          description: Party who is involved in  Leasing Item Administrative Plan
    Registration:
      type: object
      properties:
        RegistrationPreconditions:
          type: string
          description: The required status/situation before the routine can be undertaken
        RegistrationBusinessUnit/EmployeeReference:
          type: object
          description: The operating unit/employee responsible for performing the routine
        RegistrationWorkSchedule:
          type: string
          description: The timing and key actions/milestones involved in completing the routine
        CollateralRegistration:
          type: object
          description: The Leasing Item Administrative Plan specific Business Service
        RegistrationPostconditions:
          type: string
          description: The completion status once the routine has been completed (note the need to fulfill a routine may recur frequently)
        RegistrationCollateralRegistrationServiceType:
          type: string
          description: Reference to the specific business service type
        RegistrationCollateralRegistrationServiceDescription:
          type: string
          description: Description of the performed business service
        RegistrationCollateralRegistrationServiceInputsandOuputs:
          type: string
          description: Mandatory and optional inputs and output information for the business service
        RegistrationCollateralRegistrationServiceWorkProduct:
          type: string
          description: Documentation, meeting schedules, notes, reasearch. calculations and any other work products produced by the business service
        RegistrationCollateralRegistrationServiceName:
          type: string
          description: ''
    Assurance:
      type: object
      properties:
        AssurancePreconditions:
          type: string
          description: The required status/situation before the routine can be undertaken
        AssuranceBusinessUnit/EmployeeReference:
          type: object
          description: The operating unit/employee responsible for performing the routine
        AssuranceWorkSchedule:
          type: string
          description: The timing and key actions/milestones involved in completing the routine
        CollateralItemAssurance:
          type: object
          description: The Leasing Item Administrative Plan specific Business Service
        AssurancePostconditions:
          type: string
          description: The completion status once the routine has been completed (note the need to fulfill a routine may recur frequently)
        AssuranceCollateralItemAssuranceServiceType:
          type: string
          description: Reference to the specific business service type
        AssuranceCollateralItemAssuranceServiceDescription:
          type: string
          description: Description of the performed business service
        AssuranceCollateralItemAssuranceServiceInputsandOuputs:
          type: string
          description: Mandatory and optional inputs and output information for the business service
        AssuranceCollateralItemAssuranceServiceWorkProduct:
          type: string
          description: Documentation, meeting schedules, notes, reasearch. calculations and any other work products produced by the business service
        AssuranceCollateralItemAssuranceServiceName:
          type: string
          description: ''
    LeasingItemAdministrationOutcome:
      type: object
      properties:
        LeasingItemAdministrationPerformanceAnalysis:
          type: string
          description: ''
        LeasingItemAdministrationActivityAnalysis:
          type: string
          description: ''
        LeasingItemAdministrationAdministrativePlan:
          type: string
          description: ''
        LeasingItemAdministrationAdministrationTask:
          type: string
          description: ''
    Valuation:
      type: object
      properties:
        ValuationPreconditions:
          type: string
          description: The required status/situation before the routine can be undertaken
        ValuationBusinessUnit/EmployeeReference:
          type: object
          description: The operating unit/employee responsible for performing the routine
        ValuationWorkSchedule:
          type: string
          description: The timing and key actions/milestones involved in completing the routine
        BusinessService:
          type: object
          description: The Leasing Item Administrative Plan specific Business Service
        ValuationPostconditions:
          type: string
          description: The completion status once the routine has been completed (note the need to fulfill a routine may recur frequently)
        ValuationServiceType:
          type: string
          description: Reference to the specific business service type
        ValuationServiceDescription:
          type: string
          description: Description of the performed business service
        ValuationServiceInputsandOuputs:
          type: string
          description: Mandatory and optional inputs and output information for the business service
        ValuationServiceWorkProduct:
          type: string
          description: Documentation, meeting schedules, notes, reasearch. calculations and any other work products produced by the business service
        ValuationServiceName:
          type: string
          description: ''
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          description: NA
        status:
          type: string
          description: NA
        message:
          type: string
          description: NA
    CaptureLeasingItemAdministrativePlanRequest:
      type: object
      properties:
        LeasingItemAdministrativePlan:
          type: object
          properties:
            LeasingItemAdministrativePlanBudgetType:
              type: string
              description: A Classification value that distinguishes between Budgets within Leasing Item Administrative Plan according to the type of resource and/or activity that is budgetted
            LeasingItemAdministrativePlanAssignment:
              type: string
              description: The allocation of someone or something which is specified for Leasing Item Administrative Plan
            LeasingItemAdministrativePlanReference:
              type: object
              description: Party who is involved in  Leasing Item Administrative Plan
    CaptureLeasingItemAdministrativePlanResponse:
      type: object
      properties:
        LeasingItemAdministrativePlan:
          type: object
          properties:
            LeasingItemAdministrativePlanBudgetType:
              type: string
              description: A Classification value that distinguishes between Budgets within Leasing Item Administrative Plan according to the type of resource and/or activity that is budgetted
            LeasingItemAdministrativePlanAssignment:
              type: string
              description: The allocation of someone or something which is specified for Leasing Item Administrative Plan
    ControlLeasingItemAdministrativePlanRequest:
      type: object
      properties:
        LeasingItemAdministrativePlan:
          type: object
          properties:
            LeasingItemAdministrativePlanBudgetType:
              type: string
              description: A Classification value that distinguishes between Budgets within Leasing Item Administrative Plan according to the type of resource and/or activity that is budgetted
            LeasingItemAdministrativePlanAssignment:
              type: string
              description: The allocation of someone or something which is specified for Leasing Item Administrative Plan
            LeasingItemAdministrativePlanReference:
              type: object
              description: Party who is involved in  Leasing Item Administrative Plan
    ControlLeasingItemAdministrativePlanResponse:
      type: object
      properties:
        LeasingItemAdministrativePlan:
          type: object
          properties:
            LeasingItemAdministrativePlanBudgetType:
              type: string
              description: A Classification value that distinguishes between Budgets within Leasing Item Administrative Plan according to the type of resource and/or activity that is budgetted
            LeasingItemAdministrativePlanAssignment:
              type: string
              description: The allocation of someone or something which is specified for Leasing Item Administrative Plan
    ExchangeLeasingItemAdministrativePlanRequest:
      type: object
      properties:
        LeasingItemAdministrativePlan:
          type: object
          properties:
            LeasingItemAdministrativePlanBudgetType:
              type: string
              description: A Classification value that distinguishes between Budgets within Leasing Item Administrative Plan according to the type of resource and/or activity that is budgetted
            LeasingItemAdministrativePlanAssignment:
              type: string
              description: The allocation of someone or something which is specified for Leasing Item Administrative Plan
            LeasingItemAdministrativePlanReference:
              type: object
              description: Party who is involved in  Leasing Item Administrative Plan
    ExchangeLeasingItemAdministrativePlanResponse:
      type: object
      properties:
        LeasingItemAdministrativePlan:
          type: object
          properties:
            LeasingItemAdministrativePlanBudgetType:
              type: string
              description: A Classification value that distinguishes between Budgets within Leasing Item Administrative Plan according to the type of resource and/or activity that is budgetted
            LeasingItemAdministrativePlanAssignment:
              type: string
              description: The allocation of someone or something which is specified for Leasing Item Administrative Plan
    GrantLeasingItemAdministrativePlanRequest:
      type: object
      properties:
        LeasingItemAdministrativePlan:
          type: object
          properties:
            LeasingItemAdministrativePlanBudgetType:
              type: string
              description: A Classification value that distinguishes between Budgets within Leasing Item Administrative Plan according to the type of resource and/or activity that is budgetted
            LeasingItemAdministrativePlanAssignment:
              type: string
              description: The allocation of someone or something which is specified for Leasing Item Administrative Plan
            LeasingItemAdministrativePlanReference:
              type: object
              description: Party who is involved in  Leasing Item Administrative Plan
    GrantLeasingItemAdministrativePlanResponse:
      type: object
      properties:
        LeasingItemAdministrativePlan:
          type: object
          properties:
            LeasingItemAdministrativePlanBudgetType:
              type: string
              description: A Classification value that distinguishes between Budgets within Leasing Item Administrative Plan according to the type of resource and/or activity that is budgetted
            LeasingItemAdministrativePlanAssignment:
              type: string
              description: The allocation of someone or something which is specified for Leasing Item Administrative Plan
    InitiateLeasingItemAdministrativePlanRequest:
      type: object
      properties:
        LeasingItemAdministrativePlan:
          type: object
          properties:
            LeasingItemAdministrativePlanBudgetType:
              type: string
              description: A Classification value that distinguishes between Budgets within Leasing Item Administrative Plan according to the type of resource and/or activity that is budgetted
            LeasingItemAdministrativePlanAssignment:
              type: string
              description: The allocation of someone or something which is specified for Leasing Item Administrative Plan
            LeasingItemAdministrativePlanReference:
              type: object
              description: Party who is involved in  Leasing Item Administrative Plan
    InitiateLeasingItemAdministrativePlanResponse:
      type: object
      properties:
        LeasingItemAdministrativePlan:
          type: object
          properties:
            LeasingItemAdministrativePlanBudgetType:
              type: string
              description: A Classification value that distinguishes between Budgets within Leasing Item Administrative Plan according to the type of resource and/or activity that is budgetted
            LeasingItemAdministrativePlanAssignment:
              type: string
              description: The allocation of someone or something which is specified for Leasing Item Administrative Plan
    RetrieveLeasingItemAdministrativePlanResponse:
      type: object
      properties:
        LeasingItemAdministrativePlan:
          type: object
          properties:
            LeasingItemAdministrativePlanBudgetType:
              type: string
              description: A Classification value that distinguishes between Budgets within Leasing Item Administrative Plan according to the type of resource and/or activity that is budgetted
            LeasingItemAdministrativePlanAssignment:
              type: string
              description: The allocation of someone or something which is specified for Leasing Item Administrative Plan
            LeasingItemAdministrativePlanReference:
              type: object
              description: Party who is involved in  Leasing Item Administrative Plan
    RequestLeasingItemAdministrativePlanRequest:
      type: object
      properties:
        LeasingItemAdministrativePlan:
          type: object
          properties:
            LeasingItemAdministrativePlanBudgetType:
              type: string
              description: A Classification value that distinguishes between Budgets within Leasing Item Administrative Plan according to the type of resource and/or activity that is budgetted
            LeasingItemAdministrativePlanAssignment:
              type: string
              description: The allocation of someone or something which is specified for Leasing Item Administrative Plan
            LeasingItemAdministrativePlanReference:
              type: object
              description: Party who is involved in  Leasing Item Administrative Plan
    RequestLeasingItemAdministrativePlanResponse:
      type: object
      properties:
        LeasingItemAdministrativePlan:
          type: object
          properties:
            LeasingItemAdministrativePlanBudgetType:
              type: string
              description: A Classification value that distinguishes between Budgets within Leasing Item Administrative Plan according to the type of resource and/or activity that is budgetted
            LeasingItemAdministrativePlanAssignment:
              type: string
              description: The allocation of someone or something which is specified for Leasing Item Administrative Plan
    UpdateLeasingItemAdministrativePlanRequest:
      type: object
      properties:
        LeasingItemAdministrativePlan:
          type: object
          properties:
            LeasingItemAdministrativePlanBudgetType:
              type: string
              description: A Classification value that distinguishes between Budgets within Leasing Item Administrative Plan according to the type of resource and/or activity that is budgetted
            LeasingItemAdministrativePlanAssignment:
              type: string
              description: The allocation of someone or something which is specified for Leasing Item Administrative Plan
            LeasingItemAdministrativePlanReference:
              type: object
              description: Party who is involved in  Leasing Item Administrative Plan
    UpdateLeasingItemAdministrativePlanResponse:
      type: object
      properties:
        LeasingItemAdministrativePlan:
          type: object
          properties:
            LeasingItemAdministrativePlanBudgetType:
              type: string
              description: A Classification value that distinguishes between Budgets within Leasing Item Administrative Plan according to the type of resource and/or activity that is budgetted
            LeasingItemAdministrativePlanAssignment:
              type: string
              description: The allocation of someone or something which is specified for Leasing Item Administrative Plan
  parameters:
    LeasingItemAdministrationID:
      name: leasingitemadministrationId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    RegistrationID:
      name: registrationId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    AssuranceID:
      name: assuranceId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    LeasingItemAdministrationOutcomeID:
      name: leasingitemadministrationoutcomeId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    ValuationID:
      name: valuationId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
  requestBodies:
    CaptureLeasingItemAdministrativePlanRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CaptureLeasingItemAdministrativePlanRequest'
    ControlLeasingItemAdministrativePlanRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ControlLeasingItemAdministrativePlanRequest'
    ExchangeLeasingItemAdministrativePlanRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExchangeLeasingItemAdministrativePlanRequest'
    GrantLeasingItemAdministrativePlanRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GrantLeasingItemAdministrativePlanRequest'
    InitiateLeasingItemAdministrativePlanRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateLeasingItemAdministrativePlanRequest'
    RequestLeasingItemAdministrativePlanRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestLeasingItemAdministrativePlanRequest'
    UpdateLeasingItemAdministrativePlanRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateLeasingItemAdministrativePlanRequest'
    Assurance:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Assurance'
    Registration:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Registration'
    Valuation:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Valuation'
  responses:
    HTTPError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    BadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequestsError:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
...
