openapi: 3.0.1
info:
  title: Servicing Event History
  description: 'This service domain captures, classifies and stores servicing activity and events to support root cause analysis'
  contact:
    name: BIAN
    url: https://bian.org
  version: '10.1.0'
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/ServicingEventHistory/10.1.0
paths:
  /ServicingEventHistory/Initiate:
    post:
      tags:
        - CR - ServicingEventLog
      summary: InCR Initiate servicing event history tracking for a servicing resource
      description: InCR Initiate servicing event history tracking for a servicing resource
      operationId: Initiate
      requestBody:
        $ref: '#/components/requestBodies/InitiateServicingEventLogRequest'
      responses:
        '200':
          $ref: '#/components/responses/InitiateServicingEventLogRequest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ServicingEventHistory/{servicingeventhistoryid}/Update':
    put:
      tags:
        - CR - ServicingEventLog
      summary: UpCR Update details about the log
      description: UpCR Update details about the log
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/servicingeventhistoryid'
      requestBody:
        $ref: '#/components/requestBodies/UpdateServicingEventLogRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateServicingEventLogResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ServicingEventHistory/{servicingeventhistoryid}/Retrieve':
    get:
      tags:
        - CR - ServicingEventLog
      summary: ReCR Retrieve details about the servicing event log
      description: ReCR Retrieve details about the servicing event log
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/servicingeventhistoryid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveServicingEventLogResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ServicingEventHistory/{servicingeventhistoryid}/Assignment/{assignmentid}/Update':
    put:
      tags:
        - BQ - Assignment
      summary: UpBQ Update captured assignment event details
      description: UpBQ Update captured assignment event details
      operationId: UpdateAssignment
      parameters:
        - $ref: '#/components/parameters/servicingeventhistoryid'
        - $ref: '#/components/parameters/assignmentid'
      requestBody:
        $ref: '#/components/requestBodies/UpdateAssignmentRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateAssignmentResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ServicingEventHistory/{servicingeventhistoryid}/Assignment/{assignmentid}/Capture':
    put:
      tags:
        - BQ - Assignment
      summary: CaBQ Capture servicing position assignment event details
      description: CaBQ Capture servicing position assignment event details
      operationId: CaptureAssignment
      parameters:
        - $ref: '#/components/parameters/servicingeventhistoryid'
        - $ref: '#/components/parameters/assignmentid'
      requestBody:
        $ref: '#/components/requestBodies/CaptureAssignmentRequest'
      responses:
        '200':
          $ref: '#/components/responses/CaptureAssignmentRequest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ServicingEventHistory/{servicingeventhistoryid}/Assignment/{assignmentid}/Retrieve':
    get:
      tags:
        - BQ - Assignment
      summary: ReBQ Retrieve servicing position assignment event details
      description: ReBQ Retrieve servicing position assignment event details
      operationId: RetrieveAssignment
      parameters:
        - $ref: '#/components/parameters/servicingeventhistoryid'
        - $ref: '#/components/parameters/assignmentid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveAssignmentResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ServicingEventHistory/{servicingeventhistoryid}/Session/{sessionid}/Update':
    put:
      tags:
        - BQ - Session
      summary: UpBQ Update captured customer servicing session event details
      description: UpBQ Update captured customer servicing session event details
      operationId: UpdateSession
      parameters:
        - $ref: '#/components/parameters/servicingeventhistoryid'
        - $ref: '#/components/parameters/sessionid'
      requestBody:
        $ref: '#/components/requestBodies/UpdateSessionRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateSessionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ServicingEventHistory/{servicingeventhistoryid}/Session/{sessionid}/Capture':
    put:
      tags:
        - BQ - Session
      summary: CaBQ Capture customer servicing session event details
      description: CaBQ Capture customer servicing session event details
      operationId: CaptureSession
      parameters:
        - $ref: '#/components/parameters/servicingeventhistoryid'
        - $ref: '#/components/parameters/sessionid'
      requestBody:
        $ref: '#/components/requestBodies/CaptureSessionRequest'
      responses:
        '200':
          $ref: '#/components/responses/CaptureSessionRequest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ServicingEventHistory/{servicingeventhistoryid}/Session/{sessionid}/Retrieve':
    get:
      tags:
        - BQ - Session
      summary: ReBQ Retrieve customer servicing event details
      description: ReBQ Retrieve customer servicing event details
      operationId: RetrieveSession
      parameters:
        - $ref: '#/components/parameters/servicingeventhistoryid'
        - $ref: '#/components/parameters/sessionid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveSessionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ServicingEventHistory/{servicingeventhistoryid}/Issue/{issueid}/Update':
    put:
      tags:
        - BQ - Issue
      summary: UpBQ Update captured servicing issue event details
      description: UpBQ Update captured servicing issue event details
      operationId: UpdateIssue
      parameters:
        - $ref: '#/components/parameters/servicingeventhistoryid'
        - $ref: '#/components/parameters/issueid'
      requestBody:
        $ref: '#/components/requestBodies/UpdateIssueRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateIssueResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ServicingEventHistory/{servicingeventhistoryid}/Issue/{issueid}/Capture':
    put:
      tags:
        - BQ - Issue
      summary: CaBQ Capture servicing issue event details
      description: CaBQ Capture servicing issue event details
      operationId: CaptureIssue
      parameters:
        - $ref: '#/components/parameters/servicingeventhistoryid'
        - $ref: '#/components/parameters/issueid'
      requestBody:
        $ref: '#/components/requestBodies/CaptureIssueRequest'
      responses:
        '200':
          $ref: '#/components/responses/CaptureIssueRequest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ServicingEventHistory/{servicingeventhistoryid}/Issue/{issueid}/Retrieve':
    get:
      tags:
        - BQ - Issue
      summary: ReBQ Retrieve servicing issue event details
      description: ReBQ Retrieve servicing issue event details
      operationId: RetrieveIssue
      parameters:
        - $ref: '#/components/parameters/servicingeventhistoryid'
        - $ref: '#/components/parameters/issueid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveIssueResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ServicingEventHistory/{servicingeventhistoryid}/ServicingFacility/{servicingfacilityid}/Update':
    put:
      tags:
        - BQ - ServicingFacility
      summary: UpBQ Update captured facility utilization event details
      description: UpBQ Update captured facility utilization event details
      operationId: UpdateServicingFacility
      parameters:
        - $ref: '#/components/parameters/servicingeventhistoryid'
        - $ref: '#/components/parameters/servicingfacilityid'
      requestBody:
        $ref: '#/components/requestBodies/ServicingFacility'
      responses:
        '200':
          $ref: '#/components/responses/ServicingFacility'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ServicingEventHistory/{servicingeventhistoryid}/ServicingFacility/{servicingfacilityid}/Capture':
    put:
      tags:
        - BQ - ServicingFacility
      summary: CaBQ Capture  facility utilization event details
      description: CaBQ Capture  facility utilization event details
      operationId: CaptureServicingFacility
      parameters:
        - $ref: '#/components/parameters/servicingeventhistoryid'
        - $ref: '#/components/parameters/servicingfacilityid'
      requestBody:
        $ref: '#/components/requestBodies/CaptureServicingFacilityRequest'
      responses:
        '200':
          $ref: '#/components/responses/CaptureServicingFacilityRequest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ServicingEventHistory/{servicingeventhistoryid}/ServicingFacility/{servicingfacilityid}/Retrieve':
    get:
      tags:
        - BQ - ServicingFacility
      summary: ReBQ Retrieve  facility utilization event details
      description: ReBQ Retrieve  facility utilization event details
      operationId: RetrieveServicingFacility
      parameters:
        - $ref: '#/components/parameters/servicingeventhistoryid'
        - $ref: '#/components/parameters/servicingfacilityid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveServicingFacilityResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    object:
      type: object
      properties:
        ObjectProperties:
          type: string
          description: ''
          format: string
        ObjectDescription:
          type: string
          description: ''
          format: string
      description: Reference to the service position where issue arises
    Issue:
      type: object
      properties:
        ServicingPositionReference:
          $ref: '#/components/schemas/object'
        ServicingPositionSessionReference:
          $ref: '#/components/schemas/object'
        Employee/BusinessUnitReference:
          $ref: '#/components/schemas/object'
        ProductionIssueType:
          type: string
          description: Defines the type of event/error being recorded (e.g. support facility failure)
          format: string
        ProductionIssueDescription:
          type: string
          description: 'Description of the issue and involved functions, parties'
          format: string
        ProductionIssueDiagnosis:
          type: string
          description: An evaluation of the event cause and impact
          format: string
        ProductionIssueResolutionTask:
          type: string
          description: Description of corrective actions and assigned parties
          format: string
      description: "A collection of the events/transactions recorded by the log\n\nExamples: Customer life event, Servicing event"
    Assignment:
      type: object
      properties:
        Date/Time/Location:
          type: string
          description: 'Key dates and times associated with the assignment (e.g. start, end, break duration, available/idle time)'
          format: string
        ServicingPositionActivityReport:
          type: string
          description: 'Log of servicing activity at that position during the session (e.g. contacts, sales, issues, breaks)'
          format: string
        ServicingPositionActivityStatistics:
          type: string
          description: 'Accumulated statistics during the session (e.g. average contact time, wait time, service utilization, facility usage)'
          format: string
      description: "A collection of the events/transactions recorded by the log\n\nExamples: Customer life event, Servicing event"
    ServicingFacility:
      type: object
      properties:
        ServicingFacilityType:
          type: string
          description: 'The type of service support facility engaged (e.g. commission tracking, on-line help, action logging)'
          format: string
        ServicingFacilityInstanceReference:
          $ref: '#/components/schemas/object'
      description: "A collection of the events/transactions recorded by the log\n\nExamples: Customer life event, Servicing event"
    Session:
      type: object
      properties:
        SessionStart/EndTime:
          type: string
          description: The start and duration of the dialogue
          format: string
        CustomerContactReference:
          $ref: '#/components/schemas/object'
        SessionMechanism:
          type: string
          description: 'The type of channel device involved in the session exchange (e.g. web, phone, chat, video, VOIP, face to face at a branch - note there can be concurrent sessions within a single customer contact)'
          format: string
        ServicingFacilityType:
          type: string
          description: Lists if a specific servicing facility is used during the session)
          format: string
        SessionDialogueRecord:
          type: string
          description: The session dialogue log of actions is returned to SD-Contact Handler and added to the contact record
          format: string
        SessionDialogueType:
          type: string
          description: 'The general type of customer exchange (e.g. verified customer, anonymous contact, topic - used to structure/script dialogue)'
          format: string
        SessionDialogueScript:
          type: string
          description: In cases a prompt or script can provided to structure the interaction for self-service and assisted interactions
          format: string
        SessionDialogueLogReference:
          $ref: '#/components/schemas/object'
        SessionDialogueLog:
          type: string
          description: 'The dialogue log, used for training and root cause analysis etc.  (e.g. click-stream, video/audio recording)'
          format: string
        SessionDialogueResult:
          type: string
          description: 'The outcome of the dialogue (e.g. customer satisfied, on-ward routing, hang-up)'
          format: string
      description: "A collection of the events/transactions recorded by the log\n\nExamples: Customer life event, Servicing event"
    ServicingEventLog:
      type: object
      properties:
        ServicingPositionReference:
          $ref: '#/components/schemas/object'
        EmployeeOrBusinessUnitReference:
          $ref: '#/components/schemas/object'
      description: 'Maintain a log of transactions or activity, typically a financial account/journal or a log of activity to support behavioral analysis within Servicing Event History. '
    InitiateServicingEventLogRequest:
      type: object
      properties:
        ServicingEventLog:
          type: object
          properties:
            ServicingPositionReference:
              $ref: '#/components/schemas/object'
            EmployeeBusinessUnitReference:
              $ref: '#/components/schemas/object'
      description: 'Input: InCR Initiate servicing event history tracking for a servicing resource'
    UpdateServicingEventLogRequest:
      type: object
      properties:
        ServicingEventLog:
          type: object
          properties:
            ServicingPositionReference:
              $ref: '#/components/schemas/object'
            EmployeeBusinessUnitReference:
              $ref: '#/components/schemas/object'
      description: 'Input: UpCR Update details about the log'
    UpdateServicingEventLogResponse:
      type: object
      properties:
        ServicingEventLog:
          type: object
          properties:
            ServicingPositionReference:
              $ref: '#/components/schemas/object'
            EmployeeBusinessUnitReference:
              $ref: '#/components/schemas/object'
      description: 'Output: UpCR Update details about the log'
    RetrieveServicingEventLogResponse:
      type: object
      properties:
        ServicingEventLog:
          type: object
          properties:
            ServicingPositionReference:
              $ref: '#/components/schemas/object'
            EmployeeBusinessUnitReference:
              $ref: '#/components/schemas/object'
      description: 'Output: ReCR Retrieve details about the servicing event log'
    UpdateAssignmentRequest:
      type: object
      properties:
        Assignment:
          type: object
          properties:
            DateTimeLocation:
              type: string
              description: 'Key dates and times associated with the assignment (e.g. start, end, break duration, available/idle time)'
              format: string
            ServicingPositionActivityReport:
              type: string
              description: 'Log of servicing activity at that position during the session (e.g. contacts, sales, issues, breaks)'
              format: string
            ServicingPositionActivityStatistics:
              type: string
              description: 'Accumulated statistics during the session (e.g. average contact time, wait time, service utilization, facility usage)'
              format: string
      description: 'Input: UpBQ Update captured assignment event details'
    UpdateAssignmentResponse:
      type: object
      properties:
        Assignment:
          type: object
          properties:
            DateTimeLocation:
              type: string
              description: 'Key dates and times associated with the assignment (e.g. start, end, break duration, available/idle time)'
              format: string
            ServicingPositionActivityReport:
              type: string
              description: 'Log of servicing activity at that position during the session (e.g. contacts, sales, issues, breaks)'
              format: string
            ServicingPositionActivityStatistics:
              type: string
              description: 'Accumulated statistics during the session (e.g. average contact time, wait time, service utilization, facility usage)'
              format: string
      description: 'Output: UpBQ Update captured assignment event details'
    CaptureAssignmentRequest:
      type: object
      properties:
        Assignment:
          type: object
          properties:
            DateTimeLocation:
              type: string
              description: 'Key dates and times associated with the assignment (e.g. start, end, break duration, available/idle time)'
              format: string
            ServicingPositionActivityReport:
              type: string
              description: 'Log of servicing activity at that position during the session (e.g. contacts, sales, issues, breaks)'
              format: string
            ServicingPositionActivityStatistics:
              type: string
              description: 'Accumulated statistics during the session (e.g. average contact time, wait time, service utilization, facility usage)'
              format: string
      description: 'Input: CaBQ Capture servicing position assignment event details'
    RetrieveAssignmentResponse:
      type: object
      properties:
        Assignment:
          type: object
          properties:
            DateTimeLocation:
              type: string
              description: 'Key dates and times associated with the assignment (e.g. start, end, break duration, available/idle time)'
              format: string
            ServicingPositionActivityReport:
              type: string
              description: 'Log of servicing activity at that position during the session (e.g. contacts, sales, issues, breaks)'
              format: string
            ServicingPositionActivityStatistics:
              type: string
              description: 'Accumulated statistics during the session (e.g. average contact time, wait time, service utilization, facility usage)'
              format: string
      description: 'Output: ReBQ Retrieve servicing position assignment event details'
    UpdateSessionRequest:
      type: object
      properties:
        Session:
          type: object
          properties:
            SessionStartEndTime:
              type: string
              description: The start and duration of the dialogue
              format: string
            CustomerContactReference:
              $ref: '#/components/schemas/object'
            SessionMechanism:
              type: string
              description: 'The type of channel device involved in the session exchange (e.g. web, phone, chat, video, VOIP, face to face at a branch - note there can be concurrent sessions within a single customer contact)'
              format: string
            ServicingFacilityType:
              type: string
              description: Lists if a specific servicing facility is used during the session)
              format: string
            SessionDialogueRecord:
              type: string
              description: The session dialogue log of actions is returned to SD-Contact Handler and added to the contact record
              format: string
            SessionDialogueType:
              type: string
              description: 'The general type of customer exchange (e.g. verified customer, anonymous contact, topic - used to structure/script dialogue)'
              format: string
            SessionDialogueScript:
              type: string
              description: In cases a prompt or script can provided to structure the interaction for self-service and assisted interactions
              format: string
            SessionDialogueLogReference:
              $ref: '#/components/schemas/object'
            SessionDialogueResult:
              type: string
              description: 'The outcome of the dialogue (e.g. customer satisfied, on-ward routing, hang-up)'
              format: string
      description: 'Input: UpBQ Update captured customer servicing session event details'
    UpdateSessionResponse:
      type: object
      properties:
        Session:
          type: object
          properties:
            SessionStartEndTime:
              type: string
              description: The start and duration of the dialogue
              format: string
            CustomerContactReference:
              $ref: '#/components/schemas/object'
            SessionMechanism:
              type: string
              description: 'The type of channel device involved in the session exchange (e.g. web, phone, chat, video, VOIP, face to face at a branch - note there can be concurrent sessions within a single customer contact)'
              format: string
            ServicingFacilityType:
              type: string
              description: Lists if a specific servicing facility is used during the session)
              format: string
            SessionDialogueRecord:
              type: string
              description: The session dialogue log of actions is returned to SD-Contact Handler and added to the contact record
              format: string
            SessionDialogueType:
              type: string
              description: 'The general type of customer exchange (e.g. verified customer, anonymous contact, topic - used to structure/script dialogue)'
              format: string
            SessionDialogueScript:
              type: string
              description: In cases a prompt or script can provided to structure the interaction for self-service and assisted interactions
              format: string
            SessionDialogueLogReference:
              $ref: '#/components/schemas/object'
            SessionDialogueResult:
              type: string
              description: 'The outcome of the dialogue (e.g. customer satisfied, on-ward routing, hang-up)'
              format: string
      description: 'Output: UpBQ Update captured customer servicing session event details'
    CaptureSessionRequest:
      type: object
      properties:
        Session:
          type: object
          properties:
            SessionStartEndTime:
              type: string
              description: The start and duration of the dialogue
              format: string
            CustomerContactReference:
              $ref: '#/components/schemas/object'
            SessionMechanism:
              type: string
              description: 'The type of channel device involved in the session exchange (e.g. web, phone, chat, video, VOIP, face to face at a branch - note there can be concurrent sessions within a single customer contact)'
              format: string
            ServicingFacilityType:
              type: string
              description: Lists if a specific servicing facility is used during the session)
              format: string
            SessionDialogueRecord:
              type: string
              description: The session dialogue log of actions is returned to SD-Contact Handler and added to the contact record
              format: string
            SessionDialogueType:
              type: string
              description: 'The general type of customer exchange (e.g. verified customer, anonymous contact, topic - used to structure/script dialogue)'
              format: string
            SessionDialogueScript:
              type: string
              description: In cases a prompt or script can provided to structure the interaction for self-service and assisted interactions
              format: string
            SessionDialogueLogReference:
              $ref: '#/components/schemas/object'
            SessionDialogueResult:
              type: string
              description: 'The outcome of the dialogue (e.g. customer satisfied, on-ward routing, hang-up)'
              format: string
      description: 'Input: CaBQ Capture customer servicing session event details'
    RetrieveSessionResponse:
      type: object
      properties:
        Session:
          type: object
          properties:
            SessionStartEndTime:
              type: string
              description: The start and duration of the dialogue
              format: string
            CustomerContactReference:
              $ref: '#/components/schemas/object'
            SessionMechanism:
              type: string
              description: 'The type of channel device involved in the session exchange (e.g. web, phone, chat, video, VOIP, face to face at a branch - note there can be concurrent sessions within a single customer contact)'
              format: string
            ServicingFacilityType:
              type: string
              description: Lists if a specific servicing facility is used during the session)
              format: string
            SessionDialogueRecord:
              type: string
              description: The session dialogue log of actions is returned to SD-Contact Handler and added to the contact record
              format: string
            SessionDialogueType:
              type: string
              description: 'The general type of customer exchange (e.g. verified customer, anonymous contact, topic - used to structure/script dialogue)'
              format: string
            SessionDialogueScript:
              type: string
              description: In cases a prompt or script can provided to structure the interaction for self-service and assisted interactions
              format: string
            SessionDialogueLogReference:
              $ref: '#/components/schemas/object'
            SessionDialogueResult:
              type: string
              description: 'The outcome of the dialogue (e.g. customer satisfied, on-ward routing, hang-up)'
              format: string
      description: 'Output: ReBQ Retrieve customer servicing event details'
    UpdateIssueRequest:
      type: object
      properties:
        Issue:
          type: object
          properties:
            ServicingPositionReference:
              $ref: '#/components/schemas/object'
            ServicingPositionSessionReference:
              $ref: '#/components/schemas/object'
            EmployeeBusinessUnitReference:
              $ref: '#/components/schemas/object'
            ProductionIssueType:
              type: string
              description: Defines the type of event/error being recorded (e.g. support facility failure)
              format: string
            ProductionIssueDescription:
              type: string
              description: 'Description of the issue and involved functions, parties'
              format: string
            ProductionIssueDiagnosis:
              type: string
              description: An evaluation of the event cause and impact
              format: string
            ProductionIssueResolutionTask:
              type: string
              description: Description of corrective actions and assigned parties
              format: string
      description: 'Input: UpBQ Update captured servicing issue event details'
    UpdateIssueResponse:
      type: object
      properties:
        Issue:
          type: object
          properties:
            ServicingPositionReference:
              $ref: '#/components/schemas/object'
            ServicingPositionSessionReference:
              $ref: '#/components/schemas/object'
            EmployeeBusinessUnitReference:
              $ref: '#/components/schemas/object'
            ProductionIssueType:
              type: string
              description: Defines the type of event/error being recorded (e.g. support facility failure)
              format: string
            ProductionIssueDescription:
              type: string
              description: 'Description of the issue and involved functions, parties'
              format: string
            ProductionIssueDiagnosis:
              type: string
              description: An evaluation of the event cause and impact
              format: string
            ProductionIssueResolutionTask:
              type: string
              description: Description of corrective actions and assigned parties
              format: string
      description: 'Output: UpBQ Update captured servicing issue event details'
    CaptureIssueRequest:
      type: object
      properties:
        Session:
          type: object
          properties:
            CustomerContactReference:
              $ref: '#/components/schemas/object'
        Issue:
          type: object
          properties:
            ServicingPositionReference:
              $ref: '#/components/schemas/object'
            ServicingPositionSessionReference:
              $ref: '#/components/schemas/object'
            EmployeeBusinessUnitReference:
              $ref: '#/components/schemas/object'
            ProductionIssueType:
              type: string
              description: Defines the type of event/error being recorded (e.g. support facility failure)
              format: string
            ProductionIssueDescription:
              type: string
              description: 'Description of the issue and involved functions, parties'
              format: string
            ProductionIssueDiagnosis:
              type: string
              description: An evaluation of the event cause and impact
              format: string
            ProductionIssueResolutionTask:
              type: string
              description: Description of corrective actions and assigned parties
              format: string
      description: 'Input: CaBQ Capture servicing issue event details'
    RetrieveIssueResponse:
      type: object
      properties:
        Issue:
          type: object
          properties:
            ServicingPositionReference:
              $ref: '#/components/schemas/object'
            ServicingPositionSessionReference:
              $ref: '#/components/schemas/object'
            EmployeeBusinessUnitReference:
              $ref: '#/components/schemas/object'
            ProductionIssueType:
              type: string
              description: Defines the type of event/error being recorded (e.g. support facility failure)
              format: string
            ProductionIssueDescription:
              type: string
              description: 'Description of the issue and involved functions, parties'
              format: string
            ProductionIssueDiagnosis:
              type: string
              description: An evaluation of the event cause and impact
              format: string
            ProductionIssueResolutionTask:
              type: string
              description: Description of corrective actions and assigned parties
              format: string
      description: 'Output: ReBQ Retrieve servicing issue event details'
    CaptureServicingFacilityRequest:
      type: object
      properties:
        Session:
          type: object
          properties:
            CustomerContactReference:
              $ref: '#/components/schemas/object'
        ServicingFacility:
          type: object
          properties:
            ServicingFacilityType:
              type: string
              description: 'The type of service support facility engaged (e.g. commission tracking, on-line help, action logging)'
              format: string
            ServicingFacilityInstanceReference:
              $ref: '#/components/schemas/object'
      description: 'Input: CaBQ Capture  facility utilization event details'
    RetrieveServicingFacilityResponse:
      type: object
      properties:
        ServicingFacility:
          type: object
          properties:
            ServicingFacilityType:
              type: string
              description: 'The type of service support facility engaged (e.g. commission tracking, on-line help, action logging)'
              format: string
            ServicingFacilityInstanceReference:
              $ref: '#/components/schemas/object'
      description: 'Output: ReBQ Retrieve  facility utilization event details'
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InitiateServicingEventLogRequest:
      description: InitiateServicingEventLogRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateServicingEventLogRequest'
    UpdateServicingEventLogResponse:
      description: UpdateServicingEventLogResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateServicingEventLogResponse'
    RetrieveServicingEventLogResponse:
      description: RetrieveServicingEventLogResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveServicingEventLogResponse'
    UpdateAssignmentResponse:
      description: UpdateAssignmentResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateAssignmentResponse'
    CaptureAssignmentRequest:
      description: CaptureAssignmentRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CaptureAssignmentRequest'
    RetrieveAssignmentResponse:
      description: RetrieveAssignmentResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveAssignmentResponse'
    UpdateSessionResponse:
      description: UpdateSessionResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateSessionResponse'
    CaptureSessionRequest:
      description: CaptureSessionRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CaptureSessionRequest'
    RetrieveSessionResponse:
      description: RetrieveSessionResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveSessionResponse'
    UpdateIssueResponse:
      description: UpdateIssueResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateIssueResponse'
    CaptureIssueRequest:
      description: CaptureIssueRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CaptureIssueRequest'
    RetrieveIssueResponse:
      description: RetrieveIssueResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveIssueResponse'
    ServicingFacility:
      description: ServicingFacility
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServicingFacility'
    CaptureServicingFacilityRequest:
      description: CaptureServicingFacilityRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CaptureServicingFacilityRequest'
    RetrieveServicingFacilityResponse:
      description: RetrieveServicingFacilityResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveServicingFacilityResponse'
  parameters:
    servicingeventhistoryid:
      name: servicingeventhistoryid
      in: path
      required: true
      style: simple
      schema:
        type: string
    assignmentid:
      name: assignmentid
      in: path
      required: true
      style: simple
      schema:
        type: string
    sessionid:
      name: sessionid
      in: path
      required: true
      style: simple
      schema:
        type: string
    issueid:
      name: issueid
      in: path
      required: true
      style: simple
      schema:
        type: string
    servicingfacilityid:
      name: servicingfacilityid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    InitiateServicingEventLogRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateServicingEventLogRequest'
      required: true
    UpdateServicingEventLogRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateServicingEventLogRequest'
      required: true
    UpdateAssignmentRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateAssignmentRequest'
      required: true
    CaptureAssignmentRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CaptureAssignmentRequest'
      required: true
    UpdateSessionRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateSessionRequest'
      required: true
    CaptureSessionRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CaptureSessionRequest'
      required: true
    UpdateIssueRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateIssueRequest'
      required: true
    CaptureIssueRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CaptureIssueRequest'
      required: true
    ServicingFacility:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServicingFacility'
      required: true
    CaptureServicingFacilityRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CaptureServicingFacilityRequest'
      required: true