openapi: 3.0.1
info:
  title: Counterparty Administration
  description: This Service Domain maintains key counterparty reference information used in the clearing and settlement of wholesale trading
  contact:
    name: BIAN
    url: https://bian.org
  version: '10.1.0'
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/CounterpartyAdministration/10.1.0
paths:
  '/CounterpartyAdministration/{counterpartyadministrationid}/Control':
    put:
      tags:
        - CR - CounterpartyDirectoryEntry
      summary: Control Counterparty Directory Entry
      description: Control Counterparty Directory Entry
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/counterpartyadministrationid'
      requestBody:
        $ref: '#/components/requestBodies/ControlCounterpartyDirectoryEntryRequest'
      responses:
        '200':
          $ref: '#/components/responses/ControlCounterpartyDirectoryEntryResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CounterpartyAdministration/{counterpartyadministrationid}/Execute':
    put:
      tags:
        - CR - CounterpartyDirectoryEntry
      summary: Execute Counterparty Directory Entry
      description: Execute Counterparty Directory Entry
      operationId: Execute
      parameters:
        - $ref: '#/components/parameters/counterpartyadministrationid'
      requestBody:
        $ref: '#/components/requestBodies/ExecuteCounterpartyDirectoryEntryRequest'
      responses:
        '200':
          $ref: '#/components/responses/ExecuteCounterpartyDirectoryEntryResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CounterpartyAdministration/{counterpartyadministrationid}/Notify':
    get:
      tags:
        - CR - CounterpartyDirectoryEntry
      summary: Notify Counterparty Directory Entry
      description: Notify Counterparty Directory Entry
      operationId: Notify
      parameters:
        - $ref: '#/components/parameters/counterpartyadministrationid'
      responses:
        '200':
          $ref: '#/components/responses/NotifyCounterpartyDirectoryEntryResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /CounterpartyAdministration/Register:
    post:
      tags:
        - CR - CounterpartyDirectoryEntry
      summary: Register Counterparty Directory Entry
      description: Register Counterparty Directory Entry
      operationId: Register
      requestBody:
        $ref: '#/components/requestBodies/RegisterCounterpartyDirectoryEntryRequest'
      responses:
        '200':
          $ref: '#/components/responses/RegisterCounterpartyDirectoryEntryResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CounterpartyAdministration/{counterpartyadministrationid}/Request':
    put:
      tags:
        - CR - CounterpartyDirectoryEntry
      summary: Request Counterparty Directory Entry
      description: Request Counterparty Directory Entry
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/counterpartyadministrationid'
      requestBody:
        $ref: '#/components/requestBodies/RequestCounterpartyDirectoryEntryRequest'
      responses:
        '200':
          $ref: '#/components/responses/RequestCounterpartyDirectoryEntryResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CounterpartyAdministration/{counterpartyadministrationid}/Retrieve':
    get:
      tags:
        - CR - CounterpartyDirectoryEntry
      summary: Retrieve Counterparty Directory Entry
      description: Retrieve Counterparty Directory Entry
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/counterpartyadministrationid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveCounterpartyDirectoryEntryResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CounterpartyAdministration/{counterpartyadministrationid}/Update':
    put:
      tags:
        - CR - CounterpartyDirectoryEntry
      summary: Update Counterparty Directory Entry
      description: Update Counterparty Directory Entry
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/counterpartyadministrationid'
      requestBody:
        $ref: '#/components/requestBodies/UpdateCounterpartyDirectoryEntryRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateCounterpartyDirectoryEntryResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CounterpartyAdministration/{counterpartyadministrationid}/CounterpartyEntityReferenceproperty/{counterpartyentityreferencepropertyid}/Execute':
    put:
      tags:
        - BQ - CounterpartyEntityReferenceproperty
      summary: Execute Counterparty Entity Reference property
      description: Execute Counterparty Entity Reference property
      operationId: ExecuteCounterpartyEntityReferenceproperty
      parameters:
        - $ref: '#/components/parameters/counterpartyadministrationid'
        - $ref: '#/components/parameters/counterpartyentityreferencepropertyid'
      requestBody:
        $ref: '#/components/requestBodies/CounterpartyEntityReferenceproperty'
      responses:
        '200':
          $ref: '#/components/responses/CounterpartyEntityReferenceproperty'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CounterpartyAdministration/{counterpartyadministrationid}/CounterpartyPermittedTransactionproperty/{counterpartypermittedtransactionpropertyid}/Execute':
    put:
      tags:
        - BQ - CounterpartyPermittedTransactionproperty
      summary: Execute Counterparty Permitted Transaction property
      description: Execute Counterparty Permitted Transaction property
      operationId: ExecuteCounterpartyPermittedTransactionproperty
      parameters:
        - $ref: '#/components/parameters/counterpartyadministrationid'
        - $ref: '#/components/parameters/counterpartypermittedtransactionpropertyid'
      requestBody:
        $ref: '#/components/requestBodies/CounterpartyPermittedTransactionproperty'
      responses:
        '200':
          $ref: '#/components/responses/CounterpartyPermittedTransactionproperty'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CounterpartyAdministration/{counterpartyadministrationid}/CounterpartyEntityReferenceproperty/{counterpartyentityreferencepropertyid}/Notify':
    get:
      tags:
        - BQ - CounterpartyEntityReferenceproperty
      summary: Notify Counterparty Entity Reference property
      description: Notify Counterparty Entity Reference property
      operationId: NotifyCounterpartyEntityReferenceproperty
      parameters:
        - $ref: '#/components/parameters/counterpartyadministrationid'
        - $ref: '#/components/parameters/counterpartyentityreferencepropertyid'
      responses:
        '200':
          $ref: '#/components/responses/CounterpartyEntityReferenceproperty'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CounterpartyAdministration/{counterpartyadministrationid}/CounterpartyPermittedTransactionproperty/{counterpartypermittedtransactionpropertyid}/Notify':
    get:
      tags:
        - BQ - CounterpartyPermittedTransactionproperty
      summary: Notify Counterparty Permitted Transaction property
      description: Notify Counterparty Permitted Transaction property
      operationId: NotifyCounterpartyPermittedTransactionproperty
      parameters:
        - $ref: '#/components/parameters/counterpartyadministrationid'
        - $ref: '#/components/parameters/counterpartypermittedtransactionpropertyid'
      responses:
        '200':
          $ref: '#/components/responses/CounterpartyPermittedTransactionproperty'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CounterpartyAdministration/{counterpartyadministrationid}/CounterpartyEntityReferenceproperty/{counterpartyentityreferencepropertyid}/Register':
    post:
      tags:
        - BQ - CounterpartyEntityReferenceproperty
      summary: Register Counterparty Entity Reference property
      description: Register Counterparty Entity Reference property
      operationId: RegisterCounterpartyEntityReferenceproperty
      parameters:
        - $ref: '#/components/parameters/counterpartyadministrationid'
        - $ref: '#/components/parameters/counterpartyentityreferencepropertyid'
      requestBody:
        $ref: '#/components/requestBodies/CounterpartyEntityReferenceproperty'
      responses:
        '200':
          $ref: '#/components/responses/CounterpartyEntityReferenceproperty'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CounterpartyAdministration/{counterpartyadministrationid}/CounterpartyPermittedTransactionproperty/{counterpartypermittedtransactionpropertyid}/Register':
    post:
      tags:
        - BQ - CounterpartyPermittedTransactionproperty
      summary: Register Counterparty Permitted Transaction property
      description: Register Counterparty Permitted Transaction property
      operationId: RegisterCounterpartyPermittedTransactionproperty
      parameters:
        - $ref: '#/components/parameters/counterpartyadministrationid'
        - $ref: '#/components/parameters/counterpartypermittedtransactionpropertyid'
      requestBody:
        $ref: '#/components/requestBodies/CounterpartyPermittedTransactionproperty'
      responses:
        '200':
          $ref: '#/components/responses/CounterpartyPermittedTransactionproperty'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CounterpartyAdministration/{counterpartyadministrationid}/CounterpartyEntityReferenceproperty/{counterpartyentityreferencepropertyid}/Request':
    put:
      tags:
        - BQ - CounterpartyEntityReferenceproperty
      summary: Request Counterparty Entity Reference property
      description: Request Counterparty Entity Reference property
      operationId: RequestCounterpartyEntityReferenceproperty
      parameters:
        - $ref: '#/components/parameters/counterpartyadministrationid'
        - $ref: '#/components/parameters/counterpartyentityreferencepropertyid'
      requestBody:
        $ref: '#/components/requestBodies/CounterpartyEntityReferenceproperty'
      responses:
        '200':
          $ref: '#/components/responses/CounterpartyEntityReferenceproperty'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CounterpartyAdministration/{counterpartyadministrationid}/CounterpartyPermittedTransactionproperty/{counterpartypermittedtransactionpropertyid}/Request':
    put:
      tags:
        - BQ - CounterpartyPermittedTransactionproperty
      summary: Request Counterparty Permitted Transaction property
      description: Request Counterparty Permitted Transaction property
      operationId: RequestCounterpartyPermittedTransactionproperty
      parameters:
        - $ref: '#/components/parameters/counterpartyadministrationid'
        - $ref: '#/components/parameters/counterpartypermittedtransactionpropertyid'
      requestBody:
        $ref: '#/components/requestBodies/CounterpartyPermittedTransactionproperty'
      responses:
        '200':
          $ref: '#/components/responses/CounterpartyPermittedTransactionproperty'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CounterpartyAdministration/{counterpartyadministrationid}/CounterpartyEntityReferenceproperty/{counterpartyentityreferencepropertyid}/Retrieve':
    get:
      tags:
        - BQ - CounterpartyEntityReferenceproperty
      summary: Retrieve Counterparty Entity Reference property
      description: Retrieve Counterparty Entity Reference property
      operationId: RetrieveCounterpartyEntityReferenceproperty
      parameters:
        - $ref: '#/components/parameters/counterpartyadministrationid'
        - $ref: '#/components/parameters/counterpartyentityreferencepropertyid'
      responses:
        '200':
          $ref: '#/components/responses/CounterpartyEntityReferenceproperty'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CounterpartyAdministration/{counterpartyadministrationid}/CounterpartyPermittedTransactionproperty/{counterpartypermittedtransactionpropertyid}/Retrieve':
    get:
      tags:
        - BQ - CounterpartyPermittedTransactionproperty
      summary: Retrieve Counterparty Permitted Transaction property
      description: Retrieve Counterparty Permitted Transaction property
      operationId: RetrieveCounterpartyPermittedTransactionproperty
      parameters:
        - $ref: '#/components/parameters/counterpartyadministrationid'
        - $ref: '#/components/parameters/counterpartypermittedtransactionpropertyid'
      responses:
        '200':
          $ref: '#/components/responses/CounterpartyPermittedTransactionproperty'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CounterpartyAdministration/{counterpartyadministrationid}/CounterpartyEntityReferenceproperty/{counterpartyentityreferencepropertyid}/Update':
    put:
      tags:
        - BQ - CounterpartyEntityReferenceproperty
      summary: Update Counterparty Entity Reference property
      description: Update Counterparty Entity Reference property
      operationId: UpdateCounterpartyEntityReferenceproperty
      parameters:
        - $ref: '#/components/parameters/counterpartyadministrationid'
        - $ref: '#/components/parameters/counterpartyentityreferencepropertyid'
      requestBody:
        $ref: '#/components/requestBodies/CounterpartyEntityReferenceproperty'
      responses:
        '200':
          $ref: '#/components/responses/CounterpartyEntityReferenceproperty'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CounterpartyAdministration/{counterpartyadministrationid}/CounterpartyPermittedTransactionproperty/{counterpartypermittedtransactionpropertyid}/Update':
    put:
      tags:
        - BQ - CounterpartyPermittedTransactionproperty
      summary: Update Counterparty Permitted Transaction property
      description: Update Counterparty Permitted Transaction property
      operationId: UpdateCounterpartyPermittedTransactionproperty
      parameters:
        - $ref: '#/components/parameters/counterpartyadministrationid'
        - $ref: '#/components/parameters/counterpartypermittedtransactionpropertyid'
      requestBody:
        $ref: '#/components/requestBodies/CounterpartyPermittedTransactionproperty'
      responses:
        '200':
          $ref: '#/components/responses/CounterpartyPermittedTransactionproperty'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    condition:
      type: object
      properties:
        Condition:
          type: string
          description: "Condition is a premise upon which the fulfillment of an agreement depends \n\nGeneral and special arrangements, provisions, requirements, rules, specifications, and standards that form an integral part of an agreement or contract.\n\nRead more: http://www.businessdictionary.com/definition/terms-and-conditions.html\n\n"
          format: class
      description: The required status/situation before the property is valid/meaningful
    schedule:
      type: object
      properties:
        ScheduleType:
          type: string
          description: ''
          format: string
      description: The schedule and timing for which the property value is valid
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: The version reference for the property value
    directoryentrydatetypevalues:
      enum:
        - OpenDate
        - RefreshDate
      type: string
      description: ">\n* `OpenDate` - \n* `RefreshDate` - \n"
    date:
      type: object
      properties:
        DateContent:
          type: string
          description: ''
          format: string
      description: ''
    datetime:
      type: object
      properties:
        DateTimeContent:
          type: string
          description: ''
          format: string
        TimeZoneCode:
          type: string
          description: ''
          format: string
        DaylightSavingIndicator:
          type: string
          description: ''
          format: string
      description: Date and time at which the status was assigned.
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: Period of time during which the status is valid.
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: Name by which a party is known and which is usually used to identify that party. (ISO20022)
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\n"
    value:
      type: object
      properties:
        Value:
          type: string
          description: 'A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)'
          format: datatype
      description: ''
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          type: string
          description: ''
          format: partyidentificationtypevalues
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\n* `Agreementinvolvement` - \n* `Partyinvolvement` - \n* `Arrangementinvolvement` - \n* `Designspecificationinvolvement` - \n* `Relationshipinvolvement` - \n* `Locationinvolvement` - \n* `Bankguaranteeinvolvement` - \n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: Party who plays a  specific role in the context of assigning a status.
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: ''
    directoryentry:
      type: object
      properties:
        DirectoryEntryDateType:
          $ref: '#/components/schemas/directoryentrydatetypevalues'
        DirectoryEntryDate:
          $ref: '#/components/schemas/date'
        DirectoryEntryStatus:
          $ref: '#/components/schemas/status'
      description: Reference to Counterparty Permitted Transaction property
    CounterpartyPermittedTransactionproperty:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        VersionNumber:
          $ref: '#/components/schemas/text'
        BusinessService:
          type: string
          description: The Counterparty Permitted Transaction property specific  Business Service
          format: businessservice
        CounterpartyDirectoryEntryReference:
          $ref: '#/components/schemas/directoryentry'
        CounterpartyPermittedTransactionpropertyReference:
          type: string
          description: Reference to Counterparty Permitted Transaction property
          format: object
        CounterpartyPermittedTransactionpropertyType:
          $ref: '#/components/schemas/text'
      description: The Counterparty Permitted Transaction property properties that represent a discrete aspect of the Counterparty Permitted Transaction property
    CounterpartyEntityReferenceproperty:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        VersionNumber:
          $ref: '#/components/schemas/text'
        BusinessService:
          type: string
          description: The Counterparty Entity Reference property specific  Business Service
          format: businessservice
        CounterpartyDirectoryEntryReference:
          $ref: '#/components/schemas/directoryentry'
        CounterpartyEntityReferencepropertyReference:
          type: string
          description: Reference to Counterparty Entity Reference property
          format: object
        CounterpartyEntityReferencepropertyType:
          $ref: '#/components/schemas/text'
      description: The Counterparty Permitted Transaction property properties that represent a discrete aspect of the Counterparty Permitted Transaction property
    workproduct:
      type: object
      properties:
        WorkProductType:
          type: string
          description: ''
          format: workproducttypevalues
        WorkProductIdentifoication:
          type: string
          description: ''
          format: string
      description: ''
    CounterpartyAdministrationOutcome:
      type: object
      properties:
        CounterpartyAdministrationEntry:
          $ref: '#/components/schemas/directoryentry'
        CounterpartyAdministrationWorkProduct:
          $ref: '#/components/schemas/workproduct'
      description: The Counterparty Permitted Transaction property properties that represent a discrete aspect of the Counterparty Permitted Transaction property
    log:
      type: object
      properties:
        LogType:
          type: string
          description: ''
          format: string
        LogPeriod:
          type: string
          description: ''
          format: string
        LogDate:
          type: string
          description: Key dates associated with the log (e.g. start time).
          format: string
        LogIdentification:
          type: string
          description: ''
          format: string
      description: Reference to the log of (usage) ativities/events  of Counterparty Directory Entry
    agreementtypevalues:
      enum:
        - CustomerAgreement
        - SupplierAgreement
        - BrokerAgreement
        - SalesAgreement
        - PurchaseAgreement
        - MaintenanceAgreement
        - ProductAgreement
        - ProductSalesAgreement
        - ResourceAgreement
      type: string
      description: ">\n* `CustomerAgreement` - \n* `SupplierAgreement` - \n* `BrokerAgreement` - \n* `SalesAgreement` - \n* `PurchaseAgreement` - \n* `MaintenanceAgreement` - \n* `ProductAgreement` - \n* `ProductSalesAgreement` - \n* `ResourceAgreement` - \n"
    agreementlifecyclestatus:
      type: object
      properties:
        AgreementLifecycleStatus:
          $ref: '#/components/schemas/status'
        AgreementLifecycleStatusType:
          type: string
          description: ''
          format: agreementlifecyclestatustypevalues
      description: 'A characteristic of agreement which refers to the LifecycleStatus of agreement (e.g., potential, offered, confirmed, completed, signed, terminated).'
    agreement:
      type: object
      properties:
        AgreementSignedDate:
          $ref: '#/components/schemas/date'
        AgreementType:
          $ref: '#/components/schemas/agreementtypevalues'
        AgreementValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        AgreementVersion:
          $ref: '#/components/schemas/text'
        AgreementStatus:
          $ref: '#/components/schemas/agreementlifecyclestatus'
        AgreementSubjectMatter:
          $ref: '#/components/schemas/text'
        AgreementIdentification:
          $ref: '#/components/schemas/identifier'
        AgreementDate:
          $ref: '#/components/schemas/datetime'
      description: ''
    financialtransactiontypevalues:
      enum:
        - PricingTransaction
        - FeeTransaction
        - WithdrawalTransaction
        - DepositTransaction
        - PaymentTransaction
        - ClearingTransaction
        - SettlementTransaction
        - Reconciliationtransaction
        - Updatetransaction
        - Securitiestransaction
        - RepaymentTransaction
      type: string
      description: ">\n* `PricingTransaction` - \n* `FeeTransaction` - \n* `WithdrawalTransaction` - \n* `DepositTransaction` - \n* `PaymentTransaction` - \n* `ClearingTransaction` - \n* `SettlementTransaction` - \n* `Reconciliationtransaction` - \n* `Updatetransaction` - \n* `Securitiestransaction` - \n* `RepaymentTransaction` - \n"
    currencycode:
      type: object
      properties:
        Currencycode:
          type: string
          description: "A code identifying a currency according to ISO-4217.\nA currency is a system of money in general use in a particular country.\n\nCode allocated to a currency, by a maintenance agency, under an international identification scheme as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\". Valid currency codes are registered with the ISO 4217 Maintenance Agency, and consist of three contiguous letters. (ISO20022)\n\n"
          format: datatype
      description: ''
    amount:
      type: object
      properties:
        AmountValue:
          type: string
          description: ''
          format: string
        AmountCurrency:
          $ref: '#/components/schemas/currencycode'
        DecimalPointPosition:
          type: string
          description: "Decimal point position starts calulating from the right\n"
          format: string
      description: ''
    accountstatus:
      type: object
      properties:
        AccountStatus:
          $ref: '#/components/schemas/status'
        AccountStatusType:
          type: string
          description: ''
          format: accountstatustypevalues
      description: "A characteristic of account which refers to the LifecycleStatus of account like opened, closed, blocked, etc.\n\nSpecifies the current state of an account. (ISO20022)"
    accountidentification:
      type: object
      properties:
        AccountIdentificationType:
          type: string
          description: ''
          format: accountidentificationtypevalues
        AccountIdentification:
          $ref: '#/components/schemas/identifier'
      description: The identifier of account like Account Number.
    accountdate:
      type: object
      properties:
        AccountDateType:
          type: string
          description: ''
          format: accountdatetypevalues
        AccountDate:
          $ref: '#/components/schemas/datetime'
      description: 'A characteristic of account which refers to LifecycleDate of account (e.g., ClosingDate, OpeningDate, LiveDate, etc.) '
    accounttype:
      type: object
      properties:
        AccountType:
          type: string
          description: ''
          format: accounttypevalues
        AccountTypeName:
          $ref: '#/components/schemas/name'
      description: 'Specifies the category of account like payment account, loan account, cash account, securities account, etc. '
    accountbalance:
      type: object
      properties:
        AccountBalance:
          $ref: '#/components/schemas/amount'
        AccountBalanceType:
          type: string
          description: ''
          format: accountbalancetypevalues
        AccounBalanceDate:
          $ref: '#/components/schemas/datetime'
      description: "The state of the obligations managed on the account, the result of all entries on the account.\n\nNumerical representation of the net increases and decreases in an account at a specific point in time. (ISO20022)\n\nBanking: Amount available in an account for withdrawal or use.\nRead more: http://www.businessdictionary.com/definition/balance.html\n\nBookkeeping: Difference between the debit and credit sides of an account.\nRead more: http://www.businessdictionary.com/definition/balance.html"
    accountcurrency:
      type: object
      properties:
        AccountCurrencyType:
          type: string
          description: ''
          format: accountcurrencytypevalues
        AccountCurrency:
          $ref: '#/components/schemas/currencycode'
      description: ''
    account:
      type: object
      properties:
        AccountStatus:
          $ref: '#/components/schemas/accountstatus'
        AccountIdentification:
          $ref: '#/components/schemas/accountidentification'
        AccountDate:
          $ref: '#/components/schemas/accountdate'
        AccountType:
          $ref: '#/components/schemas/accounttype'
        AccountPurpose:
          $ref: '#/components/schemas/text'
        AccountBalance:
          $ref: '#/components/schemas/accountbalance'
        AccountCurrency:
          $ref: '#/components/schemas/accountcurrency'
        AccountDescription:
          $ref: '#/components/schemas/text'
      description: ''
    financialtransaction:
      type: object
      properties:
        FinancialTransactionType:
          $ref: '#/components/schemas/financialtransactiontypevalues'
        FinancialTransactionCurrency:
          $ref: '#/components/schemas/currencycode'
        FinancialTransactionAmount:
          $ref: '#/components/schemas/amount'
        FinancialTransactionFromAccount:
          $ref: '#/components/schemas/account'
        FinancialTransactionTargetAccount:
          $ref: '#/components/schemas/account'
        FinancialTransactionDateTime:
          $ref: '#/components/schemas/datetime'
      description: ''
    CounterpartyDirectoryEntry:
      type: object
      properties:
        CounterpartyDirectoryEntryDescription:
          $ref: '#/components/schemas/text'
        CounterpartyDirectoryEntrySchedule:
          $ref: '#/components/schemas/schedule'
        CounterpartyDirectoryEntryVersion:
          type: string
          description: The version of Counterparty Directory Entry
          format: number
        CounterpartyDirectoryEntryStatus:
          $ref: '#/components/schemas/status'
        CounterpartyDirectoryEntryUsageLog:
          $ref: '#/components/schemas/log'
        CounterpartyDirectoryEntryUpdateLog:
          $ref: '#/components/schemas/log'
        CounterpartyDirectoryEntryServiceConfiguration:
          $ref: '#/components/schemas/text'
        CounterpartyDirectoryEntryReference:
          $ref: '#/components/schemas/directoryentry'
        ConterpartyReference:
          $ref: '#/components/schemas/involvedparty'
        AgreementReference:
          $ref: '#/components/schemas/agreement'
        FinancialTransactionReference:
          $ref: '#/components/schemas/financialtransaction'
      description: Capture and maintain reference information about some type of entitity within Counterparty Administration.
    ControlCounterpartyDirectoryEntryRequest:
      type: object
      properties:
        CounterpartyDirectoryEntry:
          type: object
          properties:
            CounterpartyDirectoryEntryDescription:
              $ref: '#/components/schemas/text'
            CounterpartyDirectoryEntrySchedule:
              $ref: '#/components/schemas/schedule'
            CounterpartyDirectoryEntryVersion:
              type: string
              description: The version of Counterparty Directory Entry
              format: number
            CounterpartyDirectoryEntryStatus:
              $ref: '#/components/schemas/status'
            CounterpartyDirectoryEntryUsageLog:
              $ref: '#/components/schemas/log'
            CounterpartyDirectoryEntryUpdateLog:
              $ref: '#/components/schemas/log'
            CounterpartyDirectoryEntryServiceConfiguration:
              $ref: '#/components/schemas/text'
            CounterpartyDirectoryEntryReference:
              $ref: '#/components/schemas/directoryentry'
      description: 'Input: Control Counterparty Directory Entry'
    ControlCounterpartyDirectoryEntryResponse:
      type: object
      properties:
        CounterpartyDirectoryEntry:
          type: object
          properties:
            CounterpartyDirectoryEntryDescription:
              $ref: '#/components/schemas/text'
            CounterpartyDirectoryEntrySchedule:
              $ref: '#/components/schemas/schedule'
            CounterpartyDirectoryEntryVersion:
              type: string
              description: The version of Counterparty Directory Entry
              format: number
            CounterpartyDirectoryEntryStatus:
              $ref: '#/components/schemas/status'
            CounterpartyDirectoryEntryUsageLog:
              $ref: '#/components/schemas/log'
            CounterpartyDirectoryEntryUpdateLog:
              $ref: '#/components/schemas/log'
            CounterpartyDirectoryEntryServiceConfiguration:
              $ref: '#/components/schemas/text'
            CounterpartyDirectoryEntryReference:
              $ref: '#/components/schemas/directoryentry'
      description: 'Output: Control Counterparty Directory Entry'
    ExecuteCounterpartyDirectoryEntryRequest:
      type: object
      properties:
        CounterpartyDirectoryEntry:
          type: object
          properties:
            CounterpartyDirectoryEntryDescription:
              $ref: '#/components/schemas/text'
            CounterpartyDirectoryEntrySchedule:
              $ref: '#/components/schemas/schedule'
            CounterpartyDirectoryEntryVersion:
              type: string
              description: The version of Counterparty Directory Entry
              format: number
            CounterpartyDirectoryEntryStatus:
              $ref: '#/components/schemas/status'
            CounterpartyDirectoryEntryUsageLog:
              $ref: '#/components/schemas/log'
            CounterpartyDirectoryEntryUpdateLog:
              $ref: '#/components/schemas/log'
            CounterpartyDirectoryEntryServiceConfiguration:
              $ref: '#/components/schemas/text'
            CounterpartyDirectoryEntryReference:
              $ref: '#/components/schemas/directoryentry'
      description: 'Input: Execute Counterparty Directory Entry'
    ExecuteCounterpartyDirectoryEntryResponse:
      type: object
      properties:
        CounterpartyDirectoryEntry:
          type: object
          properties:
            CounterpartyDirectoryEntryDescription:
              $ref: '#/components/schemas/text'
            CounterpartyDirectoryEntrySchedule:
              $ref: '#/components/schemas/schedule'
            CounterpartyDirectoryEntryVersion:
              type: string
              description: The version of Counterparty Directory Entry
              format: number
            CounterpartyDirectoryEntryStatus:
              $ref: '#/components/schemas/status'
            CounterpartyDirectoryEntryUsageLog:
              $ref: '#/components/schemas/log'
            CounterpartyDirectoryEntryUpdateLog:
              $ref: '#/components/schemas/log'
            CounterpartyDirectoryEntryServiceConfiguration:
              $ref: '#/components/schemas/text'
            CounterpartyDirectoryEntryReference:
              $ref: '#/components/schemas/directoryentry'
      description: 'Output: Execute Counterparty Directory Entry'
    NotifyCounterpartyDirectoryEntryRequest:
      type: object
      properties:
        CounterpartyDirectoryEntry:
          type: object
          properties:
            CounterpartyDirectoryEntryDescription:
              $ref: '#/components/schemas/text'
            CounterpartyDirectoryEntrySchedule:
              $ref: '#/components/schemas/schedule'
            CounterpartyDirectoryEntryVersion:
              type: string
              description: The version of Counterparty Directory Entry
              format: number
            CounterpartyDirectoryEntryStatus:
              $ref: '#/components/schemas/status'
            CounterpartyDirectoryEntryUsageLog:
              $ref: '#/components/schemas/log'
            CounterpartyDirectoryEntryUpdateLog:
              $ref: '#/components/schemas/log'
            CounterpartyDirectoryEntryServiceConfiguration:
              $ref: '#/components/schemas/text'
            CounterpartyDirectoryEntryReference:
              $ref: '#/components/schemas/directoryentry'
      description: 'Input: Notify Counterparty Directory Entry'
    NotifyCounterpartyDirectoryEntryResponse:
      type: object
      properties:
        CounterpartyDirectoryEntry:
          type: object
          properties:
            CounterpartyDirectoryEntryDescription:
              $ref: '#/components/schemas/text'
            CounterpartyDirectoryEntrySchedule:
              $ref: '#/components/schemas/schedule'
            CounterpartyDirectoryEntryVersion:
              type: string
              description: The version of Counterparty Directory Entry
              format: number
            CounterpartyDirectoryEntryStatus:
              $ref: '#/components/schemas/status'
            CounterpartyDirectoryEntryUsageLog:
              $ref: '#/components/schemas/log'
            CounterpartyDirectoryEntryUpdateLog:
              $ref: '#/components/schemas/log'
            CounterpartyDirectoryEntryServiceConfiguration:
              $ref: '#/components/schemas/text'
            CounterpartyDirectoryEntryReference:
              $ref: '#/components/schemas/directoryentry'
      description: 'Output: Notify Counterparty Directory Entry'
    RegisterCounterpartyDirectoryEntryRequest:
      type: object
      properties:
        CounterpartyDirectoryEntry:
          type: object
          properties:
            CounterpartyDirectoryEntryDescription:
              $ref: '#/components/schemas/text'
            CounterpartyDirectoryEntrySchedule:
              $ref: '#/components/schemas/schedule'
            CounterpartyDirectoryEntryVersion:
              type: string
              description: The version of Counterparty Directory Entry
              format: number
            CounterpartyDirectoryEntryStatus:
              $ref: '#/components/schemas/status'
            CounterpartyDirectoryEntryUsageLog:
              $ref: '#/components/schemas/log'
            CounterpartyDirectoryEntryUpdateLog:
              $ref: '#/components/schemas/log'
            CounterpartyDirectoryEntryServiceConfiguration:
              $ref: '#/components/schemas/text'
            CounterpartyDirectoryEntryReference:
              $ref: '#/components/schemas/directoryentry'
      description: 'Input: Register Counterparty Directory Entry'
    RegisterCounterpartyDirectoryEntryResponse:
      type: object
      properties:
        CounterpartyDirectoryEntry:
          type: object
          properties:
            CounterpartyDirectoryEntryDescription:
              $ref: '#/components/schemas/text'
            CounterpartyDirectoryEntrySchedule:
              $ref: '#/components/schemas/schedule'
            CounterpartyDirectoryEntryVersion:
              type: string
              description: The version of Counterparty Directory Entry
              format: number
            CounterpartyDirectoryEntryStatus:
              $ref: '#/components/schemas/status'
            CounterpartyDirectoryEntryUsageLog:
              $ref: '#/components/schemas/log'
            CounterpartyDirectoryEntryUpdateLog:
              $ref: '#/components/schemas/log'
            CounterpartyDirectoryEntryServiceConfiguration:
              $ref: '#/components/schemas/text'
            CounterpartyDirectoryEntryReference:
              $ref: '#/components/schemas/directoryentry'
      description: 'Output: Register Counterparty Directory Entry'
    RequestCounterpartyDirectoryEntryRequest:
      type: object
      properties:
        CounterpartyDirectoryEntry:
          type: object
          properties:
            CounterpartyDirectoryEntryDescription:
              $ref: '#/components/schemas/text'
            CounterpartyDirectoryEntrySchedule:
              $ref: '#/components/schemas/schedule'
            CounterpartyDirectoryEntryVersion:
              type: string
              description: The version of Counterparty Directory Entry
              format: number
            CounterpartyDirectoryEntryStatus:
              $ref: '#/components/schemas/status'
            CounterpartyDirectoryEntryUsageLog:
              $ref: '#/components/schemas/log'
            CounterpartyDirectoryEntryUpdateLog:
              $ref: '#/components/schemas/log'
            CounterpartyDirectoryEntryServiceConfiguration:
              $ref: '#/components/schemas/text'
            CounterpartyDirectoryEntryReference:
              $ref: '#/components/schemas/directoryentry'
      description: 'Input: Request Counterparty Directory Entry'
    RequestCounterpartyDirectoryEntryResponse:
      type: object
      properties:
        CounterpartyDirectoryEntry:
          type: object
          properties:
            CounterpartyDirectoryEntryDescription:
              $ref: '#/components/schemas/text'
            CounterpartyDirectoryEntrySchedule:
              $ref: '#/components/schemas/schedule'
            CounterpartyDirectoryEntryVersion:
              type: string
              description: The version of Counterparty Directory Entry
              format: number
            CounterpartyDirectoryEntryStatus:
              $ref: '#/components/schemas/status'
            CounterpartyDirectoryEntryUsageLog:
              $ref: '#/components/schemas/log'
            CounterpartyDirectoryEntryUpdateLog:
              $ref: '#/components/schemas/log'
            CounterpartyDirectoryEntryServiceConfiguration:
              $ref: '#/components/schemas/text'
            CounterpartyDirectoryEntryReference:
              $ref: '#/components/schemas/directoryentry'
      description: 'Output: Request Counterparty Directory Entry'
    RetrieveCounterpartyDirectoryEntryRequest:
      type: object
      properties:
        CounterpartyDirectoryEntry:
          type: object
          properties:
            CounterpartyDirectoryEntryDescription:
              $ref: '#/components/schemas/text'
            CounterpartyDirectoryEntrySchedule:
              $ref: '#/components/schemas/schedule'
            CounterpartyDirectoryEntryVersion:
              type: string
              description: The version of Counterparty Directory Entry
              format: number
            CounterpartyDirectoryEntryStatus:
              $ref: '#/components/schemas/status'
            CounterpartyDirectoryEntryUsageLog:
              $ref: '#/components/schemas/log'
            CounterpartyDirectoryEntryUpdateLog:
              $ref: '#/components/schemas/log'
            CounterpartyDirectoryEntryServiceConfiguration:
              $ref: '#/components/schemas/text'
            CounterpartyDirectoryEntryReference:
              $ref: '#/components/schemas/directoryentry'
      description: 'Input: Retrieve Counterparty Directory Entry'
    RetrieveCounterpartyDirectoryEntryResponse:
      type: object
      properties:
        CounterpartyDirectoryEntry:
          type: object
          properties:
            CounterpartyDirectoryEntryDescription:
              $ref: '#/components/schemas/text'
            CounterpartyDirectoryEntrySchedule:
              $ref: '#/components/schemas/schedule'
            CounterpartyDirectoryEntryVersion:
              type: string
              description: The version of Counterparty Directory Entry
              format: number
            CounterpartyDirectoryEntryStatus:
              $ref: '#/components/schemas/status'
            CounterpartyDirectoryEntryUsageLog:
              $ref: '#/components/schemas/log'
            CounterpartyDirectoryEntryUpdateLog:
              $ref: '#/components/schemas/log'
            CounterpartyDirectoryEntryServiceConfiguration:
              $ref: '#/components/schemas/text'
            CounterpartyDirectoryEntryReference:
              $ref: '#/components/schemas/directoryentry'
      description: 'Output: Retrieve Counterparty Directory Entry'
    UpdateCounterpartyDirectoryEntryRequest:
      type: object
      properties:
        CounterpartyDirectoryEntry:
          type: object
          properties:
            CounterpartyDirectoryEntryDescription:
              $ref: '#/components/schemas/text'
            CounterpartyDirectoryEntrySchedule:
              $ref: '#/components/schemas/schedule'
            CounterpartyDirectoryEntryVersion:
              type: string
              description: The version of Counterparty Directory Entry
              format: number
            CounterpartyDirectoryEntryStatus:
              $ref: '#/components/schemas/status'
            CounterpartyDirectoryEntryUsageLog:
              $ref: '#/components/schemas/log'
            CounterpartyDirectoryEntryUpdateLog:
              $ref: '#/components/schemas/log'
            CounterpartyDirectoryEntryServiceConfiguration:
              $ref: '#/components/schemas/text'
            CounterpartyDirectoryEntryReference:
              $ref: '#/components/schemas/directoryentry'
      description: 'Input: Update Counterparty Directory Entry'
    UpdateCounterpartyDirectoryEntryResponse:
      type: object
      properties:
        CounterpartyDirectoryEntry:
          type: object
          properties:
            CounterpartyDirectoryEntryDescription:
              $ref: '#/components/schemas/text'
            CounterpartyDirectoryEntrySchedule:
              $ref: '#/components/schemas/schedule'
            CounterpartyDirectoryEntryVersion:
              type: string
              description: The version of Counterparty Directory Entry
              format: number
            CounterpartyDirectoryEntryStatus:
              $ref: '#/components/schemas/status'
            CounterpartyDirectoryEntryUsageLog:
              $ref: '#/components/schemas/log'
            CounterpartyDirectoryEntryUpdateLog:
              $ref: '#/components/schemas/log'
            CounterpartyDirectoryEntryServiceConfiguration:
              $ref: '#/components/schemas/text'
            CounterpartyDirectoryEntryReference:
              $ref: '#/components/schemas/directoryentry'
      description: 'Output: Update Counterparty Directory Entry'
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ControlCounterpartyDirectoryEntryResponse:
      description: ControlCounterpartyDirectoryEntryResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ControlCounterpartyDirectoryEntryResponse'
    ExecuteCounterpartyDirectoryEntryResponse:
      description: ExecuteCounterpartyDirectoryEntryResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExecuteCounterpartyDirectoryEntryResponse'
    NotifyCounterpartyDirectoryEntryResponse:
      description: NotifyCounterpartyDirectoryEntryResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotifyCounterpartyDirectoryEntryResponse'
    RegisterCounterpartyDirectoryEntryResponse:
      description: RegisterCounterpartyDirectoryEntryResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RegisterCounterpartyDirectoryEntryResponse'
    RequestCounterpartyDirectoryEntryResponse:
      description: RequestCounterpartyDirectoryEntryResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestCounterpartyDirectoryEntryResponse'
    RetrieveCounterpartyDirectoryEntryResponse:
      description: RetrieveCounterpartyDirectoryEntryResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveCounterpartyDirectoryEntryResponse'
    UpdateCounterpartyDirectoryEntryResponse:
      description: UpdateCounterpartyDirectoryEntryResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateCounterpartyDirectoryEntryResponse'
    CounterpartyEntityReferenceproperty:
      description: CounterpartyEntityReferenceproperty
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CounterpartyEntityReferenceproperty'
    CounterpartyPermittedTransactionproperty:
      description: CounterpartyPermittedTransactionproperty
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CounterpartyPermittedTransactionproperty'
  parameters:
    counterpartyadministrationid:
      name: counterpartyadministrationid
      in: path
      required: true
      style: simple
      schema:
        type: string
    counterpartyentityreferencepropertyid:
      name: counterpartyentityreferencepropertyid
      in: path
      required: true
      style: simple
      schema:
        type: string
    counterpartypermittedtransactionpropertyid:
      name: counterpartypermittedtransactionpropertyid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    ControlCounterpartyDirectoryEntryRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ControlCounterpartyDirectoryEntryRequest'
      required: true
    ExecuteCounterpartyDirectoryEntryRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExecuteCounterpartyDirectoryEntryRequest'
      required: true
    RegisterCounterpartyDirectoryEntryRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RegisterCounterpartyDirectoryEntryRequest'
      required: true
    RequestCounterpartyDirectoryEntryRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestCounterpartyDirectoryEntryRequest'
      required: true
    UpdateCounterpartyDirectoryEntryRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateCounterpartyDirectoryEntryRequest'
      required: true
    CounterpartyEntityReferenceproperty:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CounterpartyEntityReferenceproperty'
      required: true
    CounterpartyPermittedTransactionproperty:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CounterpartyPermittedTransactionproperty'
      required: true