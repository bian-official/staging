openapi: 3.0.1
info:
  title: Card eCommerce Gateway
  description: 'This service domain orchestrates the processing of e-commerce transactions for authentication, authorization and capture of the financial transactions.'
  contact:
    name: BIAN
    url: https://bian.org
  version: '10.1.0'
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/CardeCommerceGateway/10.1.0
paths:
  '/CardeCommerceGateway/{cardecommercegatewayid}/CardTransaction/{cardtransactionid}/Initiate':
    post:
      tags:
        - BQ - CardTransaction
      summary: InBQ Initiate a card transaction (initiated at merchant location)
      description: InBQ Initiate a card transaction (initiated at merchant location)
      operationId: InitiateCardTransaction
      parameters:
        - $ref: '#/components/parameters/cardecommercegatewayid'
        - $ref: '#/components/parameters/cardtransactionid'
      requestBody:
        $ref: '#/components/requestBodies/InitiateCardTransactionRequest'
      responses:
        '200':
          $ref: '#/components/responses/InitiateCardTransactionRequest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CardeCommerceGateway/{cardecommercegatewayid}/CardTransaction/{cardtransactionid}/Update':
    put:
      tags:
        - BQ - CardTransaction
      summary: UpBQ Update details of a card transaction
      description: UpBQ Update details of a card transaction
      operationId: UpdateCardTransaction
      parameters:
        - $ref: '#/components/parameters/cardecommercegatewayid'
        - $ref: '#/components/parameters/cardtransactionid'
      requestBody:
        $ref: '#/components/requestBodies/UpdateCardTransactionRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateCardTransactionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CardeCommerceGateway/{cardecommercegatewayid}/CardTransaction/{cardtransactionid}/Retrieve':
    get:
      tags:
        - BQ - CardTransaction
      summary: ReBQ Retrieve details about a card transaction
      description: ReBQ Retrieve details about a card transaction
      operationId: RetrieveCardTransaction
      parameters:
        - $ref: '#/components/parameters/cardecommercegatewayid'
        - $ref: '#/components/parameters/cardtransactionid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveCardTransactionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CardeCommerceGateway/{cardecommercegatewayid}/TransactionBatch/{transactionbatchid}/Update':
    put:
      tags:
        - BQ - TransactionBatch
      summary: UpBQ Update details of a batch of card transactions
      description: UpBQ Update details of a batch of card transactions
      operationId: UpdateTransactionBatch
      parameters:
        - $ref: '#/components/parameters/cardecommercegatewayid'
        - $ref: '#/components/parameters/transactionbatchid'
      requestBody:
        $ref: '#/components/requestBodies/UpdateTransactionBatchRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateTransactionBatchRequest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CardeCommerceGateway/{cardecommercegatewayid}/TransactionBatch/{transactionbatchid}/Initiate':
    post:
      tags:
        - BQ - TransactionBatch
      summary: InBQ Initiate a batch of card transaction (initiated at merchant location)
      description: InBQ Initiate a batch of card transaction (initiated at merchant location)
      operationId: InitiateTransactionBatch
      parameters:
        - $ref: '#/components/parameters/cardecommercegatewayid'
        - $ref: '#/components/parameters/transactionbatchid'
      requestBody:
        $ref: '#/components/requestBodies/InitiateTransactionBatchRequest'
      responses:
        '200':
          $ref: '#/components/responses/InitiateTransactionBatchResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CardeCommerceGateway/{cardecommercegatewayid}/TransactionBatch/{transactionbatchid}/Retrieve':
    get:
      tags:
        - BQ - TransactionBatch
      summary: ReBQ Retrieve details about a batch of card transactions
      description: ReBQ Retrieve details about a batch of card transactions
      operationId: RetrieveTransactionBatch
      parameters:
        - $ref: '#/components/parameters/cardecommercegatewayid'
        - $ref: '#/components/parameters/transactionbatchid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveTransactionBatchResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CardeCommerceGateway/{cardecommercegatewayid}/CardAuthentication/{cardauthenticationid}/Initiate':
    post:
      tags:
        - BQ - CardAuthentication
      summary: InBQ Initiate card authentication (routed to issuing bank)
      description: InBQ Initiate card authentication (routed to issuing bank)
      operationId: InitiateCardAuthentication
      parameters:
        - $ref: '#/components/parameters/cardecommercegatewayid'
        - $ref: '#/components/parameters/cardauthenticationid'
      requestBody:
        $ref: '#/components/requestBodies/InitiateCardAuthenticationRequest'
      responses:
        '200':
          $ref: '#/components/responses/InitiateCardAuthenticationRequest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CardeCommerceGateway/{cardecommercegatewayid}/CardAuthentication/{cardauthenticationid}/Update':
    put:
      tags:
        - BQ - CardAuthentication
      summary: UpBQ Update details of a card transaction used in authentication
      description: UpBQ Update details of a card transaction used in authentication
      operationId: UpdateCardAuthentication
      parameters:
        - $ref: '#/components/parameters/cardecommercegatewayid'
        - $ref: '#/components/parameters/cardauthenticationid'
      requestBody:
        $ref: '#/components/requestBodies/UpdateCardAuthenticationRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateCardAuthenticationResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CardeCommerceGateway/{cardecommercegatewayid}/CardAuthentication/{cardauthenticationid}/Retrieve':
    get:
      tags:
        - BQ - CardAuthentication
      summary: ReBQ Retrieve details about a card authentication
      description: ReBQ Retrieve details about a card authentication
      operationId: RetrieveCardAuthentication
      parameters:
        - $ref: '#/components/parameters/cardecommercegatewayid'
        - $ref: '#/components/parameters/cardauthenticationid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveCardAuthenticationResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CardeCommerceGateway/{cardecommercegatewayid}/TransactionAuthorization/{transactionauthorizationid}/Initiate':
    post:
      tags:
        - BQ - TransactionAuthorization
      summary: InBQ Initiate card transaction authorization (routed to issuing bank)
      description: InBQ Initiate card transaction authorization (routed to issuing bank)
      operationId: InitiateTransactionAuthorization
      parameters:
        - $ref: '#/components/parameters/cardecommercegatewayid'
        - $ref: '#/components/parameters/transactionauthorizationid'
      requestBody:
        $ref: '#/components/requestBodies/InitiateTransactionAuthorizationRequest'
      responses:
        '200':
          $ref: '#/components/responses/InitiateTransactionAuthorizationRequest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CardeCommerceGateway/{cardecommercegatewayid}/TransactionAuthorization/{transactionauthorizationid}/Update':
    put:
      tags:
        - BQ - TransactionAuthorization
      summary: UpBQ Update details of a card transaction used for authorization
      description: UpBQ Update details of a card transaction used for authorization
      operationId: UpdateTransactionAuthorization
      parameters:
        - $ref: '#/components/parameters/cardecommercegatewayid'
        - $ref: '#/components/parameters/transactionauthorizationid'
      requestBody:
        $ref: '#/components/requestBodies/UpdateTransactionAuthorizationRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateTransactionAuthorizationResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CardeCommerceGateway/{cardecommercegatewayid}/TransactionAuthorization/{transactionauthorizationid}/Retrieve':
    get:
      tags:
        - BQ - TransactionAuthorization
      summary: ReBQ Retrieve details about a card transaction authorization
      description: ReBQ Retrieve details about a card transaction authorization
      operationId: RetrieveTransactionAuthorization
      parameters:
        - $ref: '#/components/parameters/cardecommercegatewayid'
        - $ref: '#/components/parameters/transactionauthorizationid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveTransactionAuthorizationResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    object:
      type: object
      properties:
        ObjectProperties:
          type: string
          description: ''
          format: string
        ObjectDescription:
          type: string
          description: ''
          format: string
      description: Reference to the card product identifier/number
    date:
      type: object
      properties:
        Date:
          type: string
          description: "A date is a Gregorian calendar representation in various common resolutions: year, month, week, day. (UN/CEFACT)\n\nA particular point in the progression of time in a calendar year expressed in the YYYY-MM-DD format. This representation is defined in \"XML Schema Part 2: Datatypes Second Edition - W3C Recommendation 28 October 2004\" which is aligned with ISO 8601. (ISO20022)"
          format: datatype
      description: As detailed on the plastic/token
    currencycode:
      type: object
      properties:
        Currencycode:
          type: string
          description: "A code identifying a currency according to ISO-4217.\nA currency is a system of money in general use in a particular country.\n\nCode allocated to a currency, by a maintenance agency, under an international identification scheme as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\". Valid currency codes are registered with the ISO 4217 Maintenance Agency, and consist of three contiguous letters. (ISO20022)\n\n"
          format: datatype
      description: The currency that the transaction is made in
    amount:
      type: object
      properties:
        Amount:
          type: string
          description: "Number of monetary units specified in a currency, where the unit of currency is explicit and compliant with ISO 4217. (UN/CEFACT)\n\nThe decimal seperator is a dot.\n\n\nNumber of monetary units specified in a currency, where the unit of currency is explicit and compliant with ISO 4217. The decimal separator is a dot. (ISO20022)\nNote: A zero amount is considered a positive amount.\n- total number of digits: 18\n- number of digits in fractional part: 5\n- minInclusive: 0"
          format: datatype
      description: The amount corresponding to the type
    CardTransaction:
      type: object
      properties:
        ProductInstanceReference:
          $ref: '#/components/schemas/object'
        CustomerReference:
          $ref: '#/components/schemas/object'
        Cardexpirationdate:
          $ref: '#/components/schemas/date'
        CardCVV:
          type: string
          description: As detailed on the plastic/token
          format: string
        CardIssuingBankReference:
          $ref: '#/components/schemas/object'
        MerchantAcquiringBankReference:
          $ref: '#/components/schemas/object'
        eCommerceTransactionType:
          type: string
          description: 'The type of transaction (purchase, cash advance, etc.)'
          format: string
        eCommerceTransactionCurrency:
          $ref: '#/components/schemas/currencycode'
        eCommerceTransactionAmountType:
          type: string
          description: 'Type of amount (e.g. original amount, billing currency amount, conversion rate, FX Mark-up)'
          format: string
        eCommerceTransactionAmount:
          $ref: '#/components/schemas/amount'
        eCommerceTransactionMerchantReference:
          $ref: '#/components/schemas/object'
        eCommerceTransactionLocationReference:
          $ref: '#/components/schemas/object'
        eCommerceTransactionProductandServiceReference:
          $ref: '#/components/schemas/object'
        eCommerceTransactionDate/Time:
          $ref: '#/components/schemas/date'
      description: "The collection of operational serivces/functions offered by the operational facility\n\nExamples: messages, capture, routines"
    TransactionAuthorization:
      type: object
      properties:
        eCommerceTransactionInstanceReference:
          $ref: '#/components/schemas/object'
        eCommerceTransactionAuthorizationResponse:
          type: string
          description: The result of the transaction authorization request
          format: string
      description: "The collection of operational serivces/functions offered by the operational facility\n\nExamples: messages, capture, routines"
    CardAuthentication:
      type: object
      properties:
        eCommerceTransactionInstanceReference:
          $ref: '#/components/schemas/object'
        eCommerceTransactionAuthenticationResponse:
          type: string
          description: The result of the card authentication request
          format: string
      description: "The collection of operational serivces/functions offered by the operational facility\n\nExamples: messages, capture, routines"
    TransactionBatch:
      type: object
      properties:
        eCommerceBatchTransactionDate/Time:
          $ref: '#/components/schemas/date'
        TransactionMerchantReference:
          $ref: '#/components/schemas/object'
        eCommerceBatchTransactionRecord:
          type: string
          description: Batch record contains multiple Card Transactions
          format: string
      description: "The collection of operational serivces/functions offered by the operational facility\n\nExamples: messages, capture, routines"
    eCommerceGatewayOperatingSession:
      type: object
      description: 'Operate equipment and/or a largely automated facility within Card eCommerce Gateway. '
    InitiateCardTransactionRequest:
      type: object
      properties:
        CardTransaction:
          type: object
          properties:
            ProductInstanceReference:
              $ref: '#/components/schemas/object'
            CustomerReference:
              $ref: '#/components/schemas/object'
            Cardexpirationdate:
              $ref: '#/components/schemas/date'
            CardCVV:
              type: string
              description: As detailed on the plastic/token
              format: string
            CardIssuingBankReference:
              $ref: '#/components/schemas/object'
            MerchantAcquiringBankReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionType:
              type: string
              description: 'The type of transaction (purchase, cash advance, etc.)'
              format: string
            eCommerceTransactionCurrency:
              $ref: '#/components/schemas/currencycode'
            eCommerceTransactionAmountType:
              type: string
              description: 'Type of amount (e.g. original amount, billing currency amount, conversion rate, FX Mark-up)'
              format: string
            eCommerceTransactionMerchantReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionLocationReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionProductandServiceReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionDateTime:
              $ref: '#/components/schemas/date'
      description: 'Input: InBQ Initiate a card transaction (initiated at merchant location)'
    UpdateCardTransactionRequest:
      type: object
      properties:
        CardTransaction:
          type: object
          properties:
            ProductInstanceReference:
              $ref: '#/components/schemas/object'
            CustomerReference:
              $ref: '#/components/schemas/object'
            Cardexpirationdate:
              $ref: '#/components/schemas/date'
            CardCVV:
              type: string
              description: As detailed on the plastic/token
              format: string
            CardIssuingBankReference:
              $ref: '#/components/schemas/object'
            MerchantAcquiringBankReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionType:
              type: string
              description: 'The type of transaction (purchase, cash advance, etc.)'
              format: string
            eCommerceTransactionCurrency:
              $ref: '#/components/schemas/currencycode'
            eCommerceTransactionAmountType:
              type: string
              description: 'Type of amount (e.g. original amount, billing currency amount, conversion rate, FX Mark-up)'
              format: string
            eCommerceTransactionMerchantReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionLocationReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionProductandServiceReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionDateTime:
              $ref: '#/components/schemas/date'
      description: 'Input: UpBQ Update details of a card transaction'
    UpdateCardTransactionResponse:
      type: object
      properties:
        CardTransaction:
          type: object
          properties:
            ProductInstanceReference:
              $ref: '#/components/schemas/object'
            CustomerReference:
              $ref: '#/components/schemas/object'
            Cardexpirationdate:
              $ref: '#/components/schemas/date'
            CardCVV:
              type: string
              description: As detailed on the plastic/token
              format: string
            CardIssuingBankReference:
              $ref: '#/components/schemas/object'
            MerchantAcquiringBankReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionType:
              type: string
              description: 'The type of transaction (purchase, cash advance, etc.)'
              format: string
            eCommerceTransactionCurrency:
              $ref: '#/components/schemas/currencycode'
            eCommerceTransactionAmountType:
              type: string
              description: 'Type of amount (e.g. original amount, billing currency amount, conversion rate, FX Mark-up)'
              format: string
            eCommerceTransactionMerchantReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionLocationReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionProductandServiceReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionDateTime:
              $ref: '#/components/schemas/date'
      description: 'Output: UpBQ Update details of a card transaction'
    RetrieveCardTransactionResponse:
      type: object
      properties:
        CardTransaction:
          type: object
          properties:
            ProductInstanceReference:
              $ref: '#/components/schemas/object'
            CustomerReference:
              $ref: '#/components/schemas/object'
            Cardexpirationdate:
              $ref: '#/components/schemas/date'
            CardCVV:
              type: string
              description: As detailed on the plastic/token
              format: string
            CardIssuingBankReference:
              $ref: '#/components/schemas/object'
            MerchantAcquiringBankReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionType:
              type: string
              description: 'The type of transaction (purchase, cash advance, etc.)'
              format: string
            eCommerceTransactionCurrency:
              $ref: '#/components/schemas/currencycode'
            eCommerceTransactionAmountType:
              type: string
              description: 'Type of amount (e.g. original amount, billing currency amount, conversion rate, FX Mark-up)'
              format: string
            eCommerceTransactionMerchantReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionLocationReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionProductandServiceReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionDateTime:
              $ref: '#/components/schemas/date'
      description: 'Output: ReBQ Retrieve details about a card transaction'
    UpdateTransactionBatchRequest:
      type: object
      properties:
        CardTransaction:
          type: object
          properties:
            ProductInstanceReference:
              $ref: '#/components/schemas/object'
            CustomerReference:
              $ref: '#/components/schemas/object'
            Cardexpirationdate:
              $ref: '#/components/schemas/date'
            CardCVV:
              type: string
              description: As detailed on the plastic/token
              format: string
            CardIssuingBankReference:
              $ref: '#/components/schemas/object'
            MerchantAcquiringBankReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionType:
              type: string
              description: 'The type of transaction (purchase, cash advance, etc.)'
              format: string
            eCommerceTransactionCurrency:
              $ref: '#/components/schemas/currencycode'
            eCommerceTransactionAmountType:
              type: string
              description: 'Type of amount (e.g. original amount, billing currency amount, conversion rate, FX Mark-up)'
              format: string
            eCommerceTransactionMerchantReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionLocationReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionProductandServiceReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionDateTime:
              $ref: '#/components/schemas/date'
        TransactionBatch:
          type: object
          properties:
            eCommerceBatchTransactionDateTime:
              $ref: '#/components/schemas/date'
            eCommerceBatchTransactionRecord:
              type: string
              description: Batch record contains multiple Card Transactions
              format: string
      description: 'Input: UpBQ Update details of a batch of card transactions'
    InitiateTransactionBatchRequest:
      type: object
      properties:
        CardTransaction:
          type: object
          properties:
            ProductInstanceReference:
              $ref: '#/components/schemas/object'
            CustomerReference:
              $ref: '#/components/schemas/object'
            Cardexpirationdate:
              $ref: '#/components/schemas/date'
            CardCVV:
              type: string
              description: As detailed on the plastic/token
              format: string
            CardIssuingBankReference:
              $ref: '#/components/schemas/object'
            MerchantAcquiringBankReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionType:
              type: string
              description: 'The type of transaction (purchase, cash advance, etc.)'
              format: string
            eCommerceTransactionCurrency:
              $ref: '#/components/schemas/currencycode'
            eCommerceTransactionAmountType:
              type: string
              description: 'Type of amount (e.g. original amount, billing currency amount, conversion rate, FX Mark-up)'
              format: string
            eCommerceTransactionMerchantReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionLocationReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionProductandServiceReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionDateTime:
              $ref: '#/components/schemas/date'
        TransactionBatch:
          type: object
          properties:
            eCommerceBatchTransactionDateTime:
              $ref: '#/components/schemas/date'
            eCommerceBatchTransactionRecord:
              type: string
              description: Batch record contains multiple Card Transactions
              format: string
      description: 'Input: InBQ Initiate a batch of card transaction (initiated at merchant location)'
    InitiateTransactionBatchResponse:
      type: object
      properties:
        CardTransaction:
          type: object
          properties:
            ProductInstanceReference:
              $ref: '#/components/schemas/object'
            CustomerReference:
              $ref: '#/components/schemas/object'
            Cardexpirationdate:
              $ref: '#/components/schemas/date'
            CardCVV:
              type: string
              description: As detailed on the plastic/token
              format: string
            CardIssuingBankReference:
              $ref: '#/components/schemas/object'
            MerchantAcquiringBankReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionType:
              type: string
              description: 'The type of transaction (purchase, cash advance, etc.)'
              format: string
            eCommerceTransactionCurrency:
              $ref: '#/components/schemas/currencycode'
            eCommerceTransactionAmountType:
              type: string
              description: 'Type of amount (e.g. original amount, billing currency amount, conversion rate, FX Mark-up)'
              format: string
            eCommerceTransactionMerchantReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionLocationReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionProductandServiceReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionDateTime:
              $ref: '#/components/schemas/date'
        TransactionBatch:
          type: object
          properties:
            eCommerceBatchTransactionDateTime:
              $ref: '#/components/schemas/date'
            eCommerceBatchTransactionRecord:
              type: string
              description: Batch record contains multiple Card Transactions
              format: string
      description: 'Output: InBQ Initiate a batch of card transaction (initiated at merchant location)'
    RetrieveTransactionBatchResponse:
      type: object
      properties:
        CardTransaction:
          type: object
          properties:
            ProductInstanceReference:
              $ref: '#/components/schemas/object'
            CustomerReference:
              $ref: '#/components/schemas/object'
            Cardexpirationdate:
              $ref: '#/components/schemas/date'
            CardCVV:
              type: string
              description: As detailed on the plastic/token
              format: string
            CardIssuingBankReference:
              $ref: '#/components/schemas/object'
            MerchantAcquiringBankReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionType:
              type: string
              description: 'The type of transaction (purchase, cash advance, etc.)'
              format: string
            eCommerceTransactionCurrency:
              $ref: '#/components/schemas/currencycode'
            eCommerceTransactionAmountType:
              type: string
              description: 'Type of amount (e.g. original amount, billing currency amount, conversion rate, FX Mark-up)'
              format: string
            eCommerceTransactionMerchantReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionLocationReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionProductandServiceReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionDateTime:
              $ref: '#/components/schemas/date'
        TransactionBatch:
          type: object
          properties:
            eCommerceBatchTransactionDateTime:
              $ref: '#/components/schemas/date'
            eCommerceBatchTransactionRecord:
              type: string
              description: Batch record contains multiple Card Transactions
              format: string
      description: 'Output: ReBQ Retrieve details about a batch of card transactions'
    InitiateCardAuthenticationRequest:
      type: object
      properties:
        CardTransaction:
          type: object
          properties:
            ProductInstanceReference:
              $ref: '#/components/schemas/object'
            CustomerReference:
              $ref: '#/components/schemas/object'
            Cardexpirationdate:
              $ref: '#/components/schemas/date'
            CardCVV:
              type: string
              description: As detailed on the plastic/token
              format: string
            CardIssuingBankReference:
              $ref: '#/components/schemas/object'
            MerchantAcquiringBankReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionType:
              type: string
              description: 'The type of transaction (purchase, cash advance, etc.)'
              format: string
            eCommerceTransactionCurrency:
              $ref: '#/components/schemas/currencycode'
            eCommerceTransactionAmountType:
              type: string
              description: 'Type of amount (e.g. original amount, billing currency amount, conversion rate, FX Mark-up)'
              format: string
            eCommerceTransactionMerchantReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionLocationReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionProductandServiceReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionDateTime:
              $ref: '#/components/schemas/date'
        CardAuthentication:
          type: object
          properties:
            eCommerceTransactionInstanceReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionAuthenticationResponse:
              type: string
              description: The result of the card authentication request
              format: string
      description: 'Input: InBQ Initiate card authentication (routed to issuing bank)'
    UpdateCardAuthenticationRequest:
      type: object
      properties:
        CardTransaction:
          type: object
          properties:
            ProductInstanceReference:
              $ref: '#/components/schemas/object'
            CustomerReference:
              $ref: '#/components/schemas/object'
            Cardexpirationdate:
              $ref: '#/components/schemas/date'
            CardCVV:
              type: string
              description: As detailed on the plastic/token
              format: string
            CardIssuingBankReference:
              $ref: '#/components/schemas/object'
            MerchantAcquiringBankReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionType:
              type: string
              description: 'The type of transaction (purchase, cash advance, etc.)'
              format: string
            eCommerceTransactionCurrency:
              $ref: '#/components/schemas/currencycode'
            eCommerceTransactionAmountType:
              type: string
              description: 'Type of amount (e.g. original amount, billing currency amount, conversion rate, FX Mark-up)'
              format: string
            eCommerceTransactionMerchantReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionLocationReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionProductandServiceReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionDateTime:
              $ref: '#/components/schemas/date'
        CardAuthentication:
          type: object
          properties:
            eCommerceTransactionInstanceReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionAuthenticationResponse:
              type: string
              description: The result of the card authentication request
              format: string
      description: 'Input: UpBQ Update details of a card transaction used in authentication'
    UpdateCardAuthenticationResponse:
      type: object
      properties:
        CardTransaction:
          type: object
          properties:
            ProductInstanceReference:
              $ref: '#/components/schemas/object'
            CustomerReference:
              $ref: '#/components/schemas/object'
            Cardexpirationdate:
              $ref: '#/components/schemas/date'
            CardCVV:
              type: string
              description: As detailed on the plastic/token
              format: string
            CardIssuingBankReference:
              $ref: '#/components/schemas/object'
            MerchantAcquiringBankReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionType:
              type: string
              description: 'The type of transaction (purchase, cash advance, etc.)'
              format: string
            eCommerceTransactionCurrency:
              $ref: '#/components/schemas/currencycode'
            eCommerceTransactionAmountType:
              type: string
              description: 'Type of amount (e.g. original amount, billing currency amount, conversion rate, FX Mark-up)'
              format: string
            eCommerceTransactionMerchantReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionLocationReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionProductandServiceReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionDateTime:
              $ref: '#/components/schemas/date'
        CardAuthentication:
          type: object
          properties:
            eCommerceTransactionInstanceReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionAuthenticationResponse:
              type: string
              description: The result of the card authentication request
              format: string
      description: 'Output: UpBQ Update details of a card transaction used in authentication'
    RetrieveCardAuthenticationResponse:
      type: object
      properties:
        CardTransaction:
          type: object
          properties:
            ProductInstanceReference:
              $ref: '#/components/schemas/object'
            CustomerReference:
              $ref: '#/components/schemas/object'
            Cardexpirationdate:
              $ref: '#/components/schemas/date'
            CardCVV:
              type: string
              description: As detailed on the plastic/token
              format: string
            CardIssuingBankReference:
              $ref: '#/components/schemas/object'
            MerchantAcquiringBankReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionType:
              type: string
              description: 'The type of transaction (purchase, cash advance, etc.)'
              format: string
            eCommerceTransactionCurrency:
              $ref: '#/components/schemas/currencycode'
            eCommerceTransactionAmountType:
              type: string
              description: 'Type of amount (e.g. original amount, billing currency amount, conversion rate, FX Mark-up)'
              format: string
            eCommerceTransactionMerchantReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionLocationReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionProductandServiceReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionDateTime:
              $ref: '#/components/schemas/date'
        CardAuthentication:
          type: object
          properties:
            eCommerceTransactionInstanceReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionAuthenticationResponse:
              type: string
              description: The result of the card authentication request
              format: string
      description: 'Output: ReBQ Retrieve details about a card authentication'
    InitiateTransactionAuthorizationRequest:
      type: object
      properties:
        CardTransaction:
          type: object
          properties:
            ProductInstanceReference:
              $ref: '#/components/schemas/object'
            CustomerReference:
              $ref: '#/components/schemas/object'
            Cardexpirationdate:
              $ref: '#/components/schemas/date'
            CardCVV:
              type: string
              description: As detailed on the plastic/token
              format: string
            CardIssuingBankReference:
              $ref: '#/components/schemas/object'
            MerchantAcquiringBankReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionType:
              type: string
              description: 'The type of transaction (purchase, cash advance, etc.)'
              format: string
            eCommerceTransactionCurrency:
              $ref: '#/components/schemas/currencycode'
            eCommerceTransactionAmountType:
              type: string
              description: 'Type of amount (e.g. original amount, billing currency amount, conversion rate, FX Mark-up)'
              format: string
            eCommerceTransactionMerchantReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionLocationReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionProductandServiceReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionDateTime:
              $ref: '#/components/schemas/date'
        TransactionAuthorization:
          type: object
          properties:
            eCommerceTransactionInstanceReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionAuthorizationResponse:
              type: string
              description: The result of the transaction authorization request
              format: string
      description: 'Input: InBQ Initiate card transaction authorization (routed to issuing bank)'
    UpdateTransactionAuthorizationRequest:
      type: object
      properties:
        CardTransaction:
          type: object
          properties:
            ProductInstanceReference:
              $ref: '#/components/schemas/object'
            CustomerReference:
              $ref: '#/components/schemas/object'
            Cardexpirationdate:
              $ref: '#/components/schemas/date'
            CardCVV:
              type: string
              description: As detailed on the plastic/token
              format: string
            CardIssuingBankReference:
              $ref: '#/components/schemas/object'
            MerchantAcquiringBankReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionType:
              type: string
              description: 'The type of transaction (purchase, cash advance, etc.)'
              format: string
            eCommerceTransactionCurrency:
              $ref: '#/components/schemas/currencycode'
            eCommerceTransactionAmountType:
              type: string
              description: 'Type of amount (e.g. original amount, billing currency amount, conversion rate, FX Mark-up)'
              format: string
            eCommerceTransactionMerchantReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionLocationReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionProductandServiceReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionDateTime:
              $ref: '#/components/schemas/date'
        TransactionAuthorization:
          type: object
          properties:
            eCommerceTransactionInstanceReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionAuthorizationResponse:
              type: string
              description: The result of the transaction authorization request
              format: string
      description: 'Input: UpBQ Update details of a card transaction used for authorization'
    UpdateTransactionAuthorizationResponse:
      type: object
      properties:
        CardTransaction:
          type: object
          properties:
            ProductInstanceReference:
              $ref: '#/components/schemas/object'
            CustomerReference:
              $ref: '#/components/schemas/object'
            Cardexpirationdate:
              $ref: '#/components/schemas/date'
            CardCVV:
              type: string
              description: As detailed on the plastic/token
              format: string
            CardIssuingBankReference:
              $ref: '#/components/schemas/object'
            MerchantAcquiringBankReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionType:
              type: string
              description: 'The type of transaction (purchase, cash advance, etc.)'
              format: string
            eCommerceTransactionCurrency:
              $ref: '#/components/schemas/currencycode'
            eCommerceTransactionAmountType:
              type: string
              description: 'Type of amount (e.g. original amount, billing currency amount, conversion rate, FX Mark-up)'
              format: string
            eCommerceTransactionMerchantReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionLocationReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionProductandServiceReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionDateTime:
              $ref: '#/components/schemas/date'
        TransactionAuthorization:
          type: object
          properties:
            eCommerceTransactionInstanceReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionAuthorizationResponse:
              type: string
              description: The result of the transaction authorization request
              format: string
      description: 'Output: UpBQ Update details of a card transaction used for authorization'
    RetrieveTransactionAuthorizationResponse:
      type: object
      properties:
        CardTransaction:
          type: object
          properties:
            ProductInstanceReference:
              $ref: '#/components/schemas/object'
            CustomerReference:
              $ref: '#/components/schemas/object'
            Cardexpirationdate:
              $ref: '#/components/schemas/date'
            CardCVV:
              type: string
              description: As detailed on the plastic/token
              format: string
            CardIssuingBankReference:
              $ref: '#/components/schemas/object'
            MerchantAcquiringBankReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionType:
              type: string
              description: 'The type of transaction (purchase, cash advance, etc.)'
              format: string
            eCommerceTransactionCurrency:
              $ref: '#/components/schemas/currencycode'
            eCommerceTransactionAmountType:
              type: string
              description: 'Type of amount (e.g. original amount, billing currency amount, conversion rate, FX Mark-up)'
              format: string
            eCommerceTransactionMerchantReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionLocationReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionProductandServiceReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionDateTime:
              $ref: '#/components/schemas/date'
        TransactionAuthorization:
          type: object
          properties:
            eCommerceTransactionInstanceReference:
              $ref: '#/components/schemas/object'
            eCommerceTransactionAuthorizationResponse:
              type: string
              description: The result of the transaction authorization request
              format: string
      description: 'Output: ReBQ Retrieve details about a card transaction authorization'
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InitiateCardTransactionRequest:
      description: InitiateCardTransactionRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateCardTransactionRequest'
    UpdateCardTransactionResponse:
      description: UpdateCardTransactionResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateCardTransactionResponse'
    RetrieveCardTransactionResponse:
      description: RetrieveCardTransactionResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveCardTransactionResponse'
    UpdateTransactionBatchRequest:
      description: UpdateTransactionBatchRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateTransactionBatchRequest'
    InitiateTransactionBatchResponse:
      description: InitiateTransactionBatchResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateTransactionBatchResponse'
    RetrieveTransactionBatchResponse:
      description: RetrieveTransactionBatchResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveTransactionBatchResponse'
    InitiateCardAuthenticationRequest:
      description: InitiateCardAuthenticationRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateCardAuthenticationRequest'
    UpdateCardAuthenticationResponse:
      description: UpdateCardAuthenticationResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateCardAuthenticationResponse'
    RetrieveCardAuthenticationResponse:
      description: RetrieveCardAuthenticationResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveCardAuthenticationResponse'
    InitiateTransactionAuthorizationRequest:
      description: InitiateTransactionAuthorizationRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateTransactionAuthorizationRequest'
    UpdateTransactionAuthorizationResponse:
      description: UpdateTransactionAuthorizationResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateTransactionAuthorizationResponse'
    RetrieveTransactionAuthorizationResponse:
      description: RetrieveTransactionAuthorizationResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveTransactionAuthorizationResponse'
  parameters:
    cardtransactionid:
      name: cardtransactionid
      in: path
      required: true
      style: simple
      schema:
        type: string
    transactionbatchid:
      name: transactionbatchid
      in: path
      required: true
      style: simple
      schema:
        type: string
    cardauthenticationid:
      name: cardauthenticationid
      in: path
      required: true
      style: simple
      schema:
        type: string
    transactionauthorizationid:
      name: transactionauthorizationid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    InitiateCardTransactionRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateCardTransactionRequest'
      required: true
    UpdateCardTransactionRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateCardTransactionRequest'
      required: true
    UpdateTransactionBatchRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateTransactionBatchRequest'
      required: true
    InitiateTransactionBatchRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateTransactionBatchRequest'
      required: true
    InitiateCardAuthenticationRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateCardAuthenticationRequest'
      required: true
    UpdateCardAuthenticationRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateCardAuthenticationRequest'
      required: true
    InitiateTransactionAuthorizationRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateTransactionAuthorizationRequest'
      required: true
    UpdateTransactionAuthorizationRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateTransactionAuthorizationRequest'
      required: true