openapi: 3.0.1
info:
  title: Standing Order
  description: 'Customers can issue standing orders to the bank. In most cases this is for the execution of a periodical payment, but there are other standing instructions like, sweeping balances at end of month, topping off excess funds for a current account, etc. '
  contact:
    name: BIAN
    url: https://bian.org
  version: '10.1.0'
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/StandingOrder/10.1.0
paths:
  '/StandingOrder/{standingorderid}/Control':
    put:
      tags:
        - CR - StandingOrderFacility
      summary: CoCR Control the processing of Standing Order Facility
      description: CoCR Control the processing of Standing Order Facility
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/standingorderid'
      requestBody:
        $ref: '#/components/requestBodies/ControlStandingOrderFacilityRequest'
      responses:
        '200':
          $ref: '#/components/responses/ControlStandingOrderFacilityResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/StandingOrder/{standingorderid}/Exchange':
    put:
      tags:
        - CR - StandingOrderFacility
      summary: 'EcCR Accept, verify, etc. aspects of Standing Order Facility processing'
      description: 'EcCR Accept, verify, etc. aspects of Standing Order Facility processing'
      operationId: Exchange
      parameters:
        - $ref: '#/components/parameters/standingorderid'
      requestBody:
        $ref: '#/components/requestBodies/ExchangeStandingOrderFacilityRequest'
      responses:
        '200':
          $ref: '#/components/responses/ExchangeStandingOrderFacilityResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/StandingOrder/{standingorderid}/Execute':
    put:
      tags:
        - CR - StandingOrderFacility
      summary: ExCR Execute an available automated action for Standing Order Facility
      description: ExCR Execute an available automated action for Standing Order Facility
      operationId: Execute
      parameters:
        - $ref: '#/components/parameters/standingorderid'
      requestBody:
        $ref: '#/components/requestBodies/ExecuteStandingOrderFacilityRequest'
      responses:
        '200':
          $ref: '#/components/responses/ExecuteStandingOrderFacilityResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /StandingOrder/Initiate:
    post:
      tags:
        - CR - StandingOrderFacility
      summary: InCR Instantiate a new Standing Order Facility
      description: InCR Instantiate a new Standing Order Facility
      operationId: Initiate
      requestBody:
        $ref: '#/components/requestBodies/InitiateStandingOrderFacilityRequest'
      responses:
        '200':
          $ref: '#/components/responses/InitiateStandingOrderFacilityResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/StandingOrder/{standingorderid}/Retrieve':
    get:
      tags:
        - CR - StandingOrderFacility
      summary: ReCR Retrieve details about any aspect of Standing Order Facility
      description: ReCR Retrieve details about any aspect of Standing Order Facility
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/standingorderid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveStandingOrderFacilityResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/StandingOrder/{standingorderid}/Request':
    put:
      tags:
        - CR - StandingOrderFacility
      summary: RqCR Request manual intervention or a decision with respect to Standing Order Facility
      description: RqCR Request manual intervention or a decision with respect to Standing Order Facility
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/standingorderid'
      requestBody:
        $ref: '#/components/requestBodies/RequestStandingOrderFacilityRequest'
      responses:
        '200':
          $ref: '#/components/responses/RequestStandingOrderFacilityResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/StandingOrder/{standingorderid}/Update':
    put:
      tags:
        - CR - StandingOrderFacility
      summary: UpCR Update details relating to Standing Order Facility
      description: UpCR Update details relating to Standing Order Facility
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/standingorderid'
      requestBody:
        $ref: '#/components/requestBodies/UpdateStandingOrderFacilityRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateStandingOrderFacilityResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/StandingOrder/{standingorderid}/StandingOrderPayment/{standingorderpaymentid}/Exchange':
    put:
      tags:
        - BQ - StandingOrderPayment
      summary: 'EcBQ Accept, verify, etc. aspects of Standing Order Payment processing'
      description: 'EcBQ Accept, verify, etc. aspects of Standing Order Payment processing'
      operationId: ExchangeStandingOrderPayment
      parameters:
        - $ref: '#/components/parameters/standingorderid'
        - $ref: '#/components/parameters/standingorderpaymentid'
      requestBody:
        $ref: '#/components/requestBodies/ExchangeStandingOrderPaymentRequest'
      responses:
        '200':
          $ref: '#/components/responses/ExchangeStandingOrderPaymentResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/StandingOrder/{standingorderid}/StandingOrderPayment/{standingorderpaymentid}/Initiate':
    post:
      tags:
        - BQ - StandingOrderPayment
      summary: InBQ Instantiate a new Standing Order Payment
      description: InBQ Instantiate a new Standing Order Payment
      operationId: InitiateStandingOrderPayment
      parameters:
        - $ref: '#/components/parameters/standingorderid'
        - $ref: '#/components/parameters/standingorderpaymentid'
      requestBody:
        $ref: '#/components/requestBodies/InitiateStandingOrderPaymentRequest'
      responses:
        '200':
          $ref: '#/components/responses/InitiateStandingOrderPaymentResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/StandingOrder/{standingorderid}/StandingOrderPayment/{standingorderpaymentid}/Retrieve':
    get:
      tags:
        - BQ - StandingOrderPayment
      summary: ReBQ Retrieve details about any aspect of Standing Order Payment
      description: ReBQ Retrieve details about any aspect of Standing Order Payment
      operationId: RetrieveStandingOrderPayment
      parameters:
        - $ref: '#/components/parameters/standingorderid'
        - $ref: '#/components/parameters/standingorderpaymentid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveStandingOrderPaymentResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/StandingOrder/{standingorderid}/StandingOrderPayment/{standingorderpaymentid}/Update':
    put:
      tags:
        - BQ - StandingOrderPayment
      summary: UpBQ Update details relating to Standing Order Payment
      description: UpBQ Update details relating to Standing Order Payment
      operationId: UpdateStandingOrderPayment
      parameters:
        - $ref: '#/components/parameters/standingorderid'
        - $ref: '#/components/parameters/standingorderpaymentid'
      requestBody:
        $ref: '#/components/requestBodies/UpdateStandingOrderPaymentRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateStandingOrderPaymentResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    condition:
      type: object
      properties:
        Condition:
          type: string
          description: "Condition is a premise upon which the fulfillment of an agreement depends \n\nGeneral and special arrangements, provisions, requirements, rules, specifications, and standards that form an integral part of an agreement or contract.\n\nRead more: http://www.businessdictionary.com/definition/terms-and-conditions.html\n\n"
          format: class
      description: The required status/situation prior to the implementation of the feature
    schedule:
      type: object
      properties:
        ScheduleType:
          type: string
          description: ''
          format: string
      description: The timing and key actions/milestones involved in completing the fulfillment feature instance
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: ''
    businessservice:
      type: object
      properties:
        BusinessServiceName:
          $ref: '#/components/schemas/name'
        BusinessService:
          type: string
          description: "A business service supports business capabilities through an explicitly defined interface and is explicitly governed by an organization. TOGAF 9.2\n\nA business service represents explicitly defined behavior that a business role, business actor, or business collaboration exposes to its environment. ArchiMate 3.1\n"
          format: class
      description: The Standing Order Fulfillment specific Business Service
    financialfacility:
      type: object
      properties:
        FinancialFacility:
          type: string
          description: "A production or operational capacity to perform a business function for delivering a banking product or service\n\nA functional classification of banking product that provides ongoing capacity to deliver financial services (e.g. loan service, payment service)\n\n\n"
          format: class
      description: Reference to Standing Order Fulfillment
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: The type of Standing Order Fulfillment
    StandingOrderFulfillment:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        StandingOrderFacilityReference:
          $ref: '#/components/schemas/financialfacility'
        StandingOrderFulfillmentReference:
          type: string
          description: Reference to Standing Order Fulfillment
          format: object
        StandingOrderFulfillmentType:
          $ref: '#/components/schemas/text'
      description: The configuration and execution of Standing Order Fulfillment arrangement within the Standing Order Fulfillment
    StandingOrderOutcome:
      type: object
      properties:
        StandingOrderFinancialFacility:
          type: string
          description: ''
          format: string
        StandingOrderWorkProduct:
          type: string
          description: ''
          format: rwc:973a94b2-aa0e-5879-cd94-93b577cadb99/54130
      description: The configuration and execution of Standing Order Fulfillment arrangement within the Standing Order Fulfillment
    workproduct:
      type: object
      properties:
        WorkProductType:
          type: string
          description: ''
          format: workproducttypevalues
        Workproduct:
          type: string
          description: 'Contact records, working papers, documents and activity logs produced during the execution of a work task'
          format: datatype
      description: 'Documentation, meeting schedules, notes, reasearch. calculations and any other work products produced by the business service'
    StandingOrderPayment:
      type: object
      properties:
        StandingOrderPaymentPreconditions:
          $ref: '#/components/schemas/condition'
        StandingOrderPaymentFeatureSchedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        StandingOrderPaymentPostconditions:
          $ref: '#/components/schemas/condition'
        StandingOrderPaymentServiceType:
          type: string
          description: Reference to the specific business service type
          format: string
        StandingOrderPaymentServiceDescription:
          $ref: '#/components/schemas/text'
        StandingOrderPaymentServiceInputsandOuputs:
          type: string
          description: Mandatory and optional inputs and output information for the business service
          format: string
        StandingOrderPaymentServiceWorkProduct:
          $ref: '#/components/schemas/workproduct'
        StandingOrderPaymentServiceName:
          $ref: '#/components/schemas/name'
        StandingOrderExecutionDate:
          type: string
          description: Date on which a standing order is actually executed
          format: string
        StandingOrderExecutionResultType:
          type: string
          description: 'Result of the execition instruction, e.g. executed or not excuted'
          format: string
        StandingOrderExecutionNotExecutedReasonDescription:
          type: string
          description: 'Description of the reason for not excuting a standing order, e.g. insufficient balance, account blocked, AML flag, ……'
          format: string
        StandingOrderExecutionPrincipalAmount:
          type: string
          description: Actual principal amount of the this execution of the standing order
          format: string
        StandingOrderExecutionFeeAmount:
          type: string
          description: Actual fee amount of the this execution of the standing order
          format: string
      description: The configuration and execution of Standing Order Fulfillment arrangement within the Standing Order Fulfillment
    feature:
      type: object
      properties:
        FeatureType:
          type: string
          description: ''
          format: string
      description: A selected optional product feature as subject matter of Standing Order Arrangement
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        Party:
          type: string
          description: "A party represents an autonomous entity in which a bank has a business interest. It has a legal definition and identity. A party is a Person, Organization, (a proposed definition for BIAN BOM adapted from BIAN Party Working Group) \n\n- Entity involved in an activity. (ISO20022)"
          format: class
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        Involvedparty:
          type: string
          description: ''
          format: datatype
      description: Reference to the party who is involved in Standing Order Arrangement
    currencycode:
      type: object
      properties:
        Currencycode:
          type: string
          description: "A code identifying a currency according to ISO-4217.\nA currency is a system of money in general use in a particular country.\n\nCode allocated to a currency, by a maintenance agency, under an international identification scheme as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\". Valid currency codes are registered with the ISO 4217 Maintenance Agency, and consist of three contiguous letters. (ISO20022)\n\n"
          format: datatype
      description: The curreny which is arranged in Standing Order Arrangement
    ruleset:
      type: object
      properties:
        RuleSetDefinition:
          type: string
          description: ''
          format: string
        RuleSet:
          type: string
          description: 'A set of rules (e.g., regulation, policy, law, guideline, principle, standard) to guide, direct or operate a subject matter.'
          format: class
      description: Reference to the regulation which is defined in Standing Order Arrangement
    jurisdiction:
      type: object
      properties:
        Jurisdiction:
          type: string
          description: Jurisdiction that will be assigned in case of legal dispute.
          format: class
      description: Reference to the jurisdiction that is assigned to Standing Order Arrangement in case of legal dispute.
    businessunit:
      type: object
      properties:
        BusinessFunction:
          type: string
          description: ''
          format: string
        BusinessUnit:
          type: string
          description: "A unit of an organisation that does not have legal standing outside the organisation.\n\nA logical element or segment of a company (such as accounting, production, marketing) representing a specific business function, and a definite place on the organizational chart, under the domain of a manager. Also called department, division, or a functional area. (Business Dictionary)\n\nRead more: http://www.businessdictionary.com/definition/business-unit.html"
          format: class
      description: 'The financial accounting unit into which the financial events, with regard to the origination and fulfillment of the agreement in the context of Standing Order Arrangement, are entered.'
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        Status:
          type: string
          description: A characteristic that describe the object by referring to a state transition in its lifecycle.
          format: datatype
      description: ''
    accountstatus:
      type: object
      properties:
        AccountStatus:
          $ref: '#/components/schemas/status'
        Accountstatus:
          type: string
          description: Specifies the current state of an account. (ISO20022)
          format: datatype
      description: "A characteristic of account which refers to the LifecycleStatus of account like opened, closed, blocked, etc.\n\nSpecifies the current state of an account. (ISO20022)"
    account:
      type: object
      properties:
        AccountStatus:
          $ref: '#/components/schemas/accountstatus'
        Account:
          type: string
          description: "A measuring state on which movements in value or amounts of assets, rights and obligations are registered.\n\nComment: \nIt is a bookkeeping instrument holding the amount or value of something by registering the movements in plus and min when events happen which have an impact on the position.\nThe term \"account\" is usually associated to an accounting or bookkeeping concept to hold the financial or stock state of a business concept. An account will typically group the debit and credit entries for a specific aspect of the business resulting from transactions,\nOften accounts are represented as a T-account which is a visual aid used to depict an account. Above the top portion of the T would be the account title. On the left-side of the base of the T would be any debit amounts; on the right-side would be the credit amounts.\nA commonly used bookkeeping method is the double-entry method. This means that every transaction has at least 2 movements. If a customer pays 100 € in cash, there is\na decrease in the amount that the customer owes to the company (the customer position is decreased)\nan increase in the amount that the company has in cash (the cash position is increased)\n\nAn account can be assigning to one or more ledgers. A ledger is a group of accounts for a certain purpose. If there is need for multiple ledgers because of multiple purpose, an account can perfectly well assigned to multiple ledgers. When Ledgers are in real physical books, this is not possible. When ledgers are digital, accounts can be grouped into multiple groups at the same time. This practice is very rarely taught into courses for accounting, but in digital accounting, it is common practice.\n\nExamples: \nstock account of a shop, cash register, bank account, financial accounting account, customer account, supplier account, ...\nBank Account BE12 1234 5678 9012: is an individual banking account\nAccounts Payable, is a collective account keeping the balance of the amounts to pay by the organisation to its suppliers. The balance is the result of the financial movements related to suppliers. This account is managed usually in a General Ledger \nSupplier Account X, is an individual account keeping the balance of the amounts to pay by the organisation to an individual supplier. The balance is the result of the financial movements related to an individual supplier. This account is managed usually in a sub-ledger.\nStock Account x, is an individual account keeping the balance of the amounts in stock of a specific good.\nA payment service to take fund out of an account. "
          format: class
      description: Reference to the account which is linked to Standing Order Arrangement
    value:
      type: object
      properties:
        Value:
          type: string
          description: 'A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)'
          format: datatype
      description: ''
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        Identifier:
          type: string
          description: An identifier is a character string used to uniquely identify one instance of an object within an identification scheme that is managed by an agency. (UN/CEFAT)
          format: datatype
      description: ''
    productidentification:
      type: object
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/identifier'
        Productidentification:
          type: string
          description: ''
          format: datatype
      description: The identifier of product e.g. ISIN Code.
    bankingproduct:
      type: object
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/productidentification'
        BankingProduct:
          type: string
          description: 'A package of services and/or goods, accompanied by term and condition which is offered as a whole to (internal or external) customers.'
          format: class
      description: Reference to the product which is linked to Standing Order Arrangement
    StandingOrderFacility:
      type: object
      properties:
        StandingOrderFacilityParameterType:
          type: string
          description: A Classification value that distinguishes between arrangements according to the type of business services within Standing Order Arrangement
          format: string
        StandingOrderFacilitySelectedOption:
          $ref: '#/components/schemas/feature'
        StandingOrderFacilityType:
          type: string
          description: The type of Standing Order Arrangement
          format: bankingproducttype
        StandingOrderFacilityCalendar:
          type: string
          description: Timetable to fulfill Standing Order Arrangement
          format: string
        StandingOrderFacilityStatus:
          type: string
          description: The status of Standing Order Arrangement
          format: string
        StandingOrderFacilityAssociatedParty:
          $ref: '#/components/schemas/involvedparty'
        StandingOrderFacilityCurrency:
          $ref: '#/components/schemas/currencycode'
        StandingOrderFacilityRegulationReference:
          $ref: '#/components/schemas/ruleset'
        StandingOrderFacilityRegulationType:
          type: string
          description: A Classification that distinguishes between the regularity domains of Standing Order Arrangement
          format: rulesettypevalues
        StandingOrderFacilityJurisdiction:
          $ref: '#/components/schemas/jurisdiction'
        StandingOrderFacilityBookingLocation:
          $ref: '#/components/schemas/businessunit'
        StandingOrderFacilityAccountType:
          type: string
          description: The type of account which is linked to Standing Order Arrangement
          format: accounttypevalues
        StandingOrderFacilityAccountReference:
          $ref: '#/components/schemas/account'
        StandingOrderFacilityCustomerReference:
          $ref: '#/components/schemas/involvedparty'
        StandingOrderFacilityPosition:
          type: string
          description: The current calculated position
          format: string
        StandingOrderFacilityProductReference:
          $ref: '#/components/schemas/bankingproduct'
        StandingOrderFacilityPositionLimit:
          type: string
          description: ''
          format: string
        FeeAccountReference:
          type: string
          description: Reference to account that has to be debited for the standing order fee
          format: string
        CounterpartyCustomerReference:
          type: string
          description: Reference to counterparty if this is a customer of the bank
          format: string
        CounterpartyAccountReference:
          type: string
          description: Reference to the counterparty account if it is in this bank
          format: string
        CounterpartyExternalAccountCode:
          type: string
          description: External number of the account (could be internal or external account) that has to be credited (credit transfer) of debited (request to pay) for the principal amount
          format: string
        PrincipalAmount:
          type: string
          description: Principal amount of the standing order
          format: string
        FeeAmount:
          type: string
          description: Fee amount charged for the execution of the standing order
          format: string
        PaymentDetailsDescription:
          type: string
          description: Payment details that will be added to the credit transfer or request to pay during execution of the standing order
          format: string
        StartDate:
          type: string
          description: First date on which the standing order will be executed
          format: string
        EndDate:
          type: string
          description: Last date on which the standing order will be executed
          format: string
        PeriodicityDescription:
          type: string
          description: 'Periodicity with which the standing order will be executed, e.g. yearly, quarterly, monthly, weekly, every XX days,…….'
          format: string
        DayNumberInPeriodicityDescription:
          type: string
          description: 'Day number within the periodicity interval on whch the standing order will be executed, e.g. First, Last, XX'
          format: string
      description: "Fulfill any scheduled and ad-hoc obligations under a service arrangement, most typically for a financial product or facility  within Standing Order. \nExample: Perform the scheduled (e.g. statements, standing orders) and ad-hoc/requested (e.g. balance inquiries, fund transfers) fulfillment tasks for a customer current account facility."
    ControlStandingOrderFacilityRequest:
      type: object
      properties:
        StandingOrderFacility:
          type: object
          properties:
            StandingOrderFacilityParameterType:
              type: string
              description: A Classification value that distinguishes between arrangements according to the type of business services within Standing Order Arrangement
              format: string
            StandingOrderFacilitySelectedOption:
              $ref: '#/components/schemas/feature'
            StandingOrderFacilityType:
              type: string
              description: The type of Standing Order Arrangement
              format: bankingproducttype
            StandingOrderFacilityCalendar:
              type: string
              description: Timetable to fulfill Standing Order Arrangement
              format: string
            StandingOrderFacilityStatus:
              type: string
              description: The status of Standing Order Arrangement
              format: string
            StandingOrderFacilityAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            StandingOrderFacilityCurrency:
              $ref: '#/components/schemas/currencycode'
            StandingOrderFacilityRegulationReference:
              $ref: '#/components/schemas/ruleset'
            StandingOrderFacilityRegulationType:
              type: string
              description: A Classification that distinguishes between the regularity domains of Standing Order Arrangement
              format: rulesettypevalues
            StandingOrderFacilityJurisdiction:
              $ref: '#/components/schemas/jurisdiction'
            StandingOrderFacilityBookingLocation:
              $ref: '#/components/schemas/businessunit'
            StandingOrderFacilityAccountType:
              type: string
              description: The type of account which is linked to Standing Order Arrangement
              format: accounttypevalues
            StandingOrderFacilityAccountReference:
              $ref: '#/components/schemas/account'
            StandingOrderFacilityCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            StandingOrderFacilityPosition:
              type: string
              description: The current calculated position
              format: string
            StandingOrderFacilityProductReference:
              $ref: '#/components/schemas/bankingproduct'
            StandingOrderFacilityPositionLimit:
              type: string
              description: "\n"
              format: string
      description: 'Input: CoCR Control the processing of Standing Order Facility'
    ControlStandingOrderFacilityResponse:
      type: object
      properties:
        StandingOrderFacility:
          type: object
          properties:
            StandingOrderFacilityParameterType:
              type: string
              description: A Classification value that distinguishes between arrangements according to the type of business services within Standing Order Arrangement
              format: string
            StandingOrderFacilitySelectedOption:
              $ref: '#/components/schemas/feature'
            StandingOrderFacilityCalendar:
              type: string
              description: Timetable to fulfill Standing Order Arrangement
              format: string
            StandingOrderFacilityStatus:
              type: string
              description: The status of Standing Order Arrangement
              format: string
            StandingOrderFacilityCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            StandingOrderFacilityPosition:
              type: string
              description: The current calculated position
              format: string
            StandingOrderFacilityProductReference:
              $ref: '#/components/schemas/bankingproduct'
            StandingOrderFacilityPositionLimit:
              type: string
              description: "\n"
              format: string
      description: 'Output: CoCR Control the processing of Standing Order Facility'
    ExchangeStandingOrderFacilityRequest:
      type: object
      properties:
        StandingOrderFacility:
          type: object
          properties:
            StandingOrderFacilityParameterType:
              type: string
              description: A Classification value that distinguishes between arrangements according to the type of business services within Standing Order Arrangement
              format: string
            StandingOrderFacilitySelectedOption:
              $ref: '#/components/schemas/feature'
            StandingOrderFacilityType:
              type: string
              description: The type of Standing Order Arrangement
              format: bankingproducttype
            StandingOrderFacilityCalendar:
              type: string
              description: Timetable to fulfill Standing Order Arrangement
              format: string
            StandingOrderFacilityStatus:
              type: string
              description: The status of Standing Order Arrangement
              format: string
            StandingOrderFacilityAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            StandingOrderFacilityCurrency:
              $ref: '#/components/schemas/currencycode'
            StandingOrderFacilityRegulationReference:
              $ref: '#/components/schemas/ruleset'
            StandingOrderFacilityRegulationType:
              type: string
              description: A Classification that distinguishes between the regularity domains of Standing Order Arrangement
              format: rulesettypevalues
            StandingOrderFacilityJurisdiction:
              $ref: '#/components/schemas/jurisdiction'
            StandingOrderFacilityBookingLocation:
              $ref: '#/components/schemas/businessunit'
            StandingOrderFacilityAccountType:
              type: string
              description: The type of account which is linked to Standing Order Arrangement
              format: accounttypevalues
            StandingOrderFacilityAccountReference:
              $ref: '#/components/schemas/account'
            StandingOrderFacilityCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            StandingOrderFacilityPosition:
              type: string
              description: The current calculated position
              format: string
            StandingOrderFacilityProductReference:
              $ref: '#/components/schemas/bankingproduct'
            StandingOrderFacilityPositionLimit:
              type: string
              description: "\n"
              format: string
      description: 'Input: EcCR Accept, verify, etc. aspects of Standing Order Facility processing'
    ExchangeStandingOrderFacilityResponse:
      type: object
      properties:
        StandingOrderFacility:
          type: object
          properties:
            StandingOrderFacilityParameterType:
              type: string
              description: A Classification value that distinguishes between arrangements according to the type of business services within Standing Order Arrangement
              format: string
            StandingOrderFacilitySelectedOption:
              $ref: '#/components/schemas/feature'
            StandingOrderFacilityCalendar:
              type: string
              description: Timetable to fulfill Standing Order Arrangement
              format: string
            StandingOrderFacilityStatus:
              type: string
              description: The status of Standing Order Arrangement
              format: string
            StandingOrderFacilityCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            StandingOrderFacilityPosition:
              type: string
              description: The current calculated position
              format: string
            StandingOrderFacilityProductReference:
              $ref: '#/components/schemas/bankingproduct'
            StandingOrderFacilityPositionLimit:
              type: string
              description: "\n"
              format: string
      description: 'Output: EcCR Accept, verify, etc. aspects of Standing Order Facility processing'
    ExecuteStandingOrderFacilityRequest:
      type: object
      properties:
        StandingOrderFacility:
          type: object
          properties:
            StandingOrderFacilityParameterType:
              type: string
              description: A Classification value that distinguishes between arrangements according to the type of business services within Standing Order Arrangement
              format: string
            StandingOrderFacilitySelectedOption:
              $ref: '#/components/schemas/feature'
            StandingOrderFacilityType:
              type: string
              description: The type of Standing Order Arrangement
              format: bankingproducttype
            StandingOrderFacilityCalendar:
              type: string
              description: Timetable to fulfill Standing Order Arrangement
              format: string
            StandingOrderFacilityStatus:
              type: string
              description: The status of Standing Order Arrangement
              format: string
            StandingOrderFacilityAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            StandingOrderFacilityCurrency:
              $ref: '#/components/schemas/currencycode'
            StandingOrderFacilityRegulationReference:
              $ref: '#/components/schemas/ruleset'
            StandingOrderFacilityRegulationType:
              type: string
              description: A Classification that distinguishes between the regularity domains of Standing Order Arrangement
              format: rulesettypevalues
            StandingOrderFacilityJurisdiction:
              $ref: '#/components/schemas/jurisdiction'
            StandingOrderFacilityBookingLocation:
              $ref: '#/components/schemas/businessunit'
            StandingOrderFacilityAccountType:
              type: string
              description: The type of account which is linked to Standing Order Arrangement
              format: accounttypevalues
            StandingOrderFacilityAccountReference:
              $ref: '#/components/schemas/account'
            StandingOrderFacilityCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            StandingOrderFacilityPosition:
              type: string
              description: The current calculated position
              format: string
            StandingOrderFacilityProductReference:
              $ref: '#/components/schemas/bankingproduct'
            StandingOrderFacilityPositionLimit:
              type: string
              description: "\n"
              format: string
      description: 'Input: ExCR Execute an available automated action for Standing Order Facility'
    ExecuteStandingOrderFacilityResponse:
      type: object
      properties:
        StandingOrderFacility:
          type: object
          properties:
            StandingOrderFacilityParameterType:
              type: string
              description: A Classification value that distinguishes between arrangements according to the type of business services within Standing Order Arrangement
              format: string
            StandingOrderFacilitySelectedOption:
              $ref: '#/components/schemas/feature'
            StandingOrderFacilityCalendar:
              type: string
              description: Timetable to fulfill Standing Order Arrangement
              format: string
            StandingOrderFacilityStatus:
              type: string
              description: The status of Standing Order Arrangement
              format: string
            StandingOrderFacilityCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            StandingOrderFacilityPosition:
              type: string
              description: The current calculated position
              format: string
            StandingOrderFacilityProductReference:
              $ref: '#/components/schemas/bankingproduct'
            StandingOrderFacilityPositionLimit:
              type: string
              description: "\n"
              format: string
      description: 'Output: ExCR Execute an available automated action for Standing Order Facility'
    InitiateStandingOrderFacilityRequest:
      type: object
      properties:
        StandingOrderFacility:
          type: object
          properties:
            StandingOrderFacilityParameterType:
              type: string
              description: A Classification value that distinguishes between arrangements according to the type of business services within Standing Order Arrangement
              format: string
            StandingOrderFacilitySelectedOption:
              $ref: '#/components/schemas/feature'
            StandingOrderFacilityType:
              type: string
              description: The type of Standing Order Arrangement
              format: bankingproducttype
            StandingOrderFacilityCalendar:
              type: string
              description: Timetable to fulfill Standing Order Arrangement
              format: string
            StandingOrderFacilityStatus:
              type: string
              description: The status of Standing Order Arrangement
              format: string
            StandingOrderFacilityAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            StandingOrderFacilityCurrency:
              $ref: '#/components/schemas/currencycode'
            StandingOrderFacilityRegulationReference:
              $ref: '#/components/schemas/ruleset'
            StandingOrderFacilityRegulationType:
              type: string
              description: A Classification that distinguishes between the regularity domains of Standing Order Arrangement
              format: rulesettypevalues
            StandingOrderFacilityJurisdiction:
              $ref: '#/components/schemas/jurisdiction'
            StandingOrderFacilityBookingLocation:
              $ref: '#/components/schemas/businessunit'
            StandingOrderFacilityAccountType:
              type: string
              description: The type of account which is linked to Standing Order Arrangement
              format: accounttypevalues
            StandingOrderFacilityAccountReference:
              $ref: '#/components/schemas/account'
            StandingOrderFacilityCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            StandingOrderFacilityPosition:
              type: string
              description: The current calculated position
              format: string
            StandingOrderFacilityProductReference:
              $ref: '#/components/schemas/bankingproduct'
            StandingOrderFacilityPositionLimit:
              type: string
              description: "\n"
              format: string
      description: 'Input: InCR Instantiate a new Standing Order Facility'
    InitiateStandingOrderFacilityResponse:
      type: object
      properties:
        StandingOrderFacility:
          type: object
          properties:
            StandingOrderFacilityParameterType:
              type: string
              description: A Classification value that distinguishes between arrangements according to the type of business services within Standing Order Arrangement
              format: string
            StandingOrderFacilitySelectedOption:
              $ref: '#/components/schemas/feature'
            StandingOrderFacilityCalendar:
              type: string
              description: Timetable to fulfill Standing Order Arrangement
              format: string
            StandingOrderFacilityStatus:
              type: string
              description: The status of Standing Order Arrangement
              format: string
            StandingOrderFacilityCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            StandingOrderFacilityPosition:
              type: string
              description: The current calculated position
              format: string
            StandingOrderFacilityProductReference:
              $ref: '#/components/schemas/bankingproduct'
            StandingOrderFacilityPositionLimit:
              type: string
              description: "\n"
              format: string
      description: 'Output: InCR Instantiate a new Standing Order Facility'
    RetrieveStandingOrderFacilityResponse:
      type: object
      properties:
        StandingOrderFacility:
          type: object
          properties:
            StandingOrderFacilityParameterType:
              type: string
              description: A Classification value that distinguishes between arrangements according to the type of business services within Standing Order Arrangement
              format: string
            StandingOrderFacilitySelectedOption:
              $ref: '#/components/schemas/feature'
            StandingOrderFacilityType:
              type: string
              description: The type of Standing Order Arrangement
              format: bankingproducttype
            StandingOrderFacilityCalendar:
              type: string
              description: Timetable to fulfill Standing Order Arrangement
              format: string
            StandingOrderFacilityStatus:
              type: string
              description: The status of Standing Order Arrangement
              format: string
            StandingOrderFacilityAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            StandingOrderFacilityCurrency:
              $ref: '#/components/schemas/currencycode'
            StandingOrderFacilityRegulationReference:
              $ref: '#/components/schemas/ruleset'
            StandingOrderFacilityRegulationType:
              type: string
              description: A Classification that distinguishes between the regularity domains of Standing Order Arrangement
              format: rulesettypevalues
            StandingOrderFacilityJurisdiction:
              $ref: '#/components/schemas/jurisdiction'
            StandingOrderFacilityBookingLocation:
              $ref: '#/components/schemas/businessunit'
            StandingOrderFacilityAccountType:
              type: string
              description: The type of account which is linked to Standing Order Arrangement
              format: accounttypevalues
            StandingOrderFacilityAccountReference:
              $ref: '#/components/schemas/account'
            StandingOrderFacilityCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            StandingOrderFacilityPosition:
              type: string
              description: The current calculated position
              format: string
            StandingOrderFacilityProductReference:
              $ref: '#/components/schemas/bankingproduct'
            StandingOrderFacilityPositionLimit:
              type: string
              description: "\n"
              format: string
      description: 'Output: ReCR Retrieve details about any aspect of Standing Order Facility'
    RequestStandingOrderFacilityRequest:
      type: object
      properties:
        StandingOrderFacility:
          type: object
          properties:
            StandingOrderFacilityParameterType:
              type: string
              description: A Classification value that distinguishes between arrangements according to the type of business services within Standing Order Arrangement
              format: string
            StandingOrderFacilitySelectedOption:
              $ref: '#/components/schemas/feature'
            StandingOrderFacilityType:
              type: string
              description: The type of Standing Order Arrangement
              format: bankingproducttype
            StandingOrderFacilityCalendar:
              type: string
              description: Timetable to fulfill Standing Order Arrangement
              format: string
            StandingOrderFacilityStatus:
              type: string
              description: The status of Standing Order Arrangement
              format: string
            StandingOrderFacilityAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            StandingOrderFacilityCurrency:
              $ref: '#/components/schemas/currencycode'
            StandingOrderFacilityRegulationReference:
              $ref: '#/components/schemas/ruleset'
            StandingOrderFacilityRegulationType:
              type: string
              description: A Classification that distinguishes between the regularity domains of Standing Order Arrangement
              format: rulesettypevalues
            StandingOrderFacilityJurisdiction:
              $ref: '#/components/schemas/jurisdiction'
            StandingOrderFacilityBookingLocation:
              $ref: '#/components/schemas/businessunit'
            StandingOrderFacilityAccountType:
              type: string
              description: The type of account which is linked to Standing Order Arrangement
              format: accounttypevalues
            StandingOrderFacilityAccountReference:
              $ref: '#/components/schemas/account'
            StandingOrderFacilityCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            StandingOrderFacilityPosition:
              type: string
              description: The current calculated position
              format: string
            StandingOrderFacilityProductReference:
              $ref: '#/components/schemas/bankingproduct'
            StandingOrderFacilityPositionLimit:
              type: string
              description: "\n"
              format: string
      description: 'Input: RqCR Request manual intervention or a decision with respect to Standing Order Facility'
    RequestStandingOrderFacilityResponse:
      type: object
      properties:
        StandingOrderFacility:
          type: object
          properties:
            StandingOrderFacilityParameterType:
              type: string
              description: A Classification value that distinguishes between arrangements according to the type of business services within Standing Order Arrangement
              format: string
            StandingOrderFacilitySelectedOption:
              $ref: '#/components/schemas/feature'
            StandingOrderFacilityCalendar:
              type: string
              description: Timetable to fulfill Standing Order Arrangement
              format: string
            StandingOrderFacilityStatus:
              type: string
              description: The status of Standing Order Arrangement
              format: string
            StandingOrderFacilityCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            StandingOrderFacilityPosition:
              type: string
              description: The current calculated position
              format: string
            StandingOrderFacilityProductReference:
              $ref: '#/components/schemas/bankingproduct'
            StandingOrderFacilityPositionLimit:
              type: string
              description: "\n"
              format: string
      description: 'Output: RqCR Request manual intervention or a decision with respect to Standing Order Facility'
    UpdateStandingOrderFacilityRequest:
      type: object
      properties:
        StandingOrderFacility:
          type: object
          properties:
            StandingOrderFacilityParameterType:
              type: string
              description: A Classification value that distinguishes between arrangements according to the type of business services within Standing Order Arrangement
              format: string
            StandingOrderFacilitySelectedOption:
              $ref: '#/components/schemas/feature'
            StandingOrderFacilityType:
              type: string
              description: The type of Standing Order Arrangement
              format: bankingproducttype
            StandingOrderFacilityCalendar:
              type: string
              description: Timetable to fulfill Standing Order Arrangement
              format: string
            StandingOrderFacilityStatus:
              type: string
              description: The status of Standing Order Arrangement
              format: string
            StandingOrderFacilityAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            StandingOrderFacilityCurrency:
              $ref: '#/components/schemas/currencycode'
            StandingOrderFacilityRegulationReference:
              $ref: '#/components/schemas/ruleset'
            StandingOrderFacilityRegulationType:
              type: string
              description: A Classification that distinguishes between the regularity domains of Standing Order Arrangement
              format: rulesettypevalues
            StandingOrderFacilityJurisdiction:
              $ref: '#/components/schemas/jurisdiction'
            StandingOrderFacilityBookingLocation:
              $ref: '#/components/schemas/businessunit'
            StandingOrderFacilityAccountType:
              type: string
              description: The type of account which is linked to Standing Order Arrangement
              format: accounttypevalues
            StandingOrderFacilityAccountReference:
              $ref: '#/components/schemas/account'
            StandingOrderFacilityCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            StandingOrderFacilityPosition:
              type: string
              description: The current calculated position
              format: string
            StandingOrderFacilityProductReference:
              $ref: '#/components/schemas/bankingproduct'
            StandingOrderFacilityPositionLimit:
              type: string
              description: "\n"
              format: string
      description: 'Input: UpCR Update details relating to Standing Order Facility'
    UpdateStandingOrderFacilityResponse:
      type: object
      properties:
        StandingOrderFacility:
          type: object
          properties:
            StandingOrderFacilityParameterType:
              type: string
              description: A Classification value that distinguishes between arrangements according to the type of business services within Standing Order Arrangement
              format: string
            StandingOrderFacilitySelectedOption:
              $ref: '#/components/schemas/feature'
            StandingOrderFacilityCalendar:
              type: string
              description: Timetable to fulfill Standing Order Arrangement
              format: string
            StandingOrderFacilityStatus:
              type: string
              description: The status of Standing Order Arrangement
              format: string
            StandingOrderFacilityCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            StandingOrderFacilityPosition:
              type: string
              description: The current calculated position
              format: string
            StandingOrderFacilityProductReference:
              $ref: '#/components/schemas/bankingproduct'
            StandingOrderFacilityPositionLimit:
              type: string
              description: "\n"
              format: string
      description: 'Output: UpCR Update details relating to Standing Order Facility'
    ExchangeStandingOrderPaymentRequest:
      type: object
      properties:
        StandingOrderPayment:
          type: object
          properties:
            StandingOrderPaymentPreconditions:
              $ref: '#/components/schemas/condition'
            StandingOrderPaymentFeatureSchedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            StandingOrderPaymentPostconditions:
              $ref: '#/components/schemas/condition'
            StandingOrderPaymentServiceType:
              type: string
              description: Reference to the specific business service type
              format: string
            StandingOrderPaymentServiceDescription:
              $ref: '#/components/schemas/text'
            StandingOrderPaymentServiceInputsandOuputs:
              type: string
              description: Mandatory and optional inputs and output information for the business service
              format: string
            StandingOrderPaymentServiceWorkProduct:
              $ref: '#/components/schemas/workproduct'
            StandingOrderPaymentServiceName:
              $ref: '#/components/schemas/name'
      description: 'Input: EcBQ Accept, verify, etc. aspects of Standing Order Payment processing'
    ExchangeStandingOrderPaymentResponse:
      type: object
      properties:
        StandingOrderPayment:
          type: object
          properties:
            StandingOrderPaymentPreconditions:
              $ref: '#/components/schemas/condition'
            StandingOrderPaymentFeatureSchedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            StandingOrderPaymentPostconditions:
              $ref: '#/components/schemas/condition'
            StandingOrderPaymentServiceType:
              type: string
              description: Reference to the specific business service type
              format: string
            StandingOrderPaymentServiceDescription:
              $ref: '#/components/schemas/text'
            StandingOrderPaymentServiceInputsandOuputs:
              type: string
              description: Mandatory and optional inputs and output information for the business service
              format: string
            StandingOrderPaymentServiceWorkProduct:
              $ref: '#/components/schemas/workproduct'
            StandingOrderPaymentServiceName:
              $ref: '#/components/schemas/name'
      description: 'Output: EcBQ Accept, verify, etc. aspects of Standing Order Payment processing'
    InitiateStandingOrderPaymentRequest:
      type: object
      properties:
        StandingOrderPayment:
          type: object
          properties:
            StandingOrderPaymentPreconditions:
              $ref: '#/components/schemas/condition'
            StandingOrderPaymentFeatureSchedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            StandingOrderPaymentPostconditions:
              $ref: '#/components/schemas/condition'
            StandingOrderPaymentServiceType:
              type: string
              description: Reference to the specific business service type
              format: string
            StandingOrderPaymentServiceDescription:
              $ref: '#/components/schemas/text'
            StandingOrderPaymentServiceInputsandOuputs:
              type: string
              description: Mandatory and optional inputs and output information for the business service
              format: string
            StandingOrderPaymentServiceWorkProduct:
              $ref: '#/components/schemas/workproduct'
            StandingOrderPaymentServiceName:
              $ref: '#/components/schemas/name'
      description: 'Input: InBQ Instantiate a new Standing Order Payment'
    InitiateStandingOrderPaymentResponse:
      type: object
      properties:
        StandingOrderPayment:
          type: object
          properties:
            StandingOrderPaymentPreconditions:
              $ref: '#/components/schemas/condition'
            StandingOrderPaymentFeatureSchedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            StandingOrderPaymentPostconditions:
              $ref: '#/components/schemas/condition'
            StandingOrderPaymentServiceType:
              type: string
              description: Reference to the specific business service type
              format: string
            StandingOrderPaymentServiceDescription:
              $ref: '#/components/schemas/text'
            StandingOrderPaymentServiceInputsandOuputs:
              type: string
              description: Mandatory and optional inputs and output information for the business service
              format: string
            StandingOrderPaymentServiceWorkProduct:
              $ref: '#/components/schemas/workproduct'
            StandingOrderPaymentServiceName:
              $ref: '#/components/schemas/name'
      description: 'Output: InBQ Instantiate a new Standing Order Payment'
    RetrieveStandingOrderPaymentResponse:
      type: object
      properties:
        StandingOrderPayment:
          type: object
          properties:
            StandingOrderPaymentPreconditions:
              $ref: '#/components/schemas/condition'
            StandingOrderPaymentFeatureSchedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            StandingOrderPaymentPostconditions:
              $ref: '#/components/schemas/condition'
            StandingOrderPaymentServiceType:
              type: string
              description: Reference to the specific business service type
              format: string
            StandingOrderPaymentServiceDescription:
              $ref: '#/components/schemas/text'
            StandingOrderPaymentServiceInputsandOuputs:
              type: string
              description: Mandatory and optional inputs and output information for the business service
              format: string
            StandingOrderPaymentServiceWorkProduct:
              $ref: '#/components/schemas/workproduct'
            StandingOrderPaymentServiceName:
              $ref: '#/components/schemas/name'
      description: 'Output: ReBQ Retrieve details about any aspect of Standing Order Payment'
    UpdateStandingOrderPaymentRequest:
      type: object
      properties:
        StandingOrderPayment:
          type: object
          properties:
            StandingOrderPaymentPreconditions:
              $ref: '#/components/schemas/condition'
            StandingOrderPaymentFeatureSchedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            StandingOrderPaymentPostconditions:
              $ref: '#/components/schemas/condition'
            StandingOrderPaymentServiceType:
              type: string
              description: Reference to the specific business service type
              format: string
            StandingOrderPaymentServiceDescription:
              $ref: '#/components/schemas/text'
            StandingOrderPaymentServiceInputsandOuputs:
              type: string
              description: Mandatory and optional inputs and output information for the business service
              format: string
            StandingOrderPaymentServiceWorkProduct:
              $ref: '#/components/schemas/workproduct'
            StandingOrderPaymentServiceName:
              $ref: '#/components/schemas/name'
      description: 'Input: UpBQ Update details relating to Standing Order Payment'
    UpdateStandingOrderPaymentResponse:
      type: object
      properties:
        StandingOrderPayment:
          type: object
          properties:
            StandingOrderPaymentPreconditions:
              $ref: '#/components/schemas/condition'
            StandingOrderPaymentFeatureSchedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            StandingOrderPaymentPostconditions:
              $ref: '#/components/schemas/condition'
            StandingOrderPaymentServiceType:
              type: string
              description: Reference to the specific business service type
              format: string
            StandingOrderPaymentServiceDescription:
              $ref: '#/components/schemas/text'
            StandingOrderPaymentServiceInputsandOuputs:
              type: string
              description: Mandatory and optional inputs and output information for the business service
              format: string
            StandingOrderPaymentServiceWorkProduct:
              $ref: '#/components/schemas/workproduct'
            StandingOrderPaymentServiceName:
              $ref: '#/components/schemas/name'
      description: 'Output: UpBQ Update details relating to Standing Order Payment'
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ControlStandingOrderFacilityResponse:
      description: ControlStandingOrderFacilityResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ControlStandingOrderFacilityResponse'
    ExchangeStandingOrderFacilityResponse:
      description: ExchangeStandingOrderFacilityResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExchangeStandingOrderFacilityResponse'
    ExecuteStandingOrderFacilityResponse:
      description: ExecuteStandingOrderFacilityResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExecuteStandingOrderFacilityResponse'
    InitiateStandingOrderFacilityResponse:
      description: InitiateStandingOrderFacilityResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateStandingOrderFacilityResponse'
    RetrieveStandingOrderFacilityResponse:
      description: RetrieveStandingOrderFacilityResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveStandingOrderFacilityResponse'
    RequestStandingOrderFacilityResponse:
      description: RequestStandingOrderFacilityResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestStandingOrderFacilityResponse'
    UpdateStandingOrderFacilityResponse:
      description: UpdateStandingOrderFacilityResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateStandingOrderFacilityResponse'
    ExchangeStandingOrderPaymentResponse:
      description: ExchangeStandingOrderPaymentResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExchangeStandingOrderPaymentResponse'
    InitiateStandingOrderPaymentResponse:
      description: InitiateStandingOrderPaymentResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateStandingOrderPaymentResponse'
    RetrieveStandingOrderPaymentResponse:
      description: RetrieveStandingOrderPaymentResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveStandingOrderPaymentResponse'
    UpdateStandingOrderPaymentResponse:
      description: UpdateStandingOrderPaymentResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateStandingOrderPaymentResponse'
  parameters:
    standingorderid:
      name: standingorderid
      in: path
      required: true
      style: simple
      schema:
        type: string
    standingorderpaymentid:
      name: standingorderpaymentid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    ControlStandingOrderFacilityRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ControlStandingOrderFacilityRequest'
      required: true
    ExchangeStandingOrderFacilityRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExchangeStandingOrderFacilityRequest'
      required: true
    ExecuteStandingOrderFacilityRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExecuteStandingOrderFacilityRequest'
      required: true
    InitiateStandingOrderFacilityRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateStandingOrderFacilityRequest'
      required: true
    RequestStandingOrderFacilityRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestStandingOrderFacilityRequest'
      required: true
    UpdateStandingOrderFacilityRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateStandingOrderFacilityRequest'
      required: true
    ExchangeStandingOrderPaymentRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExchangeStandingOrderPaymentRequest'
      required: true
    InitiateStandingOrderPaymentRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateStandingOrderPaymentRequest'
      required: true
    UpdateStandingOrderPaymentRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateStandingOrderPaymentRequest'
      required: true