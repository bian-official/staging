openapi: 3.0.1
info:
  title: Interbank Relationship Management
  description: Manage the bank's relationship with other banks, covering any specific agreements that may be in place and overseeing operational issues.
  version: 10.1.0
servers:
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/B154/InterbankRelationshipManagement/10.1.0
paths:
  /InterbankRelationshipManagement/Create:
    post:
      tags:
      - CR - BankRelationshipManagementPlan
      summary: CrCR Create an initial bank relationship management plan
      description: CrCR Create an initial bank relationship management plan
      operationId: Create
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/CreateBankRelationshipManagementPlanRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateBankRelationshipManagementPlanResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /InterbankRelationshipManagement/{interbankrelationshipmanagementId}/Update:
    put:
      tags:
      - CR - BankRelationshipManagementPlan
      summary: UpCR Update details of an active bank relationship plan
      description: UpCR Update details of an active bank relationship plan
      operationId: Update
      parameters:
      - $ref: '#/components/parameters/InterbankRelationshipManagementID'
      requestBody:
        $ref: '#/components/requestBodies/BankRelationshipManagementPlan'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankRelationshipManagementPlan'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /InterbankRelationshipManagement/{interbankrelationshipmanagementId}/Request:
    put:
      tags:
      - CR - BankRelationshipManagementPlan
      summary: RqCR Request intervention with a bank relationship plan
      description: RqCR Request intervention with a bank relationship plan
      operationId: Request
      parameters:
      - $ref: '#/components/parameters/InterbankRelationshipManagementID'
      requestBody:
        $ref: '#/components/requestBodies/RequestBankRelationshipManagementPlanRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestBankRelationshipManagementPlanResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /InterbankRelationshipManagement/{interbankrelationshipmanagementId}/Retrieve:
    get:
      tags:
      - CR - BankRelationshipManagementPlan
      summary: ReCR Retrieve details about a bank relationship plan and associated activity
      description: ReCR Retrieve details about a bank relationship plan and associated activity
      operationId: Retrieve
      parameters:
      - $ref: '#/components/parameters/InterbankRelationshipManagementID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankRelationshipManagementPlan'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /InterbankRelationshipManagement/{interbankrelationshipmanagementId}/Contact/Create:
    post:
      tags:
      - BQ - Contact
      summary: CrBQ Create a bank contact
      description: CrBQ Create a bank contact
      operationId: CreateContact
      parameters:
      - $ref: '#/components/parameters/InterbankRelationshipManagementID'
      requestBody:
        $ref: '#/components/requestBodies/CreateContactRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateContactResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /InterbankRelationshipManagement/{interbankrelationshipmanagementId}/Contact/{contactId}/Update:
    put:
      tags:
      - BQ - Contact
      summary: UpBQ Update details about the bank contact schedule or a contact record
      description: UpBQ Update details about the bank contact schedule or a contact record
      operationId: UpdateContact
      parameters:
      - $ref: '#/components/parameters/InterbankRelationshipManagementID'
      - $ref: '#/components/parameters/ContactID'
      requestBody:
        $ref: '#/components/requestBodies/UpdateContactRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateContactResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /InterbankRelationshipManagement/{interbankrelationshipmanagementId}/Contact/{contactId}/Request:
    put:
      tags:
      - BQ - Contact
      summary: RqBQ Request manual intervention with the bank relationship
      description: RqBQ Request manual intervention with the bank relationship
      operationId: RequestContact
      parameters:
      - $ref: '#/components/parameters/InterbankRelationshipManagementID'
      - $ref: '#/components/parameters/ContactID'
      requestBody:
        $ref: '#/components/requestBodies/RequestContactRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestContactResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /InterbankRelationshipManagement/{interbankrelationshipmanagementId}/Contact/{contactId}/Retrieve:
    get:
      tags:
      - BQ - Contact
      summary: ReBQ Retrieve details about the contact schedule or specific contacts
      description: ReBQ Retrieve details about the contact schedule or specific contacts
      operationId: RetrieveContact
      parameters:
      - $ref: '#/components/parameters/InterbankRelationshipManagementID'
      - $ref: '#/components/parameters/ContactID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    BankRelationshipManagementPlan:
      type: object
      properties:
        BankReference:
          type: object
          description: Reference to the associated bank
        BankDetails:
          type: string
          description: Key features and details of the bank (e.g. business/segment profile)
        EmployeeOrBusinessUnitReference:
          type: object
          description: The assigned individual or business unit for the relationship
        BankRelationshipType:
          type: string
          description: The type of relationship with the bank (e.g. trading partner, joint venture partner)
        BankRelationshipDescription:
          type: string
          description: A description of the relationship, outlining roles and expectations as appropriate
        BankRelationshipBudget:
          type: string
          description: The target and actual budget covering expenditures and reciprocal business activity as appropriate
        BankContactDetails:
          type: string
          description: Defines the role and contact details for bank representatives
    Contact:
      type: object
      properties:
        BankRelationshipContactHistory:
          type: string
          description: Records the timing, purpose, details and impact of customer contacts
        BankRelationshipContactSchedule:
          type: string
          description: The schedule of past and planned customer contacts
        BankRelationshipContactRecord:
          type: string
          description: The record of a customer contact
        BankRelationshipContactDate:
          type: string
          description: The date time and location of the contact
        EmployeeReference:
          type: object
          description: Reference to the employee(s) in attendance
        BankRelationshipContactType:
          type: string
          description: The reason and or purpose for the contact (e.g. review, issue, product sales, advice, customer enquiry)
        BankRelationshipContactResult:
          type: string
          description: The result of the contact, including follow up tasks
        DocumentDirectoryEntryInstanceReference:
          type: object
          description: Reference to associated documents
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          description: NA
        status:
          type: string
          description: NA
        message:
          type: string
          description: NA
    CreateBankRelationshipManagementPlanRequest:
      type: object
      properties:
        BankRelationshipManagementPlan:
          type: object
          properties:
            BankReference:
              type: object
              description: Reference to the associated bank
            BankDetails:
              type: string
              description: Key features and details of the bank (e.g. business/segment profile)
            EmployeeOrBusinessUnitReference:
              type: object
              description: The assigned individual or business unit for the relationship
            BankRelationshipType:
              type: string
              description: The type of relationship with the bank (e.g. trading partner, joint venture partner)
            BankRelationshipDescription:
              type: string
              description: A description of the relationship, outlining roles and expectations as appropriate
            BankContactDetails:
              type: string
              description: Defines the role and contact details for bank representatives
    CreateBankRelationshipManagementPlanResponse:
      type: object
      properties:
        BankRelationshipManagementPlan:
          type: object
          properties:
            EmployeeOrBusinessUnitReference:
              type: object
              description: The assigned individual or business unit for the relationship
            BankRelationshipType:
              type: string
              description: The type of relationship with the bank (e.g. trading partner, joint venture partner)
            BankRelationshipDescription:
              type: string
              description: A description of the relationship, outlining roles and expectations as appropriate
            BankRelationshipBudget:
              type: string
              description: The target and actual budget covering expenditures and reciprocal business activity as appropriate
            BankContactDetails:
              type: string
              description: Defines the role and contact details for bank representatives
    RequestBankRelationshipManagementPlanRequest:
      type: object
      properties:
        BankRelationshipManagementPlan:
          type: object
          properties:
            BankReference:
              type: object
              description: Reference to the associated bank
            BankDetails:
              type: string
              description: Key features and details of the bank (e.g. business/segment profile)
            EmployeeOrBusinessUnitReference:
              type: object
              description: The assigned individual or business unit for the relationship
            BankRelationshipType:
              type: string
              description: The type of relationship with the bank (e.g. trading partner, joint venture partner)
            BankRelationshipDescription:
              type: string
              description: A description of the relationship, outlining roles and expectations as appropriate
            BankContactDetails:
              type: string
              description: Defines the role and contact details for bank representatives
    RequestBankRelationshipManagementPlanResponse:
      type: object
      properties:
        BankRelationshipManagementPlan:
          type: object
          properties:
            EmployeeOrBusinessUnitReference:
              type: object
              description: The assigned individual or business unit for the relationship
            BankRelationshipType:
              type: string
              description: The type of relationship with the bank (e.g. trading partner, joint venture partner)
            BankRelationshipDescription:
              type: string
              description: A description of the relationship, outlining roles and expectations as appropriate
            BankRelationshipBudget:
              type: string
              description: The target and actual budget covering expenditures and reciprocal business activity as appropriate
            BankContactDetails:
              type: string
              description: Defines the role and contact details for bank representatives
    CreateContactRequest:
      type: object
      properties:
        Contact:
          type: object
          properties:
            BankRelationshipContactHistory:
              type: string
              description: Records the timing, purpose, details and impact of customer contacts
            BankRelationshipContactSchedule:
              type: string
              description: The schedule of past and planned customer contacts
    CreateContactResponse:
      type: object
      properties:
        Contact:
          type: object
          properties:
            BankRelationshipContactHistory:
              type: string
              description: Records the timing, purpose, details and impact of customer contacts
            BankRelationshipContactSchedule:
              type: string
              description: The schedule of past and planned customer contacts
    UpdateContactRequest:
      type: object
      properties:
        Contact:
          type: object
          properties:
            BankRelationshipContactRecord:
              type: string
              description: The record of a customer contact
            BankRelationshipContactDate:
              type: string
              description: The date time and location of the contact
            EmployeeReference:
              type: object
              description: Reference to the employee(s) in attendance
            BankRelationshipContactType:
              type: string
              description: The reason and or purpose for the contact (e.g. review, issue, product sales, advice, customer enquiry)
            BankRelationshipContactResult:
              type: string
              description: The result of the contact, including follow up tasks
            DocumentDirectoryEntryInstanceReference:
              type: object
              description: Reference to associated documents
    UpdateContactResponse:
      type: object
      properties:
        Contact:
          type: object
          properties:
            BankRelationshipContactRecord:
              type: string
              description: The record of a customer contact
            BankRelationshipContactDate:
              type: string
              description: The date time and location of the contact
            EmployeeReference:
              type: object
              description: Reference to the employee(s) in attendance
            BankRelationshipContactType:
              type: string
              description: The reason and or purpose for the contact (e.g. review, issue, product sales, advice, customer enquiry)
            BankRelationshipContactResult:
              type: string
              description: The result of the contact, including follow up tasks
            DocumentDirectoryEntryInstanceReference:
              type: object
              description: Reference to associated documents
    RequestContactRequest:
      type: object
      properties:
        Contact:
          type: object
          properties:
            BankRelationshipContactRecord:
              type: string
              description: The record of a customer contact
            BankRelationshipContactDate:
              type: string
              description: The date time and location of the contact
            EmployeeReference:
              type: object
              description: Reference to the employee(s) in attendance
            BankRelationshipContactType:
              type: string
              description: The reason and or purpose for the contact (e.g. review, issue, product sales, advice, customer enquiry)
            DocumentDirectoryEntryInstanceReference:
              type: object
              description: Reference to associated documents
    RequestContactResponse:
      type: object
      properties:
        Contact:
          type: object
          properties:
            BankRelationshipContactRecord:
              type: string
              description: The record of a customer contact
            BankRelationshipContactDate:
              type: string
              description: The date time and location of the contact
            BankRelationshipContactType:
              type: string
              description: The reason and or purpose for the contact (e.g. review, issue, product sales, advice, customer enquiry)
            BankRelationshipContactResult:
              type: string
              description: The result of the contact, including follow up tasks
            DocumentDirectoryEntryInstanceReference:
              type: object
              description: Reference to associated documents
  parameters:
    InterbankRelationshipManagementID:
      name: interbankrelationshipmanagementId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    ContactID:
      name: contactId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
  requestBodies:
    CreateBankRelationshipManagementPlanRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateBankRelationshipManagementPlanRequest'
    BankRelationshipManagementPlan:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BankRelationshipManagementPlan'
    RequestBankRelationshipManagementPlanRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestBankRelationshipManagementPlanRequest'
    CreateContactRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateContactRequest'
    UpdateContactRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateContactRequest'
    RequestContactRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestContactRequest'
  responses:
    HTTPError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    BadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequestsError:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
...
