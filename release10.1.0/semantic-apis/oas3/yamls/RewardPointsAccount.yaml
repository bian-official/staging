openapi: 3.0.1
info:
  title: Reward Points Account
  description: Administer the booking and remittance of rewards points
  contact:
    name: BIAN
    url: https://bian.org
  version: '10.1.0'
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/RewardPointsAccount/10.1.0
paths:
  '/RewardPointsAccount/{rewardpointsaccountid}/Capture':
    put:
      tags:
        - CR - RewardPointsLog
      summary: CaCR Capture Reward Points Log activity or event related information
      description: CaCR Capture Reward Points Log activity or event related information
      operationId: Capture
      parameters:
        - $ref: '#/components/parameters/rewardpointsaccountid'
      requestBody:
        $ref: '#/components/requestBodies/RewardPointsLog'
      responses:
        '200':
          $ref: '#/components/responses/RewardPointsLog'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/RewardPointsAccount/{rewardpointsaccountid}/Control':
    put:
      tags:
        - CR - RewardPointsLog
      summary: CoCR Control the processing of Reward Points Log
      description: CoCR Control the processing of Reward Points Log
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/rewardpointsaccountid'
      requestBody:
        $ref: '#/components/requestBodies/RewardPointsLog'
      responses:
        '200':
          $ref: '#/components/responses/RewardPointsLog'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/RewardPointsAccount/{rewardpointsaccountid}/Exchange':
    put:
      tags:
        - CR - RewardPointsLog
      summary: 'EcCR Accept, verify, etc. aspects of Reward Points Log processing'
      description: 'EcCR Accept, verify, etc. aspects of Reward Points Log processing'
      operationId: Exchange
      parameters:
        - $ref: '#/components/parameters/rewardpointsaccountid'
      requestBody:
        $ref: '#/components/requestBodies/RewardPointsLog'
      responses:
        '200':
          $ref: '#/components/responses/RewardPointsLog'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/RewardPointsAccount/{rewardpointsaccountid}/Grant':
    put:
      tags:
        - CR - RewardPointsLog
      summary: GrCR Obtain permission to act in relation to Reward Points Log
      description: GrCR Obtain permission to act in relation to Reward Points Log
      operationId: Grant
      parameters:
        - $ref: '#/components/parameters/rewardpointsaccountid'
      requestBody:
        $ref: '#/components/requestBodies/RewardPointsLog'
      responses:
        '200':
          $ref: '#/components/responses/RewardPointsLog'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /RewardPointsAccount/Initiate:
    post:
      tags:
        - CR - RewardPointsLog
      summary: InCR Instantiate a new Reward Points Log
      description: InCR Instantiate a new Reward Points Log
      operationId: Initiate
      requestBody:
        $ref: '#/components/requestBodies/RewardPointsLog'
      responses:
        '200':
          $ref: '#/components/responses/RewardPointsLog'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/RewardPointsAccount/{rewardpointsaccountid}/Retrieve':
    get:
      tags:
        - CR - RewardPointsLog
      summary: ReCR Retrieve details about any aspect of Reward Points Log
      description: ReCR Retrieve details about any aspect of Reward Points Log
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/rewardpointsaccountid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveRewardPointsLogResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/RewardPointsAccount/{rewardpointsaccountid}/Request':
    put:
      tags:
        - CR - RewardPointsLog
      summary: RqCR Request manual intervention or a decision with respect to Reward Points Log
      description: RqCR Request manual intervention or a decision with respect to Reward Points Log
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/rewardpointsaccountid'
      requestBody:
        $ref: '#/components/requestBodies/RewardPointsLog'
      responses:
        '200':
          $ref: '#/components/responses/RewardPointsLog'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/RewardPointsAccount/{rewardpointsaccountid}/Update':
    put:
      tags:
        - CR - RewardPointsLog
      summary: UpCR Update details relating to Reward Points Log
      description: UpCR Update details relating to Reward Points Log
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/rewardpointsaccountid'
      requestBody:
        $ref: '#/components/requestBodies/RewardPointsLog'
      responses:
        '200':
          $ref: '#/components/responses/RewardPointsLog'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/RewardPointsAccount/{rewardpointsaccountid}/Capture/{captureid}/Capture':
    put:
      tags:
        - BQ - Capture
      summary: CaBQ Capture Capture activity or event related information
      description: CaBQ Capture Capture activity or event related information
      operationId: CaptureCapture
      parameters:
        - $ref: '#/components/parameters/rewardpointsaccountid'
        - $ref: '#/components/parameters/captureid'
      requestBody:
        $ref: '#/components/requestBodies/Capture'
      responses:
        '200':
          $ref: '#/components/responses/Capture'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/RewardPointsAccount/{rewardpointsaccountid}/Expiration/{expirationid}/Capture':
    put:
      tags:
        - BQ - Expiration
      summary: CaBQ Capture Expiration activity or event related information
      description: CaBQ Capture Expiration activity or event related information
      operationId: CaptureExpiration
      parameters:
        - $ref: '#/components/parameters/rewardpointsaccountid'
        - $ref: '#/components/parameters/expirationid'
      requestBody:
        $ref: '#/components/requestBodies/Expiration'
      responses:
        '200':
          $ref: '#/components/responses/Expiration'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/RewardPointsAccount/{rewardpointsaccountid}/Capture/{captureid}/Initiate':
    post:
      tags:
        - BQ - Capture
      summary: InBQ Instantiate a new Capture
      description: InBQ Instantiate a new Capture
      operationId: InitiateCapture
      parameters:
        - $ref: '#/components/parameters/rewardpointsaccountid'
        - $ref: '#/components/parameters/captureid'
      requestBody:
        $ref: '#/components/requestBodies/Capture'
      responses:
        '200':
          $ref: '#/components/responses/Capture'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/RewardPointsAccount/{rewardpointsaccountid}/Expiration/{expirationid}/Initiate':
    post:
      tags:
        - BQ - Expiration
      summary: InBQ Instantiate a new Expiration
      description: InBQ Instantiate a new Expiration
      operationId: InitiateExpiration
      parameters:
        - $ref: '#/components/parameters/rewardpointsaccountid'
        - $ref: '#/components/parameters/expirationid'
      requestBody:
        $ref: '#/components/requestBodies/Expiration'
      responses:
        '200':
          $ref: '#/components/responses/Expiration'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/RewardPointsAccount/{rewardpointsaccountid}/Capture/{captureid}/Retrieve':
    get:
      tags:
        - BQ - Capture
      summary: ReBQ Retrieve details about any aspect of Capture
      description: ReBQ Retrieve details about any aspect of Capture
      operationId: RetrieveCapture
      parameters:
        - $ref: '#/components/parameters/rewardpointsaccountid'
        - $ref: '#/components/parameters/captureid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveCaptureResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/RewardPointsAccount/{rewardpointsaccountid}/Expiration/{expirationid}/Retrieve':
    get:
      tags:
        - BQ - Expiration
      summary: ReBQ Retrieve details about any aspect of Expiration
      description: ReBQ Retrieve details about any aspect of Expiration
      operationId: RetrieveExpiration
      parameters:
        - $ref: '#/components/parameters/rewardpointsaccountid'
        - $ref: '#/components/parameters/expirationid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveExpirationResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/RewardPointsAccount/{rewardpointsaccountid}/Capture/{captureid}/Update':
    put:
      tags:
        - BQ - Capture
      summary: UpBQ Update details relating to Capture
      description: UpBQ Update details relating to Capture
      operationId: UpdateCapture
      parameters:
        - $ref: '#/components/parameters/rewardpointsaccountid'
        - $ref: '#/components/parameters/captureid'
      requestBody:
        $ref: '#/components/requestBodies/Capture'
      responses:
        '200':
          $ref: '#/components/responses/Capture'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/RewardPointsAccount/{rewardpointsaccountid}/Expiration/{expirationid}/Update':
    put:
      tags:
        - BQ - Expiration
      summary: UpBQ Update details relating to Expiration
      description: UpBQ Update details relating to Expiration
      operationId: UpdateExpiration
      parameters:
        - $ref: '#/components/parameters/rewardpointsaccountid'
        - $ref: '#/components/parameters/expirationid'
      requestBody:
        $ref: '#/components/requestBodies/Expiration'
      responses:
        '200':
          $ref: '#/components/responses/Expiration'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    RewardPointsAccountOutcome:
      type: object
      properties:
        RewardPointsAccountIncident:
          type: string
          description: ''
          format: string
        RewardPointsAccountLog:
          type: string
          description: ''
          format: string
      description: "A collection of the events/transactions recorded by the log\n\nExamples: Customer life event, Servicing event"
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: ''
    businessservicetypevalues:
      type: object
      properties:
        Businessservicetypevalues:
          type: string
          description: ''
          format: enumeration(enumeration)
      description: ''
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: ''
    businessservice:
      type: object
      properties:
        BusinessServiceName:
          $ref: '#/components/schemas/name'
        BusinessServiceType:
          $ref: '#/components/schemas/businessservicetypevalues'
        BusinessServiceDescription:
          $ref: '#/components/schemas/text'
      description: The Reward Points Log specific  Business Service
    Capture:
      type: object
      properties:
        CapturePreconditions:
          type: string
          description: The required status/situation before the event is captured
          format: string
        CaptureEventSchedule:
          type: string
          description: The timing and key actions/milestones involved in capturing the event
          format: string
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        CapturePostconditions:
          type: string
          description: The completion status once the event has been captured
          format: string
        CaptureServiceType:
          type: string
          description: Reference to the specific business service type
          format: string
        CaptureServiceDescription:
          type: string
          description: Description of the performed business service
          format: string
        CaptureServiceInputsandOuputs:
          type: string
          description: Mandatory and optional inputs and output information for the business service
          format: string
        CaptureServiceWorkProduct:
          type: string
          description: 'Documentation, meeting schedules, notes, reasearch. calculations and any other work products produced by the business service'
          format: string
        CaptureServiceName:
          type: string
          description: ''
          format: string
      description: "A collection of the events/transactions recorded by the log\n\nExamples: Customer life event, Servicing event"
    Expiration:
      type: object
      properties:
        ExpirationPreconditions:
          type: string
          description: The required status/situation before the event is captured
          format: string
        ExpirationEventSchedule:
          type: string
          description: The timing and key actions/milestones involved in capturing the event
          format: string
        LogEventExpiration:
          $ref: '#/components/schemas/businessservice'
        ExpirationPostconditions:
          type: string
          description: The completion status once the event has been captured
          format: string
        ExpirationLogEventExpirationServiceType:
          type: string
          description: Reference to the specific business service type
          format: string
        ExpirationLogEventExpirationServiceDescription:
          type: string
          description: Description of the performed business service
          format: string
        ExpirationLogEventExpirationServiceInputsandOuputs:
          type: string
          description: Mandatory and optional inputs and output information for the business service
          format: string
        ExpirationLogEventExpirationServiceWorkProduct:
          type: string
          description: 'Documentation, meeting schedules, notes, reasearch. calculations and any other work products produced by the business service'
          format: string
        ExpirationLogEventExpirationServiceName:
          type: string
          description: ''
          format: string
      description: "A collection of the events/transactions recorded by the log\n\nExamples: Customer life event, Servicing event"
    object:
      type: object
      properties:
        Object:
          type: string
          description: ''
          format: datatype
      description: Reference to the party who is involved in Reward Points Log
    RewardPointsLog:
      type: object
      properties:
        RewardPointsLogParameterType:
          type: string
          description: A Classification value that distinguishes between business service events logged within Reward Points Log
          format: string
        RewardPointsLogSelectedOption:
          type: string
          description: A selected optional business service as subject matter of Reward Points Log
          format: string
        RewardPointsLogType:
          type: string
          description: The type of Reward Points Log
          format: string
        RewardPointsLogSchedule:
          type: string
          description: Timetable to track RewardPoints
          format: string
        RewardPointsLogUsageLog:
          type: string
          description: Reference to the log of (usage) ativities/events  of Reward Points Log
          format: string
        RewardPointsLogUpdateLog:
          type: string
          description: Reference to the log of (update) ativities/events of Reward Points Log
          format: string
        RewardPointsLogReference:
          $ref: '#/components/schemas/object'
        RewardPointsLogBusinessUnitReference:
          $ref: '#/components/schemas/object'
        RewardPointsLogCustomerReference:
          $ref: '#/components/schemas/object'
        RewardPointsLogServiceConfiguration:
          type: string
          description: The configuration of Reward Points Log
          format: string
        RewardPointsLogPosition:
          type: string
          description: The position of Reward Points Log
          format: string
        RewardPointsLogPositionType:
          type: string
          description: A classification value expressing the kind of position withing the Reward Points Log
          format: string
        RewardPointsLogPositionLimitTime:
          type: string
          description: Reference to the time limitation related to the position  of Reward Points Log
          format: string
      description: "Maintain a log of transactions or activity, typically a financial account/journal or a log of activity to support behavioral analysis  within Reward Points Account. \nExamples: Maintain a financial journal of transactions processed for a product or service and maintain a log of customer events and activity for subsequent analysis."
    RetrieveRewardPointsLogResponse:
      type: object
      properties:
        RewardPointsLog:
          type: object
          properties:
            RewardPointsLogParameterType:
              type: string
              description: A Classification value that distinguishes between business service events logged within Reward Points Log
              format: string
            RewardPointsLogSelectedOption:
              type: string
              description: A selected optional business service as subject matter of Reward Points Log
              format: string
            RewardPointsLogType:
              type: string
              description: The type of Reward Points Log
              format: string
            RewardPointsLogSchedule:
              type: string
              description: Timetable to track RewardPoints
              format: string
            RewardPointsLogUsageLog:
              type: string
              description: Reference to the log of (usage) ativities/events  of Reward Points Log
              format: string
            RewardPointsLogUpdateLog:
              type: string
              description: Reference to the log of (update) ativities/events of Reward Points Log
              format: string
            RewardPointsLogReference:
              $ref: '#/components/schemas/object'
            RewardPointsLogBusinessUnitReference:
              $ref: '#/components/schemas/object'
            RewardPointsLogCustomerReference:
              $ref: '#/components/schemas/object'
            RewardPointsLogServiceConfiguration:
              type: string
              description: The configuration of Reward Points Log
              format: string
            RewardPointsLogPosition:
              type: string
              description: The position of Reward Points Log
              format: string
            RewardPointsLogPositionType:
              type: string
              description: A classification value expressing the kind of position withing the Reward Points Log
              format: string
            RewardPointsLogPositionLimitTime:
              type: string
              description: Reference to the time limitation related to the position  of Reward Points Log
              format: string
      description: 'Output: ReCR Retrieve details about any aspect of Reward Points Log'
    RetrieveCaptureResponse:
      type: object
      properties:
        Capture:
          type: object
          properties:
            CapturePreconditions:
              type: string
              description: The required status/situation before the event is captured
              format: string
            CaptureEventSchedule:
              type: string
              description: The timing and key actions/milestones involved in capturing the event
              format: string
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            CapturePostconditions:
              type: string
              description: The completion status once the event has been captured
              format: string
            CaptureServiceType:
              type: string
              description: Reference to the specific business service type
              format: string
            CaptureServiceDescription:
              type: string
              description: Description of the performed business service
              format: string
            CaptureServiceInputsandOuputs:
              type: string
              description: Mandatory and optional inputs and output information for the business service
              format: string
            CaptureServiceWorkProduct:
              type: string
              description: 'Documentation, meeting schedules, notes, reasearch. calculations and any other work products produced by the business service'
              format: string
            CaptureServiceName:
              type: string
              description: "\n"
              format: string
      description: 'Output: ReBQ Retrieve details about any aspect of Capture'
    RetrieveExpirationResponse:
      type: object
      properties:
        Expiration:
          type: object
          properties:
            ExpirationPreconditions:
              type: string
              description: The required status/situation before the event is captured
              format: string
            ExpirationEventSchedule:
              type: string
              description: The timing and key actions/milestones involved in capturing the event
              format: string
            LogEventExpiration:
              $ref: '#/components/schemas/businessservice'
            ExpirationPostconditions:
              type: string
              description: The completion status once the event has been captured
              format: string
            ExpirationLogEventExpirationServiceType:
              type: string
              description: Reference to the specific business service type
              format: string
            ExpirationLogEventExpirationServiceDescription:
              type: string
              description: Description of the performed business service
              format: string
            ExpirationLogEventExpirationServiceInputsandOuputs:
              type: string
              description: Mandatory and optional inputs and output information for the business service
              format: string
            ExpirationLogEventExpirationServiceWorkProduct:
              type: string
              description: 'Documentation, meeting schedules, notes, reasearch. calculations and any other work products produced by the business service'
              format: string
            ExpirationLogEventExpirationServiceName:
              type: string
              description: "\n"
              format: string
      description: 'Output: ReBQ Retrieve details about any aspect of Expiration'
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    RewardPointsLog:
      description: RewardPointsLog
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RewardPointsLog'
    RetrieveRewardPointsLogResponse:
      description: RetrieveRewardPointsLogResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveRewardPointsLogResponse'
    Capture:
      description: Capture
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Capture'
    Expiration:
      description: Expiration
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Expiration'
    RetrieveCaptureResponse:
      description: RetrieveCaptureResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveCaptureResponse'
    RetrieveExpirationResponse:
      description: RetrieveExpirationResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveExpirationResponse'
  parameters:
    rewardpointsaccountid:
      name: rewardpointsaccountid
      in: path
      required: true
      style: simple
      schema:
        type: string
    captureid:
      name: captureid
      in: path
      required: true
      style: simple
      schema:
        type: string
    expirationid:
      name: expirationid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    RewardPointsLog:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RewardPointsLog'
      required: true
    Capture:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Capture'
      required: true
    Expiration:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Expiration'
      required: true