openapi: 3.0.1
info:
  title: Trade and Price Reporting
  description: This Service Domain operates an automated facility that reports executed market trades to the market place as required by the rules of market participation
  contact:
    name: BIAN
    url: https://bian.org
  version: '10.1.0'
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/TradeandPriceReporting/10.1.0
paths:
  '/TradeandPriceReporting/{tradeandpricereportingid}/Control':
    put:
      tags:
        - CR - MarketTradeReportingOperatingSession
      summary: Control Market Trade Reporting Operating Session
      description: Control Market Trade Reporting Operating Session
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/tradeandpricereportingid'
      requestBody:
        $ref: '#/components/requestBodies/MarketTradeReportingOperatingSession'
      responses:
        '200':
          $ref: '#/components/responses/MarketTradeReportingOperatingSession'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/TradeandPriceReporting/{tradeandpricereportingid}/Exchange':
    put:
      tags:
        - CR - MarketTradeReportingOperatingSession
      summary: Exchange Market Trade Reporting Operating Session
      description: Exchange Market Trade Reporting Operating Session
      operationId: Exchange
      parameters:
        - $ref: '#/components/parameters/tradeandpricereportingid'
      requestBody:
        $ref: '#/components/requestBodies/MarketTradeReportingOperatingSession'
      responses:
        '200':
          $ref: '#/components/responses/MarketTradeReportingOperatingSession'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/TradeandPriceReporting/{tradeandpricereportingid}/Execute':
    put:
      tags:
        - CR - MarketTradeReportingOperatingSession
      summary: Execute Market Trade Reporting Operating Session
      description: Execute Market Trade Reporting Operating Session
      operationId: Execute
      parameters:
        - $ref: '#/components/parameters/tradeandpricereportingid'
      requestBody:
        $ref: '#/components/requestBodies/MarketTradeReportingOperatingSession'
      responses:
        '200':
          $ref: '#/components/responses/MarketTradeReportingOperatingSession'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /TradeandPriceReporting/Initiate:
    post:
      tags:
        - CR - MarketTradeReportingOperatingSession
      summary: Initiate Market Trade Reporting Operating Session
      description: Initiate Market Trade Reporting Operating Session
      operationId: Initiate
      requestBody:
        $ref: '#/components/requestBodies/MarketTradeReportingOperatingSession'
      responses:
        '200':
          $ref: '#/components/responses/MarketTradeReportingOperatingSession'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/TradeandPriceReporting/{tradeandpricereportingid}/Notify':
    get:
      tags:
        - CR - MarketTradeReportingOperatingSession
      summary: Notify Market Trade Reporting Operating Session
      description: Notify Market Trade Reporting Operating Session
      operationId: Notify
      parameters:
        - $ref: '#/components/parameters/tradeandpricereportingid'
      responses:
        '200':
          $ref: '#/components/responses/MarketTradeReportingOperatingSession'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/TradeandPriceReporting/{tradeandpricereportingid}/Request':
    put:
      tags:
        - CR - MarketTradeReportingOperatingSession
      summary: Request Market Trade Reporting Operating Session
      description: Request Market Trade Reporting Operating Session
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/tradeandpricereportingid'
      requestBody:
        $ref: '#/components/requestBodies/MarketTradeReportingOperatingSession'
      responses:
        '200':
          $ref: '#/components/responses/MarketTradeReportingOperatingSession'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/TradeandPriceReporting/{tradeandpricereportingid}/Retrieve':
    get:
      tags:
        - CR - MarketTradeReportingOperatingSession
      summary: Retrieve Market Trade Reporting Operating Session
      description: Retrieve Market Trade Reporting Operating Session
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/tradeandpricereportingid'
      responses:
        '200':
          $ref: '#/components/responses/MarketTradeReportingOperatingSession'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/TradeandPriceReporting/{tradeandpricereportingid}/Update':
    put:
      tags:
        - CR - MarketTradeReportingOperatingSession
      summary: Update Market Trade Reporting Operating Session
      description: Update Market Trade Reporting Operating Session
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/tradeandpricereportingid'
      requestBody:
        $ref: '#/components/requestBodies/MarketTradeReportingOperatingSession'
      responses:
        '200':
          $ref: '#/components/responses/MarketTradeReportingOperatingSession'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/TradeandPriceReporting/{tradeandpricereportingid}/TransactionReportingFunction/{transactionreportingfunctionid}/Exchange':
    put:
      tags:
        - BQ - TransactionReportingFunction
      summary: Exchange Transaction Reporting Function
      description: Exchange Transaction Reporting Function
      operationId: ExchangeTransactionReportingFunction
      parameters:
        - $ref: '#/components/parameters/tradeandpricereportingid'
        - $ref: '#/components/parameters/transactionreportingfunctionid'
      requestBody:
        $ref: '#/components/requestBodies/TransactionReportingFunction'
      responses:
        '200':
          $ref: '#/components/responses/TransactionReportingFunction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/TradeandPriceReporting/{tradeandpricereportingid}/TransactionReportingFunction/{transactionreportingfunctionid}/Execute':
    put:
      tags:
        - BQ - TransactionReportingFunction
      summary: Execute Transaction Reporting Function
      description: Execute Transaction Reporting Function
      operationId: ExecuteTransactionReportingFunction
      parameters:
        - $ref: '#/components/parameters/tradeandpricereportingid'
        - $ref: '#/components/parameters/transactionreportingfunctionid'
      requestBody:
        $ref: '#/components/requestBodies/TransactionReportingFunction'
      responses:
        '200':
          $ref: '#/components/responses/TransactionReportingFunction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/TradeandPriceReporting/{tradeandpricereportingid}/TransactionReportingFunction/{transactionreportingfunctionid}/Initiate':
    post:
      tags:
        - BQ - TransactionReportingFunction
      summary: Initiate Transaction Reporting Function
      description: Initiate Transaction Reporting Function
      operationId: InitiateTransactionReportingFunction
      parameters:
        - $ref: '#/components/parameters/tradeandpricereportingid'
        - $ref: '#/components/parameters/transactionreportingfunctionid'
      requestBody:
        $ref: '#/components/requestBodies/TransactionReportingFunction'
      responses:
        '200':
          $ref: '#/components/responses/TransactionReportingFunction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/TradeandPriceReporting/{tradeandpricereportingid}/TransactionReportingFunction/{transactionreportingfunctionid}/Notify':
    get:
      tags:
        - BQ - TransactionReportingFunction
      summary: Notify Transaction Reporting Function
      description: Notify Transaction Reporting Function
      operationId: NotifyTransactionReportingFunction
      parameters:
        - $ref: '#/components/parameters/tradeandpricereportingid'
        - $ref: '#/components/parameters/transactionreportingfunctionid'
      responses:
        '200':
          $ref: '#/components/responses/TransactionReportingFunction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/TradeandPriceReporting/{tradeandpricereportingid}/TransactionReportingFunction/{transactionreportingfunctionid}/Request':
    put:
      tags:
        - BQ - TransactionReportingFunction
      summary: Request Transaction Reporting Function
      description: Request Transaction Reporting Function
      operationId: RequestTransactionReportingFunction
      parameters:
        - $ref: '#/components/parameters/tradeandpricereportingid'
        - $ref: '#/components/parameters/transactionreportingfunctionid'
      requestBody:
        $ref: '#/components/requestBodies/TransactionReportingFunction'
      responses:
        '200':
          $ref: '#/components/responses/TransactionReportingFunction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/TradeandPriceReporting/{tradeandpricereportingid}/TransactionReportingFunction/{transactionreportingfunctionid}/Retrieve':
    get:
      tags:
        - BQ - TransactionReportingFunction
      summary: Retrieve Transaction Reporting Function
      description: Retrieve Transaction Reporting Function
      operationId: RetrieveTransactionReportingFunction
      parameters:
        - $ref: '#/components/parameters/tradeandpricereportingid'
        - $ref: '#/components/parameters/transactionreportingfunctionid'
      responses:
        '200':
          $ref: '#/components/responses/TransactionReportingFunction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/TradeandPriceReporting/{tradeandpricereportingid}/TransactionReportingFunction/{transactionreportingfunctionid}/Update':
    put:
      tags:
        - BQ - TransactionReportingFunction
      summary: Update Transaction Reporting Function
      description: Update Transaction Reporting Function
      operationId: UpdateTransactionReportingFunction
      parameters:
        - $ref: '#/components/parameters/tradeandpricereportingid'
        - $ref: '#/components/parameters/transactionreportingfunctionid'
      requestBody:
        $ref: '#/components/requestBodies/TransactionReportingFunction'
      responses:
        '200':
          $ref: '#/components/responses/TransactionReportingFunction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    TransactionReportingFunction:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        MarketTradeReportingOperatingSessionReference:
          $ref: '#/components/schemas/session'
        TransactionReportingFunctionReference:
          $ref: '#/components/schemas/function'
        TransactionReportingFunctionType:
          $ref: '#/components/schemas/text'
      description: An operational service or function supported within the Transaction Reporting Function for doing Transaction Reporting Function
    TradeandPriceReportingOutcome:
      type: object
      properties:
        TradeandPriceReportingIncident:
          $ref: '#/components/schemas/event'
        TradeandPriceReportingProvision:
          $ref: '#/components/schemas/text'
      description: An operational service or function supported within the Transaction Reporting Function for doing Transaction Reporting Function
    MarketTradeReportingOperatingSession:
      type: object
      properties:
        MarketTradeReportingOperatingSessionSchedule:
          $ref: '#/components/schemas/schedule'
        MarketTradeReportingOperatingSessionStatus:
          $ref: '#/components/schemas/status'
        MarketTradeReportingOperatingSessionUsageLog:
          $ref: '#/components/schemas/log'
        MarketTradeReportingOperatingSessionAssociatedPartyReference:
          $ref: '#/components/schemas/involvedparty'
        MarketTradeReportingOperatingSessionServiceProviderReference:
          $ref: '#/components/schemas/involvedparty'
        MarketTradeReportingOperatingSessionType:
          $ref: '#/components/schemas/sessiontype'
        MarketTradeReportingOperatingSessionServiceProviderSchedule:
          $ref: '#/components/schemas/schedule'
        MarketTradeReportingOperatingSessionServiceType:
          $ref: '#/components/schemas/servicetype'
        MarketTradeReportingOperatingSessionServiceConfiguration:
          $ref: '#/components/schemas/systemconfigurationoption'
        MarketTradeReportingOperatingSessionReference:
          $ref: '#/components/schemas/session'
      description: 'Operate equipment and/or a largely automated facility within Trade and Price Reporting. '
    condition:
      type: object
      properties:
        Condition:
          type: string
          description: "Condition is a premise upon which the fulfillment of an agreement depends \n\nGeneral and special arrangements, provisions, requirements, rules, specifications, and standards that form an integral part of an agreement or contract.\n\nRead more: http://www.businessdictionary.com/definition/terms-and-conditions.html\n\n"
          format: class
    schedule:
      type: object
      properties:
        Schedule:
          type: string
          description: "Defined sequence of planned tasks/actions or a timetable of available services\n\nA schedule is a time based series of something"
          format: datatype
    businessservice:
      type: object
      properties:
        BusinessServiceName:
          $ref: '#/components/schemas/name'
        BusinessServiceType:
          $ref: '#/components/schemas/businessservicetypevalues'
        BusinessServiceDescription:
          $ref: '#/components/schemas/text'
    session:
      type: object
      properties:
        SessionDuration:
          $ref: '#/components/schemas/duration'
        SessionDateTime:
          $ref: '#/components/schemas/datetime'
        SessionStatus:
          $ref: '#/components/schemas/status'
        SessionType:
          $ref: '#/components/schemas/sessiontype'
        SessionScheduel:
          $ref: '#/components/schemas/schedule'
    function:
      type: object
      properties:
        Function:
          type: string
          description: "A kind of action.\n\nFunctions as Behaviour Qualifier: The collection of operational services/functions offered by the operational facility."
          format: class
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
    event:
      type: object
      properties:
        EventType:
          type: string
          description: ''
          format: string
        EventDateTime:
          type: string
          description: ''
          format: string
        EventDescription:
          type: string
          description: ''
          format: string
        EventSource:
          type: string
          description: ''
          format: string
        EventLocation:
          type: string
          description: ''
          format: string
        EventAction:
          type: string
          description: ''
          format: string
        EventStatus:
          type: string
          description: ''
          format: string
        EventValue:
          type: string
          description: ''
          format: string
        EventValidityPeriod:
          type: string
          description: ''
          format: string
        EventIdentification:
          type: string
          description: ''
          format: string
    status:
      type: object
      properties:
        Status:
          type: string
          description: A characteristic that describe the object by referring to a state transition in its lifecycle.
          format: datatype
    log:
      type: object
      properties:
        LogType:
          type: string
          description: ''
          format: string
        LogPeriod:
          type: string
          description: ''
          format: string
        LogDate:
          type: string
          description: Key dates associated with the log (e.g. start time).
          format: string
        LogIdentification:
          type: string
          description: ''
          format: string
    involvedparty:
      type: object
      properties:
        Involvedparty:
          type: string
          description: ''
          format: datatype
    sessiontype:
      type: object
      properties:
        Sessiontype:
          type: string
          description: "A Classification value that distinguishes between the type of operations within the session like\n- Customer Contact Session\n- Customer Dialogue Session\n- Channel Operating Session\n- Gateway Operating Session\n- Switch Operating Session"
          format: datatype
    servicetype:
      type: object
      properties:
        Servicetype:
          type: string
          description: Data type specifies the classification of service
          format: datatype
    systemconfigurationoption:
      type: object
      properties:
        SystemConfigurationOption:
          type: string
          description: "Options for configuring the system or the function/feature of system.\n"
          format: class
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    MarketTradeReportingOperatingSession:
      description: MarketTradeReportingOperatingSession
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MarketTradeReportingOperatingSession'
    TransactionReportingFunction:
      description: TransactionReportingFunction
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionReportingFunction'
  parameters:
    tradeandpricereportingid:
      name: tradeandpricereportingid
      in: path
      required: true
      style: simple
      schema:
        type: string
    transactionreportingfunctionid:
      name: transactionreportingfunctionid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    MarketTradeReportingOperatingSession:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MarketTradeReportingOperatingSession'
      required: true
    TransactionReportingFunction:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionReportingFunction'
      required: true