openapi: 3.0.1
info:
  title: Trade and Price Reporting
  description: This Service Domain operates an automated facility that reports executed market trades to the market place as required by the rules of market participation
  version: 10.1.0
servers:
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/B154/TradeandPriceReporting/10.1.0
paths:
  /TradeandPriceReporting/{tradeandpricereportingId}/Control:
    put:
      tags:
      - CR - MarketTradeReportingOperatingSession
      summary: Control Market Trade Reporting Operating Session
      description: Control Market Trade Reporting Operating Session
      operationId: Control
      parameters:
      - $ref: '#/components/parameters/TradeandPriceReportingID'
      requestBody:
        $ref: '#/components/requestBodies/MarketTradeReportingOperatingSession'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketTradeReportingOperatingSession'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /TradeandPriceReporting/{tradeandpricereportingId}/Exchange:
    put:
      tags:
      - CR - MarketTradeReportingOperatingSession
      summary: Exchange Market Trade Reporting Operating Session
      description: Exchange Market Trade Reporting Operating Session
      operationId: Exchange
      parameters:
      - $ref: '#/components/parameters/TradeandPriceReportingID'
      requestBody:
        $ref: '#/components/requestBodies/MarketTradeReportingOperatingSession'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketTradeReportingOperatingSession'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /TradeandPriceReporting/{tradeandpricereportingId}/Execute:
    put:
      tags:
      - CR - MarketTradeReportingOperatingSession
      summary: Execute Market Trade Reporting Operating Session
      description: Execute Market Trade Reporting Operating Session
      operationId: Execute
      parameters:
      - $ref: '#/components/parameters/TradeandPriceReportingID'
      requestBody:
        $ref: '#/components/requestBodies/MarketTradeReportingOperatingSession'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketTradeReportingOperatingSession'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /TradeandPriceReporting/Initiate:
    post:
      tags:
      - CR - MarketTradeReportingOperatingSession
      summary: Initiate Market Trade Reporting Operating Session
      description: Initiate Market Trade Reporting Operating Session
      operationId: Initiate
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/MarketTradeReportingOperatingSession'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketTradeReportingOperatingSession'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /TradeandPriceReporting/{tradeandpricereportingId}/Notify:
    get:
      tags:
      - CR - MarketTradeReportingOperatingSession
      summary: Notify Market Trade Reporting Operating Session
      description: Notify Market Trade Reporting Operating Session
      operationId: Notify
      parameters:
      - $ref: '#/components/parameters/TradeandPriceReportingID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketTradeReportingOperatingSession'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /TradeandPriceReporting/{tradeandpricereportingId}/Request:
    put:
      tags:
      - CR - MarketTradeReportingOperatingSession
      summary: Request Market Trade Reporting Operating Session
      description: Request Market Trade Reporting Operating Session
      operationId: Request
      parameters:
      - $ref: '#/components/parameters/TradeandPriceReportingID'
      requestBody:
        $ref: '#/components/requestBodies/MarketTradeReportingOperatingSession'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketTradeReportingOperatingSession'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /TradeandPriceReporting/{tradeandpricereportingId}/Retrieve:
    get:
      tags:
      - CR - MarketTradeReportingOperatingSession
      summary: Retrieve Market Trade Reporting Operating Session
      description: Retrieve Market Trade Reporting Operating Session
      operationId: Retrieve
      parameters:
      - $ref: '#/components/parameters/TradeandPriceReportingID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketTradeReportingOperatingSession'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /TradeandPriceReporting/{tradeandpricereportingId}/Update:
    put:
      tags:
      - CR - MarketTradeReportingOperatingSession
      summary: Update Market Trade Reporting Operating Session
      description: Update Market Trade Reporting Operating Session
      operationId: Update
      parameters:
      - $ref: '#/components/parameters/TradeandPriceReportingID'
      requestBody:
        $ref: '#/components/requestBodies/MarketTradeReportingOperatingSession'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketTradeReportingOperatingSession'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /TradeandPriceReporting/{tradeandpricereportingId}/TransactionReportingFunction/{transactionreportingfunctionId}/Exchange:
    put:
      tags:
      - BQ - TransactionReportingFunction
      summary: Exchange Transaction Reporting Function
      description: Exchange Transaction Reporting Function
      operationId: ExchangeTransactionReportingFunction
      parameters:
      - $ref: '#/components/parameters/TradeandPriceReportingID'
      - $ref: '#/components/parameters/TransactionReportingFunctionID'
      requestBody:
        $ref: '#/components/requestBodies/TransactionReportingFunction'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionReportingFunction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /TradeandPriceReporting/{tradeandpricereportingId}/TransactionReportingFunction/{transactionreportingfunctionId}/Execute:
    put:
      tags:
      - BQ - TransactionReportingFunction
      summary: Execute Transaction Reporting Function
      description: Execute Transaction Reporting Function
      operationId: ExecuteTransactionReportingFunction
      parameters:
      - $ref: '#/components/parameters/TradeandPriceReportingID'
      - $ref: '#/components/parameters/TransactionReportingFunctionID'
      requestBody:
        $ref: '#/components/requestBodies/TransactionReportingFunction'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionReportingFunction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /TradeandPriceReporting/{tradeandpricereportingId}/TransactionReportingFunction/Initiate:
    post:
      tags:
      - BQ - TransactionReportingFunction
      summary: Initiate Transaction Reporting Function
      description: Initiate Transaction Reporting Function
      operationId: InitiateTransactionReportingFunction
      parameters:
      - $ref: '#/components/parameters/TradeandPriceReportingID'
      requestBody:
        $ref: '#/components/requestBodies/TransactionReportingFunction'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionReportingFunction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /TradeandPriceReporting/{tradeandpricereportingId}/TransactionReportingFunction/{transactionreportingfunctionId}/Notify:
    get:
      tags:
      - BQ - TransactionReportingFunction
      summary: Notify Transaction Reporting Function
      description: Notify Transaction Reporting Function
      operationId: NotifyTransactionReportingFunction
      parameters:
      - $ref: '#/components/parameters/TradeandPriceReportingID'
      - $ref: '#/components/parameters/TransactionReportingFunctionID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionReportingFunction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /TradeandPriceReporting/{tradeandpricereportingId}/TransactionReportingFunction/{transactionreportingfunctionId}/Request:
    put:
      tags:
      - BQ - TransactionReportingFunction
      summary: Request Transaction Reporting Function
      description: Request Transaction Reporting Function
      operationId: RequestTransactionReportingFunction
      parameters:
      - $ref: '#/components/parameters/TradeandPriceReportingID'
      - $ref: '#/components/parameters/TransactionReportingFunctionID'
      requestBody:
        $ref: '#/components/requestBodies/TransactionReportingFunction'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionReportingFunction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /TradeandPriceReporting/{tradeandpricereportingId}/TransactionReportingFunction/{transactionreportingfunctionId}/Retrieve:
    get:
      tags:
      - BQ - TransactionReportingFunction
      summary: Retrieve Transaction Reporting Function
      description: Retrieve Transaction Reporting Function
      operationId: RetrieveTransactionReportingFunction
      parameters:
      - $ref: '#/components/parameters/TradeandPriceReportingID'
      - $ref: '#/components/parameters/TransactionReportingFunctionID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionReportingFunction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /TradeandPriceReporting/{tradeandpricereportingId}/TransactionReportingFunction/{transactionreportingfunctionId}/Update:
    put:
      tags:
      - BQ - TransactionReportingFunction
      summary: Update Transaction Reporting Function
      description: Update Transaction Reporting Function
      operationId: UpdateTransactionReportingFunction
      parameters:
      - $ref: '#/components/parameters/TradeandPriceReportingID'
      - $ref: '#/components/parameters/TransactionReportingFunctionID'
      requestBody:
        $ref: '#/components/requestBodies/TransactionReportingFunction'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionReportingFunction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    MarketTradeReportingOperatingSession:
      type: object
      properties:
        MarketTradeReportingOperatingSessionSchedule:
          type: object
          description: Timetable to operate Market Trade Reporting Operating Session
        MarketTradeReportingOperatingSessionStatus:
          type: string
          description: The status of Market Trade Reporting Operating Session
        MarketTradeReportingOperatingSessionUsageLog:
          type: string
          description: Reference to the log of (usage) ativities/events  of Market Trade Reporting Operating Session
        MarketTradeReportingOperatingSessionAssociatedPartyReference:
          type: object
          description: Reference to the party who is involved in Market Trade Reporting Operating Session
        MarketTradeReportingOperatingSessionServiceProviderReference:
          type: object
          description: Reference to the party who provides the services of Market Trade Reporting Operating Session
        MarketTradeReportingOperatingSessionType:
          type: string
          description: A Classification value that distinguishes between the type of operations within Market Trade Reporting Operating Session
        MarketTradeReportingOperatingSessionServiceProviderSchedule:
          type: object
          description: The schedule according to which the service provider will operate the Market Trade Reporting Operating Session
        MarketTradeReportingOperatingSessionServiceType:
          type: string
          description: A Classification value that distinguishes between the type of services within Market Trade Reporting Operating Session
        MarketTradeReportingOperatingSessionServiceConfiguration:
          type: string
          description: The configuration of Market Trade Reporting Operating Session
        MarketTradeReportingOperatingSessionReference:
          type: string
          description: An unique reference to an item or an occurrence of Market Trade Reporting Operating Session
    TransactionReportingFunction:
      type: object
      properties:
        Preconditions:
          type: object
          description: The required status/situation and or tasks that need to be completed prior to the invocation of the feature
        Schedule:
          type: object
          description: The schedule and timing of the function
        BusinessService:
          type: object
          description: The Transaction Reporting Function specific Business Service
        MarketTradeReportingOperatingSessionReference:
          type: string
          description: Reference to Transaction Reporting Function
        TransactionReportingFunctionReference:
          type: string
          description: Reference to Transaction Reporting Function
        TransactionReportingFunctionType:
          type: string
          description: The type of Transaction Reporting Function
    TradeandPriceReportingOutcome:
      type: object
      properties:
        TradeandPriceReportingIncident:
          type: string
          description: ''
        TradeandPriceReportingProvision:
          type: string
          description: ''
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          description: NA
        status:
          type: string
          description: NA
        message:
          type: string
          description: NA
  parameters:
    TradeandPriceReportingID:
      name: tradeandpricereportingId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    TransactionReportingFunctionID:
      name: transactionreportingfunctionId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    TradeandPriceReportingOutcomeID:
      name: tradeandpricereportingoutcomeId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
  requestBodies:
    MarketTradeReportingOperatingSession:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MarketTradeReportingOperatingSession'
    TransactionReportingFunction:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionReportingFunction'
  responses:
    HTTPError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    BadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequestsError:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
...
