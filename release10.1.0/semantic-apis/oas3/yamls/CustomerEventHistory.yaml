openapi: 3.0.1
info:
  title: Customer Event History
  description: 'This service domain captures, classifies and stores relationship, servicing and product fulfillment related customer events. In addition to servicing and product transaction details, the log can capture life/relationship events that are revealed during customer exchanges'
  contact:
    name: BIAN
    url: https://bian.org
  version: '10.1.0'
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/CustomerEventHistory/10.1.0
paths:
  /CustomerEventHistory/Initiate:
    post:
      tags:
        - CR - CustomerEventLog
      summary: InCR Initiate customer event history tracking for a customer
      description: InCR Initiate customer event history tracking for a customer
      operationId: Initiate
      requestBody:
        $ref: '#/components/requestBodies/CustomerEventLog'
      responses:
        '200':
          $ref: '#/components/responses/CustomerEventLog'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerEventHistory/{customereventhistoryid}/Update':
    put:
      tags:
        - CR - CustomerEventLog
      summary: UpCR Update details about the log
      description: UpCR Update details about the log
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/customereventhistoryid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerEventLog'
      responses:
        '200':
          $ref: '#/components/responses/CustomerEventLog'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerEventHistory/{customereventhistoryid}/Retrieve':
    get:
      tags:
        - CR - CustomerEventLog
      summary: ReCR Retrieve details about the customer event log
      description: ReCR Retrieve details about the customer event log
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/customereventhistoryid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveCustomerEventLogResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerEventHistory/{customereventhistoryid}/Relationship/{relationshipid}/Update':
    put:
      tags:
        - BQ - Relationship
      summary: UpBQ Update captured relationship management event details
      description: UpBQ Update captured relationship management event details
      operationId: UpdateRelationship
      parameters:
        - $ref: '#/components/parameters/customereventhistoryid'
        - $ref: '#/components/parameters/relationshipid'
      requestBody:
        $ref: '#/components/requestBodies/Relationship'
      responses:
        '200':
          $ref: '#/components/responses/Relationship'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerEventHistory/{customereventhistoryid}/Relationship/{relationshipid}/Capture':
    put:
      tags:
        - BQ - Relationship
      summary: CaBQ Capture relationship management event details
      description: CaBQ Capture relationship management event details
      operationId: CaptureRelationship
      parameters:
        - $ref: '#/components/parameters/customereventhistoryid'
        - $ref: '#/components/parameters/relationshipid'
      requestBody:
        $ref: '#/components/requestBodies/Relationship'
      responses:
        '200':
          $ref: '#/components/responses/Relationship'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerEventHistory/{customereventhistoryid}/Relationship/{relationshipid}/Retrieve':
    get:
      tags:
        - BQ - Relationship
      summary: ReBQ Retrieve relationship management event details
      description: ReBQ Retrieve relationship management event details
      operationId: RetrieveRelationship
      parameters:
        - $ref: '#/components/parameters/customereventhistoryid'
        - $ref: '#/components/parameters/relationshipid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveRelationshipResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerEventHistory/{customereventhistoryid}/Sales/{salesid}/Update':
    put:
      tags:
        - BQ - Sales
      summary: UpBQ Update captured sales event details
      description: UpBQ Update captured sales event details
      operationId: UpdateSales
      parameters:
        - $ref: '#/components/parameters/customereventhistoryid'
        - $ref: '#/components/parameters/salesid'
      requestBody:
        $ref: '#/components/requestBodies/Sales'
      responses:
        '200':
          $ref: '#/components/responses/Sales'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerEventHistory/{customereventhistoryid}/Sales/{salesid}/Capture':
    put:
      tags:
        - BQ - Sales
      summary: CaBQ Capture sales event details
      description: CaBQ Capture sales event details
      operationId: CaptureSales
      parameters:
        - $ref: '#/components/parameters/customereventhistoryid'
        - $ref: '#/components/parameters/salesid'
      requestBody:
        $ref: '#/components/requestBodies/Sales'
      responses:
        '200':
          $ref: '#/components/responses/Sales'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerEventHistory/{customereventhistoryid}/Sales/{salesid}/Retrieve':
    get:
      tags:
        - BQ - Sales
      summary: ReBQ Retrieve sales event details
      description: ReBQ Retrieve sales event details
      operationId: RetrieveSales
      parameters:
        - $ref: '#/components/parameters/customereventhistoryid'
        - $ref: '#/components/parameters/salesid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveSalesResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerEventHistory/{customereventhistoryid}/Servicing/{servicingid}/Update':
    put:
      tags:
        - BQ - Servicing
      summary: UpBQ Update captured servicing event details
      description: UpBQ Update captured servicing event details
      operationId: UpdateServicing
      parameters:
        - $ref: '#/components/parameters/customereventhistoryid'
        - $ref: '#/components/parameters/servicingid'
      requestBody:
        $ref: '#/components/requestBodies/Servicing'
      responses:
        '200':
          $ref: '#/components/responses/Servicing'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerEventHistory/{customereventhistoryid}/Servicing/{servicingid}/Capture':
    put:
      tags:
        - BQ - Servicing
      summary: CaBQ Capture servicing event details
      description: CaBQ Capture servicing event details
      operationId: CaptureServicing
      parameters:
        - $ref: '#/components/parameters/customereventhistoryid'
        - $ref: '#/components/parameters/servicingid'
      requestBody:
        $ref: '#/components/requestBodies/Servicing'
      responses:
        '200':
          $ref: '#/components/responses/Servicing'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerEventHistory/{customereventhistoryid}/Servicing/{servicingid}/Retrieve':
    get:
      tags:
        - BQ - Servicing
      summary: ReBQ Retrieve servicing event details
      description: ReBQ Retrieve servicing event details
      operationId: RetrieveServicing
      parameters:
        - $ref: '#/components/parameters/customereventhistoryid'
        - $ref: '#/components/parameters/servicingid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveServicingResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerEventHistory/{customereventhistoryid}/ProductProcessing/{productprocessingid}/Update':
    put:
      tags:
        - BQ - ProductProcessing
      summary: UpBQ Update captured product processing event details
      description: UpBQ Update captured product processing event details
      operationId: UpdateProductProcessing
      parameters:
        - $ref: '#/components/parameters/customereventhistoryid'
        - $ref: '#/components/parameters/productprocessingid'
      requestBody:
        $ref: '#/components/requestBodies/ProductProcessing'
      responses:
        '200':
          $ref: '#/components/responses/ProductProcessing'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerEventHistory/{customereventhistoryid}/ProductProcessing/{productprocessingid}/Capture':
    put:
      tags:
        - BQ - ProductProcessing
      summary: CaBQ Capture product processing event details
      description: CaBQ Capture product processing event details
      operationId: CaptureProductProcessing
      parameters:
        - $ref: '#/components/parameters/customereventhistoryid'
        - $ref: '#/components/parameters/productprocessingid'
      requestBody:
        $ref: '#/components/requestBodies/ProductProcessing'
      responses:
        '200':
          $ref: '#/components/responses/ProductProcessing'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerEventHistory/{customereventhistoryid}/ProductProcessing/{productprocessingid}/Retrieve':
    get:
      tags:
        - BQ - ProductProcessing
      summary: ReBQ Retrieve product processing event details
      description: ReBQ Retrieve product processing event details
      operationId: RetrieveProductProcessing
      parameters:
        - $ref: '#/components/parameters/customereventhistoryid'
        - $ref: '#/components/parameters/productprocessingid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveProductProcessingResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerEventHistory/{customereventhistoryid}/Fraud/{fraudid}/Update':
    put:
      tags:
        - BQ - Fraud
      summary: UpBQ Update captured fraud event details
      description: UpBQ Update captured fraud event details
      operationId: UpdateFraud
      parameters:
        - $ref: '#/components/parameters/customereventhistoryid'
        - $ref: '#/components/parameters/fraudid'
      requestBody:
        $ref: '#/components/requestBodies/Fraud'
      responses:
        '200':
          $ref: '#/components/responses/Fraud'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerEventHistory/{customereventhistoryid}/Fraud/{fraudid}/Capture':
    put:
      tags:
        - BQ - Fraud
      summary: CaBQ Capture fraud event details
      description: CaBQ Capture fraud event details
      operationId: CaptureFraud
      parameters:
        - $ref: '#/components/parameters/customereventhistoryid'
        - $ref: '#/components/parameters/fraudid'
      requestBody:
        $ref: '#/components/requestBodies/Fraud'
      responses:
        '200':
          $ref: '#/components/responses/Fraud'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerEventHistory/{customereventhistoryid}/Fraud/{fraudid}/Retrieve':
    get:
      tags:
        - BQ - Fraud
      summary: ReBQ Retrieve fraud event details
      description: ReBQ Retrieve fraud event details
      operationId: RetrieveFraud
      parameters:
        - $ref: '#/components/parameters/customereventhistoryid'
        - $ref: '#/components/parameters/fraudid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveFraudResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerEventHistory/{customereventhistoryid}/Life/{lifeid}/Update':
    put:
      tags:
        - BQ - Life
      summary: UpBQ Update captured customer life event details
      description: UpBQ Update captured customer life event details
      operationId: UpdateLife
      parameters:
        - $ref: '#/components/parameters/customereventhistoryid'
        - $ref: '#/components/parameters/lifeid'
      requestBody:
        $ref: '#/components/requestBodies/Life'
      responses:
        '200':
          $ref: '#/components/responses/Life'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerEventHistory/{customereventhistoryid}/Life/{lifeid}/Capture':
    put:
      tags:
        - BQ - Life
      summary: CaBQ Capture customer life event details
      description: CaBQ Capture customer life event details
      operationId: CaptureLife
      parameters:
        - $ref: '#/components/parameters/customereventhistoryid'
        - $ref: '#/components/parameters/lifeid'
      requestBody:
        $ref: '#/components/requestBodies/Life'
      responses:
        '200':
          $ref: '#/components/responses/Life'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerEventHistory/{customereventhistoryid}/Life/{lifeid}/Retrieve':
    get:
      tags:
        - BQ - Life
      summary: ReBQ Retrieve customer life event details
      description: ReBQ Retrieve customer life event details
      operationId: RetrieveLife
      parameters:
        - $ref: '#/components/parameters/customereventhistoryid'
        - $ref: '#/components/parameters/lifeid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveLifeResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    Relationship:
      type: object
      properties:
        CustomerRelationshipEventType:
          type: string
          description: ''
          format: string
        EmployeeUnitReference:
          type: string
          description: ''
          format: object
        CustomerRelationshipEventRecord:
          type: string
          description: ''
          format: string
        CustomerRelationshipEventAction:
          type: string
          description: ''
          format: string
        DateTimeLocation:
          type: string
          description: ''
          format: string
      description: "A collection of the events/transactions recorded by the log\n\nExamples: Customer life event, Servicing event"
    Sales:
      type: object
      properties:
        CustomerSalesEventType:
          type: string
          description: 'The type of event (e.g. campaign, unsolicited, solicited, development)'
          format: string
        EmployeeUnitReference:
          type: string
          description: Employees involved in recording the event
          format: object
        ProductandServiceType:
          type: string
          description: The type of product or service being sold
          format: string
        LeadandOpportunityReference:
          type: string
          description: Reference to the recorded lead/opportunity if sale progresses
          format: object
        CustomerSalesEventRecord:
          type: string
          description: The details of the event (in a suitable format)
          format: string
        CommissionAgreementReference:
          type: string
          description: Reference to any commission agreement if appropriate
          format: object
        DateTimeLocation:
          type: string
          description: Date and time and the location the event was captured
          format: string
      description: "A collection of the events/transactions recorded by the log\n\nExamples: Customer life event, Servicing event"
    ProductProcessing:
      type: object
      properties:
        ProductInstanceReference:
          type: string
          description: Reference to the specific product instance being processed
          format: object
        ProductActionEventType:
          type: string
          description: 'The type of event (e.g. payment initiation, statement request)'
          format: string
        ProductActionEventDescription:
          type: string
          description: Details of the processing activity if available
          format: string
        ProductActionEventResult:
          type: string
          description: Outcome of the processing action if available
          format: string
        EmployeeUnitReference:
          type: string
          description: Employees involved in recording the event
          format: object
        CustomerProductandServiceEventRecord:
          type: string
          description: The details of the event (in a suitable format)
          format: string
        DateTimeLocation:
          type: string
          description: Date and time and the location the event was captured
          format: string
      description: "A collection of the events/transactions recorded by the log\n\nExamples: Customer life event, Servicing event"
    Fraud:
      type: object
      properties:
        CustomerFraudCaseEventType:
          type: string
          description: 'The type of event  (e.g. stolen card, disputed transaction)'
          format: string
        CustomerContactRecordReference:
          type: string
          description: Reference to a contact event log
          format: object
        AccessedProductandService:
          type: string
          description: Reference to the types or instances of products/services being serviced if provided
          format: string
        EmployeeUnitReference:
          type: string
          description: Employees involved in recording the fraud case
          format: object
        FraudCaseReference:
          type: string
          description: Reference to the fraud case processing the analysis and response
          format: object
        DateTimeLocation:
          type: string
          description: Date and time and the location the event was captured
          format: string
      description: "A collection of the events/transactions recorded by the log\n\nExamples: Customer life event, Servicing event"
    Life:
      type: object
      properties:
        CustomerLifeEventType:
          type: string
          description: 'The type of event  (e.g. marriage/divorce, relocation, birth, graduation)'
          format: string
        CustomerContactRecordReference:
          type: string
          description: Reference to a contact event log
          format: object
        EmployeeUnitReference:
          type: string
          description: Employees involved in capturing the event
          format: object
        CustomerLifeEventRecord:
          type: string
          description: The details of the event (in a suitable format)
          format: string
        DateTimeLocation:
          type: string
          description: Date and time and the location the event was captured
          format: string
      description: "A collection of the events/transactions recorded by the log\n\nExamples: Customer life event, Servicing event"
    Servicing:
      type: object
      properties:
        CustomerServicingEventType:
          type: string
          description: 'The type of event (e.g. self-service, assisted)'
          format: string
        CustomerContactRecordReference:
          type: string
          description: Reference to a contact event log
          format: object
        AccessedProductandService:
          type: string
          description: Reference to the types or instances of products/services being serviced if provided
          format: string
        ChannelDeviceType:
          type: string
          description: The channel and device used in the servicing event
          format: string
        ContactPurpose:
          type: string
          description: The given purpose for the customer servicing action
          format: string
        ContactResult:
          type: string
          description: The captured result of the servicing event
          format: string
        EmployeeUnitReference:
          type: string
          description: Employees involved in recording the event
          format: object
        CustomerServicingEventRecord:
          type: string
          description: The details of the event (in a suitable format)
          format: string
        DateTimeLocation:
          type: string
          description: Date and time and the location the event was captured
          format: string
      description: "A collection of the events/transactions recorded by the log\n\nExamples: Customer life event, Servicing event"
    CustomerEventLog:
      type: object
      properties:
        CustomerReference:
          type: string
          description: Reference to the associated customer (can currently be a person or a company)
          format: object
      description: 'Maintain a log of transactions or activity, typically a financial account/journal or a log of activity to support behavioral analysis within Customer Event History. '
    RetrieveCustomerEventLogResponse:
      type: object
      properties:
        CustomerEventLog:
          type: object
          properties:
            CustomerReference:
              type: string
              description: Reference to the associated customer (can currently be a person or a company)
              format: object
      description: 'Output: ReCR Retrieve details about the customer event log'
    RetrieveRelationshipResponse:
      type: object
      properties:
        CustomerEventLog:
          type: object
          properties:
            CustomerReference:
              type: string
              description: Reference to the associated customer (can currently be a person or a company)
              format: object
        Relationship:
          type: object
          properties:
            CustomerRelationshipEventType:
              type: string
              description: "\n"
              format: string
            EmployeeUnitReference:
              type: string
              description: "\n"
              format: object
            CustomerRelationshipEventRecord:
              type: string
              description: "\n"
              format: string
            CustomerRelationshipEventAction:
              type: string
              description: "\n"
              format: string
            DateTimeLocation:
              type: string
              description: "\n"
              format: string
      description: 'Output: ReBQ Retrieve relationship management event details'
    RetrieveSalesResponse:
      type: object
      properties:
        CustomerEventLog:
          type: object
          properties:
            CustomerReference:
              type: string
              description: Reference to the associated customer (can currently be a person or a company)
              format: object
        Sales:
          type: object
          properties:
            CustomerSalesEventType:
              type: string
              description: 'The type of event (e.g. campaign, unsolicited, solicited, development)'
              format: string
            EmployeeUnitReference:
              type: string
              description: Employees involved in recording the event
              format: object
            ProductandServiceType:
              type: string
              description: The type of product or service being sold
              format: string
            LeadandOpportunityReference:
              type: string
              description: Reference to the recorded lead/opportunity if sale progresses
              format: object
            CustomerSalesEventRecord:
              type: string
              description: The details of the event (in a suitable format)
              format: string
            CommissionAgreementReference:
              type: string
              description: Reference to any commission agreement if appropriate
              format: object
            DateTimeLocation:
              type: string
              description: Date and time and the location the event was captured
              format: string
      description: 'Output: ReBQ Retrieve sales event details'
    RetrieveServicingResponse:
      type: object
      properties:
        CustomerEventLog:
          type: object
          properties:
            CustomerReference:
              type: string
              description: Reference to the associated customer (can currently be a person or a company)
              format: object
        Servicing:
          type: object
          properties:
            CustomerServicingEventType:
              type: string
              description: 'The type of event (e.g. self-service, assisted)'
              format: string
            CustomerContactRecordReference:
              type: string
              description: Reference to a contact event log
              format: object
            AccessedProductandService:
              type: string
              description: Reference to the types or instances of products/services being serviced if provided
              format: string
            ChannelDeviceType:
              type: string
              description: The channel and device used in the servicing event
              format: string
            ContactPurpose:
              type: string
              description: The given purpose for the customer servicing action
              format: string
            ContactResult:
              type: string
              description: The captured result of the servicing event
              format: string
            EmployeeUnitReference:
              type: string
              description: Employees involved in recording the event
              format: object
            CustomerServicingEventRecord:
              type: string
              description: The details of the event (in a suitable format)
              format: string
            DateTimeLocation:
              type: string
              description: Date and time and the location the event was captured
              format: string
      description: 'Output: ReBQ Retrieve servicing event details'
    RetrieveProductProcessingResponse:
      type: object
      properties:
        CustomerEventLog:
          type: object
          properties:
            CustomerReference:
              type: string
              description: Reference to the associated customer (can currently be a person or a company)
              format: object
        ProductProcessing:
          type: object
          properties:
            ProductInstanceReference:
              type: string
              description: Reference to the specific product instance being processed
              format: object
            ProductActionEventType:
              type: string
              description: 'The type of event (e.g. payment initiation, statement request)'
              format: string
            ProductActionEventDescription:
              type: string
              description: Details of the processing activity if available
              format: string
            ProductActionEventResult:
              type: string
              description: Outcome of the processing action if available
              format: string
            EmployeeUnitReference:
              type: string
              description: Employees involved in recording the event
              format: object
            CustomerProductandServiceEventRecord:
              type: string
              description: The details of the event (in a suitable format)
              format: string
            DateTimeLocation:
              type: string
              description: Date and time and the location the event was captured
              format: string
      description: 'Output: ReBQ Retrieve product processing event details'
    RetrieveFraudResponse:
      type: object
      properties:
        CustomerEventLog:
          type: object
          properties:
            CustomerReference:
              type: string
              description: Reference to the associated customer (can currently be a person or a company)
              format: object
        Fraud:
          type: object
          properties:
            CustomerFraudCaseEventType:
              type: string
              description: 'The type of event  (e.g. stolen card, disputed transaction)'
              format: string
            CustomerContactRecordReference:
              type: string
              description: Reference to a contact event log
              format: object
            AccessedProductandService:
              type: string
              description: Reference to the types or instances of products/services being serviced if provided
              format: string
            EmployeeUnitReference:
              type: string
              description: Employees involved in recording the fraud case
              format: object
            FraudCaseReference:
              type: string
              description: Reference to the fraud case processing the analysis and response
              format: object
            DateTimeLocation:
              type: string
              description: Date and time and the location the event was captured
              format: string
      description: 'Output: ReBQ Retrieve fraud event details'
    RetrieveLifeResponse:
      type: object
      properties:
        CustomerEventLog:
          type: object
          properties:
            CustomerReference:
              type: string
              description: Reference to the associated customer (can currently be a person or a company)
              format: object
        Life:
          type: object
          properties:
            CustomerLifeEventType:
              type: string
              description: 'The type of event  (e.g. marriage/divorce, relocation, birth, graduation)'
              format: string
            CustomerContactRecordReference:
              type: string
              description: Reference to a contact event log
              format: object
            EmployeeUnitReference:
              type: string
              description: Employees involved in capturing the event
              format: object
            CustomerLifeEventRecord:
              type: string
              description: The details of the event (in a suitable format)
              format: string
            DateTimeLocation:
              type: string
              description: Date and time and the location the event was captured
              format: string
      description: 'Output: ReBQ Retrieve customer life event details'
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    CustomerEventLog:
      description: CustomerEventLog
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerEventLog'
    RetrieveCustomerEventLogResponse:
      description: RetrieveCustomerEventLogResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveCustomerEventLogResponse'
    Relationship:
      description: Relationship
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Relationship'
    RetrieveRelationshipResponse:
      description: RetrieveRelationshipResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveRelationshipResponse'
    Sales:
      description: Sales
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Sales'
    RetrieveSalesResponse:
      description: RetrieveSalesResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveSalesResponse'
    Servicing:
      description: Servicing
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Servicing'
    RetrieveServicingResponse:
      description: RetrieveServicingResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveServicingResponse'
    ProductProcessing:
      description: ProductProcessing
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProductProcessing'
    RetrieveProductProcessingResponse:
      description: RetrieveProductProcessingResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveProductProcessingResponse'
    Fraud:
      description: Fraud
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Fraud'
    RetrieveFraudResponse:
      description: RetrieveFraudResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveFraudResponse'
    Life:
      description: Life
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Life'
    RetrieveLifeResponse:
      description: RetrieveLifeResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveLifeResponse'
  parameters:
    customereventhistoryid:
      name: customereventhistoryid
      in: path
      required: true
      style: simple
      schema:
        type: string
    relationshipid:
      name: relationshipid
      in: path
      required: true
      style: simple
      schema:
        type: string
    salesid:
      name: salesid
      in: path
      required: true
      style: simple
      schema:
        type: string
    servicingid:
      name: servicingid
      in: path
      required: true
      style: simple
      schema:
        type: string
    productprocessingid:
      name: productprocessingid
      in: path
      required: true
      style: simple
      schema:
        type: string
    fraudid:
      name: fraudid
      in: path
      required: true
      style: simple
      schema:
        type: string
    lifeid:
      name: lifeid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    CustomerEventLog:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerEventLog'
      required: true
    Relationship:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Relationship'
      required: true
    Sales:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Sales'
      required: true
    Servicing:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Servicing'
      required: true
    ProductProcessing:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProductProcessing'
      required: true
    Fraud:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Fraud'
      required: true
    Life:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Life'
      required: true