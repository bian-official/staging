openapi: 3.0.1
info:
  title: Customer Product And Service Eligibility
  description: This Service Domain maintains a list of products and services for which a customer is eligible.
  version: 10.1.0
servers:
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/B154/CustomerProductAndServiceEligibility/10.1.0
paths:
  /CustomerProductAndServiceEligibility/Evaluate:
    post:
      tags:
      - CR - CustomerEligibilityAssessment
      summary: EvCR Evaluate a customer's eligibility for a product/service
      description: EvCR Evaluate a customer's eligibility for a product/service
      operationId: Evaluate
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/EvaluateCustomerEligibilityAssessmentRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvaluateCustomerEligibilityAssessmentResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerProductAndServiceEligibility/{customerproductandserviceeligibilityId}/Update:
    put:
      tags:
      - CR - CustomerEligibilityAssessment
      summary: UpCR Update the product/service eligibility record (e.g. for newly sold products)
      description: UpCR Update the product/service eligibility record (e.g. for newly sold products)
      operationId: Update
      parameters:
      - $ref: '#/components/parameters/CustomerProductAndServiceEligibilityID'
      requestBody:
        $ref: '#/components/requestBodies/UpdateCustomerEligibilityAssessmentRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCustomerEligibilityAssessmentResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerProductAndServiceEligibility/{customerproductandserviceeligibilityId}/Execute:
    put:
      tags:
      - CR - CustomerEligibilityAssessment
      summary: ExCR Execute an automated action against an active evaluation (e.g. provide additional data)
      description: ExCR Execute an automated action against an active evaluation (e.g. provide additional data)
      operationId: Execute
      parameters:
      - $ref: '#/components/parameters/CustomerProductAndServiceEligibilityID'
      requestBody:
        $ref: '#/components/requestBodies/ExecuteCustomerEligibilityAssessmentRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecuteCustomerEligibilityAssessmentResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerProductAndServiceEligibility/{customerproductandserviceeligibilityId}/Request:
    put:
      tags:
      - CR - CustomerEligibilityAssessment
      summary: RqCR Request manual intervention in an evaluation (e.g. engage a specialist or negotiator)
      description: RqCR Request manual intervention in an evaluation (e.g. engage a specialist or negotiator)
      operationId: Request
      parameters:
      - $ref: '#/components/parameters/CustomerProductAndServiceEligibilityID'
      requestBody:
        $ref: '#/components/requestBodies/RequestCustomerEligibilityAssessmentRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestCustomerEligibilityAssessmentResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerProductAndServiceEligibility/{customerproductandserviceeligibilityId}/Retrieve:
    get:
      tags:
      - CR - CustomerEligibilityAssessment
      summary: ReCR Retrieve details about an eligibility request
      description: ReCR Retrieve details about an eligibility request
      operationId: Retrieve
      parameters:
      - $ref: '#/components/parameters/CustomerProductAndServiceEligibilityID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerEligibilityAssessment'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerProductAndServiceEligibility/{customerproductandserviceeligibilityId}/EligibilityCheck/{eligibilitycheckId}/Retrieve:
    get:
      tags:
      - BQ - EligibilityCheck
      summary: ReBQ Retrieve details about an eligibility assessment
      description: ReBQ Retrieve details about an eligibility assessment
      operationId: RetrieveEligibilityCheck
      parameters:
      - $ref: '#/components/parameters/CustomerProductAndServiceEligibilityID'
      - $ref: '#/components/parameters/EligibilityCheckID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerEligibilityAssessment'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerProductAndServiceEligibility/{customerproductandserviceeligibilityId}/NextBest/{nextbestId}/Update:
    put:
      tags:
      - BQ - NextBest
      summary: UpBQ Update details about a next best eligibility test
      description: UpBQ Update details about a next best eligibility test
      operationId: UpdateNextBest
      parameters:
      - $ref: '#/components/parameters/CustomerProductAndServiceEligibilityID'
      - $ref: '#/components/parameters/NextBestID'
      requestBody:
        $ref: '#/components/requestBodies/NextBest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NextBest'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerProductAndServiceEligibility/{customerproductandserviceeligibilityId}/NextBest/{nextbestId}/Retrieve:
    get:
      tags:
      - BQ - NextBest
      summary: ReBQ Retrieve details about a next best test
      description: ReBQ Retrieve details about a next best test
      operationId: RetrieveNextBest
      parameters:
      - $ref: '#/components/parameters/CustomerProductAndServiceEligibilityID'
      - $ref: '#/components/parameters/NextBestID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerEligibilityAssessment'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    CustomerEligibilityAssessment:
      type: object
      properties:
        CustomerReference:
          type: object
          description: Reference to the associated customer (can currently be a person or a company)
        CustomerProductandServiceProfile:
          type: string
          description: This is the is the eligibility profile including in-force product terms
        ProductandServiceType:
          type: string
          description: 'Defines the product/service type - note: the profile will reference all available products/services'
        CustomerProductandServiceTypeEligibility:
          type: string
          description: Defines if and under what terms a product/service is available to this customer - this detail is maintained by the service domain and referenced by this evaluation
        CustomerProductandServiceTypeUsage:
          type: string
          description: Records the sold/in-force status of a product/service with the customer. Again this detail is maintained by the service domain and referenced by this evaluation
        Date:
          type: string
          description: The date time of the assessment
    EligibilityCheck:
      type: object
      properties:
        CustomerProductandServiceEligibilityAssessmentResult:
          type: string
          description: The result of the eligibility assessment for the requested product/service - details any eligibility considerations or requirements and the applicable terms
    NextBest:
      type: object
      properties:
        RequestedProductandServiceProperties:
          type: string
          description: Product/service features used to focus the selection
        ProductServiceType:
          type: string
          description: The general type of product/service for which the best eligible product match is requested (e.g. term deposit, loan)
        CustomerProductandServiceNextBestAssessmentResult:
          type: string
          description: The result is a descending list of matched products with the associated eligibility that are available to the customer
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          description: NA
        status:
          type: string
          description: NA
        message:
          type: string
          description: NA
    EvaluateCustomerEligibilityAssessmentRequest:
      type: object
      properties:
        CustomerEligibilityAssessment:
          type: object
          properties:
            CustomerReference:
              type: object
              description: Reference to the associated customer (can currently be a person or a company)
            CustomerProductandServiceProfile:
              type: string
              description: This is the is the eligibility profile including in-force product terms
            ProductandServiceType:
              type: string
              description: 'Defines the product/service type - note: the profile will reference all available products/services'
            Date:
              type: string
              description: The date time of the assessment
    EvaluateCustomerEligibilityAssessmentResponse:
      type: object
      properties:
        CustomerEligibilityAssessment:
          type: object
          properties:
            CustomerProductandServiceTypeEligibility:
              type: string
              description: Defines if and under what terms a product/service is available to this customer - this detail is maintained by the service domain and referenced by this evaluation
            CustomerProductandServiceTypeUsage:
              type: string
              description: Records the sold/in-force status of a product/service with the customer. Again this detail is maintained by the service domain and referenced by this evaluation
            Date:
              type: string
              description: The date time of the assessment
    UpdateCustomerEligibilityAssessmentRequest:
      type: object
      properties:
        CustomerEligibilityAssessment:
          type: object
          properties:
            CustomerReference:
              type: object
              description: Reference to the associated customer (can currently be a person or a company)
            CustomerProductandServiceProfile:
              type: string
              description: This is the is the eligibility profile including in-force product terms
            ProductandServiceType:
              type: string
              description: 'Defines the product/service type - note: the profile will reference all available products/services'
            Date:
              type: string
              description: The date time of the assessment
    UpdateCustomerEligibilityAssessmentResponse:
      type: object
      properties:
        CustomerEligibilityAssessment:
          type: object
          properties:
            CustomerReference:
              type: object
              description: Reference to the associated customer (can currently be a person or a company)
            CustomerProductandServiceProfile:
              type: string
              description: This is the is the eligibility profile including in-force product terms
            ProductandServiceType:
              type: string
              description: 'Defines the product/service type - note: the profile will reference all available products/services'
            Date:
              type: string
              description: The date time of the assessment
    ExecuteCustomerEligibilityAssessmentRequest:
      type: object
      properties:
        CustomerEligibilityAssessment:
          type: object
          properties:
            CustomerReference:
              type: object
              description: Reference to the associated customer (can currently be a person or a company)
            CustomerProductandServiceProfile:
              type: string
              description: This is the is the eligibility profile including in-force product terms
            ProductandServiceType:
              type: string
              description: 'Defines the product/service type - note: the profile will reference all available products/services'
            Date:
              type: string
              description: The date time of the assessment
    ExecuteCustomerEligibilityAssessmentResponse:
      type: object
      properties:
        CustomerEligibilityAssessment:
          type: object
          properties:
            CustomerProductandServiceTypeEligibility:
              type: string
              description: Defines if and under what terms a product/service is available to this customer - this detail is maintained by the service domain and referenced by this evaluation
            CustomerProductandServiceTypeUsage:
              type: string
              description: Records the sold/in-force status of a product/service with the customer. Again this detail is maintained by the service domain and referenced by this evaluation
            Date:
              type: string
              description: The date time of the assessment
    RequestCustomerEligibilityAssessmentRequest:
      type: object
      properties:
        CustomerEligibilityAssessment:
          type: object
          properties:
            CustomerReference:
              type: object
              description: Reference to the associated customer (can currently be a person or a company)
            CustomerProductandServiceProfile:
              type: string
              description: This is the is the eligibility profile including in-force product terms
            ProductandServiceType:
              type: string
              description: 'Defines the product/service type - note: the profile will reference all available products/services'
            Date:
              type: string
              description: The date time of the assessment
    RequestCustomerEligibilityAssessmentResponse:
      type: object
      properties:
        CustomerEligibilityAssessment:
          type: object
          properties:
            CustomerProductandServiceTypeEligibility:
              type: string
              description: Defines if and under what terms a product/service is available to this customer - this detail is maintained by the service domain and referenced by this evaluation
            CustomerProductandServiceTypeUsage:
              type: string
              description: Records the sold/in-force status of a product/service with the customer. Again this detail is maintained by the service domain and referenced by this evaluation
            Date:
              type: string
              description: The date time of the assessment
  parameters:
    CustomerProductAndServiceEligibilityID:
      name: customerproductandserviceeligibilityId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    EligibilityCheckID:
      name: eligibilitycheckId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    NextBestID:
      name: nextbestId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
  requestBodies:
    EvaluateCustomerEligibilityAssessmentRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EvaluateCustomerEligibilityAssessmentRequest'
    UpdateCustomerEligibilityAssessmentRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateCustomerEligibilityAssessmentRequest'
    ExecuteCustomerEligibilityAssessmentRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExecuteCustomerEligibilityAssessmentRequest'
    RequestCustomerEligibilityAssessmentRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestCustomerEligibilityAssessmentRequest'
    NextBest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NextBest'
  responses:
    HTTPError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    BadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequestsError:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
...
