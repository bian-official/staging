openapi: 3.0.1
info:
  title: Customer Product And Service Eligibility
  description: This Service Domain maintains a list of products and services for which a customer is eligible.
  contact:
    name: BIAN
    url: https://bian.org
  version: '10.1.0'
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/CustomerProductAndServiceEligibility/10.1.0
paths:
  /CustomerProductAndServiceEligibility/Evaluate:
    post:
      tags:
        - CR - CustomerEligibilityAssessment
      summary: EvCR Evaluate a customer's eligibility for a product/service
      description: EvCR Evaluate a customer's eligibility for a product/service
      operationId: Evaluate
      requestBody:
        $ref: '#/components/requestBodies/EvaluateCustomerEligibilityAssessmentRequest'
      responses:
        '200':
          $ref: '#/components/responses/EvaluateCustomerEligibilityAssessmentResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerProductAndServiceEligibility/{customerproductandserviceeligibilityid}/Update':
    put:
      tags:
        - CR - CustomerEligibilityAssessment
      summary: UpCR Update the product/service eligibility record (e.g. for newly sold products)
      description: UpCR Update the product/service eligibility record (e.g. for newly sold products)
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/customerproductandserviceeligibilityid'
      requestBody:
        $ref: '#/components/requestBodies/UpdateCustomerEligibilityAssessmentRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateCustomerEligibilityAssessmentResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerProductAndServiceEligibility/{customerproductandserviceeligibilityid}/Execute':
    put:
      tags:
        - CR - CustomerEligibilityAssessment
      summary: ExCR Execute an automated action against an active evaluation (e.g. provide additional data)
      description: ExCR Execute an automated action against an active evaluation (e.g. provide additional data)
      operationId: Execute
      parameters:
        - $ref: '#/components/parameters/customerproductandserviceeligibilityid'
      requestBody:
        $ref: '#/components/requestBodies/ExecuteCustomerEligibilityAssessmentRequest'
      responses:
        '200':
          $ref: '#/components/responses/ExecuteCustomerEligibilityAssessmentResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerProductAndServiceEligibility/{customerproductandserviceeligibilityid}/Request':
    put:
      tags:
        - CR - CustomerEligibilityAssessment
      summary: RqCR Request manual intervention in an evaluation (e.g. engage a specialist or negotiator)
      description: RqCR Request manual intervention in an evaluation (e.g. engage a specialist or negotiator)
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/customerproductandserviceeligibilityid'
      requestBody:
        $ref: '#/components/requestBodies/RequestCustomerEligibilityAssessmentRequest'
      responses:
        '200':
          $ref: '#/components/responses/RequestCustomerEligibilityAssessmentResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerProductAndServiceEligibility/{customerproductandserviceeligibilityid}/Retrieve':
    get:
      tags:
        - CR - CustomerEligibilityAssessment
      summary: ReCR Retrieve details about an eligibility request
      description: ReCR Retrieve details about an eligibility request
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/customerproductandserviceeligibilityid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveCustomerEligibilityAssessmentResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerProductAndServiceEligibility/{customerproductandserviceeligibilityid}/EligibilityCheck/{eligibilitycheckid}/Retrieve':
    get:
      tags:
        - BQ - EligibilityCheck
      summary: ReBQ Retrieve details about an eligibility assessment
      description: ReBQ Retrieve details about an eligibility assessment
      operationId: RetrieveEligibilityCheck
      parameters:
        - $ref: '#/components/parameters/customerproductandserviceeligibilityid'
        - $ref: '#/components/parameters/eligibilitycheckid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveEligibilityCheckResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerProductAndServiceEligibility/{customerproductandserviceeligibilityid}/NextBest/{nextbestid}/Update':
    put:
      tags:
        - BQ - NextBest
      summary: UpBQ Update details about a next best eligibility test
      description: UpBQ Update details about a next best eligibility test
      operationId: UpdateNextBest
      parameters:
        - $ref: '#/components/parameters/customerproductandserviceeligibilityid'
        - $ref: '#/components/parameters/nextbestid'
      requestBody:
        $ref: '#/components/requestBodies/NextBest'
      responses:
        '200':
          $ref: '#/components/responses/NextBest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerProductAndServiceEligibility/{customerproductandserviceeligibilityid}/NextBest/{nextbestid}/Retrieve':
    get:
      tags:
        - BQ - NextBest
      summary: ReBQ Retrieve details about a next best test
      description: ReBQ Retrieve details about a next best test
      operationId: RetrieveNextBest
      parameters:
        - $ref: '#/components/parameters/customerproductandserviceeligibilityid'
        - $ref: '#/components/parameters/nextbestid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveNextBestResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    EligibilityCheck:
      type: object
      properties:
        CustomerProductandServiceEligibilityAssessmentResult:
          type: string
          description: The result of the eligibility assessment for the requested product/service - details any eligibility considerations or requirements and the applicable terms
          format: string
      description: ''
    NextBest:
      type: object
      properties:
        RequestedProductandServiceProperties:
          type: string
          description: Product/service features used to focus the selection
          format: string
        ProductServiceType:
          type: string
          description: 'The general type of product/service for which the best eligible product match is requested (e.g. term deposit, loan)'
          format: string
        CustomerProductandServiceNextBestAssessmentResult:
          type: string
          description: The result is a descending list of matched products with the associated eligibility that are available to the customer
          format: string
      description: ''
    object:
      type: object
      properties:
        Object:
          type: string
          description: ''
          format: datatype
      description: Reference to the associated customer (can currently be a person or a company)
    CustomerEligibilityAssessment:
      type: object
      properties:
        CustomerReference:
          $ref: '#/components/schemas/object'
        CustomerProductandServiceProfile:
          type: string
          description: This is the is the eligibility profile including in-force product terms
          format: string
        ProductandServiceType:
          type: string
          description: 'Defines the product/service type - note: the profile will reference all available products/services'
          format: string
        CustomerProductandServiceTypeEligibility:
          type: string
          description: Defines if and under what terms a product/service is available to this customer - this detail is maintained by the service domain and referenced by this evaluation
          format: string
        CustomerProductandServiceTypeUsage:
          type: string
          description: Records the sold/in-force status of a product/service with the customer. Again this detail is maintained by the service domain and referenced by this evaluation
          format: string
        Date:
          type: string
          description: The date time of the assessment
          format: string
      description: ''
    EvaluateCustomerEligibilityAssessmentRequest:
      type: object
      properties:
        CustomerEligibilityAssessment:
          type: object
          properties:
            CustomerReference:
              $ref: '#/components/schemas/object'
            CustomerProductandServiceProfile:
              type: string
              description: This is the is the eligibility profile including in-force product terms
              format: string
            ProductandServiceType:
              type: string
              description: 'Defines the product/service type - note: the profile will reference all available products/services'
              format: string
            Date:
              type: string
              description: The date time of the assessment
              format: string
      description: 'Input: EvCR Evaluate a customer''s eligibility for a product/service'
    EvaluateCustomerEligibilityAssessmentResponse:
      type: object
      properties:
        CustomerEligibilityAssessment:
          type: object
          properties:
            CustomerProductandServiceTypeEligibility:
              type: string
              description: Defines if and under what terms a product/service is available to this customer - this detail is maintained by the service domain and referenced by this evaluation
              format: string
            CustomerProductandServiceTypeUsage:
              type: string
              description: Records the sold/in-force status of a product/service with the customer. Again this detail is maintained by the service domain and referenced by this evaluation
              format: string
            Date:
              type: string
              description: The date time of the assessment
              format: string
      description: 'Output: EvCR Evaluate a customer''s eligibility for a product/service'
    UpdateCustomerEligibilityAssessmentRequest:
      type: object
      properties:
        CustomerEligibilityAssessment:
          type: object
          properties:
            CustomerReference:
              $ref: '#/components/schemas/object'
            CustomerProductandServiceProfile:
              type: string
              description: This is the is the eligibility profile including in-force product terms
              format: string
            ProductandServiceType:
              type: string
              description: 'Defines the product/service type - note: the profile will reference all available products/services'
              format: string
            Date:
              type: string
              description: The date time of the assessment
              format: string
      description: 'Input: UpCR Update the product/service eligibility record (e.g. for newly sold products)'
    UpdateCustomerEligibilityAssessmentResponse:
      type: object
      properties:
        CustomerEligibilityAssessment:
          type: object
          properties:
            CustomerReference:
              $ref: '#/components/schemas/object'
            CustomerProductandServiceProfile:
              type: string
              description: This is the is the eligibility profile including in-force product terms
              format: string
            ProductandServiceType:
              type: string
              description: 'Defines the product/service type - note: the profile will reference all available products/services'
              format: string
            Date:
              type: string
              description: The date time of the assessment
              format: string
      description: 'Output: UpCR Update the product/service eligibility record (e.g. for newly sold products)'
    ExecuteCustomerEligibilityAssessmentRequest:
      type: object
      properties:
        CustomerEligibilityAssessment:
          type: object
          properties:
            CustomerReference:
              $ref: '#/components/schemas/object'
            CustomerProductandServiceProfile:
              type: string
              description: This is the is the eligibility profile including in-force product terms
              format: string
            ProductandServiceType:
              type: string
              description: 'Defines the product/service type - note: the profile will reference all available products/services'
              format: string
            Date:
              type: string
              description: The date time of the assessment
              format: string
      description: 'Input: ExCR Execute an automated action against an active evaluation (e.g. provide additional data)'
    ExecuteCustomerEligibilityAssessmentResponse:
      type: object
      properties:
        CustomerEligibilityAssessment:
          type: object
          properties:
            CustomerProductandServiceTypeEligibility:
              type: string
              description: Defines if and under what terms a product/service is available to this customer - this detail is maintained by the service domain and referenced by this evaluation
              format: string
            CustomerProductandServiceTypeUsage:
              type: string
              description: Records the sold/in-force status of a product/service with the customer. Again this detail is maintained by the service domain and referenced by this evaluation
              format: string
            Date:
              type: string
              description: The date time of the assessment
              format: string
      description: 'Output: ExCR Execute an automated action against an active evaluation (e.g. provide additional data)'
    RequestCustomerEligibilityAssessmentRequest:
      type: object
      properties:
        CustomerEligibilityAssessment:
          type: object
          properties:
            CustomerReference:
              $ref: '#/components/schemas/object'
            CustomerProductandServiceProfile:
              type: string
              description: This is the is the eligibility profile including in-force product terms
              format: string
            ProductandServiceType:
              type: string
              description: 'Defines the product/service type - note: the profile will reference all available products/services'
              format: string
            Date:
              type: string
              description: The date time of the assessment
              format: string
      description: 'Input: RqCR Request manual intervention in an evaluation (e.g. engage a specialist or negotiator)'
    RequestCustomerEligibilityAssessmentResponse:
      type: object
      properties:
        CustomerEligibilityAssessment:
          type: object
          properties:
            CustomerProductandServiceTypeEligibility:
              type: string
              description: Defines if and under what terms a product/service is available to this customer - this detail is maintained by the service domain and referenced by this evaluation
              format: string
            CustomerProductandServiceTypeUsage:
              type: string
              description: Records the sold/in-force status of a product/service with the customer. Again this detail is maintained by the service domain and referenced by this evaluation
              format: string
            Date:
              type: string
              description: The date time of the assessment
              format: string
      description: 'Output: RqCR Request manual intervention in an evaluation (e.g. engage a specialist or negotiator)'
    RetrieveCustomerEligibilityAssessmentResponse:
      type: object
      properties:
        CustomerEligibilityAssessment:
          type: object
          properties:
            CustomerReference:
              $ref: '#/components/schemas/object'
            CustomerProductandServiceProfile:
              type: string
              description: This is the is the eligibility profile including in-force product terms
              format: string
            ProductandServiceType:
              type: string
              description: 'Defines the product/service type - note: the profile will reference all available products/services'
              format: string
            CustomerProductandServiceTypeEligibility:
              type: string
              description: Defines if and under what terms a product/service is available to this customer - this detail is maintained by the service domain and referenced by this evaluation
              format: string
            CustomerProductandServiceTypeUsage:
              type: string
              description: Records the sold/in-force status of a product/service with the customer. Again this detail is maintained by the service domain and referenced by this evaluation
              format: string
            Date:
              type: string
              description: The date time of the assessment
              format: string
      description: 'Output: ReCR Retrieve details about an eligibility request'
    RetrieveEligibilityCheckResponse:
      type: object
      properties:
        CustomerEligibilityAssessment:
          type: object
          properties:
            CustomerReference:
              $ref: '#/components/schemas/object'
            CustomerProductandServiceProfile:
              type: string
              description: This is the is the eligibility profile including in-force product terms
              format: string
            ProductandServiceType:
              type: string
              description: 'Defines the product/service type - note: the profile will reference all available products/services'
              format: string
            CustomerProductandServiceTypeEligibility:
              type: string
              description: Defines if and under what terms a product/service is available to this customer - this detail is maintained by the service domain and referenced by this evaluation
              format: string
            CustomerProductandServiceTypeUsage:
              type: string
              description: Records the sold/in-force status of a product/service with the customer. Again this detail is maintained by the service domain and referenced by this evaluation
              format: string
            Date:
              type: string
              description: The date time of the assessment
              format: string
        EligibilityCheck:
          type: object
          properties:
            CustomerProductandServiceEligibilityAssessmentResult:
              type: string
              description: The result of the eligibility assessment for the requested product/service - details any eligibility considerations or requirements and the applicable terms
              format: string
      description: 'Output: ReBQ Retrieve details about an eligibility assessment'
    RetrieveNextBestResponse:
      type: object
      properties:
        CustomerEligibilityAssessment:
          type: object
          properties:
            CustomerReference:
              $ref: '#/components/schemas/object'
            CustomerProductandServiceProfile:
              type: string
              description: This is the is the eligibility profile including in-force product terms
              format: string
            ProductandServiceType:
              type: string
              description: 'Defines the product/service type - note: the profile will reference all available products/services'
              format: string
            CustomerProductandServiceTypeEligibility:
              type: string
              description: Defines if and under what terms a product/service is available to this customer - this detail is maintained by the service domain and referenced by this evaluation
              format: string
            CustomerProductandServiceTypeUsage:
              type: string
              description: Records the sold/in-force status of a product/service with the customer. Again this detail is maintained by the service domain and referenced by this evaluation
              format: string
            Date:
              type: string
              description: The date time of the assessment
              format: string
        NextBest:
          type: object
          properties:
            RequestedProductandServiceProperties:
              type: string
              description: Product/service features used to focus the selection
              format: string
            ProductServiceType:
              type: string
              description: 'The general type of product/service for which the best eligible product match is requested (e.g. term deposit, loan)'
              format: string
            CustomerProductandServiceNextBestAssessmentResult:
              type: string
              description: The result is a descending list of matched products with the associated eligibility that are available to the customer
              format: string
      description: 'Output: ReBQ Retrieve details about a next best test'
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    EvaluateCustomerEligibilityAssessmentResponse:
      description: EvaluateCustomerEligibilityAssessmentResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EvaluateCustomerEligibilityAssessmentResponse'
    UpdateCustomerEligibilityAssessmentResponse:
      description: UpdateCustomerEligibilityAssessmentResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateCustomerEligibilityAssessmentResponse'
    ExecuteCustomerEligibilityAssessmentResponse:
      description: ExecuteCustomerEligibilityAssessmentResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExecuteCustomerEligibilityAssessmentResponse'
    RequestCustomerEligibilityAssessmentResponse:
      description: RequestCustomerEligibilityAssessmentResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestCustomerEligibilityAssessmentResponse'
    RetrieveCustomerEligibilityAssessmentResponse:
      description: RetrieveCustomerEligibilityAssessmentResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveCustomerEligibilityAssessmentResponse'
    RetrieveEligibilityCheckResponse:
      description: RetrieveEligibilityCheckResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveEligibilityCheckResponse'
    NextBest:
      description: NextBest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NextBest'
    RetrieveNextBestResponse:
      description: RetrieveNextBestResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveNextBestResponse'
  parameters:
    customerproductandserviceeligibilityid:
      name: customerproductandserviceeligibilityid
      in: path
      required: true
      style: simple
      schema:
        type: string
    eligibilitycheckid:
      name: eligibilitycheckid
      in: path
      required: true
      style: simple
      schema:
        type: string
    nextbestid:
      name: nextbestid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    EvaluateCustomerEligibilityAssessmentRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EvaluateCustomerEligibilityAssessmentRequest'
      required: true
    UpdateCustomerEligibilityAssessmentRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateCustomerEligibilityAssessmentRequest'
      required: true
    ExecuteCustomerEligibilityAssessmentRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExecuteCustomerEligibilityAssessmentRequest'
      required: true
    RequestCustomerEligibilityAssessmentRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestCustomerEligibilityAssessmentRequest'
      required: true
    NextBest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NextBest'
      required: true