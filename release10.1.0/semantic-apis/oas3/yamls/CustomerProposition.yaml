openapi: 3.0.1
info:
  title: Customer Proposition
  description: This Service Domain maintains bank and customer defined requirements spanning all products and services
  contact:
    name: BIAN
    url: https://bian.org
  version: '10.1.0'
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/CustomerProposition/10.1.0
paths:
  '/CustomerProposition/{customerpropositionid}/Control':
    put:
      tags:
        - CR - CustomerPropositionAgreement
      summary: Control Customer Proposition Agreement
      description: Control Customer Proposition Agreement
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/customerpropositionid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerPropositionAgreement'
      responses:
        '200':
          $ref: '#/components/responses/CustomerPropositionAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /CustomerProposition/Evaluate:
    post:
      tags:
        - CR - CustomerPropositionAgreement
      summary: Evaluate Customer Proposition Agreement
      description: Evaluate Customer Proposition Agreement
      operationId: Evaluate
      requestBody:
        $ref: '#/components/requestBodies/CustomerPropositionAgreement'
      responses:
        '200':
          $ref: '#/components/responses/CustomerPropositionAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerProposition/{customerpropositionid}/Exchange':
    put:
      tags:
        - CR - CustomerPropositionAgreement
      summary: Exchange Customer Proposition Agreement
      description: Exchange Customer Proposition Agreement
      operationId: Exchange
      parameters:
        - $ref: '#/components/parameters/customerpropositionid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerPropositionAgreement'
      responses:
        '200':
          $ref: '#/components/responses/CustomerPropositionAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerProposition/{customerpropositionid}/Grant':
    put:
      tags:
        - CR - CustomerPropositionAgreement
      summary: Grant Customer Proposition Agreement
      description: Grant Customer Proposition Agreement
      operationId: Grant
      parameters:
        - $ref: '#/components/parameters/customerpropositionid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerPropositionAgreement'
      responses:
        '200':
          $ref: '#/components/responses/CustomerPropositionAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerProposition/{customerpropositionid}/Notify':
    get:
      tags:
        - CR - CustomerPropositionAgreement
      summary: Notify Customer Proposition Agreement
      description: Notify Customer Proposition Agreement
      operationId: Notify
      parameters:
        - $ref: '#/components/parameters/customerpropositionid'
      responses:
        '200':
          $ref: '#/components/responses/CustomerPropositionAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerProposition/{customerpropositionid}/Request':
    put:
      tags:
        - CR - CustomerPropositionAgreement
      summary: Request Customer Proposition Agreement
      description: Request Customer Proposition Agreement
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/customerpropositionid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerPropositionAgreement'
      responses:
        '200':
          $ref: '#/components/responses/CustomerPropositionAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerProposition/{customerpropositionid}/Retrieve':
    get:
      tags:
        - CR - CustomerPropositionAgreement
      summary: Retrieve Customer Proposition Agreement
      description: Retrieve Customer Proposition Agreement
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/customerpropositionid'
      responses:
        '200':
          $ref: '#/components/responses/CustomerPropositionAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerProposition/{customerpropositionid}/Update':
    put:
      tags:
        - CR - CustomerPropositionAgreement
      summary: Update Customer Proposition Agreement
      description: Update Customer Proposition Agreement
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/customerpropositionid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerPropositionAgreement'
      responses:
        '200':
          $ref: '#/components/responses/CustomerPropositionAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerProposition/{customerpropositionid}/BankDefinedProductandServiceTerm/{bankdefinedproductandservicetermid}/Evaluate':
    post:
      tags:
        - BQ - BankDefinedProductandServiceTerm
      summary: Evaluate Bank Defined Product and Service Term
      description: Evaluate Bank Defined Product and Service Term
      operationId: EvaluateBankDefinedProductandServiceTerm
      parameters:
        - $ref: '#/components/parameters/customerpropositionid'
        - $ref: '#/components/parameters/bankdefinedproductandservicetermid'
      requestBody:
        $ref: '#/components/requestBodies/BankDefinedProductandServiceTerm'
      responses:
        '200':
          $ref: '#/components/responses/BankDefinedProductandServiceTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerProposition/{customerpropositionid}/CustomerDefinedProductandServiceTerm/{customerdefinedproductandservicetermid}/Evaluate':
    post:
      tags:
        - BQ - CustomerDefinedProductandServiceTerm
      summary: Evaluate Customer Defined Product and Service Term
      description: Evaluate Customer Defined Product and Service Term
      operationId: EvaluateCustomerDefinedProductandServiceTerm
      parameters:
        - $ref: '#/components/parameters/customerpropositionid'
        - $ref: '#/components/parameters/customerdefinedproductandservicetermid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerDefinedProductandServiceTerm'
      responses:
        '200':
          $ref: '#/components/responses/CustomerDefinedProductandServiceTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerProposition/{customerpropositionid}/BankDefinedProductandServiceTerm/{bankdefinedproductandservicetermid}/Exchange':
    put:
      tags:
        - BQ - BankDefinedProductandServiceTerm
      summary: Exchange Bank Defined Product and Service Term
      description: Exchange Bank Defined Product and Service Term
      operationId: ExchangeBankDefinedProductandServiceTerm
      parameters:
        - $ref: '#/components/parameters/customerpropositionid'
        - $ref: '#/components/parameters/bankdefinedproductandservicetermid'
      requestBody:
        $ref: '#/components/requestBodies/BankDefinedProductandServiceTerm'
      responses:
        '200':
          $ref: '#/components/responses/BankDefinedProductandServiceTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerProposition/{customerpropositionid}/CustomerDefinedProductandServiceTerm/{customerdefinedproductandservicetermid}/Exchange':
    put:
      tags:
        - BQ - CustomerDefinedProductandServiceTerm
      summary: Exchange Customer Defined Product and Service Term
      description: Exchange Customer Defined Product and Service Term
      operationId: ExchangeCustomerDefinedProductandServiceTerm
      parameters:
        - $ref: '#/components/parameters/customerpropositionid'
        - $ref: '#/components/parameters/customerdefinedproductandservicetermid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerDefinedProductandServiceTerm'
      responses:
        '200':
          $ref: '#/components/responses/CustomerDefinedProductandServiceTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerProposition/{customerpropositionid}/BankDefinedProductandServiceTerm/{bankdefinedproductandservicetermid}/Notify':
    get:
      tags:
        - BQ - BankDefinedProductandServiceTerm
      summary: Notify Bank Defined Product and Service Term
      description: Notify Bank Defined Product and Service Term
      operationId: NotifyBankDefinedProductandServiceTerm
      parameters:
        - $ref: '#/components/parameters/customerpropositionid'
        - $ref: '#/components/parameters/bankdefinedproductandservicetermid'
      responses:
        '200':
          $ref: '#/components/responses/BankDefinedProductandServiceTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerProposition/{customerpropositionid}/CustomerDefinedProductandServiceTerm/{customerdefinedproductandservicetermid}/Notify':
    get:
      tags:
        - BQ - CustomerDefinedProductandServiceTerm
      summary: Notify Customer Defined Product and Service Term
      description: Notify Customer Defined Product and Service Term
      operationId: NotifyCustomerDefinedProductandServiceTerm
      parameters:
        - $ref: '#/components/parameters/customerpropositionid'
        - $ref: '#/components/parameters/customerdefinedproductandservicetermid'
      responses:
        '200':
          $ref: '#/components/responses/CustomerDefinedProductandServiceTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerProposition/{customerpropositionid}/BankDefinedProductandServiceTerm/{bankdefinedproductandservicetermid}/Request':
    put:
      tags:
        - BQ - BankDefinedProductandServiceTerm
      summary: Request Bank Defined Product and Service Term
      description: Request Bank Defined Product and Service Term
      operationId: RequestBankDefinedProductandServiceTerm
      parameters:
        - $ref: '#/components/parameters/customerpropositionid'
        - $ref: '#/components/parameters/bankdefinedproductandservicetermid'
      requestBody:
        $ref: '#/components/requestBodies/BankDefinedProductandServiceTerm'
      responses:
        '200':
          $ref: '#/components/responses/BankDefinedProductandServiceTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerProposition/{customerpropositionid}/CustomerDefinedProductandServiceTerm/{customerdefinedproductandservicetermid}/Request':
    put:
      tags:
        - BQ - CustomerDefinedProductandServiceTerm
      summary: Request Customer Defined Product and Service Term
      description: Request Customer Defined Product and Service Term
      operationId: RequestCustomerDefinedProductandServiceTerm
      parameters:
        - $ref: '#/components/parameters/customerpropositionid'
        - $ref: '#/components/parameters/customerdefinedproductandservicetermid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerDefinedProductandServiceTerm'
      responses:
        '200':
          $ref: '#/components/responses/CustomerDefinedProductandServiceTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerProposition/{customerpropositionid}/BankDefinedProductandServiceTerm/{bankdefinedproductandservicetermid}/Retrieve':
    get:
      tags:
        - BQ - BankDefinedProductandServiceTerm
      summary: Retrieve Bank Defined Product and Service Term
      description: Retrieve Bank Defined Product and Service Term
      operationId: RetrieveBankDefinedProductandServiceTerm
      parameters:
        - $ref: '#/components/parameters/customerpropositionid'
        - $ref: '#/components/parameters/bankdefinedproductandservicetermid'
      responses:
        '200':
          $ref: '#/components/responses/BankDefinedProductandServiceTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerProposition/{customerpropositionid}/CustomerDefinedProductandServiceTerm/{customerdefinedproductandservicetermid}/Retrieve':
    get:
      tags:
        - BQ - CustomerDefinedProductandServiceTerm
      summary: Retrieve Customer Defined Product and Service Term
      description: Retrieve Customer Defined Product and Service Term
      operationId: RetrieveCustomerDefinedProductandServiceTerm
      parameters:
        - $ref: '#/components/parameters/customerpropositionid'
        - $ref: '#/components/parameters/customerdefinedproductandservicetermid'
      responses:
        '200':
          $ref: '#/components/responses/CustomerDefinedProductandServiceTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerProposition/{customerpropositionid}/BankDefinedProductandServiceTerm/{bankdefinedproductandservicetermid}/Update':
    put:
      tags:
        - BQ - BankDefinedProductandServiceTerm
      summary: Update Bank Defined Product and Service Term
      description: Update Bank Defined Product and Service Term
      operationId: UpdateBankDefinedProductandServiceTerm
      parameters:
        - $ref: '#/components/parameters/customerpropositionid'
        - $ref: '#/components/parameters/bankdefinedproductandservicetermid'
      requestBody:
        $ref: '#/components/requestBodies/BankDefinedProductandServiceTerm'
      responses:
        '200':
          $ref: '#/components/responses/BankDefinedProductandServiceTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerProposition/{customerpropositionid}/CustomerDefinedProductandServiceTerm/{customerdefinedproductandservicetermid}/Update':
    put:
      tags:
        - BQ - CustomerDefinedProductandServiceTerm
      summary: Update Customer Defined Product and Service Term
      description: Update Customer Defined Product and Service Term
      operationId: UpdateCustomerDefinedProductandServiceTerm
      parameters:
        - $ref: '#/components/parameters/customerpropositionid'
        - $ref: '#/components/parameters/customerdefinedproductandservicetermid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerDefinedProductandServiceTerm'
      responses:
        '200':
          $ref: '#/components/responses/CustomerDefinedProductandServiceTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    CustomerDefinedProductandServiceTerm:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        CustomerPropositionAgreementReference:
          $ref: '#/components/schemas/agreement'
        CustomerDefinedProductandServiceTermReference:
          $ref: '#/components/schemas/arrangement'
        CustomerDefinedProductandServiceTermType:
          $ref: '#/components/schemas/text'
      description: The Customer Defined Product and Service Term reflects the application of a specific rule or regulation that is an aspect of the Customer Defined Product and Service Term
    BankDefinedProductandServiceTerm:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        CustomerPropositionAgreementReference:
          $ref: '#/components/schemas/agreement'
        BankDefinedProductandServiceTermReference:
          $ref: '#/components/schemas/arrangement'
        BankDefinedProductandServiceTermType:
          $ref: '#/components/schemas/text'
      description: The Customer Defined Product and Service Term reflects the application of a specific rule or regulation that is an aspect of the Customer Defined Product and Service Term
    CustomerPropositionOutcome:
      type: object
      properties:
        CustomerPropositionAgreement:
          $ref: '#/components/schemas/agreement'
        CustomerPropositionWorkProduct:
          $ref: '#/components/schemas/workproduct'
        CustomerPropositionWorkProductType:
          $ref: '#/components/schemas/workproducttypevalues'
      description: The Customer Defined Product and Service Term reflects the application of a specific rule or regulation that is an aspect of the Customer Defined Product and Service Term
    CustomerPropositionAgreement:
      type: object
      properties:
        CustomerPropositionAgreementParameterType:
          $ref: '#/components/schemas/text'
        CustomerPropositionAgreementSelectedOption:
          $ref: '#/components/schemas/feature'
        CustomerPropositionAgreementType:
          $ref: '#/components/schemas/agreementtypevalues'
        CustomerPropositionAgreementReference:
          $ref: '#/components/schemas/agreement'
        CustomerPropositionAgreementDischargeRequest:
          $ref: '#/components/schemas/instruction'
        CustomerPropositionAgreementDischargeSchedule:
          $ref: '#/components/schemas/schedule'
        CustomerPropositionAgreementStatus:
          $ref: '#/components/schemas/agreementlifecyclestatus'
        CustomerPropositionAgreementAssociatedParty:
          $ref: '#/components/schemas/involvedparty'
        CustomerPropositionAgreementCustomerReference:
          $ref: '#/components/schemas/involvedparty'
        CustomerPropositionAgreementObligation:
          $ref: '#/components/schemas/arrangement'
        CustomerPropositionAgreementEntitlement:
          $ref: '#/components/schemas/arrangement'
        CustomerPropositionAgreementRegulationReference:
          $ref: '#/components/schemas/ruleset'
        CustomerPropositionAgreementRegulationType:
          $ref: '#/components/schemas/rulesettype'
        CustomerPropositionAgreementJurisdiction:
          $ref: '#/components/schemas/jurisdiction'
        CustomerPropositionAgreementAccountReference:
          $ref: '#/components/schemas/account'
        CustomerPropositionAgreementSubjectMatter:
          $ref: '#/components/schemas/object'
        CustomerPropositionAgreementProductReference:
          $ref: '#/components/schemas/bankingproduct'
        CustomerPropositionAgreementCalendarReference:
          $ref: '#/components/schemas/calendar'
        CustomerPropositionAgreementAssociatedAgreementReference:
          $ref: '#/components/schemas/agreement'
      description: "Maintain the terms and conditions that apply to a commercial relationship within Customer Proposition.\n\n"
    condition:
      type: object
      properties:
        Condition:
          type: string
          description: "Condition is a premise upon which the fulfillment of an agreement depends \n\nGeneral and special arrangements, provisions, requirements, rules, specifications, and standards that form an integral part of an agreement or contract.\n\nRead more: http://www.businessdictionary.com/definition/terms-and-conditions.html\n\n"
          format: class
    schedule:
      type: object
      properties:
        Schedule:
          type: string
          description: "Defined sequence of planned tasks/actions or a timetable of available services\n\nA schedule is a time based series of something"
          format: datatype
    businessservice:
      type: object
      properties:
        BusinessServiceName:
          $ref: '#/components/schemas/name'
        BusinessServiceType:
          $ref: '#/components/schemas/businessservicetypevalues'
        BusinessServiceDescription:
          $ref: '#/components/schemas/text'
    agreement:
      type: object
      properties:
        AgreementSignedDate:
          $ref: '#/components/schemas/date'
        AgreementType:
          $ref: '#/components/schemas/agreementtypevalues'
        AgreementValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        AgreementVersion:
          $ref: '#/components/schemas/text'
        AgreementStatus:
          $ref: '#/components/schemas/agreementlifecyclestatus'
        AgreementSubjectMatter:
          $ref: '#/components/schemas/text'
        AgreementIdentification:
          $ref: '#/components/schemas/identifier'
        AgreementDate:
          $ref: '#/components/schemas/datetime'
    arrangement:
      type: object
      properties:
        ArrangementAction:
          $ref: '#/components/schemas/action'
        ArrangementStartDate:
          $ref: '#/components/schemas/datetime'
        ArrangementEndDate:
          $ref: '#/components/schemas/datetime'
        ArrangementStatus:
          $ref: '#/components/schemas/arrangementlifecyclestatus'
        ArrangementSubjectMatter:
          $ref: '#/components/schemas/subject'
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
    workproduct:
      type: object
      properties:
        Workproduct:
          type: string
          description: 'Contact records, working papers, documents and activity logs produced during the execution of a work task'
          format: datatype
    workproducttypevalues:
      enum:
        - Document
        - WorkingPaper
        - ActivityLog
        - Form
        - File
        - MeetingSchedule
        - MeetingMinute
      type: string
      description: ">\n* `Document` - \n* `WorkingPaper` - \n* `ActivityLog` - \n* `Form` - \n* `File` - File of consolidated notes, evaluations and recommendations for the work task\n* `MeetingSchedule` - \n* `MeetingMinute` - \n"
    feature:
      type: object
      properties:
        FeatureType:
          type: string
          description: ''
          format: string
    agreementtypevalues:
      enum:
        - CustomerAgreement
        - SupplierAgreement
        - ProductBrokerAgreement
        - ProductSaleAgreement
        - FiduciaryAgreement
        - CommissionSaleAgreement
        - ServicingMandateAgreement
        - ChannelAccessAgreement
      type: string
      description: ">\n* `CustomerAgreement` - \n* `SupplierAgreement` - \n* `ProductBrokerAgreement` - \n* `ProductSaleAgreement` - \n* `FiduciaryAgreement` - \n* `CommissionSaleAgreement` - \n* `ServicingMandateAgreement` - \n* `ChannelAccessAgreement` - \n"
    instruction:
      type: object
      properties:
        InstructionDueDate:
          $ref: '#/components/schemas/date'
        InstructionStatus:
          $ref: '#/components/schemas/instructionlifecyclestatus'
        InstructionIdentifier:
          $ref: '#/components/schemas/identifier'
        InstructionType:
          $ref: '#/components/schemas/instructiontypevalues'
        InstructionResult:
          $ref: '#/components/schemas/text'
        InstructionDescription:
          $ref: '#/components/schemas/text'
        InstructionLog:
          $ref: '#/components/schemas/log'
        InstructionPurpose:
          $ref: '#/components/schemas/text'
    agreementlifecyclestatus:
      type: object
      properties:
        Agreementlifecyclestatus:
          type: string
          description: 'Data type that specifies the LifecycleStatus of agreement (e.g., potential, offered, confirmed, completed, signed, terminated).'
          format: datatype
    involvedparty:
      type: object
      properties:
        Involvedparty:
          type: string
          description: ''
          format: datatype
    ruleset:
      type: object
      properties:
        RuleSetDefinition:
          type: string
          description: ''
          format: string
        RuleSetInterpretation:
          type: string
          description: ''
          format: string
        RuleSetType:
          $ref: '#/components/schemas/rulesettype'
        RuleSetName:
          type: string
          description: ''
          format: string
        RuleSetIdentification:
          type: string
          description: ''
          format: string
    rulesettype:
      type: object
      properties:
        Rulesettype:
          type: string
          description: Data type specifies the classification of RuleSet
          format: datatype
    jurisdiction:
      type: object
      properties:
        Jurisdiction:
          type: string
          description: Jurisdiction that will be assigned in case of legal dispute.
          format: class
    account:
      type: object
      properties:
        AccountStatus:
          $ref: '#/components/schemas/accountstatus'
        AccountIdentification:
          $ref: '#/components/schemas/accountidentification'
        AccountDate:
          $ref: '#/components/schemas/accountdate'
        AccountType:
          $ref: '#/components/schemas/accounttype'
        AccountPurpose:
          $ref: '#/components/schemas/text'
        AccountBalance:
          $ref: '#/components/schemas/accountbalance'
        AccountCurrency:
          $ref: '#/components/schemas/accountcurrency'
        AccountDescription:
          $ref: '#/components/schemas/text'
    object:
      type: object
      properties:
        ObjectProperties:
          type: string
          description: ''
          format: string
        ObjectDescription:
          type: string
          description: ''
          format: string
    bankingproduct:
      type: object
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/productidentification'
        ProductType:
          $ref: '#/components/schemas/producttypevalues'
        ProductLifecycleStatus:
          $ref: '#/components/schemas/productlifecyclestatus'
        ProductPriority:
          $ref: '#/components/schemas/text'
        ProductDescription:
          $ref: '#/components/schemas/text'
        ProductVersion:
          $ref: '#/components/schemas/text'
    calendar:
      type: object
      properties:
        Calendar:
          type: string
          description: 'A series of dates/times of specific types of actions/events associated with the fulfillment of some form of arrangement - planned and actual. '
          format: datatype
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    CustomerPropositionAgreement:
      description: CustomerPropositionAgreement
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerPropositionAgreement'
    BankDefinedProductandServiceTerm:
      description: BankDefinedProductandServiceTerm
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BankDefinedProductandServiceTerm'
    CustomerDefinedProductandServiceTerm:
      description: CustomerDefinedProductandServiceTerm
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerDefinedProductandServiceTerm'
  parameters:
    customerpropositionid:
      name: customerpropositionid
      in: path
      required: true
      style: simple
      schema:
        type: string
    bankdefinedproductandservicetermid:
      name: bankdefinedproductandservicetermid
      in: path
      required: true
      style: simple
      schema:
        type: string
    customerdefinedproductandservicetermid:
      name: customerdefinedproductandservicetermid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    CustomerPropositionAgreement:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerPropositionAgreement'
      required: true
    BankDefinedProductandServiceTerm:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BankDefinedProductandServiceTerm'
      required: true
    CustomerDefinedProductandServiceTerm:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerDefinedProductandServiceTerm'
      required: true