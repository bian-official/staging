openapi: 3.0.1
info:
  title: Customer Proposition
  description: This Service Domain maintains bank and customer defined requirements spanning all products and services
  contact:
    name: BIAN
    url: https://bian.org
  version: '10.1.0'
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/CustomerProposition/10.1.0
paths:
  '/CustomerProposition/{customerpropositionid}/Control':
    put:
      tags:
        - CR - CustomerPropositionAgreement
      summary: Control Customer Proposition Agreement
      description: Control Customer Proposition Agreement
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/customerpropositionid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerPropositionAgreement'
      responses:
        '200':
          $ref: '#/components/responses/CustomerPropositionAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /CustomerProposition/Evaluate:
    post:
      tags:
        - CR - CustomerPropositionAgreement
      summary: Evaluate Customer Proposition Agreement
      description: Evaluate Customer Proposition Agreement
      operationId: Evaluate
      requestBody:
        $ref: '#/components/requestBodies/CustomerPropositionAgreement'
      responses:
        '200':
          $ref: '#/components/responses/CustomerPropositionAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerProposition/{customerpropositionid}/Exchange':
    put:
      tags:
        - CR - CustomerPropositionAgreement
      summary: Exchange Customer Proposition Agreement
      description: Exchange Customer Proposition Agreement
      operationId: Exchange
      parameters:
        - $ref: '#/components/parameters/customerpropositionid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerPropositionAgreement'
      responses:
        '200':
          $ref: '#/components/responses/CustomerPropositionAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerProposition/{customerpropositionid}/Grant':
    put:
      tags:
        - CR - CustomerPropositionAgreement
      summary: Grant Customer Proposition Agreement
      description: Grant Customer Proposition Agreement
      operationId: Grant
      parameters:
        - $ref: '#/components/parameters/customerpropositionid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerPropositionAgreement'
      responses:
        '200':
          $ref: '#/components/responses/CustomerPropositionAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerProposition/{customerpropositionid}/Notify':
    get:
      tags:
        - CR - CustomerPropositionAgreement
      summary: Notify Customer Proposition Agreement
      description: Notify Customer Proposition Agreement
      operationId: Notify
      parameters:
        - $ref: '#/components/parameters/customerpropositionid'
      responses:
        '200':
          $ref: '#/components/responses/CustomerPropositionAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerProposition/{customerpropositionid}/Request':
    put:
      tags:
        - CR - CustomerPropositionAgreement
      summary: Request Customer Proposition Agreement
      description: Request Customer Proposition Agreement
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/customerpropositionid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerPropositionAgreement'
      responses:
        '200':
          $ref: '#/components/responses/CustomerPropositionAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerProposition/{customerpropositionid}/Retrieve':
    get:
      tags:
        - CR - CustomerPropositionAgreement
      summary: Retrieve Customer Proposition Agreement
      description: Retrieve Customer Proposition Agreement
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/customerpropositionid'
      responses:
        '200':
          $ref: '#/components/responses/CustomerPropositionAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerProposition/{customerpropositionid}/Update':
    put:
      tags:
        - CR - CustomerPropositionAgreement
      summary: Update Customer Proposition Agreement
      description: Update Customer Proposition Agreement
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/customerpropositionid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerPropositionAgreement'
      responses:
        '200':
          $ref: '#/components/responses/CustomerPropositionAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerProposition/{customerpropositionid}/BankDefinedProductandServiceTerm/{bankdefinedproductandservicetermid}/Evaluate':
    post:
      tags:
        - BQ - BankDefinedProductandServiceTerm
      summary: Evaluate Bank Defined Product and Service Term
      description: Evaluate Bank Defined Product and Service Term
      operationId: EvaluateBankDefinedProductandServiceTerm
      parameters:
        - $ref: '#/components/parameters/customerpropositionid'
        - $ref: '#/components/parameters/bankdefinedproductandservicetermid'
      requestBody:
        $ref: '#/components/requestBodies/BankDefinedProductandServiceTerm'
      responses:
        '200':
          $ref: '#/components/responses/BankDefinedProductandServiceTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerProposition/{customerpropositionid}/CustomerDefinedProductandServiceTerm/{customerdefinedproductandservicetermid}/Evaluate':
    post:
      tags:
        - BQ - CustomerDefinedProductandServiceTerm
      summary: Evaluate Customer Defined Product and Service Term
      description: Evaluate Customer Defined Product and Service Term
      operationId: EvaluateCustomerDefinedProductandServiceTerm
      parameters:
        - $ref: '#/components/parameters/customerpropositionid'
        - $ref: '#/components/parameters/customerdefinedproductandservicetermid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerDefinedProductandServiceTerm'
      responses:
        '200':
          $ref: '#/components/responses/CustomerDefinedProductandServiceTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerProposition/{customerpropositionid}/BankDefinedProductandServiceTerm/{bankdefinedproductandservicetermid}/Exchange':
    put:
      tags:
        - BQ - BankDefinedProductandServiceTerm
      summary: Exchange Bank Defined Product and Service Term
      description: Exchange Bank Defined Product and Service Term
      operationId: ExchangeBankDefinedProductandServiceTerm
      parameters:
        - $ref: '#/components/parameters/customerpropositionid'
        - $ref: '#/components/parameters/bankdefinedproductandservicetermid'
      requestBody:
        $ref: '#/components/requestBodies/BankDefinedProductandServiceTerm'
      responses:
        '200':
          $ref: '#/components/responses/BankDefinedProductandServiceTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerProposition/{customerpropositionid}/CustomerDefinedProductandServiceTerm/{customerdefinedproductandservicetermid}/Exchange':
    put:
      tags:
        - BQ - CustomerDefinedProductandServiceTerm
      summary: Exchange Customer Defined Product and Service Term
      description: Exchange Customer Defined Product and Service Term
      operationId: ExchangeCustomerDefinedProductandServiceTerm
      parameters:
        - $ref: '#/components/parameters/customerpropositionid'
        - $ref: '#/components/parameters/customerdefinedproductandservicetermid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerDefinedProductandServiceTerm'
      responses:
        '200':
          $ref: '#/components/responses/CustomerDefinedProductandServiceTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerProposition/{customerpropositionid}/BankDefinedProductandServiceTerm/{bankdefinedproductandservicetermid}/Notify':
    get:
      tags:
        - BQ - BankDefinedProductandServiceTerm
      summary: Notify Bank Defined Product and Service Term
      description: Notify Bank Defined Product and Service Term
      operationId: NotifyBankDefinedProductandServiceTerm
      parameters:
        - $ref: '#/components/parameters/customerpropositionid'
        - $ref: '#/components/parameters/bankdefinedproductandservicetermid'
      responses:
        '200':
          $ref: '#/components/responses/BankDefinedProductandServiceTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerProposition/{customerpropositionid}/CustomerDefinedProductandServiceTerm/{customerdefinedproductandservicetermid}/Notify':
    get:
      tags:
        - BQ - CustomerDefinedProductandServiceTerm
      summary: Notify Customer Defined Product and Service Term
      description: Notify Customer Defined Product and Service Term
      operationId: NotifyCustomerDefinedProductandServiceTerm
      parameters:
        - $ref: '#/components/parameters/customerpropositionid'
        - $ref: '#/components/parameters/customerdefinedproductandservicetermid'
      responses:
        '200':
          $ref: '#/components/responses/CustomerDefinedProductandServiceTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerProposition/{customerpropositionid}/BankDefinedProductandServiceTerm/{bankdefinedproductandservicetermid}/Request':
    put:
      tags:
        - BQ - BankDefinedProductandServiceTerm
      summary: Request Bank Defined Product and Service Term
      description: Request Bank Defined Product and Service Term
      operationId: RequestBankDefinedProductandServiceTerm
      parameters:
        - $ref: '#/components/parameters/customerpropositionid'
        - $ref: '#/components/parameters/bankdefinedproductandservicetermid'
      requestBody:
        $ref: '#/components/requestBodies/BankDefinedProductandServiceTerm'
      responses:
        '200':
          $ref: '#/components/responses/BankDefinedProductandServiceTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerProposition/{customerpropositionid}/CustomerDefinedProductandServiceTerm/{customerdefinedproductandservicetermid}/Request':
    put:
      tags:
        - BQ - CustomerDefinedProductandServiceTerm
      summary: Request Customer Defined Product and Service Term
      description: Request Customer Defined Product and Service Term
      operationId: RequestCustomerDefinedProductandServiceTerm
      parameters:
        - $ref: '#/components/parameters/customerpropositionid'
        - $ref: '#/components/parameters/customerdefinedproductandservicetermid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerDefinedProductandServiceTerm'
      responses:
        '200':
          $ref: '#/components/responses/CustomerDefinedProductandServiceTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerProposition/{customerpropositionid}/BankDefinedProductandServiceTerm/{bankdefinedproductandservicetermid}/Retrieve':
    get:
      tags:
        - BQ - BankDefinedProductandServiceTerm
      summary: Retrieve Bank Defined Product and Service Term
      description: Retrieve Bank Defined Product and Service Term
      operationId: RetrieveBankDefinedProductandServiceTerm
      parameters:
        - $ref: '#/components/parameters/customerpropositionid'
        - $ref: '#/components/parameters/bankdefinedproductandservicetermid'
      responses:
        '200':
          $ref: '#/components/responses/BankDefinedProductandServiceTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerProposition/{customerpropositionid}/CustomerDefinedProductandServiceTerm/{customerdefinedproductandservicetermid}/Retrieve':
    get:
      tags:
        - BQ - CustomerDefinedProductandServiceTerm
      summary: Retrieve Customer Defined Product and Service Term
      description: Retrieve Customer Defined Product and Service Term
      operationId: RetrieveCustomerDefinedProductandServiceTerm
      parameters:
        - $ref: '#/components/parameters/customerpropositionid'
        - $ref: '#/components/parameters/customerdefinedproductandservicetermid'
      responses:
        '200':
          $ref: '#/components/responses/CustomerDefinedProductandServiceTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerProposition/{customerpropositionid}/BankDefinedProductandServiceTerm/{bankdefinedproductandservicetermid}/Update':
    put:
      tags:
        - BQ - BankDefinedProductandServiceTerm
      summary: Update Bank Defined Product and Service Term
      description: Update Bank Defined Product and Service Term
      operationId: UpdateBankDefinedProductandServiceTerm
      parameters:
        - $ref: '#/components/parameters/customerpropositionid'
        - $ref: '#/components/parameters/bankdefinedproductandservicetermid'
      requestBody:
        $ref: '#/components/requestBodies/BankDefinedProductandServiceTerm'
      responses:
        '200':
          $ref: '#/components/responses/BankDefinedProductandServiceTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerProposition/{customerpropositionid}/CustomerDefinedProductandServiceTerm/{customerdefinedproductandservicetermid}/Update':
    put:
      tags:
        - BQ - CustomerDefinedProductandServiceTerm
      summary: Update Customer Defined Product and Service Term
      description: Update Customer Defined Product and Service Term
      operationId: UpdateCustomerDefinedProductandServiceTerm
      parameters:
        - $ref: '#/components/parameters/customerpropositionid'
        - $ref: '#/components/parameters/customerdefinedproductandservicetermid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerDefinedProductandServiceTerm'
      responses:
        '200':
          $ref: '#/components/responses/CustomerDefinedProductandServiceTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    CustomerDefinedProductandServiceTerm:
      type: object
      properties:
        Preconditions:
          type: string
          description: The required status/situation for the terms to apply and or tasks that need to be completed prior to the initiation of the workstep
          format: condition
        Schedule:
          type: string
          description: Any timing/duration considerations applying to the Customer Defined Product and Service Term
          format: schedule
        BusinessService:
          type: string
          description: The Customer Defined Product and Service Term specific Business Service
          format: businessservice
        CustomerPropositionAgreementReference:
          type: string
          description: Reference to Customer Defined Product and Service Term
          format: agreement
        CustomerDefinedProductandServiceTermReference:
          type: string
          description: Reference to Customer Defined Product and Service Term
          format: arrangement
        CustomerDefinedProductandServiceTermType:
          type: string
          description: The type of Customer Defined Product and Service Term
          format: text
      description: The Customer Defined Product and Service Term reflects the application of a specific rule or regulation that is an aspect of the Customer Defined Product and Service Term
    BankDefinedProductandServiceTerm:
      type: object
      properties:
        Preconditions:
          type: string
          description: The required status/situation for the terms to apply and or tasks that need to be completed prior to the initiation of the workstep
          format: condition
        Schedule:
          type: string
          description: Any timing/duration considerations applying to the Bank Defined Product and Service Term
          format: schedule
        BusinessService:
          type: string
          description: The Bank Defined Product and Service Term specific Business Service
          format: businessservice
        CustomerPropositionAgreementReference:
          type: string
          description: Reference to Bank Defined Product and Service Term
          format: agreement
        BankDefinedProductandServiceTermReference:
          type: string
          description: Reference to Bank Defined Product and Service Term
          format: arrangement
        BankDefinedProductandServiceTermType:
          type: string
          description: The type of Bank Defined Product and Service Term
          format: text
      description: The Customer Defined Product and Service Term reflects the application of a specific rule or regulation that is an aspect of the Customer Defined Product and Service Term
    CustomerPropositionOutcome:
      type: object
      properties:
        CustomerPropositionAgreement:
          type: string
          description: ''
          format: agreement
        CustomerPropositionWorkProduct:
          type: string
          description: ''
          format: workproduct
        CustomerPropositionWorkProductType:
          type: string
          description: ''
          format: workproducttypevalues
      description: The Customer Defined Product and Service Term reflects the application of a specific rule or regulation that is an aspect of the Customer Defined Product and Service Term
    CustomerPropositionAgreement:
      type: object
      properties:
        CustomerPropositionAgreementParameterType:
          type: string
          description: A Classification value that distinguishes between Options defined within Customer Proposition Agreement
          format: text
        CustomerPropositionAgreementSelectedOption:
          type: string
          description: 'A selected optional feature in a product, identified by Parameter Type'
          format: feature
        CustomerPropositionAgreementType:
          type: string
          description: A Classification value that distinguishes between the subject matters of Customer Proposition Agreement
          format: agreementtypevalues
        CustomerPropositionAgreementReference:
          type: string
          description: An unique reference to an item or an occurrence of Customer Proposition Agreement
          format: agreement
        CustomerPropositionAgreementDischargeRequest:
          type: string
          description: Request to discharge Customer Proposition Agreement
          format: instruction
        CustomerPropositionAgreementDischargeSchedule:
          type: string
          description: Timetable to discharge Customer Proposition Agreement
          format: schedule
        CustomerPropositionAgreementStatus:
          type: string
          description: The status of Customer Proposition Agreement
          format: agreementlifecyclestatus
        CustomerPropositionAgreementAssociatedParty:
          type: string
          description: Party who is involved in Customer Proposition Agreement
          format: involvedparty
        CustomerPropositionAgreementCustomerReference:
          type: string
          description: Reference to the customer who is involved in Customer Proposition Agreement
          format: involvedparty
        CustomerPropositionAgreementObligation:
          type: string
          description: Liability or duty to do something under the terms of Customer Proposition Agreement
          format: arrangement
        CustomerPropositionAgreementEntitlement:
          type: string
          description: Right to do something under the terms of Customer Proposition Agreement
          format: arrangement
        CustomerPropositionAgreementRegulationReference:
          type: string
          description: Reference to the regulation which is defined in Customer Proposition Agreement
          format: ruleset
        CustomerPropositionAgreementRegulationType:
          type: string
          description: A Classification that distinguishes between the regularity domains of Customer Proposition Agreement
          format: rulesettype
        CustomerPropositionAgreementJurisdiction:
          type: string
          description: Reference to the jurisdiction that is assigned to Customer Proposition Agreement in case of legal dispute.
          format: jurisdiction
        CustomerPropositionAgreementAccountReference:
          type: string
          description: "Reference to the account which is linked to Customer Proposition Agreement\n\nA characteristic of agreement which refers to its involved account to specify the account that will be used to register for the transactions in position keeping management."
          format: account
        CustomerPropositionAgreementSubjectMatter:
          type: string
          description: The subject matter of  Customer Proposition Agreement
          format: object
        CustomerPropositionAgreementProductReference:
          type: string
          description: "Reference to the product which is linked to Customer Proposition Agreement\n\nComment: \nA characteristic of agreement which refers to its related products that are sold by agreement."
          format: bankingproduct
        CustomerPropositionAgreementCalendarReference:
          type: string
          description: The calendar of Customer Proposition Agreement
          format: calendar
        CustomerPropositionAgreementAssociatedAgreementReference:
          type: string
          description: Reference to the agreement that is related to Customer Proposition Agreement
          format: agreement
      description: "Maintain the terms and conditions that apply to a commercial relationship within Customer Proposition.\n\n"
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    CustomerPropositionAgreement:
      description: CustomerPropositionAgreement
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerPropositionAgreement'
    BankDefinedProductandServiceTerm:
      description: BankDefinedProductandServiceTerm
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BankDefinedProductandServiceTerm'
    CustomerDefinedProductandServiceTerm:
      description: CustomerDefinedProductandServiceTerm
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerDefinedProductandServiceTerm'
  parameters:
    customerpropositionid:
      name: customerpropositionid
      in: path
      required: true
      style: simple
      schema:
        type: string
    bankdefinedproductandservicetermid:
      name: bankdefinedproductandservicetermid
      in: path
      required: true
      style: simple
      schema:
        type: string
    customerdefinedproductandservicetermid:
      name: customerdefinedproductandservicetermid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    CustomerPropositionAgreement:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerPropositionAgreement'
      required: true
    BankDefinedProductandServiceTerm:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BankDefinedProductandServiceTerm'
      required: true
    CustomerDefinedProductandServiceTerm:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerDefinedProductandServiceTerm'
      required: true