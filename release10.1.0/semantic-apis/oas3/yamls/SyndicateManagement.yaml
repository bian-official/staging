openapi: 3.0.1
info:
  title: Syndicate Management
  description: This Service Domain manages syndicate membership and compliance
  contact:
    name: BIAN
    url: https://bian.org
  version: '10.1.0'
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/SyndicateManagement/10.1.0
paths:
  '/SyndicateManagement/{syndicatemanagementid}/Control':
    put:
      tags:
        - CR - SyndicateMembership
      summary: Control Syndicate Membership
      description: Control Syndicate Membership
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/syndicatemanagementid'
      requestBody:
        $ref: '#/components/requestBodies/SyndicateMembership'
      responses:
        '200':
          $ref: '#/components/responses/SyndicateMembership'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SyndicateManagement/{syndicatemanagementid}/Grant':
    put:
      tags:
        - CR - SyndicateMembership
      summary: Grant Syndicate Membership
      description: Grant Syndicate Membership
      operationId: Grant
      parameters:
        - $ref: '#/components/parameters/syndicatemanagementid'
      requestBody:
        $ref: '#/components/requestBodies/SyndicateMembership'
      responses:
        '200':
          $ref: '#/components/responses/SyndicateMembership'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SyndicateManagement/{syndicatemanagementid}/Notify':
    get:
      tags:
        - CR - SyndicateMembership
      summary: Notify Syndicate Membership
      description: Notify Syndicate Membership
      operationId: Notify
      parameters:
        - $ref: '#/components/parameters/syndicatemanagementid'
      responses:
        '200':
          $ref: '#/components/responses/SyndicateMembership'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /SyndicateManagement/Register:
    post:
      tags:
        - CR - SyndicateMembership
      summary: Register Syndicate Membership
      description: Register Syndicate Membership
      operationId: Register
      requestBody:
        $ref: '#/components/requestBodies/SyndicateMembership'
      responses:
        '200':
          $ref: '#/components/responses/SyndicateMembership'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SyndicateManagement/{syndicatemanagementid}/Request':
    put:
      tags:
        - CR - SyndicateMembership
      summary: Request Syndicate Membership
      description: Request Syndicate Membership
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/syndicatemanagementid'
      requestBody:
        $ref: '#/components/requestBodies/SyndicateMembership'
      responses:
        '200':
          $ref: '#/components/responses/SyndicateMembership'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SyndicateManagement/{syndicatemanagementid}/Retrieve':
    get:
      tags:
        - CR - SyndicateMembership
      summary: Retrieve Syndicate Membership
      description: Retrieve Syndicate Membership
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/syndicatemanagementid'
      responses:
        '200':
          $ref: '#/components/responses/SyndicateMembership'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SyndicateManagement/{syndicatemanagementid}/Update':
    put:
      tags:
        - CR - SyndicateMembership
      summary: Update Syndicate Membership
      description: Update Syndicate Membership
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/syndicatemanagementid'
      requestBody:
        $ref: '#/components/requestBodies/SyndicateMembership'
      responses:
        '200':
          $ref: '#/components/responses/SyndicateMembership'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SyndicateManagement/{syndicatemanagementid}/SyndicateComplianceClauses/{syndicatecomplianceclausesid}/Notify':
    get:
      tags:
        - BQ - SyndicateComplianceClauses
      summary: Notify Syndicate Compliance Clauses
      description: Notify Syndicate Compliance Clauses
      operationId: NotifySyndicateComplianceClauses
      parameters:
        - $ref: '#/components/parameters/syndicatemanagementid'
        - $ref: '#/components/parameters/syndicatecomplianceclausesid'
      responses:
        '200':
          $ref: '#/components/responses/NotifySyndicateComplianceClausesResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SyndicateManagement/{syndicatemanagementid}/SyndicateEligibilityClauses/{syndicateeligibilityclausesid}/Notify':
    get:
      tags:
        - BQ - SyndicateEligibilityClauses
      summary: Notify Syndicate Eligibility Clauses
      description: Notify Syndicate Eligibility Clauses
      operationId: NotifySyndicateEligibilityClauses
      parameters:
        - $ref: '#/components/parameters/syndicatemanagementid'
        - $ref: '#/components/parameters/syndicateeligibilityclausesid'
      responses:
        '200':
          $ref: '#/components/responses/NotifySyndicateEligibilityClausesResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SyndicateManagement/{syndicatemanagementid}/SyndicateComplianceClauses/{syndicatecomplianceclausesid}/Retrieve':
    get:
      tags:
        - BQ - SyndicateComplianceClauses
      summary: Retrieve Syndicate Compliance Clauses
      description: Retrieve Syndicate Compliance Clauses
      operationId: RetrieveSyndicateComplianceClauses
      parameters:
        - $ref: '#/components/parameters/syndicatemanagementid'
        - $ref: '#/components/parameters/syndicatecomplianceclausesid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveSyndicateComplianceClausesResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SyndicateManagement/{syndicatemanagementid}/SyndicateEligibilityClauses/{syndicateeligibilityclausesid}/Retrieve':
    get:
      tags:
        - BQ - SyndicateEligibilityClauses
      summary: Retrieve Syndicate Eligibility Clauses
      description: Retrieve Syndicate Eligibility Clauses
      operationId: RetrieveSyndicateEligibilityClauses
      parameters:
        - $ref: '#/components/parameters/syndicatemanagementid'
        - $ref: '#/components/parameters/syndicateeligibilityclausesid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveSyndicateEligibilityClausesResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SyndicateManagement/{syndicatemanagementid}/SyndicateComplianceClauses/{syndicatecomplianceclausesid}/Update':
    put:
      tags:
        - BQ - SyndicateComplianceClauses
      summary: Update Syndicate Compliance Clauses
      description: Update Syndicate Compliance Clauses
      operationId: UpdateSyndicateComplianceClauses
      parameters:
        - $ref: '#/components/parameters/syndicatemanagementid'
        - $ref: '#/components/parameters/syndicatecomplianceclausesid'
      requestBody:
        $ref: '#/components/requestBodies/UpdateSyndicateComplianceClausesRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateSyndicateComplianceClausesResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SyndicateManagement/{syndicatemanagementid}/SyndicateEligibilityClauses/{syndicateeligibilityclausesid}/Update':
    put:
      tags:
        - BQ - SyndicateEligibilityClauses
      summary: Update Syndicate Eligibility Clauses
      description: Update Syndicate Eligibility Clauses
      operationId: UpdateSyndicateEligibilityClauses
      parameters:
        - $ref: '#/components/parameters/syndicatemanagementid'
        - $ref: '#/components/parameters/syndicateeligibilityclausesid'
      requestBody:
        $ref: '#/components/requestBodies/UpdateSyndicateEligibilityClausesRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateSyndicateEligibilityClausesResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    object:
      type: object
      properties:
        Object:
          type: string
          description: ''
          format: datatype
      description: Reference to Syndicate Compliance Clauses
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: The type of Syndicate Compliance Clauses
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: ''
    businessservice:
      type: object
      properties:
        BusinessServiceName:
          $ref: '#/components/schemas/name'
        BusinessServiceType:
          type: string
          description: ''
          format: businessservicetypevalues(enumeration)
        BusinessServiceDescription:
          $ref: '#/components/schemas/text'
      description: The Syndicate Compliance Clauses specific Business Service
    involvedparty:
      type: object
      properties:
        Involvedparty:
          type: string
          description: ''
          format: datatype
      description: The operating unit/employee responsible for governing Syndicate Compliance Clauses by applying the Syndicate Compliance Clauses clause
    condition:
      type: object
      properties:
        Condition:
          type: string
          description: "Condition is a premise upon which the fulfillment of an agreement depends \n\nGeneral and special arrangements, provisions, requirements, rules, specifications, and standards that form an integral part of an agreement or contract.\n\nRead more: http://www.businessdictionary.com/definition/terms-and-conditions.html\n\n"
          format: class(class)
      description: The completion status once Syndicate Compliance Clauses has been governed by applying the Syndicate Compliance Clauses clause
    schedule:
      type: object
      properties:
        Schedule:
          type: string
          description: "Defined sequence of planned tasks/actions or a timetable of available services\n\nA schedule is a time based series of something"
          format: datatype
      description: The timing and key actions/milestones involved in governing Syndicate Compliance Clauses by applying the Syndicate Compliance Clauses clause
    SyndicateComplianceClauses:
      type: object
      properties:
        SyndicateMembershipReference:
          $ref: '#/components/schemas/object'
        SyndicateComplianceClausesReference:
          $ref: '#/components/schemas/object'
        SyndicateComplianceClausesType:
          $ref: '#/components/schemas/text'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        BusinessUnit/EmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        Postconditions:
          $ref: '#/components/schemas/condition'
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
      description: The Syndicate Compliance Clauses defines a particular clause or consideration that is applied to determine eligibility for Syndicate Compliance Clauses
    SyndicateEligibilityClauses:
      type: object
      properties:
        SyndicateMembershipReference:
          $ref: '#/components/schemas/object'
        SyndicateEligibilityClausesReference:
          $ref: '#/components/schemas/object'
        SyndicateEligibilityClausesType:
          $ref: '#/components/schemas/text'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        BusinessUnit/EmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        Postconditions:
          $ref: '#/components/schemas/condition'
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
      description: The Syndicate Compliance Clauses defines a particular clause or consideration that is applied to determine eligibility for Syndicate Compliance Clauses
    task:
      type: object
      properties:
        Task:
          type: string
          description: ''
          format: datatype
      description: ''
    directoryentrydatetypevalues:
      enum:
        - OpenDate
        - RefreshDate
      type: string
      description: ">\n* `OpenDate` - \n* `RefreshDate` - \n"
    date:
      type: object
      properties:
        Date:
          type: string
          description: "A date is a Gregorian calendar representation in various common resolutions: year, month, week, day. (UN/CEFACT)\n\nA particular point in the progression of time in a calendar year expressed in the YYYY-MM-DD format. This representation is defined in \"XML Schema Part 2: Datatypes Second Edition - W3C Recommendation 28 October 2004\" which is aligned with ISO 8601. (ISO20022)"
          format: datatype
      description: ''
    status:
      type: object
      properties:
        Status:
          type: string
          description: A characteristic that describe the object by referring to a state transition in its lifecycle.
          format: datatype
      description: ''
    directoryentry:
      type: object
      properties:
        DirectoryEntryDateType:
          $ref: '#/components/schemas/directoryentrydatetypevalues'
        DirectoryEntryDate:
          $ref: '#/components/schemas/date'
        DirectoryEntryStatus:
          $ref: '#/components/schemas/status'
      description: ''
    SyndicateManagementOutcome:
      type: object
      properties:
        SyndicateManagementTask:
          $ref: '#/components/schemas/task'
        SyndicateManagementEntry:
          $ref: '#/components/schemas/directoryentry'
      description: The Syndicate Compliance Clauses defines a particular clause or consideration that is applied to determine eligibility for Syndicate Compliance Clauses
    servicetype:
      type: object
      properties:
        Servicetype:
          type: string
          description: Data type specifies the classification of service
          format: datatype
      description: ''
    service:
      type: object
      properties:
        ServiceName:
          $ref: '#/components/schemas/name'
        ServiceDescription:
          $ref: '#/components/schemas/text'
        ServiceType:
          $ref: '#/components/schemas/servicetype'
      description: A selected optional business service as subject matter of Syndicate Membership
    instructionlifecyclestatus:
      type: object
      properties:
        Instructionlifecyclestatus:
          type: string
          description: 'Data type that specifies the LifecycleStatus of instruction (e.g., requested, executed, fulfilled, etc.); '
          format: datatype
      description: 'A characteristic of instruction which refers to the LifecycleStatus of instruction (e.g., requested, executed, fulfilled, etc.); '
    identifier:
      type: object
      properties:
        Identifier:
          type: string
          description: An identifier is a character string used to uniquely identify one instance of an object within an identification scheme that is managed by an agency. (UN/CEFAT)
          format: datatype
      description: "An identifier that allows to uniquely refer to an instance of an Instruction.\n"
    instructiontypevalues:
      enum:
        - PaymentInstruction
        - DeliveryOrder
        - InformationRequest
        - ExchangeInstruction
        - AllocationInstruction
      type: string
      description: ">\n* `PaymentInstruction` - \n* `DeliveryOrder` - \n* `InformationRequest` - \n* `ExchangeInstruction` - \n* `AllocationInstruction` - \n"
    log:
      type: object
      properties:
        LogType:
          type: string
          description: ''
          format: string
        LogPeriod:
          type: string
          description: ''
          format: string
        LogDate:
          type: string
          description: Key dates associated with the log (e.g. start time).
          format: string
        LogIdentification:
          type: string
          description: ''
          format: string
      description: ''
    instruction:
      type: object
      properties:
        InstructionDueDate:
          $ref: '#/components/schemas/date'
        InstructionStatus:
          $ref: '#/components/schemas/instructionlifecyclestatus'
        InstructionIdentifier:
          $ref: '#/components/schemas/identifier'
        InstructionType:
          $ref: '#/components/schemas/instructiontypevalues'
        InstructionResult:
          $ref: '#/components/schemas/text'
        InstructionDescription:
          $ref: '#/components/schemas/text'
        InstructionLog:
          $ref: '#/components/schemas/log'
        InstructionPurpose:
          $ref: '#/components/schemas/text'
      description: Request to enroll Syndicate Membership
    goal:
      type: object
      properties:
        GoalType:
          type: string
          description: The type of goal
          format: string
        GoalDefinition:
          type: string
          description: 'A definition of the goal, including the intended actions required to achieve the goal'
          format: string
        GoalOrganization:
          type: string
          description: Identifies the interested parties and their roles and responsibilities for the specific actions supporting the achievement of the goal
          format: string
        GoalResult:
          type: string
          description: 'Assessment of how the work is progressing towards achieving the goal, including projections of likely outcomes'
          format: string
      description: ''
    budgettype:
      type: object
      properties:
        Budgettype:
          type: string
          description: ''
          format: datatype
      description: A Classification value that specifies the type of Budget
    amount:
      type: object
      properties:
        Amount:
          type: string
          description: "Number of monetary units specified in a currency, where the unit of currency is explicit and compliant with ISO 4217. (UN/CEFACT)\n\nThe decimal seperator is a dot.\n\n\nNumber of monetary units specified in a currency, where the unit of currency is explicit and compliant with ISO 4217. The decimal separator is a dot. (ISO20022)\nNote: A zero amount is considered a positive amount.\n- total number of digits: 18\n- number of digits in fractional part: 5\n- minInclusive: 0"
          format: datatype
      description: ''
    budgetarrangement:
      type: object
      properties:
        BudgetType:
          $ref: '#/components/schemas/budgettype'
        BudgetAmount:
          $ref: '#/components/schemas/amount'
      description: 'An arrangement which is specifying an estimate of costs, revenues, and resources over a specified period, reflecting a reading of future financial conditions and goals. (adapted from Business Dictionary)'
    plannedaction:
      type: object
      properties:
        PlannedAction:
          type: string
          description: 'An action that is arranged in a plan for doing or achieving something '
          format: class(class)
      description: 'An action that is arranged in a plan for doing or achieving something '
    plantype:
      type: object
      properties:
        Plantype:
          type: string
          description: 'Data type specifies the classification of a Plan '
          format: datatype
      description: A Classification value that specifies the type of Plan
    datetimeperiod:
      type: object
      properties:
        Datetimeperiod:
          type: string
          description: 'Time span defined by a start date and time, and an end date and time. (ISO20022)'
          format: datatype
      description: ''
    plan:
      type: object
      properties:
        PlanGoal:
          $ref: '#/components/schemas/goal'
        PlanBudget:
          $ref: '#/components/schemas/budgetarrangement'
        PlannedAction:
          $ref: '#/components/schemas/plannedaction'
        PlanType:
          $ref: '#/components/schemas/plantype'
        PlanOrganisation:
          type: string
          description: ''
          format: string
        PlanValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PlanDescription:
          $ref: '#/components/schemas/text'
      description: Reference to  Syndicate Membership Plan
    actiontypevalues:
      enum:
        - Initiate
        - Execute
        - Create
        - Transfer
        - Pay
        - Deliver
      type: string
      description: ">\n* `Initiate` - \n* `Execute` - \n* `Create` - \n* `Transfer` - \n* `Pay` - \n* `Deliver` - \n"
    action:
      type: object
      properties:
        ActionType:
          $ref: '#/components/schemas/actiontypevalues'
      description: ''
    datetime:
      type: object
      properties:
        Datetime:
          type: string
          description: "A date time identifies a date and time of day to various common resolutions: year, month, week, day, hour, minute, second, and fraction of second. (UN/CEFACT)\n\nA particular point in the progression of time defined by a mandatory date and a mandatory time component, expressed in either UTC time format (YYYY-MM-DDThh:mm:ss.sssZ), local time with UTC offset format (YYYY-MM-DDThh:mm:ss.sss+/-hh:mm), or local time format (YYYY-MM-DDThh:mm:ss.sss). These representations are defined in \"XML Schema Part 2: Datatypes Second Edition - W3C Recommendation 28 October 2004\" which is aligned with ISO 8601. (ISO20022)\nNote on the time format:\n1) beginning / end of calendar day\n00:00:00 = the beginning of a calendar day\n24:00:00 = the end of a calendar day\n2) fractions of second in time format\nDecimal fractions of seconds may be included. In this case, the involved parties shall agree on the maximum number of digits that are allowed."
          format: datatype
      description: ''
    arrangementlifecyclestatus:
      type: object
      properties:
        Arrangementlifecyclestatus:
          type: string
          description: 'Data type that specifies the LifecycleStatus of arrangement (e.g., requested, proposed, offered, accepted, cancelled, terminated, fulfilled, etc.).'
          format: datatype
      description: 'A characteristic of arrangement which refers to the LifecycleStatus of arrangement (e.g., requested, proposed, offered, accepted, cancelled, terminated, fulfilled, etc.)'
    subject:
      type: object
      properties:
        Subject:
          type: string
          description: A thing that is discussed or dealt whit in agreement/arrangement about doing or not doing (as action) something.
          format: class(class)
      description: ''
    arrangement:
      type: object
      properties:
        ArrangementAction:
          $ref: '#/components/schemas/action'
        ArrangementStartDate:
          $ref: '#/components/schemas/datetime'
        ArrangementEndDate:
          $ref: '#/components/schemas/datetime'
        ArrangementStatus:
          $ref: '#/components/schemas/arrangementlifecyclestatus'
        ArrangementSubjectMatter:
          $ref: '#/components/schemas/subject'
      description: Liability or duty to do something under the terms of Syndicate Membership
    SyndicateMembership:
      type: object
      properties:
        SyndicateMembershipParameterType:
          $ref: '#/components/schemas/text'
        SyndicateMembershipSelectedOption:
          $ref: '#/components/schemas/service'
        SyndicateMembershipRequest:
          $ref: '#/components/schemas/instruction'
        SyndicateMembershipPlan:
          $ref: '#/components/schemas/plan'
        SyndicateMembershipObligation:
          $ref: '#/components/schemas/arrangement'
        SyndicateMembershipEntitlement:
          $ref: '#/components/schemas/arrangement'
        SyndicateMembershipReference:
          $ref: '#/components/schemas/object'
      description: 'Maintain a membership for some group or related collection of parties within Syndicate Management. '
    NotifySyndicateComplianceClausesRequest:
      type: object
      properties:
        SyndicateComplianceClauses:
          type: object
          properties:
            SyndicateMembershipReference:
              $ref: '#/components/schemas/object'
            SyndicateComplianceClausesReference:
              $ref: '#/components/schemas/object'
            SyndicateComplianceClausesType:
              $ref: '#/components/schemas/text'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Postconditions:
              $ref: '#/components/schemas/condition'
            Preconditions:
              $ref: '#/components/schemas/condition'
            Schedule:
              $ref: '#/components/schemas/schedule'
      description: 'Input: Notify Syndicate Compliance Clauses'
    NotifySyndicateComplianceClausesResponse:
      type: object
      properties:
        SyndicateComplianceClauses:
          type: object
          properties:
            SyndicateMembershipReference:
              $ref: '#/components/schemas/object'
            SyndicateComplianceClausesReference:
              $ref: '#/components/schemas/object'
            SyndicateComplianceClausesType:
              $ref: '#/components/schemas/text'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Postconditions:
              $ref: '#/components/schemas/condition'
            Preconditions:
              $ref: '#/components/schemas/condition'
            Schedule:
              $ref: '#/components/schemas/schedule'
      description: 'Output: Notify Syndicate Compliance Clauses'
    NotifySyndicateEligibilityClausesRequest:
      type: object
      properties:
        SyndicateEligibilityClauses:
          type: object
          properties:
            SyndicateMembershipReference:
              $ref: '#/components/schemas/object'
            SyndicateEligibilityClausesReference:
              $ref: '#/components/schemas/object'
            SyndicateEligibilityClausesType:
              $ref: '#/components/schemas/text'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Postconditions:
              $ref: '#/components/schemas/condition'
            Preconditions:
              $ref: '#/components/schemas/condition'
            Schedule:
              $ref: '#/components/schemas/schedule'
      description: 'Input: Notify Syndicate Eligibility Clauses'
    NotifySyndicateEligibilityClausesResponse:
      type: object
      properties:
        SyndicateEligibilityClauses:
          type: object
          properties:
            SyndicateMembershipReference:
              $ref: '#/components/schemas/object'
            SyndicateEligibilityClausesReference:
              $ref: '#/components/schemas/object'
            SyndicateEligibilityClausesType:
              $ref: '#/components/schemas/text'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Postconditions:
              $ref: '#/components/schemas/condition'
            Preconditions:
              $ref: '#/components/schemas/condition'
            Schedule:
              $ref: '#/components/schemas/schedule'
      description: 'Output: Notify Syndicate Eligibility Clauses'
    RetrieveSyndicateComplianceClausesRequest:
      type: object
      properties:
        SyndicateComplianceClauses:
          type: object
          properties:
            SyndicateMembershipReference:
              $ref: '#/components/schemas/object'
            SyndicateComplianceClausesReference:
              $ref: '#/components/schemas/object'
            SyndicateComplianceClausesType:
              $ref: '#/components/schemas/text'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Postconditions:
              $ref: '#/components/schemas/condition'
            Preconditions:
              $ref: '#/components/schemas/condition'
            Schedule:
              $ref: '#/components/schemas/schedule'
      description: 'Input: Retrieve Syndicate Compliance Clauses'
    RetrieveSyndicateComplianceClausesResponse:
      type: object
      properties:
        SyndicateComplianceClauses:
          type: object
          properties:
            SyndicateMembershipReference:
              $ref: '#/components/schemas/object'
            SyndicateComplianceClausesReference:
              $ref: '#/components/schemas/object'
            SyndicateComplianceClausesType:
              $ref: '#/components/schemas/text'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Postconditions:
              $ref: '#/components/schemas/condition'
            Preconditions:
              $ref: '#/components/schemas/condition'
            Schedule:
              $ref: '#/components/schemas/schedule'
      description: 'Output: Retrieve Syndicate Compliance Clauses'
    RetrieveSyndicateEligibilityClausesRequest:
      type: object
      properties:
        SyndicateEligibilityClauses:
          type: object
          properties:
            SyndicateMembershipReference:
              $ref: '#/components/schemas/object'
            SyndicateEligibilityClausesReference:
              $ref: '#/components/schemas/object'
            SyndicateEligibilityClausesType:
              $ref: '#/components/schemas/text'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Postconditions:
              $ref: '#/components/schemas/condition'
            Preconditions:
              $ref: '#/components/schemas/condition'
            Schedule:
              $ref: '#/components/schemas/schedule'
      description: 'Input: Retrieve Syndicate Eligibility Clauses'
    RetrieveSyndicateEligibilityClausesResponse:
      type: object
      properties:
        SyndicateEligibilityClauses:
          type: object
          properties:
            SyndicateMembershipReference:
              $ref: '#/components/schemas/object'
            SyndicateEligibilityClausesReference:
              $ref: '#/components/schemas/object'
            SyndicateEligibilityClausesType:
              $ref: '#/components/schemas/text'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Postconditions:
              $ref: '#/components/schemas/condition'
            Preconditions:
              $ref: '#/components/schemas/condition'
            Schedule:
              $ref: '#/components/schemas/schedule'
      description: 'Output: Retrieve Syndicate Eligibility Clauses'
    UpdateSyndicateComplianceClausesRequest:
      type: object
      properties:
        SyndicateComplianceClauses:
          type: object
          properties:
            SyndicateMembershipReference:
              $ref: '#/components/schemas/object'
            SyndicateComplianceClausesReference:
              $ref: '#/components/schemas/object'
            SyndicateComplianceClausesType:
              $ref: '#/components/schemas/text'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Postconditions:
              $ref: '#/components/schemas/condition'
            Preconditions:
              $ref: '#/components/schemas/condition'
            Schedule:
              $ref: '#/components/schemas/schedule'
      description: 'Input: Update Syndicate Compliance Clauses'
    UpdateSyndicateComplianceClausesResponse:
      type: object
      properties:
        SyndicateComplianceClauses:
          type: object
          properties:
            SyndicateMembershipReference:
              $ref: '#/components/schemas/object'
            SyndicateComplianceClausesReference:
              $ref: '#/components/schemas/object'
            SyndicateComplianceClausesType:
              $ref: '#/components/schemas/text'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Postconditions:
              $ref: '#/components/schemas/condition'
            Preconditions:
              $ref: '#/components/schemas/condition'
            Schedule:
              $ref: '#/components/schemas/schedule'
      description: 'Output: Update Syndicate Compliance Clauses'
    UpdateSyndicateEligibilityClausesRequest:
      type: object
      properties:
        SyndicateEligibilityClauses:
          type: object
          properties:
            SyndicateMembershipReference:
              $ref: '#/components/schemas/object'
            SyndicateEligibilityClausesReference:
              $ref: '#/components/schemas/object'
            SyndicateEligibilityClausesType:
              $ref: '#/components/schemas/text'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Postconditions:
              $ref: '#/components/schemas/condition'
            Preconditions:
              $ref: '#/components/schemas/condition'
            Schedule:
              $ref: '#/components/schemas/schedule'
      description: 'Input: Update Syndicate Eligibility Clauses'
    UpdateSyndicateEligibilityClausesResponse:
      type: object
      properties:
        SyndicateEligibilityClauses:
          type: object
          properties:
            SyndicateMembershipReference:
              $ref: '#/components/schemas/object'
            SyndicateEligibilityClausesReference:
              $ref: '#/components/schemas/object'
            SyndicateEligibilityClausesType:
              $ref: '#/components/schemas/text'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Postconditions:
              $ref: '#/components/schemas/condition'
            Preconditions:
              $ref: '#/components/schemas/condition'
            Schedule:
              $ref: '#/components/schemas/schedule'
      description: 'Output: Update Syndicate Eligibility Clauses'
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    SyndicateMembership:
      description: SyndicateMembership
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SyndicateMembership'
    NotifySyndicateComplianceClausesResponse:
      description: NotifySyndicateComplianceClausesResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotifySyndicateComplianceClausesResponse'
    NotifySyndicateEligibilityClausesResponse:
      description: NotifySyndicateEligibilityClausesResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotifySyndicateEligibilityClausesResponse'
    RetrieveSyndicateComplianceClausesResponse:
      description: RetrieveSyndicateComplianceClausesResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveSyndicateComplianceClausesResponse'
    RetrieveSyndicateEligibilityClausesResponse:
      description: RetrieveSyndicateEligibilityClausesResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveSyndicateEligibilityClausesResponse'
    UpdateSyndicateComplianceClausesResponse:
      description: UpdateSyndicateComplianceClausesResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateSyndicateComplianceClausesResponse'
    UpdateSyndicateEligibilityClausesResponse:
      description: UpdateSyndicateEligibilityClausesResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateSyndicateEligibilityClausesResponse'
  parameters:
    syndicatemanagementid:
      name: syndicatemanagementid
      in: path
      required: true
      style: simple
      schema:
        type: string
    syndicatecomplianceclausesid:
      name: syndicatecomplianceclausesid
      in: path
      required: true
      style: simple
      schema:
        type: string
    syndicateeligibilityclausesid:
      name: syndicateeligibilityclausesid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    SyndicateMembership:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SyndicateMembership'
      required: true
    UpdateSyndicateComplianceClausesRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateSyndicateComplianceClausesRequest'
      required: true
    UpdateSyndicateEligibilityClausesRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateSyndicateEligibilityClausesRequest'
      required: true