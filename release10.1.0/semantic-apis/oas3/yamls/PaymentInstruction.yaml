openapi: 3.0.1
info:
  title: Payment Instruction
  description: This Service Domain processes the pre-checks needed to confirm the necessary arrangements are in place and assemble and rout payment related requests received from third party payment services.
  contact:
    name: BIAN
    url: https://bian.org
  version: '10.1.0'
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/PaymentInstruction/10.1.0
paths:
  '/PaymentInstruction/{paymentinstructionid}/Control':
    put:
      tags:
        - CR - PaymentInstructionProcedure
      summary: Control Payment Instruction Procedure
      description: Control Payment Instruction Procedure
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/paymentinstructionid'
      requestBody:
        $ref: '#/components/requestBodies/ControlPaymentInstructionProcedureRequest'
      responses:
        '200':
          $ref: '#/components/responses/ControlPaymentInstructionProcedureResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PaymentInstruction/{paymentinstructionid}/Exchange':
    put:
      tags:
        - CR - PaymentInstructionProcedure
      summary: Exchange Payment Instruction Procedure
      description: Exchange Payment Instruction Procedure
      operationId: Exchange
      parameters:
        - $ref: '#/components/parameters/paymentinstructionid'
      requestBody:
        $ref: '#/components/requestBodies/ExchangePaymentInstructionProcedureRequest'
      responses:
        '200':
          $ref: '#/components/responses/ExchangePaymentInstructionProcedureResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PaymentInstruction/{paymentinstructionid}/Execute':
    put:
      tags:
        - CR - PaymentInstructionProcedure
      summary: Execute Payment Instruction Procedure
      description: Execute Payment Instruction Procedure
      operationId: Execute
      parameters:
        - $ref: '#/components/parameters/paymentinstructionid'
      requestBody:
        $ref: '#/components/requestBodies/ExecutePaymentInstructionProcedureRequest'
      responses:
        '200':
          $ref: '#/components/responses/ExecutePaymentInstructionProcedureResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /PaymentInstruction/Initiate:
    post:
      tags:
        - CR - PaymentInstructionProcedure
      summary: Initiate Payment Instruction Procedure
      description: Initiate Payment Instruction Procedure
      operationId: Initiate
      requestBody:
        $ref: '#/components/requestBodies/InitiatePaymentInstructionProcedureRequest'
      responses:
        '200':
          $ref: '#/components/responses/InitiatePaymentInstructionProcedureResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PaymentInstruction/{paymentinstructionid}/Notify':
    get:
      tags:
        - CR - PaymentInstructionProcedure
      summary: Notify Payment Instruction Procedure
      description: Notify Payment Instruction Procedure
      operationId: Notify
      parameters:
        - $ref: '#/components/parameters/paymentinstructionid'
      responses:
        '200':
          $ref: '#/components/responses/NotifyPaymentInstructionProcedureResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PaymentInstruction/{paymentinstructionid}/Request':
    put:
      tags:
        - CR - PaymentInstructionProcedure
      summary: Request Payment Instruction Procedure
      description: Request Payment Instruction Procedure
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/paymentinstructionid'
      requestBody:
        $ref: '#/components/requestBodies/RequestPaymentInstructionProcedureRequest'
      responses:
        '200':
          $ref: '#/components/responses/RequestPaymentInstructionProcedureResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PaymentInstruction/{paymentinstructionid}/Retrieve':
    get:
      tags:
        - CR - PaymentInstructionProcedure
      summary: Retrieve Payment Instruction Procedure
      description: Retrieve Payment Instruction Procedure
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/paymentinstructionid'
      responses:
        '200':
          $ref: '#/components/responses/RetrievePaymentInstructionProcedureResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PaymentInstruction/{paymentinstructionid}/Update':
    put:
      tags:
        - CR - PaymentInstructionProcedure
      summary: Update Payment Instruction Procedure
      description: Update Payment Instruction Procedure
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/paymentinstructionid'
      requestBody:
        $ref: '#/components/requestBodies/UpdatePaymentInstructionProcedureRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdatePaymentInstructionProcedureResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PaymentInstruction/{paymentinstructionid}/AgreementConfirmationWorkstep/{agreementconfirmationworkstepid}/Exchange':
    put:
      tags:
        - BQ - AgreementConfirmationWorkstep
      summary: Exchange Agreement Confirmation Workstep
      description: Exchange Agreement Confirmation Workstep
      operationId: ExchangeAgreementConfirmationWorkstep
      parameters:
        - $ref: '#/components/parameters/paymentinstructionid'
        - $ref: '#/components/parameters/agreementconfirmationworkstepid'
      requestBody:
        $ref: '#/components/requestBodies/AgreementConfirmationWorkstep'
      responses:
        '200':
          $ref: '#/components/responses/AgreementConfirmationWorkstep'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PaymentInstruction/{paymentinstructionid}/ComplianceCheckWorkstep/{compliancecheckworkstepid}/Exchange':
    put:
      tags:
        - BQ - ComplianceCheckWorkstep
      summary: Exchange Compliance Check Workstep
      description: Exchange Compliance Check Workstep
      operationId: ExchangeComplianceCheckWorkstep
      parameters:
        - $ref: '#/components/parameters/paymentinstructionid'
        - $ref: '#/components/parameters/compliancecheckworkstepid'
      requestBody:
        $ref: '#/components/requestBodies/ComplianceCheckWorkstep'
      responses:
        '200':
          $ref: '#/components/responses/ComplianceCheckWorkstep'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PaymentInstruction/{paymentinstructionid}/PaymentInstructionWorkstep/{paymentinstructionworkstepid}/Exchange':
    put:
      tags:
        - BQ - PaymentInstructionWorkstep
      summary: Exchange Payment Instruction Workstep
      description: Exchange Payment Instruction Workstep
      operationId: ExchangePaymentInstructionWorkstep
      parameters:
        - $ref: '#/components/parameters/paymentinstructionid'
        - $ref: '#/components/parameters/paymentinstructionworkstepid'
      requestBody:
        $ref: '#/components/requestBodies/PaymentInstructionWorkstep'
      responses:
        '200':
          $ref: '#/components/responses/PaymentInstructionWorkstep'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PaymentInstruction/{paymentinstructionid}/AgreementConfirmationWorkstep/{agreementconfirmationworkstepid}/Execute':
    put:
      tags:
        - BQ - AgreementConfirmationWorkstep
      summary: Execute Agreement Confirmation Workstep
      description: Execute Agreement Confirmation Workstep
      operationId: ExecuteAgreementConfirmationWorkstep
      parameters:
        - $ref: '#/components/parameters/paymentinstructionid'
        - $ref: '#/components/parameters/agreementconfirmationworkstepid'
      requestBody:
        $ref: '#/components/requestBodies/AgreementConfirmationWorkstep'
      responses:
        '200':
          $ref: '#/components/responses/AgreementConfirmationWorkstep'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PaymentInstruction/{paymentinstructionid}/ComplianceCheckWorkstep/{compliancecheckworkstepid}/Execute':
    put:
      tags:
        - BQ - ComplianceCheckWorkstep
      summary: Execute Compliance Check Workstep
      description: Execute Compliance Check Workstep
      operationId: ExecuteComplianceCheckWorkstep
      parameters:
        - $ref: '#/components/parameters/paymentinstructionid'
        - $ref: '#/components/parameters/compliancecheckworkstepid'
      requestBody:
        $ref: '#/components/requestBodies/ComplianceCheckWorkstep'
      responses:
        '200':
          $ref: '#/components/responses/ComplianceCheckWorkstep'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PaymentInstruction/{paymentinstructionid}/PaymentInstructionWorkstep/{paymentinstructionworkstepid}/Execute':
    put:
      tags:
        - BQ - PaymentInstructionWorkstep
      summary: Execute Payment Instruction Workstep
      description: Execute Payment Instruction Workstep
      operationId: ExecutePaymentInstructionWorkstep
      parameters:
        - $ref: '#/components/parameters/paymentinstructionid'
        - $ref: '#/components/parameters/paymentinstructionworkstepid'
      requestBody:
        $ref: '#/components/requestBodies/PaymentInstructionWorkstep'
      responses:
        '200':
          $ref: '#/components/responses/PaymentInstructionWorkstep'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PaymentInstruction/{paymentinstructionid}/AgreementConfirmationWorkstep/{agreementconfirmationworkstepid}/Initiate':
    post:
      tags:
        - BQ - AgreementConfirmationWorkstep
      summary: Initiate Agreement Confirmation Workstep
      description: Initiate Agreement Confirmation Workstep
      operationId: InitiateAgreementConfirmationWorkstep
      parameters:
        - $ref: '#/components/parameters/paymentinstructionid'
        - $ref: '#/components/parameters/agreementconfirmationworkstepid'
      requestBody:
        $ref: '#/components/requestBodies/AgreementConfirmationWorkstep'
      responses:
        '200':
          $ref: '#/components/responses/AgreementConfirmationWorkstep'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PaymentInstruction/{paymentinstructionid}/ComplianceCheckWorkstep/{compliancecheckworkstepid}/Initiate':
    post:
      tags:
        - BQ - ComplianceCheckWorkstep
      summary: Initiate Compliance Check Workstep
      description: Initiate Compliance Check Workstep
      operationId: InitiateComplianceCheckWorkstep
      parameters:
        - $ref: '#/components/parameters/paymentinstructionid'
        - $ref: '#/components/parameters/compliancecheckworkstepid'
      requestBody:
        $ref: '#/components/requestBodies/ComplianceCheckWorkstep'
      responses:
        '200':
          $ref: '#/components/responses/ComplianceCheckWorkstep'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PaymentInstruction/{paymentinstructionid}/PaymentInstructionWorkstep/{paymentinstructionworkstepid}/Initiate':
    post:
      tags:
        - BQ - PaymentInstructionWorkstep
      summary: Initiate Payment Instruction Workstep
      description: Initiate Payment Instruction Workstep
      operationId: InitiatePaymentInstructionWorkstep
      parameters:
        - $ref: '#/components/parameters/paymentinstructionid'
        - $ref: '#/components/parameters/paymentinstructionworkstepid'
      requestBody:
        $ref: '#/components/requestBodies/PaymentInstructionWorkstep'
      responses:
        '200':
          $ref: '#/components/responses/PaymentInstructionWorkstep'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PaymentInstruction/{paymentinstructionid}/AgreementConfirmationWorkstep/{agreementconfirmationworkstepid}/Notify':
    get:
      tags:
        - BQ - AgreementConfirmationWorkstep
      summary: Notify Agreement Confirmation Workstep
      description: Notify Agreement Confirmation Workstep
      operationId: NotifyAgreementConfirmationWorkstep
      parameters:
        - $ref: '#/components/parameters/paymentinstructionid'
        - $ref: '#/components/parameters/agreementconfirmationworkstepid'
      responses:
        '200':
          $ref: '#/components/responses/AgreementConfirmationWorkstep'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PaymentInstruction/{paymentinstructionid}/ComplianceCheckWorkstep/{compliancecheckworkstepid}/Notify':
    get:
      tags:
        - BQ - ComplianceCheckWorkstep
      summary: Notify Compliance Check Workstep
      description: Notify Compliance Check Workstep
      operationId: NotifyComplianceCheckWorkstep
      parameters:
        - $ref: '#/components/parameters/paymentinstructionid'
        - $ref: '#/components/parameters/compliancecheckworkstepid'
      responses:
        '200':
          $ref: '#/components/responses/ComplianceCheckWorkstep'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PaymentInstruction/{paymentinstructionid}/PaymentInstructionWorkstep/{paymentinstructionworkstepid}/Notify':
    get:
      tags:
        - BQ - PaymentInstructionWorkstep
      summary: Notify Payment Instruction Workstep
      description: Notify Payment Instruction Workstep
      operationId: NotifyPaymentInstructionWorkstep
      parameters:
        - $ref: '#/components/parameters/paymentinstructionid'
        - $ref: '#/components/parameters/paymentinstructionworkstepid'
      responses:
        '200':
          $ref: '#/components/responses/PaymentInstructionWorkstep'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PaymentInstruction/{paymentinstructionid}/AgreementConfirmationWorkstep/{agreementconfirmationworkstepid}/Request':
    put:
      tags:
        - BQ - AgreementConfirmationWorkstep
      summary: Request Agreement Confirmation Workstep
      description: Request Agreement Confirmation Workstep
      operationId: RequestAgreementConfirmationWorkstep
      parameters:
        - $ref: '#/components/parameters/paymentinstructionid'
        - $ref: '#/components/parameters/agreementconfirmationworkstepid'
      requestBody:
        $ref: '#/components/requestBodies/AgreementConfirmationWorkstep'
      responses:
        '200':
          $ref: '#/components/responses/AgreementConfirmationWorkstep'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PaymentInstruction/{paymentinstructionid}/ComplianceCheckWorkstep/{compliancecheckworkstepid}/Request':
    put:
      tags:
        - BQ - ComplianceCheckWorkstep
      summary: Request Compliance Check Workstep
      description: Request Compliance Check Workstep
      operationId: RequestComplianceCheckWorkstep
      parameters:
        - $ref: '#/components/parameters/paymentinstructionid'
        - $ref: '#/components/parameters/compliancecheckworkstepid'
      requestBody:
        $ref: '#/components/requestBodies/ComplianceCheckWorkstep'
      responses:
        '200':
          $ref: '#/components/responses/ComplianceCheckWorkstep'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PaymentInstruction/{paymentinstructionid}/PaymentInstructionWorkstep/{paymentinstructionworkstepid}/Request':
    put:
      tags:
        - BQ - PaymentInstructionWorkstep
      summary: Request Payment Instruction Workstep
      description: Request Payment Instruction Workstep
      operationId: RequestPaymentInstructionWorkstep
      parameters:
        - $ref: '#/components/parameters/paymentinstructionid'
        - $ref: '#/components/parameters/paymentinstructionworkstepid'
      requestBody:
        $ref: '#/components/requestBodies/PaymentInstructionWorkstep'
      responses:
        '200':
          $ref: '#/components/responses/PaymentInstructionWorkstep'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PaymentInstruction/{paymentinstructionid}/AgreementConfirmationWorkstep/{agreementconfirmationworkstepid}/Retrieve':
    get:
      tags:
        - BQ - AgreementConfirmationWorkstep
      summary: Retrieve Agreement Confirmation Workstep
      description: Retrieve Agreement Confirmation Workstep
      operationId: RetrieveAgreementConfirmationWorkstep
      parameters:
        - $ref: '#/components/parameters/paymentinstructionid'
        - $ref: '#/components/parameters/agreementconfirmationworkstepid'
      responses:
        '200':
          $ref: '#/components/responses/AgreementConfirmationWorkstep'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PaymentInstruction/{paymentinstructionid}/ComplianceCheckWorkstep/{compliancecheckworkstepid}/Retrieve':
    get:
      tags:
        - BQ - ComplianceCheckWorkstep
      summary: Retrieve Compliance Check Workstep
      description: Retrieve Compliance Check Workstep
      operationId: RetrieveComplianceCheckWorkstep
      parameters:
        - $ref: '#/components/parameters/paymentinstructionid'
        - $ref: '#/components/parameters/compliancecheckworkstepid'
      responses:
        '200':
          $ref: '#/components/responses/ComplianceCheckWorkstep'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PaymentInstruction/{paymentinstructionid}/PaymentInstructionWorkstep/{paymentinstructionworkstepid}/Retrieve':
    get:
      tags:
        - BQ - PaymentInstructionWorkstep
      summary: Retrieve Payment Instruction Workstep
      description: Retrieve Payment Instruction Workstep
      operationId: RetrievePaymentInstructionWorkstep
      parameters:
        - $ref: '#/components/parameters/paymentinstructionid'
        - $ref: '#/components/parameters/paymentinstructionworkstepid'
      responses:
        '200':
          $ref: '#/components/responses/PaymentInstructionWorkstep'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PaymentInstruction/{paymentinstructionid}/AgreementConfirmationWorkstep/{agreementconfirmationworkstepid}/Update':
    put:
      tags:
        - BQ - AgreementConfirmationWorkstep
      summary: Update Agreement Confirmation Workstep
      description: Update Agreement Confirmation Workstep
      operationId: UpdateAgreementConfirmationWorkstep
      parameters:
        - $ref: '#/components/parameters/paymentinstructionid'
        - $ref: '#/components/parameters/agreementconfirmationworkstepid'
      requestBody:
        $ref: '#/components/requestBodies/AgreementConfirmationWorkstep'
      responses:
        '200':
          $ref: '#/components/responses/AgreementConfirmationWorkstep'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PaymentInstruction/{paymentinstructionid}/ComplianceCheckWorkstep/{compliancecheckworkstepid}/Update':
    put:
      tags:
        - BQ - ComplianceCheckWorkstep
      summary: Update Compliance Check Workstep
      description: Update Compliance Check Workstep
      operationId: UpdateComplianceCheckWorkstep
      parameters:
        - $ref: '#/components/parameters/paymentinstructionid'
        - $ref: '#/components/parameters/compliancecheckworkstepid'
      requestBody:
        $ref: '#/components/requestBodies/ComplianceCheckWorkstep'
      responses:
        '200':
          $ref: '#/components/responses/ComplianceCheckWorkstep'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PaymentInstruction/{paymentinstructionid}/PaymentInstructionWorkstep/{paymentinstructionworkstepid}/Update':
    put:
      tags:
        - BQ - PaymentInstructionWorkstep
      summary: Update Payment Instruction Workstep
      description: Update Payment Instruction Workstep
      operationId: UpdatePaymentInstructionWorkstep
      parameters:
        - $ref: '#/components/parameters/paymentinstructionid'
        - $ref: '#/components/parameters/paymentinstructionworkstepid'
      requestBody:
        $ref: '#/components/requestBodies/PaymentInstructionWorkstep'
      responses:
        '200':
          $ref: '#/components/responses/PaymentInstructionWorkstep'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    condition:
      type: object
      properties:
        Condition:
          type: string
          description: "Condition is a premise upon which the fulfillment of an agreement depends \n\nGeneral and special arrangements, provisions, requirements, rules, specifications, and standards that form an integral part of an agreement or contract.\n\nRead more: http://www.businessdictionary.com/definition/terms-and-conditions.html\n\n"
          format: class
      description: The required status/situation and or tasks that need to be completed prior to the initiation of the workstep
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: Name by which a party is known and which is usually used to identify that party. (ISO20022)
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        Party:
          type: string
          description: "A party represents an autonomous entity in which a bank has a business interest. It has a legal definition and identity. A party is a Person, Organization, (a proposed definition for BIAN BOM adapted from BIAN Party Working Group) \n\n- Entity involved in an activity. (ISO20022)"
          format: class
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        Involvedparty:
          type: string
          description: ''
          format: datatype
      description: The operating unit/employee responsible for the workstep
    schedule:
      type: object
      properties:
        ScheduleType:
          type: string
          description: ''
          format: string
      description: The timing and key actions/milestones making up the workstep
    businessservice:
      type: object
      properties:
        BusinessServiceName:
          $ref: '#/components/schemas/name'
        BusinessService:
          type: string
          description: "A business service supports business capabilities through an explicitly defined interface and is explicitly governed by an organization. TOGAF 9.2\n\nA business service represents explicitly defined behavior that a business role, business actor, or business collaboration exposes to its environment. ArchiMate 3.1\n"
          format: class
      description: The Payment Instruction Workstep specific Business Service
    proceduretype:
      type: object
      properties:
        ProcedureTypeName:
          $ref: '#/components/schemas/name'
        Proceduretype:
          type: string
          description: Data type specifies the classification of procedure
          format: datatype
      description: A Classification value that distinguishes between the type of process undertaken within Procedure
    procedure:
      type: object
      properties:
        ProcedureType:
          $ref: '#/components/schemas/proceduretype'
        Procedure:
          type: string
          description: "A step-by-step sequence of activities or course of action to perform a supporting office activity within the enterprise.\n\nA procedure is a series of steps, taken together, to achieve a desired result. \n\nProcedure as Generic Artifact: The performance of a supporting office activity within the enterprise (not product/service fulfillment specific)"
          format: class
      description: Reference to Payment Instruction Workstep
    workstep:
      type: object
      properties:
        WorkstepResult:
          type: string
          description: ''
          format: string
        Workstep:
          type: string
          description: "A course of action must be followed to execute the procedure. \n\nWorksteps as Behaviour Qualifier Type: The main worksteps to be followed in the execution of the procedure"
          format: class
      description: Reference to Payment Instruction Workstep
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: The type of Payment Instruction Workstep
    PaymentInstructionWorkstep:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        BusinessUnitEmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        PaymentInstructionProcedureReference:
          $ref: '#/components/schemas/procedure'
        PaymentInstructionWorkstepReference:
          $ref: '#/components/schemas/workstep'
        PaymentInstructionWorkstepType:
          $ref: '#/components/schemas/text'
      description: A course of action for doing Payment Instruction Workstep in the context of executing the Payment Instruction Workstep
    AgreementConfirmationWorkstep:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        BusinessUnitEmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        PaymentInstructionProcedureReference:
          $ref: '#/components/schemas/procedure'
        AgreementConfirmationWorkstepReference:
          $ref: '#/components/schemas/workstep'
        AgreementConfirmationWorkstepType:
          $ref: '#/components/schemas/text'
      description: A course of action for doing Payment Instruction Workstep in the context of executing the Payment Instruction Workstep
    ComplianceCheckWorkstep:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        BusinessUnitEmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        PaymentInstructionProcedureReference:
          $ref: '#/components/schemas/procedure'
        ComplianceCheckWorkstepReference:
          $ref: '#/components/schemas/workstep'
        ComplianceCheckWorkstepType:
          $ref: '#/components/schemas/text'
      description: A course of action for doing Payment Instruction Workstep in the context of executing the Payment Instruction Workstep
    workproduct:
      type: object
      properties:
        WorkProductType:
          type: string
          description: ''
          format: workproducttypevalues
        Workproduct:
          type: string
          description: 'Contact records, working papers, documents and activity logs produced during the execution of a work task'
          format: datatype
      description: ''
    PaymentInstructionOutcome:
      type: object
      properties:
        PaymentInstructionWorkProduct:
          $ref: '#/components/schemas/workproduct'
        PaymentInstructionProcedure:
          $ref: '#/components/schemas/procedure'
      description: A course of action for doing Payment Instruction Workstep in the context of executing the Payment Instruction Workstep
    feature:
      type: object
      properties:
        FeatureType:
          type: string
          description: ''
          format: string
      description: A selected optional business service as subject matter of Payment Instruction Procedure
    date:
      type: object
      properties:
        DateContent:
          type: string
          description: ''
          format: string
      description: ''
    instructiondate:
      type: object
      properties:
        InstructionDate:
          $ref: '#/components/schemas/date'
        Instructiondate:
          type: string
          description: ''
          format: datatype
      description: ''
    instruction:
      type: object
      properties:
        InstructionDate:
          $ref: '#/components/schemas/instructiondate'
        Instruction:
          type: string
          description: 'A request to do something. '
          format: class
      description: Request to process Payment Instruction Procedure
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        Status:
          type: string
          description: A characteristic that describe the object by referring to a state transition in its lifecycle.
          format: datatype
      description: The status of Payment Instruction Procedure
    financialfacility:
      type: object
      properties:
        FinancialFacility:
          type: string
          description: "A production or operational capacity to perform a business function for delivering a banking product or service\n\nA functional classification of banking product that provides ongoing capacity to deliver financial services (e.g. loan service, payment service)\n\n\n"
          format: class
      description: Reference to the Financial Facility related to Payment Instruction Procedure
    servicetype:
      type: object
      properties:
        ServiceTypeName:
          $ref: '#/components/schemas/name'
        Servicetype:
          type: string
          description: Data type specifies the classification of service
          format: datatype
      description: A Classification value that distinguishes between the type of services in Payment Instruction Procedure
    value:
      type: object
      properties:
        Value:
          type: string
          description: 'A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)'
          format: datatype
      description: ''
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        Identifier:
          type: string
          description: An identifier is a character string used to uniquely identify one instance of an object within an identification scheme that is managed by an agency. (UN/CEFAT)
          format: datatype
      description: ''
    productidentification:
      type: object
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/identifier'
        Productidentification:
          type: string
          description: ''
          format: datatype
      description: The identifier of product e.g. ISIN Code.
    bankingproduct:
      type: object
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/productidentification'
        BankingProduct:
          type: string
          description: 'A package of services and/or goods, accompanied by term and condition which is offered as a whole to (internal or external) customers.'
          format: class
      description: Reference to the product or service that is related to Payment Instruction Procedure
    transaction:
      type: object
      properties:
        TransactionIdentification:
          $ref: '#/components/schemas/identifier'
        Transaction:
          type: string
          description: "A planned or performed action in the context of concluding or fulfilling an agreement. \n\nAct to do something."
          format: class
      description: Reference to the transaction that is related to Payment Instruction Procedure
    actiontypevalues:
      enum:
        - Initiate
        - Execute
        - Create
        - Transfer
        - Pay
        - Deliver
        - Apply
        - Calculate
      type: string
      description: ">\n* `Initiate` - \n* `Execute` - \n* `Create` - \n* `Transfer` - \n* `Pay` - \n* `Deliver` - \n* `Apply` - \n* `Calculate` - \n"
    action:
      type: object
      properties:
        ActionType:
          $ref: '#/components/schemas/actiontypevalues'
      description: ''
    arrangement:
      type: object
      properties:
        ArrangementAction:
          $ref: '#/components/schemas/action'
        Arrangement:
          type: string
          description: An agreed commitment to perform actions that meet obligations under an agreement
          format: class
      description: Reference to the Financial Transaction Arrangement that is related to Payment Instruction Procedure
    agreement:
      type: object
      properties:
        AgreementSignedDate:
          $ref: '#/components/schemas/date'
        Agreement:
          type: string
          description: 'A formal or informal common understanding between two or more (legal competent) parties concerning one or more subject matters expressed in a set of arrangements, terms and conditions. (adapted from Legal System and FIBO) '
          format: class
      description: Reference to the Customer Agreement that is related to Payment Instruction Procedure
    PaymentInstructionProcedure:
      type: object
      properties:
        PaymentInstructionProcedureParameterType:
          $ref: '#/components/schemas/text'
        PaymentInstructionProcedureSelectedOption:
          $ref: '#/components/schemas/feature'
        PaymentInstructionProcedureRequest:
          $ref: '#/components/schemas/instruction'
        PaymentInstructionProcedureSchedule:
          $ref: '#/components/schemas/schedule'
        PaymentInstructionProcedureStatus:
          $ref: '#/components/schemas/status'
        PaymentInstructionProcedureAssociatedPartyReference:
          $ref: '#/components/schemas/involvedparty'
        PaymentInstructionProcedureBusinessUnitReference:
          $ref: '#/components/schemas/involvedparty'
        PaymentInstructionProcedureServiceProviderReference:
          $ref: '#/components/schemas/involvedparty'
        PaymentInstructionProcedureFinancialFacilityReference:
          $ref: '#/components/schemas/financialfacility'
        PaymentInstructionProcedureEmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        PaymentInstructionProcedureCustomerReference:
          $ref: '#/components/schemas/involvedparty'
        PaymentInstructionProcedureType:
          $ref: '#/components/schemas/proceduretype'
        PaymentInstructionProcedureServiceProviderSchedule:
          $ref: '#/components/schemas/schedule'
        PaymentInstructionProcedureServiceType:
          $ref: '#/components/schemas/servicetype'
        PaymentInstructionProcedureProductandServiceType:
          type: string
          description: A Classification value that distinguishes between the type of products/services related to Payment Instruction Procedure
          format: bankingproducttype
        PaymentInstructionProcedureProductandServiceInstance:
          $ref: '#/components/schemas/bankingproduct'
        PaymentInstructionProcedureTransactionType:
          type: string
          description: A Classification value that distinguishes between the type of transactions in Payment Instruction Procedure
          format: transactiontype
        PaymentInstructionProcedureTransaction:
          $ref: '#/components/schemas/transaction'
        PaymentInstructionProcedureFinancialTransactionArrangement:
          $ref: '#/components/schemas/arrangement'
        PaymentInstructionProcedureCustomerAgreementReference:
          $ref: '#/components/schemas/agreement'
        PaymentInstructionProcedureReference:
          $ref: '#/components/schemas/procedure'
      description: 'Complete work tasks following a defined procedure in support of general office activities and product and service delivery within Payment Instruction. '
    ControlPaymentInstructionProcedureRequest:
      type: object
      properties:
        PaymentInstructionProcedure:
          type: object
          properties:
            PaymentInstructionProcedureParameterType:
              $ref: '#/components/schemas/text'
            PaymentInstructionProcedureSelectedOption:
              $ref: '#/components/schemas/feature'
            PaymentInstructionProcedureRequest:
              $ref: '#/components/schemas/instruction'
            PaymentInstructionProcedureSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureStatus:
              $ref: '#/components/schemas/status'
            PaymentInstructionProcedureAssociatedPartyReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureBusinessUnitReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureServiceProviderReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureFinancialFacilityReference:
              $ref: '#/components/schemas/financialfacility'
            PaymentInstructionProcedureEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureType:
              $ref: '#/components/schemas/proceduretype'
            PaymentInstructionProcedureServiceProviderSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureServiceType:
              $ref: '#/components/schemas/servicetype'
            PaymentInstructionProcedureProductandServiceType:
              type: string
              description: A Classification value that distinguishes between the type of products/services related to Payment Instruction Procedure
              format: bankingproducttype
            PaymentInstructionProcedureProductandServiceInstance:
              $ref: '#/components/schemas/bankingproduct'
            PaymentInstructionProcedureTransactionType:
              type: string
              description: A Classification value that distinguishes between the type of transactions in Payment Instruction Procedure
              format: transactiontype
            PaymentInstructionProcedureFinancialTransactionArrangement:
              $ref: '#/components/schemas/arrangement'
            PaymentInstructionProcedureCustomerAgreementReference:
              $ref: '#/components/schemas/agreement'
            PaymentInstructionProcedureReference:
              $ref: '#/components/schemas/procedure'
      description: 'Input: Control Payment Instruction Procedure'
    ControlPaymentInstructionProcedureResponse:
      type: object
      properties:
        PaymentInstructionProcedure:
          type: object
          properties:
            PaymentInstructionProcedureParameterType:
              $ref: '#/components/schemas/text'
            PaymentInstructionProcedureSelectedOption:
              $ref: '#/components/schemas/feature'
            PaymentInstructionProcedureRequest:
              $ref: '#/components/schemas/instruction'
            PaymentInstructionProcedureSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureStatus:
              $ref: '#/components/schemas/status'
            PaymentInstructionProcedureAssociatedPartyReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureBusinessUnitReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureServiceProviderReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureFinancialFacilityReference:
              $ref: '#/components/schemas/financialfacility'
            PaymentInstructionProcedureEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureType:
              $ref: '#/components/schemas/proceduretype'
            PaymentInstructionProcedureServiceProviderSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureServiceType:
              $ref: '#/components/schemas/servicetype'
            PaymentInstructionProcedureProductandServiceType:
              type: string
              description: A Classification value that distinguishes between the type of products/services related to Payment Instruction Procedure
              format: bankingproducttype
            PaymentInstructionProcedureProductandServiceInstance:
              $ref: '#/components/schemas/bankingproduct'
            PaymentInstructionProcedureTransactionType:
              type: string
              description: A Classification value that distinguishes between the type of transactions in Payment Instruction Procedure
              format: transactiontype
            PaymentInstructionProcedureFinancialTransactionArrangement:
              $ref: '#/components/schemas/arrangement'
            PaymentInstructionProcedureCustomerAgreementReference:
              $ref: '#/components/schemas/agreement'
            PaymentInstructionProcedureReference:
              $ref: '#/components/schemas/procedure'
      description: 'Output: Control Payment Instruction Procedure'
    ExchangePaymentInstructionProcedureRequest:
      type: object
      properties:
        PaymentInstructionProcedure:
          type: object
          properties:
            PaymentInstructionProcedureParameterType:
              $ref: '#/components/schemas/text'
            PaymentInstructionProcedureSelectedOption:
              $ref: '#/components/schemas/feature'
            PaymentInstructionProcedureRequest:
              $ref: '#/components/schemas/instruction'
            PaymentInstructionProcedureSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureStatus:
              $ref: '#/components/schemas/status'
            PaymentInstructionProcedureAssociatedPartyReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureBusinessUnitReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureServiceProviderReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureFinancialFacilityReference:
              $ref: '#/components/schemas/financialfacility'
            PaymentInstructionProcedureEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureType:
              $ref: '#/components/schemas/proceduretype'
            PaymentInstructionProcedureServiceProviderSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureServiceType:
              $ref: '#/components/schemas/servicetype'
            PaymentInstructionProcedureProductandServiceType:
              type: string
              description: A Classification value that distinguishes between the type of products/services related to Payment Instruction Procedure
              format: bankingproducttype
            PaymentInstructionProcedureProductandServiceInstance:
              $ref: '#/components/schemas/bankingproduct'
            PaymentInstructionProcedureTransactionType:
              type: string
              description: A Classification value that distinguishes between the type of transactions in Payment Instruction Procedure
              format: transactiontype
            PaymentInstructionProcedureFinancialTransactionArrangement:
              $ref: '#/components/schemas/arrangement'
            PaymentInstructionProcedureCustomerAgreementReference:
              $ref: '#/components/schemas/agreement'
            PaymentInstructionProcedureReference:
              $ref: '#/components/schemas/procedure'
      description: 'Input: Exchange Payment Instruction Procedure'
    ExchangePaymentInstructionProcedureResponse:
      type: object
      properties:
        PaymentInstructionProcedure:
          type: object
          properties:
            PaymentInstructionProcedureParameterType:
              $ref: '#/components/schemas/text'
            PaymentInstructionProcedureSelectedOption:
              $ref: '#/components/schemas/feature'
            PaymentInstructionProcedureRequest:
              $ref: '#/components/schemas/instruction'
            PaymentInstructionProcedureSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureStatus:
              $ref: '#/components/schemas/status'
            PaymentInstructionProcedureAssociatedPartyReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureBusinessUnitReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureServiceProviderReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureFinancialFacilityReference:
              $ref: '#/components/schemas/financialfacility'
            PaymentInstructionProcedureEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureType:
              $ref: '#/components/schemas/proceduretype'
            PaymentInstructionProcedureServiceProviderSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureServiceType:
              $ref: '#/components/schemas/servicetype'
            PaymentInstructionProcedureProductandServiceType:
              type: string
              description: A Classification value that distinguishes between the type of products/services related to Payment Instruction Procedure
              format: bankingproducttype
            PaymentInstructionProcedureProductandServiceInstance:
              $ref: '#/components/schemas/bankingproduct'
            PaymentInstructionProcedureTransactionType:
              type: string
              description: A Classification value that distinguishes between the type of transactions in Payment Instruction Procedure
              format: transactiontype
            PaymentInstructionProcedureFinancialTransactionArrangement:
              $ref: '#/components/schemas/arrangement'
            PaymentInstructionProcedureCustomerAgreementReference:
              $ref: '#/components/schemas/agreement'
            PaymentInstructionProcedureReference:
              $ref: '#/components/schemas/procedure'
      description: 'Output: Exchange Payment Instruction Procedure'
    ExecutePaymentInstructionProcedureRequest:
      type: object
      properties:
        PaymentInstructionProcedure:
          type: object
          properties:
            PaymentInstructionProcedureParameterType:
              $ref: '#/components/schemas/text'
            PaymentInstructionProcedureSelectedOption:
              $ref: '#/components/schemas/feature'
            PaymentInstructionProcedureRequest:
              $ref: '#/components/schemas/instruction'
            PaymentInstructionProcedureSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureStatus:
              $ref: '#/components/schemas/status'
            PaymentInstructionProcedureAssociatedPartyReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureBusinessUnitReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureServiceProviderReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureFinancialFacilityReference:
              $ref: '#/components/schemas/financialfacility'
            PaymentInstructionProcedureEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureType:
              $ref: '#/components/schemas/proceduretype'
            PaymentInstructionProcedureServiceProviderSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureServiceType:
              $ref: '#/components/schemas/servicetype'
            PaymentInstructionProcedureProductandServiceType:
              type: string
              description: A Classification value that distinguishes between the type of products/services related to Payment Instruction Procedure
              format: bankingproducttype
            PaymentInstructionProcedureProductandServiceInstance:
              $ref: '#/components/schemas/bankingproduct'
            PaymentInstructionProcedureTransactionType:
              type: string
              description: A Classification value that distinguishes between the type of transactions in Payment Instruction Procedure
              format: transactiontype
            PaymentInstructionProcedureFinancialTransactionArrangement:
              $ref: '#/components/schemas/arrangement'
            PaymentInstructionProcedureCustomerAgreementReference:
              $ref: '#/components/schemas/agreement'
            PaymentInstructionProcedureReference:
              $ref: '#/components/schemas/procedure'
      description: 'Input: Execute Payment Instruction Procedure'
    ExecutePaymentInstructionProcedureResponse:
      type: object
      properties:
        PaymentInstructionProcedure:
          type: object
          properties:
            PaymentInstructionProcedureParameterType:
              $ref: '#/components/schemas/text'
            PaymentInstructionProcedureSelectedOption:
              $ref: '#/components/schemas/feature'
            PaymentInstructionProcedureRequest:
              $ref: '#/components/schemas/instruction'
            PaymentInstructionProcedureSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureStatus:
              $ref: '#/components/schemas/status'
            PaymentInstructionProcedureAssociatedPartyReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureBusinessUnitReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureServiceProviderReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureFinancialFacilityReference:
              $ref: '#/components/schemas/financialfacility'
            PaymentInstructionProcedureEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureType:
              $ref: '#/components/schemas/proceduretype'
            PaymentInstructionProcedureServiceProviderSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureServiceType:
              $ref: '#/components/schemas/servicetype'
            PaymentInstructionProcedureProductandServiceType:
              type: string
              description: A Classification value that distinguishes between the type of products/services related to Payment Instruction Procedure
              format: bankingproducttype
            PaymentInstructionProcedureProductandServiceInstance:
              $ref: '#/components/schemas/bankingproduct'
            PaymentInstructionProcedureTransactionType:
              type: string
              description: A Classification value that distinguishes between the type of transactions in Payment Instruction Procedure
              format: transactiontype
            PaymentInstructionProcedureFinancialTransactionArrangement:
              $ref: '#/components/schemas/arrangement'
            PaymentInstructionProcedureCustomerAgreementReference:
              $ref: '#/components/schemas/agreement'
            PaymentInstructionProcedureReference:
              $ref: '#/components/schemas/procedure'
      description: 'Output: Execute Payment Instruction Procedure'
    InitiatePaymentInstructionProcedureRequest:
      type: object
      properties:
        PaymentInstructionProcedure:
          type: object
          properties:
            PaymentInstructionProcedureParameterType:
              $ref: '#/components/schemas/text'
            PaymentInstructionProcedureSelectedOption:
              $ref: '#/components/schemas/feature'
            PaymentInstructionProcedureRequest:
              $ref: '#/components/schemas/instruction'
            PaymentInstructionProcedureSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureStatus:
              $ref: '#/components/schemas/status'
            PaymentInstructionProcedureAssociatedPartyReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureBusinessUnitReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureServiceProviderReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureFinancialFacilityReference:
              $ref: '#/components/schemas/financialfacility'
            PaymentInstructionProcedureEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureType:
              $ref: '#/components/schemas/proceduretype'
            PaymentInstructionProcedureServiceProviderSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureServiceType:
              $ref: '#/components/schemas/servicetype'
            PaymentInstructionProcedureProductandServiceType:
              type: string
              description: A Classification value that distinguishes between the type of products/services related to Payment Instruction Procedure
              format: bankingproducttype
            PaymentInstructionProcedureProductandServiceInstance:
              $ref: '#/components/schemas/bankingproduct'
            PaymentInstructionProcedureTransactionType:
              type: string
              description: A Classification value that distinguishes between the type of transactions in Payment Instruction Procedure
              format: transactiontype
            PaymentInstructionProcedureFinancialTransactionArrangement:
              $ref: '#/components/schemas/arrangement'
            PaymentInstructionProcedureCustomerAgreementReference:
              $ref: '#/components/schemas/agreement'
            PaymentInstructionProcedureReference:
              $ref: '#/components/schemas/procedure'
      description: 'Input: Initiate Payment Instruction Procedure'
    InitiatePaymentInstructionProcedureResponse:
      type: object
      properties:
        PaymentInstructionProcedure:
          type: object
          properties:
            PaymentInstructionProcedureParameterType:
              $ref: '#/components/schemas/text'
            PaymentInstructionProcedureSelectedOption:
              $ref: '#/components/schemas/feature'
            PaymentInstructionProcedureRequest:
              $ref: '#/components/schemas/instruction'
            PaymentInstructionProcedureSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureStatus:
              $ref: '#/components/schemas/status'
            PaymentInstructionProcedureAssociatedPartyReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureBusinessUnitReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureServiceProviderReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureFinancialFacilityReference:
              $ref: '#/components/schemas/financialfacility'
            PaymentInstructionProcedureEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureType:
              $ref: '#/components/schemas/proceduretype'
            PaymentInstructionProcedureServiceProviderSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureServiceType:
              $ref: '#/components/schemas/servicetype'
            PaymentInstructionProcedureProductandServiceType:
              type: string
              description: A Classification value that distinguishes between the type of products/services related to Payment Instruction Procedure
              format: bankingproducttype
            PaymentInstructionProcedureProductandServiceInstance:
              $ref: '#/components/schemas/bankingproduct'
            PaymentInstructionProcedureTransactionType:
              type: string
              description: A Classification value that distinguishes between the type of transactions in Payment Instruction Procedure
              format: transactiontype
            PaymentInstructionProcedureFinancialTransactionArrangement:
              $ref: '#/components/schemas/arrangement'
            PaymentInstructionProcedureCustomerAgreementReference:
              $ref: '#/components/schemas/agreement'
            PaymentInstructionProcedureReference:
              $ref: '#/components/schemas/procedure'
      description: 'Output: Initiate Payment Instruction Procedure'
    NotifyPaymentInstructionProcedureRequest:
      type: object
      properties:
        PaymentInstructionProcedure:
          type: object
          properties:
            PaymentInstructionProcedureParameterType:
              $ref: '#/components/schemas/text'
            PaymentInstructionProcedureSelectedOption:
              $ref: '#/components/schemas/feature'
            PaymentInstructionProcedureRequest:
              $ref: '#/components/schemas/instruction'
            PaymentInstructionProcedureSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureStatus:
              $ref: '#/components/schemas/status'
            PaymentInstructionProcedureAssociatedPartyReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureBusinessUnitReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureServiceProviderReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureFinancialFacilityReference:
              $ref: '#/components/schemas/financialfacility'
            PaymentInstructionProcedureEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureType:
              $ref: '#/components/schemas/proceduretype'
            PaymentInstructionProcedureServiceProviderSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureServiceType:
              $ref: '#/components/schemas/servicetype'
            PaymentInstructionProcedureProductandServiceType:
              type: string
              description: A Classification value that distinguishes between the type of products/services related to Payment Instruction Procedure
              format: bankingproducttype
            PaymentInstructionProcedureProductandServiceInstance:
              $ref: '#/components/schemas/bankingproduct'
            PaymentInstructionProcedureTransactionType:
              type: string
              description: A Classification value that distinguishes between the type of transactions in Payment Instruction Procedure
              format: transactiontype
            PaymentInstructionProcedureFinancialTransactionArrangement:
              $ref: '#/components/schemas/arrangement'
            PaymentInstructionProcedureCustomerAgreementReference:
              $ref: '#/components/schemas/agreement'
            PaymentInstructionProcedureReference:
              $ref: '#/components/schemas/procedure'
      description: 'Input: Notify Payment Instruction Procedure'
    NotifyPaymentInstructionProcedureResponse:
      type: object
      properties:
        PaymentInstructionProcedure:
          type: object
          properties:
            PaymentInstructionProcedureParameterType:
              $ref: '#/components/schemas/text'
            PaymentInstructionProcedureSelectedOption:
              $ref: '#/components/schemas/feature'
            PaymentInstructionProcedureRequest:
              $ref: '#/components/schemas/instruction'
            PaymentInstructionProcedureSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureStatus:
              $ref: '#/components/schemas/status'
            PaymentInstructionProcedureAssociatedPartyReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureBusinessUnitReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureServiceProviderReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureFinancialFacilityReference:
              $ref: '#/components/schemas/financialfacility'
            PaymentInstructionProcedureEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureType:
              $ref: '#/components/schemas/proceduretype'
            PaymentInstructionProcedureServiceProviderSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureServiceType:
              $ref: '#/components/schemas/servicetype'
            PaymentInstructionProcedureProductandServiceType:
              type: string
              description: A Classification value that distinguishes between the type of products/services related to Payment Instruction Procedure
              format: bankingproducttype
            PaymentInstructionProcedureProductandServiceInstance:
              $ref: '#/components/schemas/bankingproduct'
            PaymentInstructionProcedureTransactionType:
              type: string
              description: A Classification value that distinguishes between the type of transactions in Payment Instruction Procedure
              format: transactiontype
            PaymentInstructionProcedureFinancialTransactionArrangement:
              $ref: '#/components/schemas/arrangement'
            PaymentInstructionProcedureCustomerAgreementReference:
              $ref: '#/components/schemas/agreement'
            PaymentInstructionProcedureReference:
              $ref: '#/components/schemas/procedure'
      description: 'Output: Notify Payment Instruction Procedure'
    RequestPaymentInstructionProcedureRequest:
      type: object
      properties:
        PaymentInstructionProcedure:
          type: object
          properties:
            PaymentInstructionProcedureParameterType:
              $ref: '#/components/schemas/text'
            PaymentInstructionProcedureSelectedOption:
              $ref: '#/components/schemas/feature'
            PaymentInstructionProcedureRequest:
              $ref: '#/components/schemas/instruction'
            PaymentInstructionProcedureSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureStatus:
              $ref: '#/components/schemas/status'
            PaymentInstructionProcedureAssociatedPartyReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureBusinessUnitReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureServiceProviderReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureFinancialFacilityReference:
              $ref: '#/components/schemas/financialfacility'
            PaymentInstructionProcedureEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureType:
              $ref: '#/components/schemas/proceduretype'
            PaymentInstructionProcedureServiceProviderSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureServiceType:
              $ref: '#/components/schemas/servicetype'
            PaymentInstructionProcedureProductandServiceType:
              type: string
              description: A Classification value that distinguishes between the type of products/services related to Payment Instruction Procedure
              format: bankingproducttype
            PaymentInstructionProcedureProductandServiceInstance:
              $ref: '#/components/schemas/bankingproduct'
            PaymentInstructionProcedureTransactionType:
              type: string
              description: A Classification value that distinguishes between the type of transactions in Payment Instruction Procedure
              format: transactiontype
            PaymentInstructionProcedureFinancialTransactionArrangement:
              $ref: '#/components/schemas/arrangement'
            PaymentInstructionProcedureCustomerAgreementReference:
              $ref: '#/components/schemas/agreement'
            PaymentInstructionProcedureReference:
              $ref: '#/components/schemas/procedure'
      description: 'Input: Request Payment Instruction Procedure'
    RequestPaymentInstructionProcedureResponse:
      type: object
      properties:
        PaymentInstructionProcedure:
          type: object
          properties:
            PaymentInstructionProcedureParameterType:
              $ref: '#/components/schemas/text'
            PaymentInstructionProcedureSelectedOption:
              $ref: '#/components/schemas/feature'
            PaymentInstructionProcedureRequest:
              $ref: '#/components/schemas/instruction'
            PaymentInstructionProcedureSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureStatus:
              $ref: '#/components/schemas/status'
            PaymentInstructionProcedureAssociatedPartyReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureBusinessUnitReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureServiceProviderReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureFinancialFacilityReference:
              $ref: '#/components/schemas/financialfacility'
            PaymentInstructionProcedureEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureType:
              $ref: '#/components/schemas/proceduretype'
            PaymentInstructionProcedureServiceProviderSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureServiceType:
              $ref: '#/components/schemas/servicetype'
            PaymentInstructionProcedureProductandServiceType:
              type: string
              description: A Classification value that distinguishes between the type of products/services related to Payment Instruction Procedure
              format: bankingproducttype
            PaymentInstructionProcedureProductandServiceInstance:
              $ref: '#/components/schemas/bankingproduct'
            PaymentInstructionProcedureTransactionType:
              type: string
              description: A Classification value that distinguishes between the type of transactions in Payment Instruction Procedure
              format: transactiontype
            PaymentInstructionProcedureFinancialTransactionArrangement:
              $ref: '#/components/schemas/arrangement'
            PaymentInstructionProcedureCustomerAgreementReference:
              $ref: '#/components/schemas/agreement'
            PaymentInstructionProcedureReference:
              $ref: '#/components/schemas/procedure'
      description: 'Output: Request Payment Instruction Procedure'
    RetrievePaymentInstructionProcedureRequest:
      type: object
      properties:
        PaymentInstructionProcedure:
          type: object
          properties:
            PaymentInstructionProcedureParameterType:
              $ref: '#/components/schemas/text'
            PaymentInstructionProcedureSelectedOption:
              $ref: '#/components/schemas/feature'
            PaymentInstructionProcedureRequest:
              $ref: '#/components/schemas/instruction'
            PaymentInstructionProcedureSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureStatus:
              $ref: '#/components/schemas/status'
            PaymentInstructionProcedureAssociatedPartyReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureBusinessUnitReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureServiceProviderReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureFinancialFacilityReference:
              $ref: '#/components/schemas/financialfacility'
            PaymentInstructionProcedureEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureType:
              $ref: '#/components/schemas/proceduretype'
            PaymentInstructionProcedureServiceProviderSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureServiceType:
              $ref: '#/components/schemas/servicetype'
            PaymentInstructionProcedureProductandServiceType:
              type: string
              description: A Classification value that distinguishes between the type of products/services related to Payment Instruction Procedure
              format: bankingproducttype
            PaymentInstructionProcedureProductandServiceInstance:
              $ref: '#/components/schemas/bankingproduct'
            PaymentInstructionProcedureTransactionType:
              type: string
              description: A Classification value that distinguishes between the type of transactions in Payment Instruction Procedure
              format: transactiontype
            PaymentInstructionProcedureFinancialTransactionArrangement:
              $ref: '#/components/schemas/arrangement'
            PaymentInstructionProcedureCustomerAgreementReference:
              $ref: '#/components/schemas/agreement'
            PaymentInstructionProcedureReference:
              $ref: '#/components/schemas/procedure'
      description: 'Input: Retrieve Payment Instruction Procedure'
    RetrievePaymentInstructionProcedureResponse:
      type: object
      properties:
        PaymentInstructionProcedure:
          type: object
          properties:
            PaymentInstructionProcedureParameterType:
              $ref: '#/components/schemas/text'
            PaymentInstructionProcedureSelectedOption:
              $ref: '#/components/schemas/feature'
            PaymentInstructionProcedureRequest:
              $ref: '#/components/schemas/instruction'
            PaymentInstructionProcedureSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureStatus:
              $ref: '#/components/schemas/status'
            PaymentInstructionProcedureAssociatedPartyReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureBusinessUnitReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureServiceProviderReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureFinancialFacilityReference:
              $ref: '#/components/schemas/financialfacility'
            PaymentInstructionProcedureEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureType:
              $ref: '#/components/schemas/proceduretype'
            PaymentInstructionProcedureServiceProviderSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureServiceType:
              $ref: '#/components/schemas/servicetype'
            PaymentInstructionProcedureProductandServiceType:
              type: string
              description: A Classification value that distinguishes between the type of products/services related to Payment Instruction Procedure
              format: bankingproducttype
            PaymentInstructionProcedureProductandServiceInstance:
              $ref: '#/components/schemas/bankingproduct'
            PaymentInstructionProcedureTransactionType:
              type: string
              description: A Classification value that distinguishes between the type of transactions in Payment Instruction Procedure
              format: transactiontype
            PaymentInstructionProcedureFinancialTransactionArrangement:
              $ref: '#/components/schemas/arrangement'
            PaymentInstructionProcedureCustomerAgreementReference:
              $ref: '#/components/schemas/agreement'
            PaymentInstructionProcedureReference:
              $ref: '#/components/schemas/procedure'
      description: 'Output: Retrieve Payment Instruction Procedure'
    UpdatePaymentInstructionProcedureRequest:
      type: object
      properties:
        PaymentInstructionProcedure:
          type: object
          properties:
            PaymentInstructionProcedureParameterType:
              $ref: '#/components/schemas/text'
            PaymentInstructionProcedureSelectedOption:
              $ref: '#/components/schemas/feature'
            PaymentInstructionProcedureRequest:
              $ref: '#/components/schemas/instruction'
            PaymentInstructionProcedureSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureStatus:
              $ref: '#/components/schemas/status'
            PaymentInstructionProcedureAssociatedPartyReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureBusinessUnitReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureServiceProviderReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureFinancialFacilityReference:
              $ref: '#/components/schemas/financialfacility'
            PaymentInstructionProcedureEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureType:
              $ref: '#/components/schemas/proceduretype'
            PaymentInstructionProcedureServiceProviderSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureServiceType:
              $ref: '#/components/schemas/servicetype'
            PaymentInstructionProcedureProductandServiceType:
              type: string
              description: A Classification value that distinguishes between the type of products/services related to Payment Instruction Procedure
              format: bankingproducttype
            PaymentInstructionProcedureProductandServiceInstance:
              $ref: '#/components/schemas/bankingproduct'
            PaymentInstructionProcedureTransactionType:
              type: string
              description: A Classification value that distinguishes between the type of transactions in Payment Instruction Procedure
              format: transactiontype
            PaymentInstructionProcedureFinancialTransactionArrangement:
              $ref: '#/components/schemas/arrangement'
            PaymentInstructionProcedureCustomerAgreementReference:
              $ref: '#/components/schemas/agreement'
            PaymentInstructionProcedureReference:
              $ref: '#/components/schemas/procedure'
      description: 'Input: Update Payment Instruction Procedure'
    UpdatePaymentInstructionProcedureResponse:
      type: object
      properties:
        PaymentInstructionProcedure:
          type: object
          properties:
            PaymentInstructionProcedureParameterType:
              $ref: '#/components/schemas/text'
            PaymentInstructionProcedureSelectedOption:
              $ref: '#/components/schemas/feature'
            PaymentInstructionProcedureRequest:
              $ref: '#/components/schemas/instruction'
            PaymentInstructionProcedureSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureStatus:
              $ref: '#/components/schemas/status'
            PaymentInstructionProcedureAssociatedPartyReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureBusinessUnitReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureServiceProviderReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureFinancialFacilityReference:
              $ref: '#/components/schemas/financialfacility'
            PaymentInstructionProcedureEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureType:
              $ref: '#/components/schemas/proceduretype'
            PaymentInstructionProcedureServiceProviderSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureServiceType:
              $ref: '#/components/schemas/servicetype'
            PaymentInstructionProcedureProductandServiceType:
              type: string
              description: A Classification value that distinguishes between the type of products/services related to Payment Instruction Procedure
              format: bankingproducttype
            PaymentInstructionProcedureProductandServiceInstance:
              $ref: '#/components/schemas/bankingproduct'
            PaymentInstructionProcedureTransactionType:
              type: string
              description: A Classification value that distinguishes between the type of transactions in Payment Instruction Procedure
              format: transactiontype
            PaymentInstructionProcedureFinancialTransactionArrangement:
              $ref: '#/components/schemas/arrangement'
            PaymentInstructionProcedureCustomerAgreementReference:
              $ref: '#/components/schemas/agreement'
            PaymentInstructionProcedureReference:
              $ref: '#/components/schemas/procedure'
      description: 'Output: Update Payment Instruction Procedure'
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ControlPaymentInstructionProcedureResponse:
      description: ControlPaymentInstructionProcedureResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ControlPaymentInstructionProcedureResponse'
    ExchangePaymentInstructionProcedureResponse:
      description: ExchangePaymentInstructionProcedureResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExchangePaymentInstructionProcedureResponse'
    ExecutePaymentInstructionProcedureResponse:
      description: ExecutePaymentInstructionProcedureResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExecutePaymentInstructionProcedureResponse'
    InitiatePaymentInstructionProcedureResponse:
      description: InitiatePaymentInstructionProcedureResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiatePaymentInstructionProcedureResponse'
    NotifyPaymentInstructionProcedureResponse:
      description: NotifyPaymentInstructionProcedureResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotifyPaymentInstructionProcedureResponse'
    RequestPaymentInstructionProcedureResponse:
      description: RequestPaymentInstructionProcedureResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestPaymentInstructionProcedureResponse'
    RetrievePaymentInstructionProcedureResponse:
      description: RetrievePaymentInstructionProcedureResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrievePaymentInstructionProcedureResponse'
    UpdatePaymentInstructionProcedureResponse:
      description: UpdatePaymentInstructionProcedureResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdatePaymentInstructionProcedureResponse'
    AgreementConfirmationWorkstep:
      description: AgreementConfirmationWorkstep
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AgreementConfirmationWorkstep'
    ComplianceCheckWorkstep:
      description: ComplianceCheckWorkstep
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ComplianceCheckWorkstep'
    PaymentInstructionWorkstep:
      description: PaymentInstructionWorkstep
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PaymentInstructionWorkstep'
  parameters:
    paymentinstructionid:
      name: paymentinstructionid
      in: path
      required: true
      style: simple
      schema:
        type: string
    agreementconfirmationworkstepid:
      name: agreementconfirmationworkstepid
      in: path
      required: true
      style: simple
      schema:
        type: string
    compliancecheckworkstepid:
      name: compliancecheckworkstepid
      in: path
      required: true
      style: simple
      schema:
        type: string
    paymentinstructionworkstepid:
      name: paymentinstructionworkstepid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    ControlPaymentInstructionProcedureRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ControlPaymentInstructionProcedureRequest'
      required: true
    ExchangePaymentInstructionProcedureRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExchangePaymentInstructionProcedureRequest'
      required: true
    ExecutePaymentInstructionProcedureRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExecutePaymentInstructionProcedureRequest'
      required: true
    InitiatePaymentInstructionProcedureRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiatePaymentInstructionProcedureRequest'
      required: true
    RequestPaymentInstructionProcedureRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestPaymentInstructionProcedureRequest'
      required: true
    UpdatePaymentInstructionProcedureRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdatePaymentInstructionProcedureRequest'
      required: true
    AgreementConfirmationWorkstep:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AgreementConfirmationWorkstep'
      required: true
    ComplianceCheckWorkstep:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ComplianceCheckWorkstep'
      required: true
    PaymentInstructionWorkstep:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PaymentInstructionWorkstep'
      required: true