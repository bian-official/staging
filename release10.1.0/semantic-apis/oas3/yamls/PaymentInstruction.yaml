openapi: 3.0.1
info:
  title: Payment Instruction
  description: This Service Domain processes the pre-checks needed to confirm the necessary arrangements are in place and assemble and rout payment related requests received from third party payment services.
  contact:
    name: BIAN
    url: https://bian.org
  version: '10.1.0'
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/PaymentInstruction/10.1.0
paths:
  '/PaymentInstruction/{paymentinstructionid}/Control':
    put:
      tags:
        - CR - PaymentInstructionProcedure
      summary: Control Payment Instruction Procedure
      description: Control Payment Instruction Procedure
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/paymentinstructionid'
      requestBody:
        $ref: '#/components/requestBodies/ControlPaymentInstructionProcedureRequest'
      responses:
        '200':
          $ref: '#/components/responses/ControlPaymentInstructionProcedureResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PaymentInstruction/{paymentinstructionid}/Exchange':
    put:
      tags:
        - CR - PaymentInstructionProcedure
      summary: Exchange Payment Instruction Procedure
      description: Exchange Payment Instruction Procedure
      operationId: Exchange
      parameters:
        - $ref: '#/components/parameters/paymentinstructionid'
      requestBody:
        $ref: '#/components/requestBodies/ExchangePaymentInstructionProcedureRequest'
      responses:
        '200':
          $ref: '#/components/responses/ExchangePaymentInstructionProcedureResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PaymentInstruction/{paymentinstructionid}/Execute':
    put:
      tags:
        - CR - PaymentInstructionProcedure
      summary: Execute Payment Instruction Procedure
      description: Execute Payment Instruction Procedure
      operationId: Execute
      parameters:
        - $ref: '#/components/parameters/paymentinstructionid'
      requestBody:
        $ref: '#/components/requestBodies/ExecutePaymentInstructionProcedureRequest'
      responses:
        '200':
          $ref: '#/components/responses/ExecutePaymentInstructionProcedureResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /PaymentInstruction/Initiate:
    post:
      tags:
        - CR - PaymentInstructionProcedure
      summary: Initiate Payment Instruction Procedure
      description: Initiate Payment Instruction Procedure
      operationId: Initiate
      requestBody:
        $ref: '#/components/requestBodies/InitiatePaymentInstructionProcedureRequest'
      responses:
        '200':
          $ref: '#/components/responses/InitiatePaymentInstructionProcedureResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PaymentInstruction/{paymentinstructionid}/Notify':
    get:
      tags:
        - CR - PaymentInstructionProcedure
      summary: Notify Payment Instruction Procedure
      description: Notify Payment Instruction Procedure
      operationId: Notify
      parameters:
        - $ref: '#/components/parameters/paymentinstructionid'
      responses:
        '200':
          $ref: '#/components/responses/NotifyPaymentInstructionProcedureResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PaymentInstruction/{paymentinstructionid}/Request':
    put:
      tags:
        - CR - PaymentInstructionProcedure
      summary: Request Payment Instruction Procedure
      description: Request Payment Instruction Procedure
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/paymentinstructionid'
      requestBody:
        $ref: '#/components/requestBodies/RequestPaymentInstructionProcedureRequest'
      responses:
        '200':
          $ref: '#/components/responses/RequestPaymentInstructionProcedureResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PaymentInstruction/{paymentinstructionid}/Retrieve':
    get:
      tags:
        - CR - PaymentInstructionProcedure
      summary: Retrieve Payment Instruction Procedure
      description: Retrieve Payment Instruction Procedure
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/paymentinstructionid'
      responses:
        '200':
          $ref: '#/components/responses/RetrievePaymentInstructionProcedureResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PaymentInstruction/{paymentinstructionid}/Update':
    put:
      tags:
        - CR - PaymentInstructionProcedure
      summary: Update Payment Instruction Procedure
      description: Update Payment Instruction Procedure
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/paymentinstructionid'
      requestBody:
        $ref: '#/components/requestBodies/UpdatePaymentInstructionProcedureRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdatePaymentInstructionProcedureResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PaymentInstruction/{paymentinstructionid}/AgreementConfirmationWorkstep/{agreementconfirmationworkstepid}/Exchange':
    put:
      tags:
        - BQ - AgreementConfirmationWorkstep
      summary: Exchange Agreement Confirmation Workstep
      description: Exchange Agreement Confirmation Workstep
      operationId: ExchangeAgreementConfirmationWorkstep
      parameters:
        - $ref: '#/components/parameters/paymentinstructionid'
        - $ref: '#/components/parameters/agreementconfirmationworkstepid'
      requestBody:
        $ref: '#/components/requestBodies/AgreementConfirmationWorkstep'
      responses:
        '200':
          $ref: '#/components/responses/AgreementConfirmationWorkstep'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PaymentInstruction/{paymentinstructionid}/ComplianceCheckWorkstep/{compliancecheckworkstepid}/Exchange':
    put:
      tags:
        - BQ - ComplianceCheckWorkstep
      summary: Exchange Compliance Check Workstep
      description: Exchange Compliance Check Workstep
      operationId: ExchangeComplianceCheckWorkstep
      parameters:
        - $ref: '#/components/parameters/paymentinstructionid'
        - $ref: '#/components/parameters/compliancecheckworkstepid'
      requestBody:
        $ref: '#/components/requestBodies/ComplianceCheckWorkstep'
      responses:
        '200':
          $ref: '#/components/responses/ComplianceCheckWorkstep'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PaymentInstruction/{paymentinstructionid}/PaymentInstructionWorkstep/{paymentinstructionworkstepid}/Exchange':
    put:
      tags:
        - BQ - PaymentInstructionWorkstep
      summary: Exchange Payment Instruction Workstep
      description: Exchange Payment Instruction Workstep
      operationId: ExchangePaymentInstructionWorkstep
      parameters:
        - $ref: '#/components/parameters/paymentinstructionid'
        - $ref: '#/components/parameters/paymentinstructionworkstepid'
      requestBody:
        $ref: '#/components/requestBodies/PaymentInstructionWorkstep'
      responses:
        '200':
          $ref: '#/components/responses/PaymentInstructionWorkstep'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PaymentInstruction/{paymentinstructionid}/AgreementConfirmationWorkstep/{agreementconfirmationworkstepid}/Execute':
    put:
      tags:
        - BQ - AgreementConfirmationWorkstep
      summary: Execute Agreement Confirmation Workstep
      description: Execute Agreement Confirmation Workstep
      operationId: ExecuteAgreementConfirmationWorkstep
      parameters:
        - $ref: '#/components/parameters/paymentinstructionid'
        - $ref: '#/components/parameters/agreementconfirmationworkstepid'
      requestBody:
        $ref: '#/components/requestBodies/AgreementConfirmationWorkstep'
      responses:
        '200':
          $ref: '#/components/responses/AgreementConfirmationWorkstep'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PaymentInstruction/{paymentinstructionid}/ComplianceCheckWorkstep/{compliancecheckworkstepid}/Execute':
    put:
      tags:
        - BQ - ComplianceCheckWorkstep
      summary: Execute Compliance Check Workstep
      description: Execute Compliance Check Workstep
      operationId: ExecuteComplianceCheckWorkstep
      parameters:
        - $ref: '#/components/parameters/paymentinstructionid'
        - $ref: '#/components/parameters/compliancecheckworkstepid'
      requestBody:
        $ref: '#/components/requestBodies/ComplianceCheckWorkstep'
      responses:
        '200':
          $ref: '#/components/responses/ComplianceCheckWorkstep'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PaymentInstruction/{paymentinstructionid}/PaymentInstructionWorkstep/{paymentinstructionworkstepid}/Execute':
    put:
      tags:
        - BQ - PaymentInstructionWorkstep
      summary: Execute Payment Instruction Workstep
      description: Execute Payment Instruction Workstep
      operationId: ExecutePaymentInstructionWorkstep
      parameters:
        - $ref: '#/components/parameters/paymentinstructionid'
        - $ref: '#/components/parameters/paymentinstructionworkstepid'
      requestBody:
        $ref: '#/components/requestBodies/PaymentInstructionWorkstep'
      responses:
        '200':
          $ref: '#/components/responses/PaymentInstructionWorkstep'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PaymentInstruction/{paymentinstructionid}/AgreementConfirmationWorkstep/{agreementconfirmationworkstepid}/Initiate':
    post:
      tags:
        - BQ - AgreementConfirmationWorkstep
      summary: Initiate Agreement Confirmation Workstep
      description: Initiate Agreement Confirmation Workstep
      operationId: InitiateAgreementConfirmationWorkstep
      parameters:
        - $ref: '#/components/parameters/paymentinstructionid'
        - $ref: '#/components/parameters/agreementconfirmationworkstepid'
      requestBody:
        $ref: '#/components/requestBodies/AgreementConfirmationWorkstep'
      responses:
        '200':
          $ref: '#/components/responses/AgreementConfirmationWorkstep'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PaymentInstruction/{paymentinstructionid}/ComplianceCheckWorkstep/{compliancecheckworkstepid}/Initiate':
    post:
      tags:
        - BQ - ComplianceCheckWorkstep
      summary: Initiate Compliance Check Workstep
      description: Initiate Compliance Check Workstep
      operationId: InitiateComplianceCheckWorkstep
      parameters:
        - $ref: '#/components/parameters/paymentinstructionid'
        - $ref: '#/components/parameters/compliancecheckworkstepid'
      requestBody:
        $ref: '#/components/requestBodies/ComplianceCheckWorkstep'
      responses:
        '200':
          $ref: '#/components/responses/ComplianceCheckWorkstep'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PaymentInstruction/{paymentinstructionid}/PaymentInstructionWorkstep/{paymentinstructionworkstepid}/Initiate':
    post:
      tags:
        - BQ - PaymentInstructionWorkstep
      summary: Initiate Payment Instruction Workstep
      description: Initiate Payment Instruction Workstep
      operationId: InitiatePaymentInstructionWorkstep
      parameters:
        - $ref: '#/components/parameters/paymentinstructionid'
        - $ref: '#/components/parameters/paymentinstructionworkstepid'
      requestBody:
        $ref: '#/components/requestBodies/PaymentInstructionWorkstep'
      responses:
        '200':
          $ref: '#/components/responses/PaymentInstructionWorkstep'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PaymentInstruction/{paymentinstructionid}/AgreementConfirmationWorkstep/{agreementconfirmationworkstepid}/Notify':
    get:
      tags:
        - BQ - AgreementConfirmationWorkstep
      summary: Notify Agreement Confirmation Workstep
      description: Notify Agreement Confirmation Workstep
      operationId: NotifyAgreementConfirmationWorkstep
      parameters:
        - $ref: '#/components/parameters/paymentinstructionid'
        - $ref: '#/components/parameters/agreementconfirmationworkstepid'
      responses:
        '200':
          $ref: '#/components/responses/AgreementConfirmationWorkstep'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PaymentInstruction/{paymentinstructionid}/ComplianceCheckWorkstep/{compliancecheckworkstepid}/Notify':
    get:
      tags:
        - BQ - ComplianceCheckWorkstep
      summary: Notify Compliance Check Workstep
      description: Notify Compliance Check Workstep
      operationId: NotifyComplianceCheckWorkstep
      parameters:
        - $ref: '#/components/parameters/paymentinstructionid'
        - $ref: '#/components/parameters/compliancecheckworkstepid'
      responses:
        '200':
          $ref: '#/components/responses/ComplianceCheckWorkstep'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PaymentInstruction/{paymentinstructionid}/PaymentInstructionWorkstep/{paymentinstructionworkstepid}/Notify':
    get:
      tags:
        - BQ - PaymentInstructionWorkstep
      summary: Notify Payment Instruction Workstep
      description: Notify Payment Instruction Workstep
      operationId: NotifyPaymentInstructionWorkstep
      parameters:
        - $ref: '#/components/parameters/paymentinstructionid'
        - $ref: '#/components/parameters/paymentinstructionworkstepid'
      responses:
        '200':
          $ref: '#/components/responses/PaymentInstructionWorkstep'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PaymentInstruction/{paymentinstructionid}/AgreementConfirmationWorkstep/{agreementconfirmationworkstepid}/Request':
    put:
      tags:
        - BQ - AgreementConfirmationWorkstep
      summary: Request Agreement Confirmation Workstep
      description: Request Agreement Confirmation Workstep
      operationId: RequestAgreementConfirmationWorkstep
      parameters:
        - $ref: '#/components/parameters/paymentinstructionid'
        - $ref: '#/components/parameters/agreementconfirmationworkstepid'
      requestBody:
        $ref: '#/components/requestBodies/AgreementConfirmationWorkstep'
      responses:
        '200':
          $ref: '#/components/responses/AgreementConfirmationWorkstep'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PaymentInstruction/{paymentinstructionid}/ComplianceCheckWorkstep/{compliancecheckworkstepid}/Request':
    put:
      tags:
        - BQ - ComplianceCheckWorkstep
      summary: Request Compliance Check Workstep
      description: Request Compliance Check Workstep
      operationId: RequestComplianceCheckWorkstep
      parameters:
        - $ref: '#/components/parameters/paymentinstructionid'
        - $ref: '#/components/parameters/compliancecheckworkstepid'
      requestBody:
        $ref: '#/components/requestBodies/ComplianceCheckWorkstep'
      responses:
        '200':
          $ref: '#/components/responses/ComplianceCheckWorkstep'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PaymentInstruction/{paymentinstructionid}/PaymentInstructionWorkstep/{paymentinstructionworkstepid}/Request':
    put:
      tags:
        - BQ - PaymentInstructionWorkstep
      summary: Request Payment Instruction Workstep
      description: Request Payment Instruction Workstep
      operationId: RequestPaymentInstructionWorkstep
      parameters:
        - $ref: '#/components/parameters/paymentinstructionid'
        - $ref: '#/components/parameters/paymentinstructionworkstepid'
      requestBody:
        $ref: '#/components/requestBodies/PaymentInstructionWorkstep'
      responses:
        '200':
          $ref: '#/components/responses/PaymentInstructionWorkstep'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PaymentInstruction/{paymentinstructionid}/AgreementConfirmationWorkstep/{agreementconfirmationworkstepid}/Retrieve':
    get:
      tags:
        - BQ - AgreementConfirmationWorkstep
      summary: Retrieve Agreement Confirmation Workstep
      description: Retrieve Agreement Confirmation Workstep
      operationId: RetrieveAgreementConfirmationWorkstep
      parameters:
        - $ref: '#/components/parameters/paymentinstructionid'
        - $ref: '#/components/parameters/agreementconfirmationworkstepid'
      responses:
        '200':
          $ref: '#/components/responses/AgreementConfirmationWorkstep'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PaymentInstruction/{paymentinstructionid}/ComplianceCheckWorkstep/{compliancecheckworkstepid}/Retrieve':
    get:
      tags:
        - BQ - ComplianceCheckWorkstep
      summary: Retrieve Compliance Check Workstep
      description: Retrieve Compliance Check Workstep
      operationId: RetrieveComplianceCheckWorkstep
      parameters:
        - $ref: '#/components/parameters/paymentinstructionid'
        - $ref: '#/components/parameters/compliancecheckworkstepid'
      responses:
        '200':
          $ref: '#/components/responses/ComplianceCheckWorkstep'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PaymentInstruction/{paymentinstructionid}/PaymentInstructionWorkstep/{paymentinstructionworkstepid}/Retrieve':
    get:
      tags:
        - BQ - PaymentInstructionWorkstep
      summary: Retrieve Payment Instruction Workstep
      description: Retrieve Payment Instruction Workstep
      operationId: RetrievePaymentInstructionWorkstep
      parameters:
        - $ref: '#/components/parameters/paymentinstructionid'
        - $ref: '#/components/parameters/paymentinstructionworkstepid'
      responses:
        '200':
          $ref: '#/components/responses/PaymentInstructionWorkstep'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PaymentInstruction/{paymentinstructionid}/AgreementConfirmationWorkstep/{agreementconfirmationworkstepid}/Update':
    put:
      tags:
        - BQ - AgreementConfirmationWorkstep
      summary: Update Agreement Confirmation Workstep
      description: Update Agreement Confirmation Workstep
      operationId: UpdateAgreementConfirmationWorkstep
      parameters:
        - $ref: '#/components/parameters/paymentinstructionid'
        - $ref: '#/components/parameters/agreementconfirmationworkstepid'
      requestBody:
        $ref: '#/components/requestBodies/AgreementConfirmationWorkstep'
      responses:
        '200':
          $ref: '#/components/responses/AgreementConfirmationWorkstep'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PaymentInstruction/{paymentinstructionid}/ComplianceCheckWorkstep/{compliancecheckworkstepid}/Update':
    put:
      tags:
        - BQ - ComplianceCheckWorkstep
      summary: Update Compliance Check Workstep
      description: Update Compliance Check Workstep
      operationId: UpdateComplianceCheckWorkstep
      parameters:
        - $ref: '#/components/parameters/paymentinstructionid'
        - $ref: '#/components/parameters/compliancecheckworkstepid'
      requestBody:
        $ref: '#/components/requestBodies/ComplianceCheckWorkstep'
      responses:
        '200':
          $ref: '#/components/responses/ComplianceCheckWorkstep'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PaymentInstruction/{paymentinstructionid}/PaymentInstructionWorkstep/{paymentinstructionworkstepid}/Update':
    put:
      tags:
        - BQ - PaymentInstructionWorkstep
      summary: Update Payment Instruction Workstep
      description: Update Payment Instruction Workstep
      operationId: UpdatePaymentInstructionWorkstep
      parameters:
        - $ref: '#/components/parameters/paymentinstructionid'
        - $ref: '#/components/parameters/paymentinstructionworkstepid'
      requestBody:
        $ref: '#/components/requestBodies/PaymentInstructionWorkstep'
      responses:
        '200':
          $ref: '#/components/responses/PaymentInstructionWorkstep'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    condition:
      type: object
      properties:
        Condition:
          type: string
          description: "Condition is a premise upon which the fulfillment of an agreement depends \n\nGeneral and special arrangements, provisions, requirements, rules, specifications, and standards that form an integral part of an agreement or contract.\n\nRead more: http://www.businessdictionary.com/definition/terms-and-conditions.html\n\n"
          format: class
      description: The required status/situation and or tasks that need to be completed prior to the initiation of the workstep
    involvedparty:
      type: object
      properties:
        Involvedparty:
          type: string
          description: ''
          format: datatype
      description: The operating unit/employee responsible for the workstep
    schedule:
      type: object
      properties:
        Schedule:
          type: string
          description: "Defined sequence of planned tasks/actions or a timetable of available services\n\nA schedule is a time based series of something"
          format: datatype
      description: The timing and key actions/milestones making up the workstep
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: ''
    businessservicetypevalues:
      type: object
      properties:
        Businessservicetypevalues:
          type: string
          description: ''
          format: enumeration
      description: ''
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: ''
    businessservice:
      type: object
      properties:
        BusinessServiceName:
          $ref: '#/components/schemas/name'
        BusinessServiceType:
          $ref: '#/components/schemas/businessservicetypevalues'
        BusinessServiceDescription:
          $ref: '#/components/schemas/text'
      description: The Payment Instruction Workstep specific Business Service
    proceduretype:
      type: object
      properties:
        Proceduretype:
          type: string
          description: Data type specifies the classification of procedure
          format: datatype
      description: A Classification value that distinguishes between the type of process undertaken within Procedure
    datetime:
      type: object
      properties:
        Datetime:
          type: string
          description: "A date time identifies a date and time of day to various common resolutions: year, month, week, day, hour, minute, second, and fraction of second. (UN/CEFACT)\n\nA particular point in the progression of time defined by a mandatory date and a mandatory time component, expressed in either UTC time format (YYYY-MM-DDThh:mm:ss.sssZ), local time with UTC offset format (YYYY-MM-DDThh:mm:ss.sss+/-hh:mm), or local time format (YYYY-MM-DDThh:mm:ss.sss). These representations are defined in \"XML Schema Part 2: Datatypes Second Edition - W3C Recommendation 28 October 2004\" which is aligned with ISO 8601. (ISO20022)\nNote on the time format:\n1) beginning / end of calendar day\n00:00:00 = the beginning of a calendar day\n24:00:00 = the end of a calendar day\n2) fractions of second in time format\nDecimal fractions of seconds may be included. In this case, the involved parties shall agree on the maximum number of digits that are allowed."
          format: datatype
      description: ''
    date:
      type: object
      properties:
        Date:
          type: string
          description: "A date is a Gregorian calendar representation in various common resolutions: year, month, week, day. (UN/CEFACT)\n\nA particular point in the progression of time in a calendar year expressed in the YYYY-MM-DD format. This representation is defined in \"XML Schema Part 2: Datatypes Second Edition - W3C Recommendation 28 October 2004\" which is aligned with ISO 8601. (ISO20022)"
          format: datatype
      description: ''
    instructionlifecyclestatus:
      type: object
      properties:
        Instructionlifecyclestatus:
          type: string
          description: 'Data type that specifies the LifecycleStatus of instruction (e.g., requested, executed, fulfilled, etc.); '
          format: datatype
      description: 'A characteristic of instruction which refers to the LifecycleStatus of instruction (e.g., requested, executed, fulfilled, etc.); '
    identifier:
      type: object
      properties:
        Identifier:
          type: string
          description: An identifier is a character string used to uniquely identify one instance of an object within an identification scheme that is managed by an agency. (UN/CEFAT)
          format: datatype
      description: "An identifier that allows to uniquely refer to an instance of an Instruction.\n"
    instructiontypevalues:
      enum:
        - PaymentInstruction
        - DeliveryOrder
        - InformationRequest
        - ExchangeInstruction
        - AllocationInstruction
      type: string
      description: ">\n* `PaymentInstruction` - \n* `DeliveryOrder` - \n* `InformationRequest` - \n* `ExchangeInstruction` - \n* `AllocationInstruction` - \n"
    log:
      type: object
      properties:
        LogType:
          type: string
          description: ''
          format: string
        LogPeriod:
          type: string
          description: ''
          format: string
        LogDate:
          type: string
          description: Key dates associated with the log (e.g. start time).
          format: string
        LogIdentification:
          type: string
          description: ''
          format: string
      description: ''
    instruction:
      type: object
      properties:
        InstructionDueDate:
          $ref: '#/components/schemas/date'
        InstructionStatus:
          $ref: '#/components/schemas/instructionlifecyclestatus'
        InstructionIdentifier:
          $ref: '#/components/schemas/identifier'
        InstructionType:
          $ref: '#/components/schemas/instructiontypevalues'
        InstructionResult:
          $ref: '#/components/schemas/text'
        InstructionDescription:
          $ref: '#/components/schemas/text'
        InstructionLog:
          $ref: '#/components/schemas/log'
        InstructionPurpose:
          $ref: '#/components/schemas/text'
      description: Request to process something (most refers to Asset Type)
    status:
      type: object
      properties:
        Status:
          type: string
          description: A characteristic that describe the object by referring to a state transition in its lifecycle.
          format: datatype
      description: "The status of  Procedure\n"
    procedure:
      type: object
      properties:
        ProcedureType:
          $ref: '#/components/schemas/proceduretype'
        ProcedureDateTime:
          $ref: '#/components/schemas/datetime'
        ProcedureRequest:
          $ref: '#/components/schemas/instruction'
        ProcedureSchedule:
          $ref: '#/components/schemas/schedule'
        ProcedureStatus:
          $ref: '#/components/schemas/status'
      description: Reference to Payment Instruction Workstep
    worksteptype:
      type: object
      properties:
        Worksteptype:
          type: string
          description: Data type specifies the classification of workstep
          format: datatype
      description: A Classification value that distinguishes between the type of workstep undertaken within Procedure
    workstep:
      type: object
      properties:
        WorkstepResult:
          type: string
          description: ''
          format: string
        WorkstepType:
          $ref: '#/components/schemas/worksteptype'
        WorkstepDescription:
          $ref: '#/components/schemas/text'
        WorkstepDateTime:
          $ref: '#/components/schemas/datetime'
        WorkstepStatus:
          $ref: '#/components/schemas/status'
      description: Reference to Payment Instruction Workstep
    PaymentInstructionWorkstep:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        BusinessUnitEmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        PaymentInstructionProcedureReference:
          $ref: '#/components/schemas/procedure'
        PaymentInstructionWorkstepReference:
          $ref: '#/components/schemas/workstep'
        PaymentInstructionWorkstepType:
          $ref: '#/components/schemas/text'
      description: A course of action for doing Payment Instruction Workstep in the context of executing the Payment Instruction Workstep
    AgreementConfirmationWorkstep:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        BusinessUnitEmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        PaymentInstructionProcedureReference:
          $ref: '#/components/schemas/procedure'
        AgreementConfirmationWorkstepReference:
          $ref: '#/components/schemas/workstep'
        AgreementConfirmationWorkstepType:
          $ref: '#/components/schemas/text'
      description: A course of action for doing Payment Instruction Workstep in the context of executing the Payment Instruction Workstep
    ComplianceCheckWorkstep:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        BusinessUnitEmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        PaymentInstructionProcedureReference:
          $ref: '#/components/schemas/procedure'
        ComplianceCheckWorkstepReference:
          $ref: '#/components/schemas/workstep'
        ComplianceCheckWorkstepType:
          $ref: '#/components/schemas/text'
      description: A course of action for doing Payment Instruction Workstep in the context of executing the Payment Instruction Workstep
    workproduct:
      type: object
      properties:
        Workproduct:
          type: string
          description: 'Contact records, working papers, documents and activity logs produced during the execution of a work task'
          format: datatype
      description: ''
    PaymentInstructionOutcome:
      type: object
      properties:
        PaymentInstructionWorkProduct:
          $ref: '#/components/schemas/workproduct'
        PaymentInstructionProcedure:
          $ref: '#/components/schemas/procedure'
      description: A course of action for doing Payment Instruction Workstep in the context of executing the Payment Instruction Workstep
    feature:
      type: object
      properties:
        FeatureType:
          type: string
          description: ''
          format: string
      description: A selected optional business service as subject matter of Payment Instruction Procedure
    financialfacility:
      type: object
      properties:
        FinancialFacility:
          type: string
          description: "A production or operational capacity to perform a business function for delivering a banking product or service\n\nA functional classification of banking product that provides ongoing capacity to deliver financial services (e.g. loan service, payment service)\n\n\n"
          format: class
      description: Reference to the Financial Facility related to Payment Instruction Procedure
    servicetype:
      type: object
      properties:
        Servicetype:
          type: string
          description: Data type specifies the classification of service
          format: datatype
      description: A Classification value that distinguishes between the type of services in Payment Instruction Procedure
    bankingproducttype:
      type: object
      properties:
        Bankingproducttype:
          type: string
          description: "Functional classification of the product \n\n-Refer to Specification for the description of banking products or services (BPoS)"
          format: datatype
      description: A Classification value that distinguishes between the type of products/services related to Payment Instruction Procedure
    productidentification:
      type: object
      properties:
        Productidentification:
          type: string
          description: ''
          format: datatype
      description: The identifier of product e.g. ISIN Code.
    producttypevalues:
      enum:
        - BankingProduct
        - FinancialProduct
        - LoanProduct
      type: string
      description: ">\n* `BankingProduct` - \n* `FinancialProduct` - \n* `LoanProduct` - \n"
    productlifecyclestatus:
      type: object
      properties:
        Productlifecyclestatus:
          type: string
          description: 'Refers to the lifecycle of a product (e.g., initiated, announced, active, obsolete, withdrawn).'
          format: datatype
      description: 'Refers to the lifecycle of a product (e.g., initiated, announced, active, obsolete, withdrawn).'
    bankingproduct:
      type: object
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/productidentification'
        ProductType:
          $ref: '#/components/schemas/producttypevalues'
        ProductLifecycleStatus:
          $ref: '#/components/schemas/productlifecyclestatus'
        ProductPriority:
          $ref: '#/components/schemas/text'
        ProductDescription:
          $ref: '#/components/schemas/text'
        ProductVersion:
          $ref: '#/components/schemas/text'
      description: Reference to the product or service that is related to Payment Instruction Procedure
    transactiontype:
      type: object
      properties:
        Transactiontype:
          type: string
          description: "Data type that specifies the classification of Transaction like payment transaction, accounting transaction, financial Transaction, banking transaction, etc. \n"
          format: datatype
      description: A Classification value that distinguishes between the type of transactions in Payment Instruction Procedure
    transactiondate:
      type: object
      properties:
        Transactiondate:
          type: string
          description: ''
          format: datatype
      description: "The Date that the transaction has occurred or is planned to occur.\nA characteristic of transaction which refers to the LifecycleDate of transaction (e.g., initiated date, executed date, fulfillment date). "
    transactiontypevalues:
      enum:
        - FinancialTransaction
        - BusinessTransaction
        - BankingTransaction
        - AccountingTransaction
        - BookingTransaction
        - AllocationTransaction
        - DeliveryTransaction
      type: string
      description: ">\n* `FinancialTransaction` - \n* `BusinessTransaction` - \n* `BankingTransaction` - \n* `AccountingTransaction` - \n* `BookingTransaction` - \n* `AllocationTransaction` - \n* `DeliveryTransaction` - \n"
    transactionlifecyclestatus:
      type: object
      properties:
        Transactionlifecyclestatus:
          type: string
          description: 'Data type that specifies the LifecycleStatus of transaction (e.g., initiated, executed, confirmed, cancelled, etc.) '
          format: datatype
      description: 'A characteristic of transaction which refers to the LifecycleStatus of transaction (e.g., initiated, executed, confirmed, cancelled, etc.) '
    transaction:
      type: object
      properties:
        TransactionIdentification:
          $ref: '#/components/schemas/identifier'
        TransactionDate:
          $ref: '#/components/schemas/transactiondate'
        TransactionType:
          $ref: '#/components/schemas/transactiontypevalues'
        TransactionDescription:
          $ref: '#/components/schemas/text'
        TransactionStatus:
          $ref: '#/components/schemas/transactionlifecyclestatus'
        TransactionName:
          $ref: '#/components/schemas/name'
      description: Reference to the transaction that is related to Payment Instruction Procedure
    actiontypevalues:
      enum:
        - Initiate
        - Execute
        - Create
        - Transfer
        - Pay
        - Deliver
      type: string
      description: ">\n* `Initiate` - \n* `Execute` - \n* `Create` - \n* `Transfer` - \n* `Pay` - \n* `Deliver` - \n"
    action:
      type: object
      properties:
        ActionType:
          $ref: '#/components/schemas/actiontypevalues'
      description: ''
    arrangementlifecyclestatus:
      type: object
      properties:
        Arrangementlifecyclestatus:
          type: string
          description: 'Data type that specifies the LifecycleStatus of arrangement (e.g., requested, proposed, offered, accepted, cancelled, terminated, fulfilled, etc.).'
          format: datatype
      description: 'A characteristic of arrangement which refers to the LifecycleStatus of arrangement (e.g., requested, proposed, offered, accepted, cancelled, terminated, fulfilled, etc.)'
    subject:
      type: object
      properties:
        Subject:
          type: string
          description: A thing that is discussed or dealt whit in agreement/arrangement about doing or not doing (as action) something.
          format: class
      description: ''
    arrangement:
      type: object
      properties:
        ArrangementAction:
          $ref: '#/components/schemas/action'
        ArrangementStartDate:
          $ref: '#/components/schemas/datetime'
        ArrangementEndDate:
          $ref: '#/components/schemas/datetime'
        ArrangementStatus:
          $ref: '#/components/schemas/arrangementlifecyclestatus'
        ArrangementSubjectMatter:
          $ref: '#/components/schemas/subject'
      description: Reference to the Financial Transaction Arrangement that is related to Payment Instruction Procedure
    agreementtypevalues:
      enum:
        - CustomerAgreement
        - SupplierAgreement
        - ProductBrokerAgreement
        - ProductSaleAgreement
        - FiduciaryAgreement
        - CommissionSaleAgreement
        - ServicingMandateAgreement
        - ChannelAccessAgreement
      type: string
      description: ">\n* `CustomerAgreement` - \n* `SupplierAgreement` - \n* `ProductBrokerAgreement` - \n* `ProductSaleAgreement` - \n* `FiduciaryAgreement` - \n* `CommissionSaleAgreement` - \n* `ServicingMandateAgreement` - \n* `ChannelAccessAgreement` - \n"
    datetimeperiod:
      type: object
      properties:
        Datetimeperiod:
          type: string
          description: 'Time span defined by a start date and time, and an end date and time. (ISO20022)'
          format: datatype
      description: "Period during which the agreement is valid\n"
    agreementlifecyclestatus:
      type: object
      properties:
        Agreementlifecyclestatus:
          type: string
          description: 'Data type that specifies the LifecycleStatus of agreement (e.g., potential, offered, confirmed, completed, signed, terminated).'
          format: datatype
      description: 'A characteristic of agreement which refers to the LifecycleStatus of agreement (e.g., potential, offered, confirmed, completed, signed, terminated).'
    agreement:
      type: object
      properties:
        AgreementSignedDate:
          $ref: '#/components/schemas/date'
        AgreementType:
          $ref: '#/components/schemas/agreementtypevalues'
        AgreementValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        AgreementVersion:
          $ref: '#/components/schemas/text'
        AgreementStatus:
          $ref: '#/components/schemas/agreementlifecyclestatus'
        AgreementSubjectMatter:
          $ref: '#/components/schemas/text'
        AgreementIdentification:
          $ref: '#/components/schemas/identifier'
        AgreementDate:
          $ref: '#/components/schemas/datetime'
      description: Reference to the Customer Agreement that is related to Payment Instruction Procedure
    PaymentInstructionProcedure:
      type: object
      properties:
        PaymentInstructionProcedureParameterType:
          $ref: '#/components/schemas/text'
        PaymentInstructionProcedureSelectedOption:
          $ref: '#/components/schemas/feature'
        PaymentInstructionProcedureRequest:
          $ref: '#/components/schemas/instruction'
        PaymentInstructionProcedureSchedule:
          $ref: '#/components/schemas/schedule'
        PaymentInstructionProcedureStatus:
          $ref: '#/components/schemas/status'
        PaymentInstructionProcedureAssociatedPartyReference:
          $ref: '#/components/schemas/involvedparty'
        PaymentInstructionProcedureBusinessUnitReference:
          $ref: '#/components/schemas/involvedparty'
        PaymentInstructionProcedureServiceProviderReference:
          $ref: '#/components/schemas/involvedparty'
        PaymentInstructionProcedureFinancialFacilityReference:
          $ref: '#/components/schemas/financialfacility'
        PaymentInstructionProcedureEmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        PaymentInstructionProcedureCustomerReference:
          $ref: '#/components/schemas/involvedparty'
        PaymentInstructionProcedureType:
          $ref: '#/components/schemas/proceduretype'
        PaymentInstructionProcedureServiceProviderSchedule:
          $ref: '#/components/schemas/schedule'
        PaymentInstructionProcedureServiceType:
          $ref: '#/components/schemas/servicetype'
        PaymentInstructionProcedureProductandServiceType:
          $ref: '#/components/schemas/bankingproducttype'
        PaymentInstructionProcedureProductandServiceInstance:
          $ref: '#/components/schemas/bankingproduct'
        PaymentInstructionProcedureTransactionType:
          $ref: '#/components/schemas/transactiontype'
        PaymentInstructionProcedureTransaction:
          $ref: '#/components/schemas/transaction'
        PaymentInstructionProcedureFinancialTransactionArrangement:
          $ref: '#/components/schemas/arrangement'
        PaymentInstructionProcedureCustomerAgreementReference:
          $ref: '#/components/schemas/agreement'
        PaymentInstructionProcedureReference:
          $ref: '#/components/schemas/procedure'
      description: 'Complete work tasks following a defined procedure in support of general office activities and product and service delivery within Payment Instruction. '
    ControlPaymentInstructionProcedureRequest:
      type: object
      properties:
        PaymentInstructionProcedure:
          type: object
          properties:
            PaymentInstructionProcedureParameterType:
              $ref: '#/components/schemas/text'
            PaymentInstructionProcedureSelectedOption:
              $ref: '#/components/schemas/feature'
            PaymentInstructionProcedureRequest:
              $ref: '#/components/schemas/instruction'
            PaymentInstructionProcedureSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureStatus:
              $ref: '#/components/schemas/status'
            PaymentInstructionProcedureAssociatedPartyReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureBusinessUnitReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureServiceProviderReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureFinancialFacilityReference:
              $ref: '#/components/schemas/financialfacility'
            PaymentInstructionProcedureEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureType:
              $ref: '#/components/schemas/proceduretype'
            PaymentInstructionProcedureServiceProviderSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureServiceType:
              $ref: '#/components/schemas/servicetype'
            PaymentInstructionProcedureProductandServiceType:
              $ref: '#/components/schemas/bankingproducttype'
            PaymentInstructionProcedureProductandServiceInstance:
              $ref: '#/components/schemas/bankingproduct'
            PaymentInstructionProcedureTransactionType:
              $ref: '#/components/schemas/transactiontype'
            PaymentInstructionProcedureFinancialTransactionArrangement:
              $ref: '#/components/schemas/arrangement'
            PaymentInstructionProcedureCustomerAgreementReference:
              $ref: '#/components/schemas/agreement'
            PaymentInstructionProcedureReference:
              $ref: '#/components/schemas/procedure'
      description: 'Input: Control Payment Instruction Procedure'
    ControlPaymentInstructionProcedureResponse:
      type: object
      properties:
        PaymentInstructionProcedure:
          type: object
          properties:
            PaymentInstructionProcedureParameterType:
              $ref: '#/components/schemas/text'
            PaymentInstructionProcedureSelectedOption:
              $ref: '#/components/schemas/feature'
            PaymentInstructionProcedureRequest:
              $ref: '#/components/schemas/instruction'
            PaymentInstructionProcedureSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureStatus:
              $ref: '#/components/schemas/status'
            PaymentInstructionProcedureAssociatedPartyReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureBusinessUnitReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureServiceProviderReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureFinancialFacilityReference:
              $ref: '#/components/schemas/financialfacility'
            PaymentInstructionProcedureEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureType:
              $ref: '#/components/schemas/proceduretype'
            PaymentInstructionProcedureServiceProviderSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureServiceType:
              $ref: '#/components/schemas/servicetype'
            PaymentInstructionProcedureProductandServiceType:
              $ref: '#/components/schemas/bankingproducttype'
            PaymentInstructionProcedureProductandServiceInstance:
              $ref: '#/components/schemas/bankingproduct'
            PaymentInstructionProcedureTransactionType:
              $ref: '#/components/schemas/transactiontype'
            PaymentInstructionProcedureFinancialTransactionArrangement:
              $ref: '#/components/schemas/arrangement'
            PaymentInstructionProcedureCustomerAgreementReference:
              $ref: '#/components/schemas/agreement'
            PaymentInstructionProcedureReference:
              $ref: '#/components/schemas/procedure'
      description: 'Output: Control Payment Instruction Procedure'
    ExchangePaymentInstructionProcedureRequest:
      type: object
      properties:
        PaymentInstructionProcedure:
          type: object
          properties:
            PaymentInstructionProcedureParameterType:
              $ref: '#/components/schemas/text'
            PaymentInstructionProcedureSelectedOption:
              $ref: '#/components/schemas/feature'
            PaymentInstructionProcedureRequest:
              $ref: '#/components/schemas/instruction'
            PaymentInstructionProcedureSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureStatus:
              $ref: '#/components/schemas/status'
            PaymentInstructionProcedureAssociatedPartyReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureBusinessUnitReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureServiceProviderReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureFinancialFacilityReference:
              $ref: '#/components/schemas/financialfacility'
            PaymentInstructionProcedureEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureType:
              $ref: '#/components/schemas/proceduretype'
            PaymentInstructionProcedureServiceProviderSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureServiceType:
              $ref: '#/components/schemas/servicetype'
            PaymentInstructionProcedureProductandServiceType:
              $ref: '#/components/schemas/bankingproducttype'
            PaymentInstructionProcedureProductandServiceInstance:
              $ref: '#/components/schemas/bankingproduct'
            PaymentInstructionProcedureTransactionType:
              $ref: '#/components/schemas/transactiontype'
            PaymentInstructionProcedureFinancialTransactionArrangement:
              $ref: '#/components/schemas/arrangement'
            PaymentInstructionProcedureCustomerAgreementReference:
              $ref: '#/components/schemas/agreement'
            PaymentInstructionProcedureReference:
              $ref: '#/components/schemas/procedure'
      description: 'Input: Exchange Payment Instruction Procedure'
    ExchangePaymentInstructionProcedureResponse:
      type: object
      properties:
        PaymentInstructionProcedure:
          type: object
          properties:
            PaymentInstructionProcedureParameterType:
              $ref: '#/components/schemas/text'
            PaymentInstructionProcedureSelectedOption:
              $ref: '#/components/schemas/feature'
            PaymentInstructionProcedureRequest:
              $ref: '#/components/schemas/instruction'
            PaymentInstructionProcedureSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureStatus:
              $ref: '#/components/schemas/status'
            PaymentInstructionProcedureAssociatedPartyReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureBusinessUnitReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureServiceProviderReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureFinancialFacilityReference:
              $ref: '#/components/schemas/financialfacility'
            PaymentInstructionProcedureEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureType:
              $ref: '#/components/schemas/proceduretype'
            PaymentInstructionProcedureServiceProviderSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureServiceType:
              $ref: '#/components/schemas/servicetype'
            PaymentInstructionProcedureProductandServiceType:
              $ref: '#/components/schemas/bankingproducttype'
            PaymentInstructionProcedureProductandServiceInstance:
              $ref: '#/components/schemas/bankingproduct'
            PaymentInstructionProcedureTransactionType:
              $ref: '#/components/schemas/transactiontype'
            PaymentInstructionProcedureFinancialTransactionArrangement:
              $ref: '#/components/schemas/arrangement'
            PaymentInstructionProcedureCustomerAgreementReference:
              $ref: '#/components/schemas/agreement'
            PaymentInstructionProcedureReference:
              $ref: '#/components/schemas/procedure'
      description: 'Output: Exchange Payment Instruction Procedure'
    ExecutePaymentInstructionProcedureRequest:
      type: object
      properties:
        PaymentInstructionProcedure:
          type: object
          properties:
            PaymentInstructionProcedureParameterType:
              $ref: '#/components/schemas/text'
            PaymentInstructionProcedureSelectedOption:
              $ref: '#/components/schemas/feature'
            PaymentInstructionProcedureRequest:
              $ref: '#/components/schemas/instruction'
            PaymentInstructionProcedureSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureStatus:
              $ref: '#/components/schemas/status'
            PaymentInstructionProcedureAssociatedPartyReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureBusinessUnitReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureServiceProviderReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureFinancialFacilityReference:
              $ref: '#/components/schemas/financialfacility'
            PaymentInstructionProcedureEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureType:
              $ref: '#/components/schemas/proceduretype'
            PaymentInstructionProcedureServiceProviderSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureServiceType:
              $ref: '#/components/schemas/servicetype'
            PaymentInstructionProcedureProductandServiceType:
              $ref: '#/components/schemas/bankingproducttype'
            PaymentInstructionProcedureProductandServiceInstance:
              $ref: '#/components/schemas/bankingproduct'
            PaymentInstructionProcedureTransactionType:
              $ref: '#/components/schemas/transactiontype'
            PaymentInstructionProcedureFinancialTransactionArrangement:
              $ref: '#/components/schemas/arrangement'
            PaymentInstructionProcedureCustomerAgreementReference:
              $ref: '#/components/schemas/agreement'
            PaymentInstructionProcedureReference:
              $ref: '#/components/schemas/procedure'
      description: 'Input: Execute Payment Instruction Procedure'
    ExecutePaymentInstructionProcedureResponse:
      type: object
      properties:
        PaymentInstructionProcedure:
          type: object
          properties:
            PaymentInstructionProcedureParameterType:
              $ref: '#/components/schemas/text'
            PaymentInstructionProcedureSelectedOption:
              $ref: '#/components/schemas/feature'
            PaymentInstructionProcedureRequest:
              $ref: '#/components/schemas/instruction'
            PaymentInstructionProcedureSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureStatus:
              $ref: '#/components/schemas/status'
            PaymentInstructionProcedureAssociatedPartyReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureBusinessUnitReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureServiceProviderReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureFinancialFacilityReference:
              $ref: '#/components/schemas/financialfacility'
            PaymentInstructionProcedureEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureType:
              $ref: '#/components/schemas/proceduretype'
            PaymentInstructionProcedureServiceProviderSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureServiceType:
              $ref: '#/components/schemas/servicetype'
            PaymentInstructionProcedureProductandServiceType:
              $ref: '#/components/schemas/bankingproducttype'
            PaymentInstructionProcedureProductandServiceInstance:
              $ref: '#/components/schemas/bankingproduct'
            PaymentInstructionProcedureTransactionType:
              $ref: '#/components/schemas/transactiontype'
            PaymentInstructionProcedureFinancialTransactionArrangement:
              $ref: '#/components/schemas/arrangement'
            PaymentInstructionProcedureCustomerAgreementReference:
              $ref: '#/components/schemas/agreement'
            PaymentInstructionProcedureReference:
              $ref: '#/components/schemas/procedure'
      description: 'Output: Execute Payment Instruction Procedure'
    InitiatePaymentInstructionProcedureRequest:
      type: object
      properties:
        PaymentInstructionProcedure:
          type: object
          properties:
            PaymentInstructionProcedureParameterType:
              $ref: '#/components/schemas/text'
            PaymentInstructionProcedureSelectedOption:
              $ref: '#/components/schemas/feature'
            PaymentInstructionProcedureRequest:
              $ref: '#/components/schemas/instruction'
            PaymentInstructionProcedureSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureStatus:
              $ref: '#/components/schemas/status'
            PaymentInstructionProcedureAssociatedPartyReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureBusinessUnitReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureServiceProviderReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureFinancialFacilityReference:
              $ref: '#/components/schemas/financialfacility'
            PaymentInstructionProcedureEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureType:
              $ref: '#/components/schemas/proceduretype'
            PaymentInstructionProcedureServiceProviderSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureServiceType:
              $ref: '#/components/schemas/servicetype'
            PaymentInstructionProcedureProductandServiceType:
              $ref: '#/components/schemas/bankingproducttype'
            PaymentInstructionProcedureProductandServiceInstance:
              $ref: '#/components/schemas/bankingproduct'
            PaymentInstructionProcedureTransactionType:
              $ref: '#/components/schemas/transactiontype'
            PaymentInstructionProcedureFinancialTransactionArrangement:
              $ref: '#/components/schemas/arrangement'
            PaymentInstructionProcedureCustomerAgreementReference:
              $ref: '#/components/schemas/agreement'
            PaymentInstructionProcedureReference:
              $ref: '#/components/schemas/procedure'
      description: 'Input: Initiate Payment Instruction Procedure'
    InitiatePaymentInstructionProcedureResponse:
      type: object
      properties:
        PaymentInstructionProcedure:
          type: object
          properties:
            PaymentInstructionProcedureParameterType:
              $ref: '#/components/schemas/text'
            PaymentInstructionProcedureSelectedOption:
              $ref: '#/components/schemas/feature'
            PaymentInstructionProcedureRequest:
              $ref: '#/components/schemas/instruction'
            PaymentInstructionProcedureSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureStatus:
              $ref: '#/components/schemas/status'
            PaymentInstructionProcedureAssociatedPartyReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureBusinessUnitReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureServiceProviderReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureFinancialFacilityReference:
              $ref: '#/components/schemas/financialfacility'
            PaymentInstructionProcedureEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureType:
              $ref: '#/components/schemas/proceduretype'
            PaymentInstructionProcedureServiceProviderSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureServiceType:
              $ref: '#/components/schemas/servicetype'
            PaymentInstructionProcedureProductandServiceType:
              $ref: '#/components/schemas/bankingproducttype'
            PaymentInstructionProcedureProductandServiceInstance:
              $ref: '#/components/schemas/bankingproduct'
            PaymentInstructionProcedureTransactionType:
              $ref: '#/components/schemas/transactiontype'
            PaymentInstructionProcedureFinancialTransactionArrangement:
              $ref: '#/components/schemas/arrangement'
            PaymentInstructionProcedureCustomerAgreementReference:
              $ref: '#/components/schemas/agreement'
            PaymentInstructionProcedureReference:
              $ref: '#/components/schemas/procedure'
      description: 'Output: Initiate Payment Instruction Procedure'
    NotifyPaymentInstructionProcedureRequest:
      type: object
      properties:
        PaymentInstructionProcedure:
          type: object
          properties:
            PaymentInstructionProcedureParameterType:
              $ref: '#/components/schemas/text'
            PaymentInstructionProcedureSelectedOption:
              $ref: '#/components/schemas/feature'
            PaymentInstructionProcedureRequest:
              $ref: '#/components/schemas/instruction'
            PaymentInstructionProcedureSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureStatus:
              $ref: '#/components/schemas/status'
            PaymentInstructionProcedureAssociatedPartyReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureBusinessUnitReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureServiceProviderReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureFinancialFacilityReference:
              $ref: '#/components/schemas/financialfacility'
            PaymentInstructionProcedureEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureType:
              $ref: '#/components/schemas/proceduretype'
            PaymentInstructionProcedureServiceProviderSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureServiceType:
              $ref: '#/components/schemas/servicetype'
            PaymentInstructionProcedureProductandServiceType:
              $ref: '#/components/schemas/bankingproducttype'
            PaymentInstructionProcedureProductandServiceInstance:
              $ref: '#/components/schemas/bankingproduct'
            PaymentInstructionProcedureTransactionType:
              $ref: '#/components/schemas/transactiontype'
            PaymentInstructionProcedureFinancialTransactionArrangement:
              $ref: '#/components/schemas/arrangement'
            PaymentInstructionProcedureCustomerAgreementReference:
              $ref: '#/components/schemas/agreement'
            PaymentInstructionProcedureReference:
              $ref: '#/components/schemas/procedure'
      description: 'Input: Notify Payment Instruction Procedure'
    NotifyPaymentInstructionProcedureResponse:
      type: object
      properties:
        PaymentInstructionProcedure:
          type: object
          properties:
            PaymentInstructionProcedureParameterType:
              $ref: '#/components/schemas/text'
            PaymentInstructionProcedureSelectedOption:
              $ref: '#/components/schemas/feature'
            PaymentInstructionProcedureRequest:
              $ref: '#/components/schemas/instruction'
            PaymentInstructionProcedureSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureStatus:
              $ref: '#/components/schemas/status'
            PaymentInstructionProcedureAssociatedPartyReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureBusinessUnitReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureServiceProviderReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureFinancialFacilityReference:
              $ref: '#/components/schemas/financialfacility'
            PaymentInstructionProcedureEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureType:
              $ref: '#/components/schemas/proceduretype'
            PaymentInstructionProcedureServiceProviderSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureServiceType:
              $ref: '#/components/schemas/servicetype'
            PaymentInstructionProcedureProductandServiceType:
              $ref: '#/components/schemas/bankingproducttype'
            PaymentInstructionProcedureProductandServiceInstance:
              $ref: '#/components/schemas/bankingproduct'
            PaymentInstructionProcedureTransactionType:
              $ref: '#/components/schemas/transactiontype'
            PaymentInstructionProcedureFinancialTransactionArrangement:
              $ref: '#/components/schemas/arrangement'
            PaymentInstructionProcedureCustomerAgreementReference:
              $ref: '#/components/schemas/agreement'
            PaymentInstructionProcedureReference:
              $ref: '#/components/schemas/procedure'
      description: 'Output: Notify Payment Instruction Procedure'
    RequestPaymentInstructionProcedureRequest:
      type: object
      properties:
        PaymentInstructionProcedure:
          type: object
          properties:
            PaymentInstructionProcedureParameterType:
              $ref: '#/components/schemas/text'
            PaymentInstructionProcedureSelectedOption:
              $ref: '#/components/schemas/feature'
            PaymentInstructionProcedureRequest:
              $ref: '#/components/schemas/instruction'
            PaymentInstructionProcedureSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureStatus:
              $ref: '#/components/schemas/status'
            PaymentInstructionProcedureAssociatedPartyReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureBusinessUnitReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureServiceProviderReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureFinancialFacilityReference:
              $ref: '#/components/schemas/financialfacility'
            PaymentInstructionProcedureEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureType:
              $ref: '#/components/schemas/proceduretype'
            PaymentInstructionProcedureServiceProviderSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureServiceType:
              $ref: '#/components/schemas/servicetype'
            PaymentInstructionProcedureProductandServiceType:
              $ref: '#/components/schemas/bankingproducttype'
            PaymentInstructionProcedureProductandServiceInstance:
              $ref: '#/components/schemas/bankingproduct'
            PaymentInstructionProcedureTransactionType:
              $ref: '#/components/schemas/transactiontype'
            PaymentInstructionProcedureFinancialTransactionArrangement:
              $ref: '#/components/schemas/arrangement'
            PaymentInstructionProcedureCustomerAgreementReference:
              $ref: '#/components/schemas/agreement'
            PaymentInstructionProcedureReference:
              $ref: '#/components/schemas/procedure'
      description: 'Input: Request Payment Instruction Procedure'
    RequestPaymentInstructionProcedureResponse:
      type: object
      properties:
        PaymentInstructionProcedure:
          type: object
          properties:
            PaymentInstructionProcedureParameterType:
              $ref: '#/components/schemas/text'
            PaymentInstructionProcedureSelectedOption:
              $ref: '#/components/schemas/feature'
            PaymentInstructionProcedureRequest:
              $ref: '#/components/schemas/instruction'
            PaymentInstructionProcedureSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureStatus:
              $ref: '#/components/schemas/status'
            PaymentInstructionProcedureAssociatedPartyReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureBusinessUnitReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureServiceProviderReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureFinancialFacilityReference:
              $ref: '#/components/schemas/financialfacility'
            PaymentInstructionProcedureEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureType:
              $ref: '#/components/schemas/proceduretype'
            PaymentInstructionProcedureServiceProviderSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureServiceType:
              $ref: '#/components/schemas/servicetype'
            PaymentInstructionProcedureProductandServiceType:
              $ref: '#/components/schemas/bankingproducttype'
            PaymentInstructionProcedureProductandServiceInstance:
              $ref: '#/components/schemas/bankingproduct'
            PaymentInstructionProcedureTransactionType:
              $ref: '#/components/schemas/transactiontype'
            PaymentInstructionProcedureFinancialTransactionArrangement:
              $ref: '#/components/schemas/arrangement'
            PaymentInstructionProcedureCustomerAgreementReference:
              $ref: '#/components/schemas/agreement'
            PaymentInstructionProcedureReference:
              $ref: '#/components/schemas/procedure'
      description: 'Output: Request Payment Instruction Procedure'
    RetrievePaymentInstructionProcedureRequest:
      type: object
      properties:
        PaymentInstructionProcedure:
          type: object
          properties:
            PaymentInstructionProcedureParameterType:
              $ref: '#/components/schemas/text'
            PaymentInstructionProcedureSelectedOption:
              $ref: '#/components/schemas/feature'
            PaymentInstructionProcedureRequest:
              $ref: '#/components/schemas/instruction'
            PaymentInstructionProcedureSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureStatus:
              $ref: '#/components/schemas/status'
            PaymentInstructionProcedureAssociatedPartyReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureBusinessUnitReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureServiceProviderReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureFinancialFacilityReference:
              $ref: '#/components/schemas/financialfacility'
            PaymentInstructionProcedureEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureType:
              $ref: '#/components/schemas/proceduretype'
            PaymentInstructionProcedureServiceProviderSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureServiceType:
              $ref: '#/components/schemas/servicetype'
            PaymentInstructionProcedureProductandServiceType:
              $ref: '#/components/schemas/bankingproducttype'
            PaymentInstructionProcedureProductandServiceInstance:
              $ref: '#/components/schemas/bankingproduct'
            PaymentInstructionProcedureTransactionType:
              $ref: '#/components/schemas/transactiontype'
            PaymentInstructionProcedureFinancialTransactionArrangement:
              $ref: '#/components/schemas/arrangement'
            PaymentInstructionProcedureCustomerAgreementReference:
              $ref: '#/components/schemas/agreement'
            PaymentInstructionProcedureReference:
              $ref: '#/components/schemas/procedure'
      description: 'Input: Retrieve Payment Instruction Procedure'
    RetrievePaymentInstructionProcedureResponse:
      type: object
      properties:
        PaymentInstructionProcedure:
          type: object
          properties:
            PaymentInstructionProcedureParameterType:
              $ref: '#/components/schemas/text'
            PaymentInstructionProcedureSelectedOption:
              $ref: '#/components/schemas/feature'
            PaymentInstructionProcedureRequest:
              $ref: '#/components/schemas/instruction'
            PaymentInstructionProcedureSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureStatus:
              $ref: '#/components/schemas/status'
            PaymentInstructionProcedureAssociatedPartyReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureBusinessUnitReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureServiceProviderReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureFinancialFacilityReference:
              $ref: '#/components/schemas/financialfacility'
            PaymentInstructionProcedureEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureType:
              $ref: '#/components/schemas/proceduretype'
            PaymentInstructionProcedureServiceProviderSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureServiceType:
              $ref: '#/components/schemas/servicetype'
            PaymentInstructionProcedureProductandServiceType:
              $ref: '#/components/schemas/bankingproducttype'
            PaymentInstructionProcedureProductandServiceInstance:
              $ref: '#/components/schemas/bankingproduct'
            PaymentInstructionProcedureTransactionType:
              $ref: '#/components/schemas/transactiontype'
            PaymentInstructionProcedureFinancialTransactionArrangement:
              $ref: '#/components/schemas/arrangement'
            PaymentInstructionProcedureCustomerAgreementReference:
              $ref: '#/components/schemas/agreement'
            PaymentInstructionProcedureReference:
              $ref: '#/components/schemas/procedure'
      description: 'Output: Retrieve Payment Instruction Procedure'
    UpdatePaymentInstructionProcedureRequest:
      type: object
      properties:
        PaymentInstructionProcedure:
          type: object
          properties:
            PaymentInstructionProcedureParameterType:
              $ref: '#/components/schemas/text'
            PaymentInstructionProcedureSelectedOption:
              $ref: '#/components/schemas/feature'
            PaymentInstructionProcedureRequest:
              $ref: '#/components/schemas/instruction'
            PaymentInstructionProcedureSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureStatus:
              $ref: '#/components/schemas/status'
            PaymentInstructionProcedureAssociatedPartyReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureBusinessUnitReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureServiceProviderReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureFinancialFacilityReference:
              $ref: '#/components/schemas/financialfacility'
            PaymentInstructionProcedureEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureType:
              $ref: '#/components/schemas/proceduretype'
            PaymentInstructionProcedureServiceProviderSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureServiceType:
              $ref: '#/components/schemas/servicetype'
            PaymentInstructionProcedureProductandServiceType:
              $ref: '#/components/schemas/bankingproducttype'
            PaymentInstructionProcedureProductandServiceInstance:
              $ref: '#/components/schemas/bankingproduct'
            PaymentInstructionProcedureTransactionType:
              $ref: '#/components/schemas/transactiontype'
            PaymentInstructionProcedureFinancialTransactionArrangement:
              $ref: '#/components/schemas/arrangement'
            PaymentInstructionProcedureCustomerAgreementReference:
              $ref: '#/components/schemas/agreement'
            PaymentInstructionProcedureReference:
              $ref: '#/components/schemas/procedure'
      description: 'Input: Update Payment Instruction Procedure'
    UpdatePaymentInstructionProcedureResponse:
      type: object
      properties:
        PaymentInstructionProcedure:
          type: object
          properties:
            PaymentInstructionProcedureParameterType:
              $ref: '#/components/schemas/text'
            PaymentInstructionProcedureSelectedOption:
              $ref: '#/components/schemas/feature'
            PaymentInstructionProcedureRequest:
              $ref: '#/components/schemas/instruction'
            PaymentInstructionProcedureSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureStatus:
              $ref: '#/components/schemas/status'
            PaymentInstructionProcedureAssociatedPartyReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureBusinessUnitReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureServiceProviderReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureFinancialFacilityReference:
              $ref: '#/components/schemas/financialfacility'
            PaymentInstructionProcedureEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            PaymentInstructionProcedureType:
              $ref: '#/components/schemas/proceduretype'
            PaymentInstructionProcedureServiceProviderSchedule:
              $ref: '#/components/schemas/schedule'
            PaymentInstructionProcedureServiceType:
              $ref: '#/components/schemas/servicetype'
            PaymentInstructionProcedureProductandServiceType:
              $ref: '#/components/schemas/bankingproducttype'
            PaymentInstructionProcedureProductandServiceInstance:
              $ref: '#/components/schemas/bankingproduct'
            PaymentInstructionProcedureTransactionType:
              $ref: '#/components/schemas/transactiontype'
            PaymentInstructionProcedureFinancialTransactionArrangement:
              $ref: '#/components/schemas/arrangement'
            PaymentInstructionProcedureCustomerAgreementReference:
              $ref: '#/components/schemas/agreement'
            PaymentInstructionProcedureReference:
              $ref: '#/components/schemas/procedure'
      description: 'Output: Update Payment Instruction Procedure'
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ControlPaymentInstructionProcedureResponse:
      description: ControlPaymentInstructionProcedureResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ControlPaymentInstructionProcedureResponse'
    ExchangePaymentInstructionProcedureResponse:
      description: ExchangePaymentInstructionProcedureResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExchangePaymentInstructionProcedureResponse'
    ExecutePaymentInstructionProcedureResponse:
      description: ExecutePaymentInstructionProcedureResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExecutePaymentInstructionProcedureResponse'
    InitiatePaymentInstructionProcedureResponse:
      description: InitiatePaymentInstructionProcedureResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiatePaymentInstructionProcedureResponse'
    NotifyPaymentInstructionProcedureResponse:
      description: NotifyPaymentInstructionProcedureResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotifyPaymentInstructionProcedureResponse'
    RequestPaymentInstructionProcedureResponse:
      description: RequestPaymentInstructionProcedureResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestPaymentInstructionProcedureResponse'
    RetrievePaymentInstructionProcedureResponse:
      description: RetrievePaymentInstructionProcedureResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrievePaymentInstructionProcedureResponse'
    UpdatePaymentInstructionProcedureResponse:
      description: UpdatePaymentInstructionProcedureResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdatePaymentInstructionProcedureResponse'
    AgreementConfirmationWorkstep:
      description: AgreementConfirmationWorkstep
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AgreementConfirmationWorkstep'
    ComplianceCheckWorkstep:
      description: ComplianceCheckWorkstep
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ComplianceCheckWorkstep'
    PaymentInstructionWorkstep:
      description: PaymentInstructionWorkstep
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PaymentInstructionWorkstep'
  parameters:
    paymentinstructionid:
      name: paymentinstructionid
      in: path
      required: true
      style: simple
      schema:
        type: string
    agreementconfirmationworkstepid:
      name: agreementconfirmationworkstepid
      in: path
      required: true
      style: simple
      schema:
        type: string
    compliancecheckworkstepid:
      name: compliancecheckworkstepid
      in: path
      required: true
      style: simple
      schema:
        type: string
    paymentinstructionworkstepid:
      name: paymentinstructionworkstepid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    ControlPaymentInstructionProcedureRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ControlPaymentInstructionProcedureRequest'
      required: true
    ExchangePaymentInstructionProcedureRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExchangePaymentInstructionProcedureRequest'
      required: true
    ExecutePaymentInstructionProcedureRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExecutePaymentInstructionProcedureRequest'
      required: true
    InitiatePaymentInstructionProcedureRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiatePaymentInstructionProcedureRequest'
      required: true
    RequestPaymentInstructionProcedureRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestPaymentInstructionProcedureRequest'
      required: true
    UpdatePaymentInstructionProcedureRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdatePaymentInstructionProcedureRequest'
      required: true
    AgreementConfirmationWorkstep:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AgreementConfirmationWorkstep'
      required: true
    ComplianceCheckWorkstep:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ComplianceCheckWorkstep'
      required: true
    PaymentInstructionWorkstep:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PaymentInstructionWorkstep'
      required: true