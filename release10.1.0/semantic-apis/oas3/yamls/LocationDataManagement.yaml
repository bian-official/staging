openapi: 3.0.1
info:
  title: Location Data Management
  description: This service domain maintain details of the use and state of locations of interest to the bank. This can include both physical and virtual addresses. It is used to check for valid use and for sales/marketing activities
  contact:
    name: BIAN
    url: https://bian.org
  version: '10.1.0'
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/LocationDataManagement/10.1.0
paths:
  /LocationDataManagement/Register:
    post:
      tags:
        - CR - LocationDirectoryEntry
      summary: InCR Register a location in the catalog
      description: InCR Register a location in the catalog
      operationId: Register
      requestBody:
        $ref: '#/components/requestBodies/RegisterLocationDirectoryEntryRequest'
      responses:
        '200':
          $ref: '#/components/responses/RegisterLocationDirectoryEntryRequest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/LocationDataManagement/{locationdatamanagementid}/Update':
    put:
      tags:
        - CR - LocationDirectoryEntry
      summary: UpCR Update details about the location's directory entry
      description: UpCR Update details about the location's directory entry
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/locationdatamanagementid'
      requestBody:
        $ref: '#/components/requestBodies/UpdateLocationDirectoryEntryRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateLocationDirectoryEntryResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/LocationDataManagement/{locationdatamanagementid}/Request':
    put:
      tags:
        - CR - LocationDirectoryEntry
      summary: RqCR Request manual intervention with an entry (e.g. refresh content)
      description: RqCR Request manual intervention with an entry (e.g. refresh content)
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/locationdatamanagementid'
      requestBody:
        $ref: '#/components/requestBodies/RequestLocationDirectoryEntryRequest'
      responses:
        '200':
          $ref: '#/components/responses/RequestLocationDirectoryEntryRequest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/LocationDataManagement/{locationdatamanagementid}/Retrieve':
    get:
      tags:
        - CR - LocationDirectoryEntry
      summary: ReCR Retrieve details about a location directory entry
      description: ReCR Retrieve details about a location directory entry
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/locationdatamanagementid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveLocationDirectoryEntryResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/LocationDataManagement/{locationdatamanagementid}/Execute':
    put:
      tags:
        - CR - LocationDirectoryEntry
      summary: ExCR Execute an automated action against an entry
      description: ExCR Execute an automated action against an entry
      operationId: Execute
      parameters:
        - $ref: '#/components/parameters/locationdatamanagementid'
      requestBody:
        $ref: '#/components/requestBodies/ExecuteLocationDirectoryEntryRequest'
      responses:
        '200':
          $ref: '#/components/responses/ExecuteLocationDirectoryEntryRequest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/LocationDataManagement/{locationdatamanagementid}/Location/{locationid}/Update':
    put:
      tags:
        - BQ - Location
      summary: UpBQ Update details about a location entry
      description: UpBQ Update details about a location entry
      operationId: UpdateLocation
      parameters:
        - $ref: '#/components/parameters/locationdatamanagementid'
        - $ref: '#/components/parameters/locationid'
      requestBody:
        $ref: '#/components/requestBodies/UpdateLocationRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateLocationResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/LocationDataManagement/{locationdatamanagementid}/Location/{locationid}/Retrieve':
    get:
      tags:
        - BQ - Location
      summary: ReBQ Retrieve details about location entries in the directory
      description: ReBQ Retrieve details about location entries in the directory
      operationId: RetrieveLocation
      parameters:
        - $ref: '#/components/parameters/locationdatamanagementid'
        - $ref: '#/components/parameters/locationid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveLocationResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/LocationDataManagement/{locationdatamanagementid}/Use/{useid}/Update':
    put:
      tags:
        - BQ - Use
      summary: UpBQ Update details about an usage entry for the location
      description: UpBQ Update details about an usage entry for the location
      operationId: UpdateUse
      parameters:
        - $ref: '#/components/parameters/locationdatamanagementid'
        - $ref: '#/components/parameters/useid'
      requestBody:
        $ref: '#/components/requestBodies/UpdateUseRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateUseResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/LocationDataManagement/{locationdatamanagementid}/Use/{useid}/Retrieve':
    get:
      tags:
        - BQ - Use
      summary: ReBQ Retrieve details about usage entries in the location directory
      description: ReBQ Retrieve details about usage entries in the location directory
      operationId: RetrieveUse
      parameters:
        - $ref: '#/components/parameters/locationdatamanagementid'
        - $ref: '#/components/parameters/useid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveUseResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/LocationDataManagement/{locationdatamanagementid}/Occupancy/{occupancyid}/Update':
    put:
      tags:
        - BQ - Occupancy
      summary: UpBQ Update details about a location's occupancy
      description: UpBQ Update details about a location's occupancy
      operationId: UpdateOccupancy
      parameters:
        - $ref: '#/components/parameters/locationdatamanagementid'
        - $ref: '#/components/parameters/occupancyid'
      requestBody:
        $ref: '#/components/requestBodies/UpdateOccupancyRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateOccupancyResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/LocationDataManagement/{locationdatamanagementid}/Occupancy/{occupancyid}/Retrieve':
    get:
      tags:
        - BQ - Occupancy
      summary: ReBQ Retrieve details about location's occupancy entry in the directory
      description: ReBQ Retrieve details about location's occupancy entry in the directory
      operationId: RetrieveOccupancy
      parameters:
        - $ref: '#/components/parameters/locationdatamanagementid'
        - $ref: '#/components/parameters/occupancyid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveOccupancyResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    Use:
      type: object
      properties:
        LocationZoningType:
          type: string
          description: 'The planning or zoning status (e.g. residential, commercial, industrial)'
          format: string
        LocationUsage:
          type: string
          description: 'The allowed usage for the property at the location (e.g. domestic residence, manufacturing, retail)'
          format: string
      description: "\"An assertion or statement with regard to a concept, a characteristic.\n\nExamples: Product pricing rules, Customer reference details\n\nA descriptor can be atomic or composed.\"\nProspect Management"
    Occupancy:
      type: object
      properties:
        CustomerReference:
          $ref: '#/components/schemas/object'
        LocationOwner/Title:
          type: string
          description: Registered owner or title holder(s) of the property
          format: string
        LocationValue:
          type: string
          description: The estimated (book) value of the property at the location - rental and purchase as appropriate
          format: string
        LocationOccupierType:
          type: string
          description: 'The type of occupancy (e.g. residency, business, retail, entertainment)'
          format: string
        LocationOccupierReference:
          $ref: '#/components/schemas/object'
        LocationOccupierTerms:
          type: string
          description: 'Nature of the access terms or entitlement of the occupier (e.g. leasehold, rental, public access)'
          format: string
        AlliancePartnerReference:
          $ref: '#/components/schemas/object'
      description: "\"An assertion or statement with regard to a concept, a characteristic.\n\nExamples: Product pricing rules, Customer reference details\n\nA descriptor can be atomic or composed.\"\nProspect Management"
    Location:
      type: object
      properties:
        LocationType:
          type: string
          description: 'Type of location (e.g. building, point of interest, virtual location/device)'
          format: string
        LocationAddress:
          type: string
          description: 'Reference address for the location (e.g. postal address, email, coordinates)'
          format: string
        LocationCoordinates:
          type: string
          description: The coordinates in a form that can be used to match tracked parties to the location (e.g. for real-time marketing)
          format: string
        LocationDescription:
          type: string
          description: 'A description of the property, particularly if it has landmark characteristics'
          format: string
        LocationConstructionType:
          type: string
          description: The construction approach for a property at the location (e.g. era and architecture as might be used in valuation)
          format: string
        LocationCapacity:
          type: string
          description: 'An indication of the size or scale of the property where appropriate (e.g. 4 bedroom, 600 seat auditorium, 40 cover restaurant)'
          format: string
        LocationStatus:
          type: string
          description: 'The tracked status (e.g. under construction or repair, inhabited, vacant)'
          format: string
        LocationNeighborhoodType:
          type: string
          description: 'The general purpose and neighborhood of the property  (e.g. residential, industrial, commercial)'
          format: string
      description: "\"An assertion or statement with regard to a concept, a characteristic.\n\nExamples: Product pricing rules, Customer reference details\n\nA descriptor can be atomic or composed.\"\nProspect Management"
    LocationDirectoryEntry:
      type: object
      properties:
        LocationReference:
          $ref: '#/components/schemas/location'
        DirectoryEntryDateType:
          $ref: '#/components/schemas/directoryentrydatetypevalues'
        DirectoryEntryDate:
          $ref: '#/components/schemas/datetime'
      description: Capture and maintain reference information about some type of entitity within Location Data Management.
    RegisterLocationDirectoryEntryRequest:
      type: object
      properties:
        LocationDirectoryEntry:
          type: object
          properties:
            LocationReference:
              $ref: '#/components/schemas/location'
            DirectoryEntryDateType:
              $ref: '#/components/schemas/directoryentrydatetypevalues'
      description: 'Input: InCR Register a location in the catalog'
    UpdateLocationDirectoryEntryRequest:
      type: object
      properties:
        LocationDirectoryEntry:
          type: object
          properties:
            LocationReference:
              $ref: '#/components/schemas/location'
            DirectoryEntryDateType:
              $ref: '#/components/schemas/directoryentrydatetypevalues'
      description: 'Input: UpCR Update details about the location''s directory entry'
    UpdateLocationDirectoryEntryResponse:
      type: object
      properties:
        LocationDirectoryEntry:
          type: object
          properties:
            LocationReference:
              $ref: '#/components/schemas/location'
            DirectoryEntryDateType:
              $ref: '#/components/schemas/directoryentrydatetypevalues'
      description: 'Output: UpCR Update details about the location''s directory entry'
    RequestLocationDirectoryEntryRequest:
      type: object
      properties:
        LocationDirectoryEntry:
          type: object
          properties:
            DirectoryEntryDateType:
              $ref: '#/components/schemas/directoryentrydatetypevalues'
      description: 'Input: RqCR Request manual intervention with an entry (e.g. refresh content)'
    RetrieveLocationDirectoryEntryResponse:
      type: object
      properties:
        LocationDirectoryEntry:
          type: object
          properties:
            LocationReference:
              $ref: '#/components/schemas/location'
            DirectoryEntryDateType:
              $ref: '#/components/schemas/directoryentrydatetypevalues'
      description: 'Output: ReCR Retrieve details about a location directory entry'
    ExecuteLocationDirectoryEntryRequest:
      type: object
      properties:
        Location:
          type: object
          properties:
            LocationType:
              type: string
              description: 'Type of location (e.g. building, point of interest, virtual location/device)'
              format: string
            LocationAddress:
              type: string
              description: 'Reference address for the location (e.g. postal address, email, coordinates)'
              format: string
            LocationCoordinates:
              type: string
              description: The coordinates in a form that can be used to match tracked parties to the location (e.g. for real-time marketing)
              format: string
            LocationDescription:
              type: string
              description: 'A description of the property, particularly if it has landmark characteristics'
              format: string
            LocationConstructionType:
              type: string
              description: The construction approach for a property at the location (e.g. era and architecture as might be used in valuation)
              format: string
            LocationCapacity:
              type: string
              description: 'An indication of the size or scale of the property where appropriate (e.g. 4 bedroom, 600 seat auditorium, 40 cover restaurant)'
              format: string
            LocationStatus:
              type: string
              description: 'The tracked status (e.g. under construction or repair, inhabited, vacant)'
              format: string
            LocationNeighborhoodType:
              type: string
              description: 'The general purpose and neighborhood of the property  (e.g. residential, industrial, commercial)'
              format: string
        Use:
          type: object
          properties:
            LocationZoningType:
              type: string
              description: 'The planning or zoning status (e.g. residential, commercial, industrial)'
              format: string
            LocationUsage:
              type: string
              description: 'The allowed usage for the property at the location (e.g. domestic residence, manufacturing, retail)'
              format: string
        Occupancy:
          type: object
          properties:
            CustomerReference:
              $ref: '#/components/schemas/object'
            LocationOwnerOrTitle:
              type: string
              description: Registered owner or title holder(s) of the property
              format: string
            LocationValue:
              type: string
              description: The estimated (book) value of the property at the location - rental and purchase as appropriate
              format: string
            LocationOccupierType:
              type: string
              description: 'The type of occupancy (e.g. residency, business, retail, entertainment)'
              format: string
            LocationOccupierReference:
              $ref: '#/components/schemas/object'
            LocationOccupierTerms:
              type: string
              description: 'Nature of the access terms or entitlement of the occupier (e.g. leasehold, rental, public access)'
              format: string
            AlliancePartnerReference:
              $ref: '#/components/schemas/object'
      description: 'Input: ExCR Execute an automated action against an entry'
    UpdateLocationRequest:
      type: object
      properties:
        LocationDirectoryEntry:
          type: object
          properties:
            DirectoryEntryDate:
              $ref: '#/components/schemas/datetime'
        Location:
          type: object
          properties:
            LocationType:
              type: string
              description: 'Type of location (e.g. building, point of interest, virtual location/device)'
              format: string
            LocationAddress:
              type: string
              description: 'Reference address for the location (e.g. postal address, email, coordinates)'
              format: string
            LocationCoordinates:
              type: string
              description: The coordinates in a form that can be used to match tracked parties to the location (e.g. for real-time marketing)
              format: string
            LocationDescription:
              type: string
              description: 'A description of the property, particularly if it has landmark characteristics'
              format: string
            LocationConstructionType:
              type: string
              description: The construction approach for a property at the location (e.g. era and architecture as might be used in valuation)
              format: string
            LocationCapacity:
              type: string
              description: 'An indication of the size or scale of the property where appropriate (e.g. 4 bedroom, 600 seat auditorium, 40 cover restaurant)'
              format: string
            LocationStatus:
              type: string
              description: 'The tracked status (e.g. under construction or repair, inhabited, vacant)'
              format: string
            LocationNeighborhoodType:
              type: string
              description: 'The general purpose and neighborhood of the property  (e.g. residential, industrial, commercial)'
              format: string
      description: 'Input: UpBQ Update details about a location entry'
    UpdateLocationResponse:
      type: object
      properties:
        LocationDirectoryEntry:
          type: object
          properties:
            DirectoryEntryDate:
              $ref: '#/components/schemas/datetime'
        Location:
          type: object
          properties:
            LocationType:
              type: string
              description: 'Type of location (e.g. building, point of interest, virtual location/device)'
              format: string
            LocationAddress:
              type: string
              description: 'Reference address for the location (e.g. postal address, email, coordinates)'
              format: string
            LocationCoordinates:
              type: string
              description: The coordinates in a form that can be used to match tracked parties to the location (e.g. for real-time marketing)
              format: string
            LocationDescription:
              type: string
              description: 'A description of the property, particularly if it has landmark characteristics'
              format: string
            LocationConstructionType:
              type: string
              description: The construction approach for a property at the location (e.g. era and architecture as might be used in valuation)
              format: string
            LocationCapacity:
              type: string
              description: 'An indication of the size or scale of the property where appropriate (e.g. 4 bedroom, 600 seat auditorium, 40 cover restaurant)'
              format: string
            LocationStatus:
              type: string
              description: 'The tracked status (e.g. under construction or repair, inhabited, vacant)'
              format: string
            LocationNeighborhoodType:
              type: string
              description: 'The general purpose and neighborhood of the property  (e.g. residential, industrial, commercial)'
              format: string
      description: 'Output: UpBQ Update details about a location entry'
    RetrieveLocationResponse:
      type: object
      properties:
        LocationDirectoryEntry:
          type: object
          properties:
            LocationReference:
              $ref: '#/components/schemas/location'
            DirectoryEntryDateType:
              $ref: '#/components/schemas/directoryentrydatetypevalues'
        Location:
          type: object
          properties:
            LocationType:
              type: string
              description: 'Type of location (e.g. building, point of interest, virtual location/device)'
              format: string
            LocationAddress:
              type: string
              description: 'Reference address for the location (e.g. postal address, email, coordinates)'
              format: string
            LocationCoordinates:
              type: string
              description: The coordinates in a form that can be used to match tracked parties to the location (e.g. for real-time marketing)
              format: string
            LocationDescription:
              type: string
              description: 'A description of the property, particularly if it has landmark characteristics'
              format: string
            LocationConstructionType:
              type: string
              description: The construction approach for a property at the location (e.g. era and architecture as might be used in valuation)
              format: string
            LocationCapacity:
              type: string
              description: 'An indication of the size or scale of the property where appropriate (e.g. 4 bedroom, 600 seat auditorium, 40 cover restaurant)'
              format: string
            LocationStatus:
              type: string
              description: 'The tracked status (e.g. under construction or repair, inhabited, vacant)'
              format: string
            LocationNeighborhoodType:
              type: string
              description: 'The general purpose and neighborhood of the property  (e.g. residential, industrial, commercial)'
              format: string
      description: 'Output: ReBQ Retrieve details about location entries in the directory'
    UpdateUseRequest:
      type: object
      properties:
        LocationDirectoryEntry:
          type: object
          properties:
            DirectoryEntryDate:
              $ref: '#/components/schemas/datetime'
        Use:
          type: object
          properties:
            LocationZoningType:
              type: string
              description: 'The planning or zoning status (e.g. residential, commercial, industrial)'
              format: string
            LocationUsage:
              type: string
              description: 'The allowed usage for the property at the location (e.g. domestic residence, manufacturing, retail)'
              format: string
      description: 'Input: UpBQ Update details about an usage entry for the location'
    UpdateUseResponse:
      type: object
      properties:
        LocationDirectoryEntry:
          type: object
          properties:
            DirectoryEntryDate:
              $ref: '#/components/schemas/datetime'
        Use:
          type: object
          properties:
            LocationZoningType:
              type: string
              description: 'The planning or zoning status (e.g. residential, commercial, industrial)'
              format: string
            LocationUsage:
              type: string
              description: 'The allowed usage for the property at the location (e.g. domestic residence, manufacturing, retail)'
              format: string
      description: 'Output: UpBQ Update details about an usage entry for the location'
    RetrieveUseResponse:
      type: object
      properties:
        LocationDirectoryEntry:
          type: object
          properties:
            LocationReference:
              $ref: '#/components/schemas/location'
            DirectoryEntryDateType:
              $ref: '#/components/schemas/directoryentrydatetypevalues'
        Use:
          type: object
          properties:
            LocationZoningType:
              type: string
              description: 'The planning or zoning status (e.g. residential, commercial, industrial)'
              format: string
            LocationUsage:
              type: string
              description: 'The allowed usage for the property at the location (e.g. domestic residence, manufacturing, retail)'
              format: string
      description: 'Output: ReBQ Retrieve details about usage entries in the location directory'
    UpdateOccupancyRequest:
      type: object
      properties:
        LocationDirectoryEntry:
          type: object
          properties:
            DirectoryEntryDate:
              $ref: '#/components/schemas/datetime'
        Occupancy:
          type: object
          properties:
            CustomerReference:
              $ref: '#/components/schemas/object'
            LocationOwnerOrTitle:
              type: string
              description: Registered owner or title holder(s) of the property
              format: string
            LocationValue:
              type: string
              description: The estimated (book) value of the property at the location - rental and purchase as appropriate
              format: string
            LocationOccupierType:
              type: string
              description: 'The type of occupancy (e.g. residency, business, retail, entertainment)'
              format: string
            LocationOccupierReference:
              $ref: '#/components/schemas/object'
            LocationOccupierTerms:
              type: string
              description: 'Nature of the access terms or entitlement of the occupier (e.g. leasehold, rental, public access)'
              format: string
            AlliancePartnerReference:
              $ref: '#/components/schemas/object'
      description: 'Input: UpBQ Update details about a location''s occupancy'
    UpdateOccupancyResponse:
      type: object
      properties:
        LocationDirectoryEntry:
          type: object
          properties:
            DirectoryEntryDate:
              $ref: '#/components/schemas/datetime'
        Occupancy:
          type: object
          properties:
            CustomerReference:
              $ref: '#/components/schemas/object'
            LocationOwnerOrTitle:
              type: string
              description: Registered owner or title holder(s) of the property
              format: string
            LocationValue:
              type: string
              description: The estimated (book) value of the property at the location - rental and purchase as appropriate
              format: string
            LocationOccupierType:
              type: string
              description: 'The type of occupancy (e.g. residency, business, retail, entertainment)'
              format: string
            LocationOccupierReference:
              $ref: '#/components/schemas/object'
            LocationOccupierTerms:
              type: string
              description: 'Nature of the access terms or entitlement of the occupier (e.g. leasehold, rental, public access)'
              format: string
            AlliancePartnerReference:
              $ref: '#/components/schemas/object'
      description: 'Output: UpBQ Update details about a location''s occupancy'
    RetrieveOccupancyResponse:
      type: object
      properties:
        LocationDirectoryEntry:
          type: object
          properties:
            LocationReference:
              $ref: '#/components/schemas/location'
            DirectoryEntryDateType:
              $ref: '#/components/schemas/directoryentrydatetypevalues'
        Occupancy:
          type: object
          properties:
            CustomerReference:
              $ref: '#/components/schemas/object'
            LocationOwnerOrTitle:
              type: string
              description: Registered owner or title holder(s) of the property
              format: string
            LocationValue:
              type: string
              description: The estimated (book) value of the property at the location - rental and purchase as appropriate
              format: string
            LocationOccupierType:
              type: string
              description: 'The type of occupancy (e.g. residency, business, retail, entertainment)'
              format: string
            LocationOccupierReference:
              $ref: '#/components/schemas/object'
            LocationOccupierTerms:
              type: string
              description: 'Nature of the access terms or entitlement of the occupier (e.g. leasehold, rental, public access)'
              format: string
            AlliancePartnerReference:
              $ref: '#/components/schemas/object'
      description: 'Output: ReBQ Retrieve details about location''s occupancy entry in the directory'
    object:
      type: object
      properties:
        Object:
          type: string
          description: ''
          format: datatype
    location:
      type: object
      properties:
        LocationDescription:
          $ref: '#/components/schemas/text'
        LocationDateTime:
          $ref: '#/components/schemas/datetime'
        LocationStatus:
          $ref: '#/components/schemas/status'
        LocationType:
          type: string
          description: 'Type of location (e.g. building, point of interest, virtual location/device).'
          format: string
        LocationZoningType:
          $ref: '#/components/schemas/text'
        LocationNeighborhoodType:
          $ref: '#/components/schemas/text'
        LocationConstructionType:
          $ref: '#/components/schemas/text'
        LocationOccupancyType:
          $ref: '#/components/schemas/text'
        LocationValue:
          $ref: '#/components/schemas/value'
        LocationCapacity:
          $ref: '#/components/schemas/text'
        LocationIdentification:
          $ref: '#/components/schemas/identifier'
        LocationAddress:
          $ref: '#/components/schemas/address'
    directoryentrydatetypevalues:
      enum:
        - OpenDate
        - RefreshDate
      type: string
      description: ">\n* `OpenDate` - \n* `RefreshDate` - \n"
    datetime:
      type: object
      properties:
        Datetime:
          type: string
          description: "A date time identifies a date and time of day to various common resolutions: year, month, week, day, hour, minute, second, and fraction of second. (UN/CEFACT)\n\nA particular point in the progression of time defined by a mandatory date and a mandatory time component, expressed in either UTC time format (YYYY-MM-DDThh:mm:ss.sssZ), local time with UTC offset format (YYYY-MM-DDThh:mm:ss.sss+/-hh:mm), or local time format (YYYY-MM-DDThh:mm:ss.sss). These representations are defined in \"XML Schema Part 2: Datatypes Second Edition - W3C Recommendation 28 October 2004\" which is aligned with ISO 8601. (ISO20022)\nNote on the time format:\n1) beginning / end of calendar day\n00:00:00 = the beginning of a calendar day\n24:00:00 = the end of a calendar day\n2) fractions of second in time format\nDecimal fractions of seconds may be included. In this case, the involved parties shall agree on the maximum number of digits that are allowed."
          format: datatype
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    RegisterLocationDirectoryEntryRequest:
      description: RegisterLocationDirectoryEntryRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RegisterLocationDirectoryEntryRequest'
    UpdateLocationDirectoryEntryResponse:
      description: UpdateLocationDirectoryEntryResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateLocationDirectoryEntryResponse'
    RequestLocationDirectoryEntryRequest:
      description: RequestLocationDirectoryEntryRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestLocationDirectoryEntryRequest'
    RetrieveLocationDirectoryEntryResponse:
      description: RetrieveLocationDirectoryEntryResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveLocationDirectoryEntryResponse'
    ExecuteLocationDirectoryEntryRequest:
      description: ExecuteLocationDirectoryEntryRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExecuteLocationDirectoryEntryRequest'
    UpdateLocationResponse:
      description: UpdateLocationResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateLocationResponse'
    RetrieveLocationResponse:
      description: RetrieveLocationResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveLocationResponse'
    UpdateUseResponse:
      description: UpdateUseResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateUseResponse'
    RetrieveUseResponse:
      description: RetrieveUseResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveUseResponse'
    UpdateOccupancyResponse:
      description: UpdateOccupancyResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateOccupancyResponse'
    RetrieveOccupancyResponse:
      description: RetrieveOccupancyResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveOccupancyResponse'
  parameters:
    locationdatamanagementid:
      name: locationdatamanagementid
      in: path
      required: true
      style: simple
      schema:
        type: string
    locationid:
      name: locationid
      in: path
      required: true
      style: simple
      schema:
        type: string
    useid:
      name: useid
      in: path
      required: true
      style: simple
      schema:
        type: string
    occupancyid:
      name: occupancyid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    RegisterLocationDirectoryEntryRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RegisterLocationDirectoryEntryRequest'
      required: true
    UpdateLocationDirectoryEntryRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateLocationDirectoryEntryRequest'
      required: true
    RequestLocationDirectoryEntryRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestLocationDirectoryEntryRequest'
      required: true
    ExecuteLocationDirectoryEntryRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExecuteLocationDirectoryEntryRequest'
      required: true
    UpdateLocationRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateLocationRequest'
      required: true
    UpdateUseRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateUseRequest'
      required: true
    UpdateOccupancyRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateOccupancyRequest'
      required: true