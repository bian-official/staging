openapi: 3.0.1
info:
  title: Correspondent Bank Relationship Management
  description: 'This Service Domain manages correspondent bank relations, ensuring reciprocity and developing business where possible'
  contact:
    name: BIAN
    url: https://bian.org
  version: '10.1.0'
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/CorrespondentBankRelationshipManagement/10.1.0
paths:
  '/CorrespondentBankRelationshipManagement/{correspondentbankrelationshipmanagementid}/Control':
    put:
      tags:
        - CR - CorrepondentBankRelationshipManagementPlan
      summary: Control Correpondent Bank Relationship Management Plan
      description: Control Correpondent Bank Relationship Management Plan
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/correspondentbankrelationshipmanagementid'
      requestBody:
        $ref: '#/components/requestBodies/ControlCorrepondentBankRelationshipManagementPlanRequest'
      responses:
        '200':
          $ref: '#/components/responses/ControlCorrepondentBankRelationshipManagementPlanResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /CorrespondentBankRelationshipManagement/Create:
    post:
      tags:
        - CR - CorrepondentBankRelationshipManagementPlan
      summary: Create Correpondent Bank Relationship Management Plan
      description: Create Correpondent Bank Relationship Management Plan
      operationId: Create
      requestBody:
        $ref: '#/components/requestBodies/CreateCorrepondentBankRelationshipManagementPlanRequest'
      responses:
        '200':
          $ref: '#/components/responses/CreateCorrepondentBankRelationshipManagementPlanResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankRelationshipManagement/{correspondentbankrelationshipmanagementid}/Exchange':
    put:
      tags:
        - CR - CorrepondentBankRelationshipManagementPlan
      summary: Exchange Correpondent Bank Relationship Management Plan
      description: Exchange Correpondent Bank Relationship Management Plan
      operationId: Exchange
      parameters:
        - $ref: '#/components/parameters/correspondentbankrelationshipmanagementid'
      requestBody:
        $ref: '#/components/requestBodies/ExchangeCorrepondentBankRelationshipManagementPlanRequest'
      responses:
        '200':
          $ref: '#/components/responses/ExchangeCorrepondentBankRelationshipManagementPlanResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankRelationshipManagement/{correspondentbankrelationshipmanagementid}/Grant':
    put:
      tags:
        - CR - CorrepondentBankRelationshipManagementPlan
      summary: Grant Correpondent Bank Relationship Management Plan
      description: Grant Correpondent Bank Relationship Management Plan
      operationId: Grant
      parameters:
        - $ref: '#/components/parameters/correspondentbankrelationshipmanagementid'
      requestBody:
        $ref: '#/components/requestBodies/GrantCorrepondentBankRelationshipManagementPlanRequest'
      responses:
        '200':
          $ref: '#/components/responses/GrantCorrepondentBankRelationshipManagementPlanResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankRelationshipManagement/{correspondentbankrelationshipmanagementid}/Notify':
    get:
      tags:
        - CR - CorrepondentBankRelationshipManagementPlan
      summary: Notify Correpondent Bank Relationship Management Plan
      description: Notify Correpondent Bank Relationship Management Plan
      operationId: Notify
      parameters:
        - $ref: '#/components/parameters/correspondentbankrelationshipmanagementid'
      responses:
        '200':
          $ref: '#/components/responses/NotifyCorrepondentBankRelationshipManagementPlanResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankRelationshipManagement/{correspondentbankrelationshipmanagementid}/Request':
    put:
      tags:
        - CR - CorrepondentBankRelationshipManagementPlan
      summary: Request Correpondent Bank Relationship Management Plan
      description: Request Correpondent Bank Relationship Management Plan
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/correspondentbankrelationshipmanagementid'
      requestBody:
        $ref: '#/components/requestBodies/RequestCorrepondentBankRelationshipManagementPlanRequest'
      responses:
        '200':
          $ref: '#/components/responses/RequestCorrepondentBankRelationshipManagementPlanResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankRelationshipManagement/{correspondentbankrelationshipmanagementid}/Retrieve':
    get:
      tags:
        - CR - CorrepondentBankRelationshipManagementPlan
      summary: Retrieve Correpondent Bank Relationship Management Plan
      description: Retrieve Correpondent Bank Relationship Management Plan
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/correspondentbankrelationshipmanagementid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveCorrepondentBankRelationshipManagementPlanResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankRelationshipManagement/{correspondentbankrelationshipmanagementid}/Update':
    put:
      tags:
        - CR - CorrepondentBankRelationshipManagementPlan
      summary: Update Correpondent Bank Relationship Management Plan
      description: Update Correpondent Bank Relationship Management Plan
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/correspondentbankrelationshipmanagementid'
      requestBody:
        $ref: '#/components/requestBodies/UpdateCorrepondentBankRelationshipManagementPlanRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateCorrepondentBankRelationshipManagementPlanResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankRelationshipManagement/{correspondentbankrelationshipmanagementid}/IncidentTroubleshootingOversightDuty/{incidenttroubleshootingoversightdutyid}/Exchange':
    put:
      tags:
        - BQ - IncidentTroubleshootingOversightDuty
      summary: Exchange Incident Troubleshooting Oversight Duty
      description: Exchange Incident Troubleshooting Oversight Duty
      operationId: ExchangeIncidentTroubleshootingOversightDuty
      parameters:
        - $ref: '#/components/parameters/correspondentbankrelationshipmanagementid'
        - $ref: '#/components/parameters/incidenttroubleshootingoversightdutyid'
      requestBody:
        $ref: '#/components/requestBodies/ExchangeIncidentTroubleshootingOversightDutyRequest'
      responses:
        '200':
          $ref: '#/components/responses/ExchangeIncidentTroubleshootingOversightDutyResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankRelationshipManagement/{correspondentbankrelationshipmanagementid}/RelationshipDevelopmentDuty/{relationshipdevelopmentdutyid}/Exchange':
    put:
      tags:
        - BQ - RelationshipDevelopmentDuty
      summary: Exchange Relationship Development Duty
      description: Exchange Relationship Development Duty
      operationId: ExchangeRelationshipDevelopmentDuty
      parameters:
        - $ref: '#/components/parameters/correspondentbankrelationshipmanagementid'
        - $ref: '#/components/parameters/relationshipdevelopmentdutyid'
      requestBody:
        $ref: '#/components/requestBodies/ExchangeRelationshipDevelopmentDutyRequest'
      responses:
        '200':
          $ref: '#/components/responses/ExchangeRelationshipDevelopmentDutyResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankRelationshipManagement/{correspondentbankrelationshipmanagementid}/RelationshipReciprocityAssessmentDuty/{relationshipreciprocityassessmentdutyid}/Exchange':
    put:
      tags:
        - BQ - RelationshipReciprocityAssessmentDuty
      summary: Exchange Relationship Reciprocity Assessment Duty
      description: Exchange Relationship Reciprocity Assessment Duty
      operationId: ExchangeRelationshipReciprocityAssessmentDuty
      parameters:
        - $ref: '#/components/parameters/correspondentbankrelationshipmanagementid'
        - $ref: '#/components/parameters/relationshipreciprocityassessmentdutyid'
      requestBody:
        $ref: '#/components/requestBodies/ExchangeRelationshipReciprocityAssessmentDutyRequest'
      responses:
        '200':
          $ref: '#/components/responses/ExchangeRelationshipReciprocityAssessmentDutyResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankRelationshipManagement/{correspondentbankrelationshipmanagementid}/IncidentTroubleshootingOversightDuty/{incidenttroubleshootingoversightdutyid}/Grant':
    put:
      tags:
        - BQ - IncidentTroubleshootingOversightDuty
      summary: Grant Incident Troubleshooting Oversight Duty
      description: Grant Incident Troubleshooting Oversight Duty
      operationId: GrantIncidentTroubleshootingOversightDuty
      parameters:
        - $ref: '#/components/parameters/correspondentbankrelationshipmanagementid'
        - $ref: '#/components/parameters/incidenttroubleshootingoversightdutyid'
      requestBody:
        $ref: '#/components/requestBodies/GrantIncidentTroubleshootingOversightDutyRequest'
      responses:
        '200':
          $ref: '#/components/responses/GrantIncidentTroubleshootingOversightDutyResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankRelationshipManagement/{correspondentbankrelationshipmanagementid}/RelationshipDevelopmentDuty/{relationshipdevelopmentdutyid}/Grant':
    put:
      tags:
        - BQ - RelationshipDevelopmentDuty
      summary: Grant Relationship Development Duty
      description: Grant Relationship Development Duty
      operationId: GrantRelationshipDevelopmentDuty
      parameters:
        - $ref: '#/components/parameters/correspondentbankrelationshipmanagementid'
        - $ref: '#/components/parameters/relationshipdevelopmentdutyid'
      requestBody:
        $ref: '#/components/requestBodies/GrantRelationshipDevelopmentDutyRequest'
      responses:
        '200':
          $ref: '#/components/responses/GrantRelationshipDevelopmentDutyResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankRelationshipManagement/{correspondentbankrelationshipmanagementid}/RelationshipReciprocityAssessmentDuty/{relationshipreciprocityassessmentdutyid}/Grant':
    put:
      tags:
        - BQ - RelationshipReciprocityAssessmentDuty
      summary: Grant Relationship Reciprocity Assessment Duty
      description: Grant Relationship Reciprocity Assessment Duty
      operationId: GrantRelationshipReciprocityAssessmentDuty
      parameters:
        - $ref: '#/components/parameters/correspondentbankrelationshipmanagementid'
        - $ref: '#/components/parameters/relationshipreciprocityassessmentdutyid'
      requestBody:
        $ref: '#/components/requestBodies/GrantRelationshipReciprocityAssessmentDutyRequest'
      responses:
        '200':
          $ref: '#/components/responses/GrantRelationshipReciprocityAssessmentDutyResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankRelationshipManagement/{correspondentbankrelationshipmanagementid}/IncidentTroubleshootingOversightDuty/{incidenttroubleshootingoversightdutyid}/Notify':
    get:
      tags:
        - BQ - IncidentTroubleshootingOversightDuty
      summary: Notify Incident Troubleshooting Oversight Duty
      description: Notify Incident Troubleshooting Oversight Duty
      operationId: NotifyIncidentTroubleshootingOversightDuty
      parameters:
        - $ref: '#/components/parameters/correspondentbankrelationshipmanagementid'
        - $ref: '#/components/parameters/incidenttroubleshootingoversightdutyid'
      responses:
        '200':
          $ref: '#/components/responses/NotifyIncidentTroubleshootingOversightDutyResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankRelationshipManagement/{correspondentbankrelationshipmanagementid}/RelationshipDevelopmentDuty/{relationshipdevelopmentdutyid}/Notify':
    get:
      tags:
        - BQ - RelationshipDevelopmentDuty
      summary: Notify Relationship Development Duty
      description: Notify Relationship Development Duty
      operationId: NotifyRelationshipDevelopmentDuty
      parameters:
        - $ref: '#/components/parameters/correspondentbankrelationshipmanagementid'
        - $ref: '#/components/parameters/relationshipdevelopmentdutyid'
      responses:
        '200':
          $ref: '#/components/responses/NotifyRelationshipDevelopmentDutyResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankRelationshipManagement/{correspondentbankrelationshipmanagementid}/RelationshipReciprocityAssessmentDuty/{relationshipreciprocityassessmentdutyid}/Notify':
    get:
      tags:
        - BQ - RelationshipReciprocityAssessmentDuty
      summary: Notify Relationship Reciprocity Assessment Duty
      description: Notify Relationship Reciprocity Assessment Duty
      operationId: NotifyRelationshipReciprocityAssessmentDuty
      parameters:
        - $ref: '#/components/parameters/correspondentbankrelationshipmanagementid'
        - $ref: '#/components/parameters/relationshipreciprocityassessmentdutyid'
      responses:
        '200':
          $ref: '#/components/responses/NotifyRelationshipReciprocityAssessmentDutyResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankRelationshipManagement/{correspondentbankrelationshipmanagementid}/IncidentTroubleshootingOversightDuty/{incidenttroubleshootingoversightdutyid}/Request':
    put:
      tags:
        - BQ - IncidentTroubleshootingOversightDuty
      summary: Request Incident Troubleshooting Oversight Duty
      description: Request Incident Troubleshooting Oversight Duty
      operationId: RequestIncidentTroubleshootingOversightDuty
      parameters:
        - $ref: '#/components/parameters/correspondentbankrelationshipmanagementid'
        - $ref: '#/components/parameters/incidenttroubleshootingoversightdutyid'
      requestBody:
        $ref: '#/components/requestBodies/RequestIncidentTroubleshootingOversightDutyRequest'
      responses:
        '200':
          $ref: '#/components/responses/RequestIncidentTroubleshootingOversightDutyResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankRelationshipManagement/{correspondentbankrelationshipmanagementid}/RelationshipDevelopmentDuty/{relationshipdevelopmentdutyid}/Request':
    put:
      tags:
        - BQ - RelationshipDevelopmentDuty
      summary: Request Relationship Development Duty
      description: Request Relationship Development Duty
      operationId: RequestRelationshipDevelopmentDuty
      parameters:
        - $ref: '#/components/parameters/correspondentbankrelationshipmanagementid'
        - $ref: '#/components/parameters/relationshipdevelopmentdutyid'
      requestBody:
        $ref: '#/components/requestBodies/RequestRelationshipDevelopmentDutyRequest'
      responses:
        '200':
          $ref: '#/components/responses/RequestRelationshipDevelopmentDutyResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankRelationshipManagement/{correspondentbankrelationshipmanagementid}/RelationshipReciprocityAssessmentDuty/{relationshipreciprocityassessmentdutyid}/Request':
    put:
      tags:
        - BQ - RelationshipReciprocityAssessmentDuty
      summary: Request Relationship Reciprocity Assessment Duty
      description: Request Relationship Reciprocity Assessment Duty
      operationId: RequestRelationshipReciprocityAssessmentDuty
      parameters:
        - $ref: '#/components/parameters/correspondentbankrelationshipmanagementid'
        - $ref: '#/components/parameters/relationshipreciprocityassessmentdutyid'
      requestBody:
        $ref: '#/components/requestBodies/RequestRelationshipReciprocityAssessmentDutyRequest'
      responses:
        '200':
          $ref: '#/components/responses/RequestRelationshipReciprocityAssessmentDutyResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankRelationshipManagement/{correspondentbankrelationshipmanagementid}/IncidentTroubleshootingOversightDuty/{incidenttroubleshootingoversightdutyid}/Retrieve':
    get:
      tags:
        - BQ - IncidentTroubleshootingOversightDuty
      summary: Retrieve Incident Troubleshooting Oversight Duty
      description: Retrieve Incident Troubleshooting Oversight Duty
      operationId: RetrieveIncidentTroubleshootingOversightDuty
      parameters:
        - $ref: '#/components/parameters/correspondentbankrelationshipmanagementid'
        - $ref: '#/components/parameters/incidenttroubleshootingoversightdutyid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveIncidentTroubleshootingOversightDutyResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankRelationshipManagement/{correspondentbankrelationshipmanagementid}/RelationshipDevelopmentDuty/{relationshipdevelopmentdutyid}/Retrieve':
    get:
      tags:
        - BQ - RelationshipDevelopmentDuty
      summary: Retrieve Relationship Development Duty
      description: Retrieve Relationship Development Duty
      operationId: RetrieveRelationshipDevelopmentDuty
      parameters:
        - $ref: '#/components/parameters/correspondentbankrelationshipmanagementid'
        - $ref: '#/components/parameters/relationshipdevelopmentdutyid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveRelationshipDevelopmentDutyResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankRelationshipManagement/{correspondentbankrelationshipmanagementid}/RelationshipReciprocityAssessmentDuty/{relationshipreciprocityassessmentdutyid}/Retrieve':
    get:
      tags:
        - BQ - RelationshipReciprocityAssessmentDuty
      summary: Retrieve Relationship Reciprocity Assessment Duty
      description: Retrieve Relationship Reciprocity Assessment Duty
      operationId: RetrieveRelationshipReciprocityAssessmentDuty
      parameters:
        - $ref: '#/components/parameters/correspondentbankrelationshipmanagementid'
        - $ref: '#/components/parameters/relationshipreciprocityassessmentdutyid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveRelationshipReciprocityAssessmentDutyResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankRelationshipManagement/{correspondentbankrelationshipmanagementid}/IncidentTroubleshootingOversightDuty/{incidenttroubleshootingoversightdutyid}/Update':
    put:
      tags:
        - BQ - IncidentTroubleshootingOversightDuty
      summary: Update Incident Troubleshooting Oversight Duty
      description: Update Incident Troubleshooting Oversight Duty
      operationId: UpdateIncidentTroubleshootingOversightDuty
      parameters:
        - $ref: '#/components/parameters/correspondentbankrelationshipmanagementid'
        - $ref: '#/components/parameters/incidenttroubleshootingoversightdutyid'
      requestBody:
        $ref: '#/components/requestBodies/UpdateIncidentTroubleshootingOversightDutyRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateIncidentTroubleshootingOversightDutyResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankRelationshipManagement/{correspondentbankrelationshipmanagementid}/RelationshipDevelopmentDuty/{relationshipdevelopmentdutyid}/Update':
    put:
      tags:
        - BQ - RelationshipDevelopmentDuty
      summary: Update Relationship Development Duty
      description: Update Relationship Development Duty
      operationId: UpdateRelationshipDevelopmentDuty
      parameters:
        - $ref: '#/components/parameters/correspondentbankrelationshipmanagementid'
        - $ref: '#/components/parameters/relationshipdevelopmentdutyid'
      requestBody:
        $ref: '#/components/requestBodies/UpdateRelationshipDevelopmentDutyRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateRelationshipDevelopmentDutyResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankRelationshipManagement/{correspondentbankrelationshipmanagementid}/RelationshipReciprocityAssessmentDuty/{relationshipreciprocityassessmentdutyid}/Update':
    put:
      tags:
        - BQ - RelationshipReciprocityAssessmentDuty
      summary: Update Relationship Reciprocity Assessment Duty
      description: Update Relationship Reciprocity Assessment Duty
      operationId: UpdateRelationshipReciprocityAssessmentDuty
      parameters:
        - $ref: '#/components/parameters/correspondentbankrelationshipmanagementid'
        - $ref: '#/components/parameters/relationshipreciprocityassessmentdutyid'
      requestBody:
        $ref: '#/components/requestBodies/UpdateRelationshipReciprocityAssessmentDutyRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateRelationshipReciprocityAssessmentDutyResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: object
          format: string
        status:
          type: object
          format: string
        message:
          type: object
          format: string
      description: Status Attributes
    involvedparty:
      type: object
      properties:
        Involvedparty:
          type: object
          description: ''
          format: datatype
      description: The operating unit/employee responsible for undertaking the duty
    schedule:
      type: object
      properties:
        Schedule:
          type: object
          description: "Defined sequence of planned tasks/actions or a timetable of available services\n\nA schedule is a time based series of something"
          format: datatype
      description: The timing and key actions/milestones involved in fulfilling the duty
    name:
      type: object
      properties:
        Name:
          type: object
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: ''
    text:
      type: object
      properties:
        Text:
          type: object
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: ''
    businessservice:
      type: object
      properties:
        BusinessServiceName:
          $ref: '#/components/schemas/name'
        BusinessServiceType:
          type: object
          description: ''
          format: businessservicetypevalues(enumeration)
        BusinessServiceDescription:
          $ref: '#/components/schemas/text'
      description: The Incident Troubleshooting Oversight Duty specific Business Service
    goal:
      type: object
      properties:
        GoalType:
          type: string
          description: The type of goal
          format: string
        GoalDefinition:
          type: string
          description: 'A definition of the goal, including the intended actions required to achieve the goal'
          format: string
        GoalOrganization:
          type: string
          description: Identifies the interested parties and their roles and responsibilities for the specific actions supporting the achievement of the goal
          format: string
        GoalResult:
          type: string
          description: 'Assessment of how the work is progressing towards achieving the goal, including projections of likely outcomes'
          format: string
      description: ''
    budgettype:
      type: object
      properties:
        Budgettype:
          type: object
          description: ''
          format: datatype
      description: A Classification value that specifies the type of Budget
    amount:
      type: object
      properties:
        Amount:
          type: object
          description: "Number of monetary units specified in a currency, where the unit of currency is explicit and compliant with ISO 4217. (UN/CEFACT)\n\nThe decimal seperator is a dot.\n\n\nNumber of monetary units specified in a currency, where the unit of currency is explicit and compliant with ISO 4217. The decimal separator is a dot. (ISO20022)\nNote: A zero amount is considered a positive amount.\n- total number of digits: 18\n- number of digits in fractional part: 5\n- minInclusive: 0"
          format: datatype
      description: ''
    budgetarrangement:
      type: object
      properties:
        BudgetType:
          $ref: '#/components/schemas/budgettype'
        BudgetAmount:
          $ref: '#/components/schemas/amount'
      description: 'An arrangement which is specifying an estimate of costs, revenues, and resources over a specified period, reflecting a reading of future financial conditions and goals. (adapted from Business Dictionary)'
    plantype:
      type: object
      properties:
        Plantype:
          type: object
          description: 'Data type specifies the classification of a Plan '
          format: datatype
      description: A Classification value that specifies the type of Plan
    datetimeperiod:
      type: object
      properties:
        Datetimeperiod:
          type: object
          description: 'Time span defined by a start date and time, and an end date and time. (ISO20022)'
          format: datatype
      description: ''
    plan:
      type: object
      properties:
        PlanGoal:
          $ref: '#/components/schemas/goal'
        PlanBudget:
          $ref: '#/components/schemas/budgetarrangement'
        PlannedAction:
          type: object
          description: 'An action that is arranged in a plan for doing or achieving something '
          format: plannedaction(class)
        PlanType:
          $ref: '#/components/schemas/plantype'
        PlanOrganisation:
          type: string
          description: ''
          format: string
        PlanValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PlanDescription:
          $ref: '#/components/schemas/text'
      description: Reference to Incident Troubleshooting Oversight Duty
    IncidentTroubleshootingOversightDuty:
      type: object
      properties:
        Preconditions:
          type: object
          description: The required status/situation before the duty/obligation can be met
          format: condition(class)
        BusinessUnit/EmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          type: object
          description: The completion status once the duty has been complied with (note the need to fulfill a duty may recur frequently)
          format: condition(class)
        CorrepondentBankRelationshipManagementPlanReference:
          $ref: '#/components/schemas/plan'
        IncidentTroubleshootingOversightDutyReference:
          type: object
          description: Reference to Incident Troubleshooting Oversight Duty
          format: plannedaction(class)
        IncidentTroubleshootingOversightDutyType:
          $ref: '#/components/schemas/text'
      description: The Incident Troubleshooting Oversight Duty is a specific role or responsibility that is one aspect of Incident Troubleshooting Oversight Duty
    RelationshipDevelopmentDuty:
      type: object
      properties:
        Preconditions:
          type: object
          description: The required status/situation before the duty/obligation can be met
          format: condition(class)
        BusinessUnit/EmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          type: object
          description: The completion status once the duty has been complied with (note the need to fulfill a duty may recur frequently)
          format: condition(class)
        CorrepondentBankRelationshipManagementPlanReference:
          $ref: '#/components/schemas/plan'
        RelationshipDevelopmentDutyReference:
          type: object
          description: Reference to Relationship Development Duty
          format: plannedaction(class)
        RelationshipDevelopmentDutyType:
          $ref: '#/components/schemas/text'
      description: The Incident Troubleshooting Oversight Duty is a specific role or responsibility that is one aspect of Incident Troubleshooting Oversight Duty
    RelationshipReciprocityAssessmentDuty:
      type: object
      properties:
        Preconditions:
          type: object
          description: The required status/situation before the duty/obligation can be met
          format: condition(class)
        BusinessUnit/EmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          type: object
          description: The completion status once the duty has been complied with (note the need to fulfill a duty may recur frequently)
          format: condition(class)
        CorrepondentBankRelationshipManagementPlanReference:
          $ref: '#/components/schemas/plan'
        RelationshipReciprocityAssessmentDutyReference:
          type: object
          description: Reference to Relationship Reciprocity Assessment Duty
          format: plannedaction(class)
        RelationshipReciprocityAssessmentDutyType:
          $ref: '#/components/schemas/text'
      description: The Incident Troubleshooting Oversight Duty is a specific role or responsibility that is one aspect of Incident Troubleshooting Oversight Duty
    analysistypevalues:
      enum:
        - PerformanceAnalysis
        - ActivityAnalysis
      type: string
      description: ">\n* `PerformanceAnalysis` - \n* `ActivityAnalysis` - \n"
    identifier:
      type: object
      properties:
        Identifier:
          type: object
          description: An identifier is a character string used to uniquely identify one instance of an object within an identification scheme that is managed by an agency. (UN/CEFAT)
          format: datatype
      description: An identifier that allows to uniquely refer to an instance of a Document.
    status:
      type: object
      properties:
        Status:
          type: object
          description: A characteristic that describe the object by referring to a state transition in its lifecycle.
          format: datatype
      description: 'Status of the document (e.g. delivered, paid, etc.). ISO20022'
    datetime:
      type: object
      properties:
        Datetime:
          type: object
          description: "A date time identifies a date and time of day to various common resolutions: year, month, week, day, hour, minute, second, and fraction of second. (UN/CEFACT)\n\nA particular point in the progression of time defined by a mandatory date and a mandatory time component, expressed in either UTC time format (YYYY-MM-DDThh:mm:ss.sssZ), local time with UTC offset format (YYYY-MM-DDThh:mm:ss.sss+/-hh:mm), or local time format (YYYY-MM-DDThh:mm:ss.sss). These representations are defined in \"XML Schema Part 2: Datatypes Second Edition - W3C Recommendation 28 October 2004\" which is aligned with ISO 8601. (ISO20022)\nNote on the time format:\n1) beginning / end of calendar day\n00:00:00 = the beginning of a calendar day\n24:00:00 = the end of a calendar day\n2) fractions of second in time format\nDecimal fractions of seconds may be included. In this case, the involved parties shall agree on the maximum number of digits that are allowed."
          format: datatype
      description: ''
    documentdatetimetypevalues:
      enum:
        - Creationdate
        - Capturingdate
        - Versiondate
        - Valuedate
        - Issuedate
      type: string
      description: ">\n* `Creationdate` - \n* `Capturingdate` - \n* `Versiondate` - \n* `Valuedate` - \n* `Issuedate` - \n"
    document:
      type: object
      properties:
        DocumentIdentifer:
          $ref: '#/components/schemas/identifier'
        DocumentVersion:
          $ref: '#/components/schemas/text'
        DocumentType:
          type: object
          description: 'Specifies the type of the document, for example commercial invoice. (ISO20022)'
          format: documenttype(class)
        DocumentStatus:
          $ref: '#/components/schemas/status'
        DocumentDateTime:
          $ref: '#/components/schemas/datetime'
        DocumentName:
          $ref: '#/components/schemas/name'
        DocumentDateTimeType:
          $ref: '#/components/schemas/documentdatetimetypevalues'
        DocumentPurpose:
          $ref: '#/components/schemas/text'
        DocumentFormat:
          $ref: '#/components/schemas/text'
        DocumentSubject:
          $ref: '#/components/schemas/text'
        DocumentDescription:
          $ref: '#/components/schemas/text'
      description: ''
    analysis:
      type: object
      properties:
        AnalysisType:
          $ref: '#/components/schemas/analysistypevalues'
        AnalysisResult:
          $ref: '#/components/schemas/text'
        AnalysisPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        AnalysisDocument:
          $ref: '#/components/schemas/document'
        AnalysisDateTime:
          $ref: '#/components/schemas/datetime'
        AnalysisSpecification:
          $ref: '#/components/schemas/text'
      description: ''
    task:
      type: object
      properties:
        Task:
          type: object
          description: ''
          format: datatype
      description: ''
    project:
      type: object
      properties:
        ProjectName:
          type: string
          description: The name of project
          format: string
        ProjectType:
          type: string
          description: A classification of the project
          format: string
        ProjectDescription:
          type: string
          description: 'A description of the scope, goal and make-up of the project'
          format: string
        ProjectOrganisation:
          type: string
          description: ''
          format: string
        ProjectSchedule:
          type: string
          description: ''
          format: string
        ProjectDateTime:
          type: string
          description: ''
          format: string
      description: ''
    CorrespondentBankRelationshipManagementOutcome:
      type: object
      properties:
        CorrespondentBankRelationshipManagementPerformanceAnalysis:
          $ref: '#/components/schemas/analysis'
        CorrespondentBankRelationshipManagementActivityAnalysis:
          $ref: '#/components/schemas/analysis'
        CorrespondentBankRelationshipManagementCharter:
          $ref: '#/components/schemas/plan'
        CorrespondentBankRelationshipManagementTask:
          $ref: '#/components/schemas/task'
        CorrespondentBankRelationshipManagementProject:
          $ref: '#/components/schemas/project'
      description: The Incident Troubleshooting Oversight Duty is a specific role or responsibility that is one aspect of Incident Troubleshooting Oversight Duty
    assignment:
      type: object
      properties:
        Assignment:
          type: object
          description: "Assignment of something to an InvolvedParty\n\nMake-up of staff allocation and delivery expectations !!!!\n"
          format: datatype
      description: The assignment of a required activity to a responsibe party in Correpondent Bank Relationship Management Plan
    actiontypevalues:
      enum:
        - Initiate
        - Execute
        - Create
        - Transfer
        - Pay
        - Deliver
      type: string
      description: ">\n* `Initiate` - \n* `Execute` - \n* `Create` - \n* `Transfer` - \n* `Pay` - \n* `Deliver` - \n"
    action:
      type: object
      properties:
        ActionType:
          $ref: '#/components/schemas/actiontypevalues'
      description: ''
    arrangementlifecyclestatus:
      type: object
      properties:
        Arrangementlifecyclestatus:
          type: object
          description: 'Data type that specifies the LifecycleStatus of arrangement (e.g., requested, proposed, offered, accepted, cancelled, terminated, fulfilled, etc.).'
          format: datatype
      description: 'A characteristic of arrangement which refers to the LifecycleStatus of arrangement (e.g., requested, proposed, offered, accepted, cancelled, terminated, fulfilled, etc.)'
    arrangement:
      type: object
      properties:
        ArrangementAction:
          $ref: '#/components/schemas/action'
        ArrangementStartDate:
          $ref: '#/components/schemas/datetime'
        ArrangementEndDate:
          $ref: '#/components/schemas/datetime'
        ArrangementStatus:
          $ref: '#/components/schemas/arrangementlifecyclestatus'
        ArrangementSubjectMatter:
          type: object
          description: ''
          format: subject(class)
      description: The set of management responsibilities defined in Correpondent Bank Relationship Management Plan
    accountbalance:
      type: object
      properties:
        Accountbalance:
          type: object
          description: "Numerical representation of the net increases and decreases in an account at a specific point in time. (ISO20022)\nhttps://www.iso20022.org/standardsrepository/type/Balance"
          format: datatype
      description: Balance of budget which is arranged whitin Correpondent Bank Relationship Management Plan
    object:
      type: object
      properties:
        ObjectProperties:
          type: string
          description: ''
          format: string
        ObjectDescription:
          type: string
          description: ''
          format: string
      description: The subject matter of Correpondent Bank Relationship Management Plan
    CorrepondentBankRelationshipManagementPlan:
      type: object
      properties:
        CorrepondentBankRelationshipManagementPlanType:
          $ref: '#/components/schemas/plantype'
        CorrepondentBankRelationshipManagementPlanReference:
          $ref: '#/components/schemas/plan'
        CorrepondentBankRelationshipManagementPlanBudgetType:
          $ref: '#/components/schemas/budgettype'
        CorrepondentBankRelationshipManagementPlanBudget:
          $ref: '#/components/schemas/amount'
        CorrepondentBankRelationshipManagementPlanAssignment:
          $ref: '#/components/schemas/assignment'
        CorrepondentBankRelationshipManagementPlanDuty:
          $ref: '#/components/schemas/arrangement'
        CorrepondentBankRelationshipManagementPlanDescription:
          $ref: '#/components/schemas/text'
        CorrepondentBankRelationshipManagementPlanBudgetBalance:
          $ref: '#/components/schemas/accountbalance'
        CorrepondentBankRelationshipManagementPlanAssociatedParty:
          $ref: '#/components/schemas/involvedparty'
        CorrepondentBankRelationshipManagementPlanSubjectMatter:
          $ref: '#/components/schemas/object'
      description: 'Oversee the working of a business unit, assign work, manage against a plan and troubleshoot issues within Correspondent Bank Relationship Management.'
    ControlCorrepondentBankRelationshipManagementPlanRequest:
      type: object
      properties:
        CorrepondentBankRelationshipManagementPlan:
          type: object
          properties:
            CorrepondentBankRelationshipManagementPlanType:
              $ref: '#/components/schemas/plantype'
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            CorrepondentBankRelationshipManagementPlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            CorrepondentBankRelationshipManagementPlanAssignment:
              $ref: '#/components/schemas/assignment'
            CorrepondentBankRelationshipManagementPlanDuty:
              $ref: '#/components/schemas/arrangement'
            CorrepondentBankRelationshipManagementPlanDescription:
              $ref: '#/components/schemas/text'
            CorrepondentBankRelationshipManagementPlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            CorrepondentBankRelationshipManagementPlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            CorrepondentBankRelationshipManagementPlanSubjectMatter:
              $ref: '#/components/schemas/object'
      description: 'Input: Control Correpondent Bank Relationship Management Plan'
    ControlCorrepondentBankRelationshipManagementPlanResponse:
      type: object
      properties:
        CorrepondentBankRelationshipManagementPlan:
          type: object
          properties:
            CorrepondentBankRelationshipManagementPlanType:
              $ref: '#/components/schemas/plantype'
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            CorrepondentBankRelationshipManagementPlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            CorrepondentBankRelationshipManagementPlanAssignment:
              $ref: '#/components/schemas/assignment'
            CorrepondentBankRelationshipManagementPlanDuty:
              $ref: '#/components/schemas/arrangement'
            CorrepondentBankRelationshipManagementPlanDescription:
              $ref: '#/components/schemas/text'
            CorrepondentBankRelationshipManagementPlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            CorrepondentBankRelationshipManagementPlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            CorrepondentBankRelationshipManagementPlanSubjectMatter:
              $ref: '#/components/schemas/object'
      description: 'Output: Control Correpondent Bank Relationship Management Plan'
    CreateCorrepondentBankRelationshipManagementPlanRequest:
      type: object
      properties:
        CorrepondentBankRelationshipManagementPlan:
          type: object
          properties:
            CorrepondentBankRelationshipManagementPlanType:
              $ref: '#/components/schemas/plantype'
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            CorrepondentBankRelationshipManagementPlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            CorrepondentBankRelationshipManagementPlanAssignment:
              $ref: '#/components/schemas/assignment'
            CorrepondentBankRelationshipManagementPlanDuty:
              $ref: '#/components/schemas/arrangement'
            CorrepondentBankRelationshipManagementPlanDescription:
              $ref: '#/components/schemas/text'
            CorrepondentBankRelationshipManagementPlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            CorrepondentBankRelationshipManagementPlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            CorrepondentBankRelationshipManagementPlanSubjectMatter:
              $ref: '#/components/schemas/object'
      description: 'Input: Create Correpondent Bank Relationship Management Plan'
    CreateCorrepondentBankRelationshipManagementPlanResponse:
      type: object
      properties:
        CorrepondentBankRelationshipManagementPlan:
          type: object
          properties:
            CorrepondentBankRelationshipManagementPlanType:
              $ref: '#/components/schemas/plantype'
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            CorrepondentBankRelationshipManagementPlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            CorrepondentBankRelationshipManagementPlanAssignment:
              $ref: '#/components/schemas/assignment'
            CorrepondentBankRelationshipManagementPlanDuty:
              $ref: '#/components/schemas/arrangement'
            CorrepondentBankRelationshipManagementPlanDescription:
              $ref: '#/components/schemas/text'
            CorrepondentBankRelationshipManagementPlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            CorrepondentBankRelationshipManagementPlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            CorrepondentBankRelationshipManagementPlanSubjectMatter:
              $ref: '#/components/schemas/object'
      description: 'Output: Create Correpondent Bank Relationship Management Plan'
    ExchangeCorrepondentBankRelationshipManagementPlanRequest:
      type: object
      properties:
        CorrepondentBankRelationshipManagementPlan:
          type: object
          properties:
            CorrepondentBankRelationshipManagementPlanType:
              $ref: '#/components/schemas/plantype'
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            CorrepondentBankRelationshipManagementPlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            CorrepondentBankRelationshipManagementPlanAssignment:
              $ref: '#/components/schemas/assignment'
            CorrepondentBankRelationshipManagementPlanDuty:
              $ref: '#/components/schemas/arrangement'
            CorrepondentBankRelationshipManagementPlanDescription:
              $ref: '#/components/schemas/text'
            CorrepondentBankRelationshipManagementPlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            CorrepondentBankRelationshipManagementPlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            CorrepondentBankRelationshipManagementPlanSubjectMatter:
              $ref: '#/components/schemas/object'
      description: 'Input: Exchange Correpondent Bank Relationship Management Plan'
    ExchangeCorrepondentBankRelationshipManagementPlanResponse:
      type: object
      properties:
        CorrepondentBankRelationshipManagementPlan:
          type: object
          properties:
            CorrepondentBankRelationshipManagementPlanType:
              $ref: '#/components/schemas/plantype'
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            CorrepondentBankRelationshipManagementPlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            CorrepondentBankRelationshipManagementPlanAssignment:
              $ref: '#/components/schemas/assignment'
            CorrepondentBankRelationshipManagementPlanDuty:
              $ref: '#/components/schemas/arrangement'
            CorrepondentBankRelationshipManagementPlanDescription:
              $ref: '#/components/schemas/text'
            CorrepondentBankRelationshipManagementPlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            CorrepondentBankRelationshipManagementPlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            CorrepondentBankRelationshipManagementPlanSubjectMatter:
              $ref: '#/components/schemas/object'
      description: 'Output: Exchange Correpondent Bank Relationship Management Plan'
    GrantCorrepondentBankRelationshipManagementPlanRequest:
      type: object
      properties:
        CorrepondentBankRelationshipManagementPlan:
          type: object
          properties:
            CorrepondentBankRelationshipManagementPlanType:
              $ref: '#/components/schemas/plantype'
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            CorrepondentBankRelationshipManagementPlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            CorrepondentBankRelationshipManagementPlanAssignment:
              $ref: '#/components/schemas/assignment'
            CorrepondentBankRelationshipManagementPlanDuty:
              $ref: '#/components/schemas/arrangement'
            CorrepondentBankRelationshipManagementPlanDescription:
              $ref: '#/components/schemas/text'
            CorrepondentBankRelationshipManagementPlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            CorrepondentBankRelationshipManagementPlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            CorrepondentBankRelationshipManagementPlanSubjectMatter:
              $ref: '#/components/schemas/object'
      description: 'Input: Grant Correpondent Bank Relationship Management Plan'
    GrantCorrepondentBankRelationshipManagementPlanResponse:
      type: object
      properties:
        CorrepondentBankRelationshipManagementPlan:
          type: object
          properties:
            CorrepondentBankRelationshipManagementPlanType:
              $ref: '#/components/schemas/plantype'
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            CorrepondentBankRelationshipManagementPlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            CorrepondentBankRelationshipManagementPlanAssignment:
              $ref: '#/components/schemas/assignment'
            CorrepondentBankRelationshipManagementPlanDuty:
              $ref: '#/components/schemas/arrangement'
            CorrepondentBankRelationshipManagementPlanDescription:
              $ref: '#/components/schemas/text'
            CorrepondentBankRelationshipManagementPlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            CorrepondentBankRelationshipManagementPlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            CorrepondentBankRelationshipManagementPlanSubjectMatter:
              $ref: '#/components/schemas/object'
      description: 'Output: Grant Correpondent Bank Relationship Management Plan'
    NotifyCorrepondentBankRelationshipManagementPlanRequest:
      type: object
      properties:
        CorrepondentBankRelationshipManagementPlan:
          type: object
          properties:
            CorrepondentBankRelationshipManagementPlanType:
              $ref: '#/components/schemas/plantype'
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            CorrepondentBankRelationshipManagementPlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            CorrepondentBankRelationshipManagementPlanAssignment:
              $ref: '#/components/schemas/assignment'
            CorrepondentBankRelationshipManagementPlanDuty:
              $ref: '#/components/schemas/arrangement'
            CorrepondentBankRelationshipManagementPlanDescription:
              $ref: '#/components/schemas/text'
            CorrepondentBankRelationshipManagementPlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            CorrepondentBankRelationshipManagementPlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            CorrepondentBankRelationshipManagementPlanSubjectMatter:
              $ref: '#/components/schemas/object'
      description: 'Input: Notify Correpondent Bank Relationship Management Plan'
    NotifyCorrepondentBankRelationshipManagementPlanResponse:
      type: object
      properties:
        CorrepondentBankRelationshipManagementPlan:
          type: object
          properties:
            CorrepondentBankRelationshipManagementPlanType:
              $ref: '#/components/schemas/plantype'
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            CorrepondentBankRelationshipManagementPlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            CorrepondentBankRelationshipManagementPlanAssignment:
              $ref: '#/components/schemas/assignment'
            CorrepondentBankRelationshipManagementPlanDuty:
              $ref: '#/components/schemas/arrangement'
            CorrepondentBankRelationshipManagementPlanDescription:
              $ref: '#/components/schemas/text'
            CorrepondentBankRelationshipManagementPlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            CorrepondentBankRelationshipManagementPlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            CorrepondentBankRelationshipManagementPlanSubjectMatter:
              $ref: '#/components/schemas/object'
      description: 'Output: Notify Correpondent Bank Relationship Management Plan'
    RequestCorrepondentBankRelationshipManagementPlanRequest:
      type: object
      properties:
        CorrepondentBankRelationshipManagementPlan:
          type: object
          properties:
            CorrepondentBankRelationshipManagementPlanType:
              $ref: '#/components/schemas/plantype'
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            CorrepondentBankRelationshipManagementPlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            CorrepondentBankRelationshipManagementPlanAssignment:
              $ref: '#/components/schemas/assignment'
            CorrepondentBankRelationshipManagementPlanDuty:
              $ref: '#/components/schemas/arrangement'
            CorrepondentBankRelationshipManagementPlanDescription:
              $ref: '#/components/schemas/text'
            CorrepondentBankRelationshipManagementPlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            CorrepondentBankRelationshipManagementPlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            CorrepondentBankRelationshipManagementPlanSubjectMatter:
              $ref: '#/components/schemas/object'
      description: 'Input: Request Correpondent Bank Relationship Management Plan'
    RequestCorrepondentBankRelationshipManagementPlanResponse:
      type: object
      properties:
        CorrepondentBankRelationshipManagementPlan:
          type: object
          properties:
            CorrepondentBankRelationshipManagementPlanType:
              $ref: '#/components/schemas/plantype'
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            CorrepondentBankRelationshipManagementPlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            CorrepondentBankRelationshipManagementPlanAssignment:
              $ref: '#/components/schemas/assignment'
            CorrepondentBankRelationshipManagementPlanDuty:
              $ref: '#/components/schemas/arrangement'
            CorrepondentBankRelationshipManagementPlanDescription:
              $ref: '#/components/schemas/text'
            CorrepondentBankRelationshipManagementPlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            CorrepondentBankRelationshipManagementPlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            CorrepondentBankRelationshipManagementPlanSubjectMatter:
              $ref: '#/components/schemas/object'
      description: 'Output: Request Correpondent Bank Relationship Management Plan'
    RetrieveCorrepondentBankRelationshipManagementPlanRequest:
      type: object
      properties:
        CorrepondentBankRelationshipManagementPlan:
          type: object
          properties:
            CorrepondentBankRelationshipManagementPlanType:
              $ref: '#/components/schemas/plantype'
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            CorrepondentBankRelationshipManagementPlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            CorrepondentBankRelationshipManagementPlanAssignment:
              $ref: '#/components/schemas/assignment'
            CorrepondentBankRelationshipManagementPlanDuty:
              $ref: '#/components/schemas/arrangement'
            CorrepondentBankRelationshipManagementPlanDescription:
              $ref: '#/components/schemas/text'
            CorrepondentBankRelationshipManagementPlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            CorrepondentBankRelationshipManagementPlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            CorrepondentBankRelationshipManagementPlanSubjectMatter:
              $ref: '#/components/schemas/object'
      description: 'Input: Retrieve Correpondent Bank Relationship Management Plan'
    RetrieveCorrepondentBankRelationshipManagementPlanResponse:
      type: object
      properties:
        CorrepondentBankRelationshipManagementPlan:
          type: object
          properties:
            CorrepondentBankRelationshipManagementPlanType:
              $ref: '#/components/schemas/plantype'
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            CorrepondentBankRelationshipManagementPlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            CorrepondentBankRelationshipManagementPlanAssignment:
              $ref: '#/components/schemas/assignment'
            CorrepondentBankRelationshipManagementPlanDuty:
              $ref: '#/components/schemas/arrangement'
            CorrepondentBankRelationshipManagementPlanDescription:
              $ref: '#/components/schemas/text'
            CorrepondentBankRelationshipManagementPlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            CorrepondentBankRelationshipManagementPlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            CorrepondentBankRelationshipManagementPlanSubjectMatter:
              $ref: '#/components/schemas/object'
      description: 'Output: Retrieve Correpondent Bank Relationship Management Plan'
    UpdateCorrepondentBankRelationshipManagementPlanRequest:
      type: object
      properties:
        CorrepondentBankRelationshipManagementPlan:
          type: object
          properties:
            CorrepondentBankRelationshipManagementPlanType:
              $ref: '#/components/schemas/plantype'
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            CorrepondentBankRelationshipManagementPlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            CorrepondentBankRelationshipManagementPlanAssignment:
              $ref: '#/components/schemas/assignment'
            CorrepondentBankRelationshipManagementPlanDuty:
              $ref: '#/components/schemas/arrangement'
            CorrepondentBankRelationshipManagementPlanDescription:
              $ref: '#/components/schemas/text'
            CorrepondentBankRelationshipManagementPlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            CorrepondentBankRelationshipManagementPlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            CorrepondentBankRelationshipManagementPlanSubjectMatter:
              $ref: '#/components/schemas/object'
      description: 'Input: Update Correpondent Bank Relationship Management Plan'
    UpdateCorrepondentBankRelationshipManagementPlanResponse:
      type: object
      properties:
        CorrepondentBankRelationshipManagementPlan:
          type: object
          properties:
            CorrepondentBankRelationshipManagementPlanType:
              $ref: '#/components/schemas/plantype'
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            CorrepondentBankRelationshipManagementPlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            CorrepondentBankRelationshipManagementPlanAssignment:
              $ref: '#/components/schemas/assignment'
            CorrepondentBankRelationshipManagementPlanDuty:
              $ref: '#/components/schemas/arrangement'
            CorrepondentBankRelationshipManagementPlanDescription:
              $ref: '#/components/schemas/text'
            CorrepondentBankRelationshipManagementPlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            CorrepondentBankRelationshipManagementPlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            CorrepondentBankRelationshipManagementPlanSubjectMatter:
              $ref: '#/components/schemas/object'
      description: 'Output: Update Correpondent Bank Relationship Management Plan'
    ExchangeIncidentTroubleshootingOversightDutyRequest:
      type: object
      properties:
        IncidentTroubleshootingOversightDuty:
          type: object
          properties:
            Preconditions:
              type: object
              description: The required status/situation before the duty/obligation can be met
              format: condition(class)
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Schedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            Postconditions:
              type: object
              description: The completion status once the duty has been complied with (note the need to fulfill a duty may recur frequently)
              format: condition(class)
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            IncidentTroubleshootingOversightDutyReference:
              type: object
              description: Reference to Incident Troubleshooting Oversight Duty
              format: plannedaction(class)
            IncidentTroubleshootingOversightDutyType:
              $ref: '#/components/schemas/text'
      description: 'Input: Exchange Incident Troubleshooting Oversight Duty'
    ExchangeIncidentTroubleshootingOversightDutyResponse:
      type: object
      properties:
        IncidentTroubleshootingOversightDuty:
          type: object
          properties:
            Preconditions:
              type: object
              description: The required status/situation before the duty/obligation can be met
              format: condition(class)
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Schedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            Postconditions:
              type: object
              description: The completion status once the duty has been complied with (note the need to fulfill a duty may recur frequently)
              format: condition(class)
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            IncidentTroubleshootingOversightDutyReference:
              type: object
              description: Reference to Incident Troubleshooting Oversight Duty
              format: plannedaction(class)
            IncidentTroubleshootingOversightDutyType:
              $ref: '#/components/schemas/text'
      description: 'Output: Exchange Incident Troubleshooting Oversight Duty'
    ExchangeRelationshipDevelopmentDutyRequest:
      type: object
      properties:
        RelationshipDevelopmentDuty:
          type: object
          properties:
            Preconditions:
              type: object
              description: The required status/situation before the duty/obligation can be met
              format: condition(class)
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Schedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            Postconditions:
              type: object
              description: The completion status once the duty has been complied with (note the need to fulfill a duty may recur frequently)
              format: condition(class)
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            RelationshipDevelopmentDutyReference:
              type: object
              description: Reference to Relationship Development Duty
              format: plannedaction(class)
            RelationshipDevelopmentDutyType:
              $ref: '#/components/schemas/text'
      description: 'Input: Exchange Relationship Development Duty'
    ExchangeRelationshipDevelopmentDutyResponse:
      type: object
      properties:
        RelationshipDevelopmentDuty:
          type: object
          properties:
            Preconditions:
              type: object
              description: The required status/situation before the duty/obligation can be met
              format: condition(class)
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Schedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            Postconditions:
              type: object
              description: The completion status once the duty has been complied with (note the need to fulfill a duty may recur frequently)
              format: condition(class)
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            RelationshipDevelopmentDutyReference:
              type: object
              description: Reference to Relationship Development Duty
              format: plannedaction(class)
            RelationshipDevelopmentDutyType:
              $ref: '#/components/schemas/text'
      description: 'Output: Exchange Relationship Development Duty'
    ExchangeRelationshipReciprocityAssessmentDutyRequest:
      type: object
      properties:
        RelationshipReciprocityAssessmentDuty:
          type: object
          properties:
            Preconditions:
              type: object
              description: The required status/situation before the duty/obligation can be met
              format: condition(class)
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Schedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            Postconditions:
              type: object
              description: The completion status once the duty has been complied with (note the need to fulfill a duty may recur frequently)
              format: condition(class)
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            RelationshipReciprocityAssessmentDutyReference:
              type: object
              description: Reference to Relationship Reciprocity Assessment Duty
              format: plannedaction(class)
            RelationshipReciprocityAssessmentDutyType:
              $ref: '#/components/schemas/text'
      description: 'Input: Exchange Relationship Reciprocity Assessment Duty'
    ExchangeRelationshipReciprocityAssessmentDutyResponse:
      type: object
      properties:
        RelationshipReciprocityAssessmentDuty:
          type: object
          properties:
            Preconditions:
              type: object
              description: The required status/situation before the duty/obligation can be met
              format: condition(class)
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Schedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            Postconditions:
              type: object
              description: The completion status once the duty has been complied with (note the need to fulfill a duty may recur frequently)
              format: condition(class)
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            RelationshipReciprocityAssessmentDutyReference:
              type: object
              description: Reference to Relationship Reciprocity Assessment Duty
              format: plannedaction(class)
            RelationshipReciprocityAssessmentDutyType:
              $ref: '#/components/schemas/text'
      description: 'Output: Exchange Relationship Reciprocity Assessment Duty'
    GrantIncidentTroubleshootingOversightDutyRequest:
      type: object
      properties:
        IncidentTroubleshootingOversightDuty:
          type: object
          properties:
            Preconditions:
              type: object
              description: The required status/situation before the duty/obligation can be met
              format: condition(class)
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Schedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            Postconditions:
              type: object
              description: The completion status once the duty has been complied with (note the need to fulfill a duty may recur frequently)
              format: condition(class)
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            IncidentTroubleshootingOversightDutyReference:
              type: object
              description: Reference to Incident Troubleshooting Oversight Duty
              format: plannedaction(class)
            IncidentTroubleshootingOversightDutyType:
              $ref: '#/components/schemas/text'
      description: 'Input: Grant Incident Troubleshooting Oversight Duty'
    GrantIncidentTroubleshootingOversightDutyResponse:
      type: object
      properties:
        IncidentTroubleshootingOversightDuty:
          type: object
          properties:
            Preconditions:
              type: object
              description: The required status/situation before the duty/obligation can be met
              format: condition(class)
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Schedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            Postconditions:
              type: object
              description: The completion status once the duty has been complied with (note the need to fulfill a duty may recur frequently)
              format: condition(class)
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            IncidentTroubleshootingOversightDutyReference:
              type: object
              description: Reference to Incident Troubleshooting Oversight Duty
              format: plannedaction(class)
            IncidentTroubleshootingOversightDutyType:
              $ref: '#/components/schemas/text'
      description: 'Output: Grant Incident Troubleshooting Oversight Duty'
    GrantRelationshipDevelopmentDutyRequest:
      type: object
      properties:
        RelationshipDevelopmentDuty:
          type: object
          properties:
            Preconditions:
              type: object
              description: The required status/situation before the duty/obligation can be met
              format: condition(class)
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Schedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            Postconditions:
              type: object
              description: The completion status once the duty has been complied with (note the need to fulfill a duty may recur frequently)
              format: condition(class)
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            RelationshipDevelopmentDutyReference:
              type: object
              description: Reference to Relationship Development Duty
              format: plannedaction(class)
            RelationshipDevelopmentDutyType:
              $ref: '#/components/schemas/text'
      description: 'Input: Grant Relationship Development Duty'
    GrantRelationshipDevelopmentDutyResponse:
      type: object
      properties:
        RelationshipDevelopmentDuty:
          type: object
          properties:
            Preconditions:
              type: object
              description: The required status/situation before the duty/obligation can be met
              format: condition(class)
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Schedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            Postconditions:
              type: object
              description: The completion status once the duty has been complied with (note the need to fulfill a duty may recur frequently)
              format: condition(class)
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            RelationshipDevelopmentDutyReference:
              type: object
              description: Reference to Relationship Development Duty
              format: plannedaction(class)
            RelationshipDevelopmentDutyType:
              $ref: '#/components/schemas/text'
      description: 'Output: Grant Relationship Development Duty'
    GrantRelationshipReciprocityAssessmentDutyRequest:
      type: object
      properties:
        RelationshipReciprocityAssessmentDuty:
          type: object
          properties:
            Preconditions:
              type: object
              description: The required status/situation before the duty/obligation can be met
              format: condition(class)
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Schedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            Postconditions:
              type: object
              description: The completion status once the duty has been complied with (note the need to fulfill a duty may recur frequently)
              format: condition(class)
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            RelationshipReciprocityAssessmentDutyReference:
              type: object
              description: Reference to Relationship Reciprocity Assessment Duty
              format: plannedaction(class)
            RelationshipReciprocityAssessmentDutyType:
              $ref: '#/components/schemas/text'
      description: 'Input: Grant Relationship Reciprocity Assessment Duty'
    GrantRelationshipReciprocityAssessmentDutyResponse:
      type: object
      properties:
        RelationshipReciprocityAssessmentDuty:
          type: object
          properties:
            Preconditions:
              type: object
              description: The required status/situation before the duty/obligation can be met
              format: condition(class)
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Schedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            Postconditions:
              type: object
              description: The completion status once the duty has been complied with (note the need to fulfill a duty may recur frequently)
              format: condition(class)
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            RelationshipReciprocityAssessmentDutyReference:
              type: object
              description: Reference to Relationship Reciprocity Assessment Duty
              format: plannedaction(class)
            RelationshipReciprocityAssessmentDutyType:
              $ref: '#/components/schemas/text'
      description: 'Output: Grant Relationship Reciprocity Assessment Duty'
    NotifyIncidentTroubleshootingOversightDutyRequest:
      type: object
      properties:
        IncidentTroubleshootingOversightDuty:
          type: object
          properties:
            Preconditions:
              type: object
              description: The required status/situation before the duty/obligation can be met
              format: condition(class)
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Schedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            Postconditions:
              type: object
              description: The completion status once the duty has been complied with (note the need to fulfill a duty may recur frequently)
              format: condition(class)
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            IncidentTroubleshootingOversightDutyReference:
              type: object
              description: Reference to Incident Troubleshooting Oversight Duty
              format: plannedaction(class)
            IncidentTroubleshootingOversightDutyType:
              $ref: '#/components/schemas/text'
      description: 'Input: Notify Incident Troubleshooting Oversight Duty'
    NotifyIncidentTroubleshootingOversightDutyResponse:
      type: object
      properties:
        IncidentTroubleshootingOversightDuty:
          type: object
          properties:
            Preconditions:
              type: object
              description: The required status/situation before the duty/obligation can be met
              format: condition(class)
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Schedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            Postconditions:
              type: object
              description: The completion status once the duty has been complied with (note the need to fulfill a duty may recur frequently)
              format: condition(class)
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            IncidentTroubleshootingOversightDutyReference:
              type: object
              description: Reference to Incident Troubleshooting Oversight Duty
              format: plannedaction(class)
            IncidentTroubleshootingOversightDutyType:
              $ref: '#/components/schemas/text'
      description: 'Output: Notify Incident Troubleshooting Oversight Duty'
    NotifyRelationshipDevelopmentDutyRequest:
      type: object
      properties:
        RelationshipDevelopmentDuty:
          type: object
          properties:
            Preconditions:
              type: object
              description: The required status/situation before the duty/obligation can be met
              format: condition(class)
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Schedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            Postconditions:
              type: object
              description: The completion status once the duty has been complied with (note the need to fulfill a duty may recur frequently)
              format: condition(class)
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            RelationshipDevelopmentDutyReference:
              type: object
              description: Reference to Relationship Development Duty
              format: plannedaction(class)
            RelationshipDevelopmentDutyType:
              $ref: '#/components/schemas/text'
      description: 'Input: Notify Relationship Development Duty'
    NotifyRelationshipDevelopmentDutyResponse:
      type: object
      properties:
        RelationshipDevelopmentDuty:
          type: object
          properties:
            Preconditions:
              type: object
              description: The required status/situation before the duty/obligation can be met
              format: condition(class)
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Schedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            Postconditions:
              type: object
              description: The completion status once the duty has been complied with (note the need to fulfill a duty may recur frequently)
              format: condition(class)
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            RelationshipDevelopmentDutyReference:
              type: object
              description: Reference to Relationship Development Duty
              format: plannedaction(class)
            RelationshipDevelopmentDutyType:
              $ref: '#/components/schemas/text'
      description: 'Output: Notify Relationship Development Duty'
    NotifyRelationshipReciprocityAssessmentDutyRequest:
      type: object
      properties:
        RelationshipReciprocityAssessmentDuty:
          type: object
          properties:
            Preconditions:
              type: object
              description: The required status/situation before the duty/obligation can be met
              format: condition(class)
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Schedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            Postconditions:
              type: object
              description: The completion status once the duty has been complied with (note the need to fulfill a duty may recur frequently)
              format: condition(class)
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            RelationshipReciprocityAssessmentDutyReference:
              type: object
              description: Reference to Relationship Reciprocity Assessment Duty
              format: plannedaction(class)
            RelationshipReciprocityAssessmentDutyType:
              $ref: '#/components/schemas/text'
      description: 'Input: Notify Relationship Reciprocity Assessment Duty'
    NotifyRelationshipReciprocityAssessmentDutyResponse:
      type: object
      properties:
        RelationshipReciprocityAssessmentDuty:
          type: object
          properties:
            Preconditions:
              type: object
              description: The required status/situation before the duty/obligation can be met
              format: condition(class)
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Schedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            Postconditions:
              type: object
              description: The completion status once the duty has been complied with (note the need to fulfill a duty may recur frequently)
              format: condition(class)
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            RelationshipReciprocityAssessmentDutyReference:
              type: object
              description: Reference to Relationship Reciprocity Assessment Duty
              format: plannedaction(class)
            RelationshipReciprocityAssessmentDutyType:
              $ref: '#/components/schemas/text'
      description: 'Output: Notify Relationship Reciprocity Assessment Duty'
    RequestIncidentTroubleshootingOversightDutyRequest:
      type: object
      properties:
        IncidentTroubleshootingOversightDuty:
          type: object
          properties:
            Preconditions:
              type: object
              description: The required status/situation before the duty/obligation can be met
              format: condition(class)
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Schedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            Postconditions:
              type: object
              description: The completion status once the duty has been complied with (note the need to fulfill a duty may recur frequently)
              format: condition(class)
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            IncidentTroubleshootingOversightDutyReference:
              type: object
              description: Reference to Incident Troubleshooting Oversight Duty
              format: plannedaction(class)
            IncidentTroubleshootingOversightDutyType:
              $ref: '#/components/schemas/text'
      description: 'Input: Request Incident Troubleshooting Oversight Duty'
    RequestIncidentTroubleshootingOversightDutyResponse:
      type: object
      properties:
        IncidentTroubleshootingOversightDuty:
          type: object
          properties:
            Preconditions:
              type: object
              description: The required status/situation before the duty/obligation can be met
              format: condition(class)
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Schedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            Postconditions:
              type: object
              description: The completion status once the duty has been complied with (note the need to fulfill a duty may recur frequently)
              format: condition(class)
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            IncidentTroubleshootingOversightDutyReference:
              type: object
              description: Reference to Incident Troubleshooting Oversight Duty
              format: plannedaction(class)
            IncidentTroubleshootingOversightDutyType:
              $ref: '#/components/schemas/text'
      description: 'Output: Request Incident Troubleshooting Oversight Duty'
    RequestRelationshipDevelopmentDutyRequest:
      type: object
      properties:
        RelationshipDevelopmentDuty:
          type: object
          properties:
            Preconditions:
              type: object
              description: The required status/situation before the duty/obligation can be met
              format: condition(class)
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Schedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            Postconditions:
              type: object
              description: The completion status once the duty has been complied with (note the need to fulfill a duty may recur frequently)
              format: condition(class)
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            RelationshipDevelopmentDutyReference:
              type: object
              description: Reference to Relationship Development Duty
              format: plannedaction(class)
            RelationshipDevelopmentDutyType:
              $ref: '#/components/schemas/text'
      description: 'Input: Request Relationship Development Duty'
    RequestRelationshipDevelopmentDutyResponse:
      type: object
      properties:
        RelationshipDevelopmentDuty:
          type: object
          properties:
            Preconditions:
              type: object
              description: The required status/situation before the duty/obligation can be met
              format: condition(class)
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Schedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            Postconditions:
              type: object
              description: The completion status once the duty has been complied with (note the need to fulfill a duty may recur frequently)
              format: condition(class)
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            RelationshipDevelopmentDutyReference:
              type: object
              description: Reference to Relationship Development Duty
              format: plannedaction(class)
            RelationshipDevelopmentDutyType:
              $ref: '#/components/schemas/text'
      description: 'Output: Request Relationship Development Duty'
    RequestRelationshipReciprocityAssessmentDutyRequest:
      type: object
      properties:
        RelationshipReciprocityAssessmentDuty:
          type: object
          properties:
            Preconditions:
              type: object
              description: The required status/situation before the duty/obligation can be met
              format: condition(class)
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Schedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            Postconditions:
              type: object
              description: The completion status once the duty has been complied with (note the need to fulfill a duty may recur frequently)
              format: condition(class)
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            RelationshipReciprocityAssessmentDutyReference:
              type: object
              description: Reference to Relationship Reciprocity Assessment Duty
              format: plannedaction(class)
            RelationshipReciprocityAssessmentDutyType:
              $ref: '#/components/schemas/text'
      description: 'Input: Request Relationship Reciprocity Assessment Duty'
    RequestRelationshipReciprocityAssessmentDutyResponse:
      type: object
      properties:
        RelationshipReciprocityAssessmentDuty:
          type: object
          properties:
            Preconditions:
              type: object
              description: The required status/situation before the duty/obligation can be met
              format: condition(class)
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Schedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            Postconditions:
              type: object
              description: The completion status once the duty has been complied with (note the need to fulfill a duty may recur frequently)
              format: condition(class)
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            RelationshipReciprocityAssessmentDutyReference:
              type: object
              description: Reference to Relationship Reciprocity Assessment Duty
              format: plannedaction(class)
            RelationshipReciprocityAssessmentDutyType:
              $ref: '#/components/schemas/text'
      description: 'Output: Request Relationship Reciprocity Assessment Duty'
    RetrieveIncidentTroubleshootingOversightDutyRequest:
      type: object
      properties:
        IncidentTroubleshootingOversightDuty:
          type: object
          properties:
            Preconditions:
              type: object
              description: The required status/situation before the duty/obligation can be met
              format: condition(class)
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Schedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            Postconditions:
              type: object
              description: The completion status once the duty has been complied with (note the need to fulfill a duty may recur frequently)
              format: condition(class)
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            IncidentTroubleshootingOversightDutyReference:
              type: object
              description: Reference to Incident Troubleshooting Oversight Duty
              format: plannedaction(class)
            IncidentTroubleshootingOversightDutyType:
              $ref: '#/components/schemas/text'
      description: 'Input: Retrieve Incident Troubleshooting Oversight Duty'
    RetrieveIncidentTroubleshootingOversightDutyResponse:
      type: object
      properties:
        IncidentTroubleshootingOversightDuty:
          type: object
          properties:
            Preconditions:
              type: object
              description: The required status/situation before the duty/obligation can be met
              format: condition(class)
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Schedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            Postconditions:
              type: object
              description: The completion status once the duty has been complied with (note the need to fulfill a duty may recur frequently)
              format: condition(class)
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            IncidentTroubleshootingOversightDutyReference:
              type: object
              description: Reference to Incident Troubleshooting Oversight Duty
              format: plannedaction(class)
            IncidentTroubleshootingOversightDutyType:
              $ref: '#/components/schemas/text'
      description: 'Output: Retrieve Incident Troubleshooting Oversight Duty'
    RetrieveRelationshipDevelopmentDutyRequest:
      type: object
      properties:
        RelationshipDevelopmentDuty:
          type: object
          properties:
            Preconditions:
              type: object
              description: The required status/situation before the duty/obligation can be met
              format: condition(class)
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Schedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            Postconditions:
              type: object
              description: The completion status once the duty has been complied with (note the need to fulfill a duty may recur frequently)
              format: condition(class)
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            RelationshipDevelopmentDutyReference:
              type: object
              description: Reference to Relationship Development Duty
              format: plannedaction(class)
            RelationshipDevelopmentDutyType:
              $ref: '#/components/schemas/text'
      description: 'Input: Retrieve Relationship Development Duty'
    RetrieveRelationshipDevelopmentDutyResponse:
      type: object
      properties:
        RelationshipDevelopmentDuty:
          type: object
          properties:
            Preconditions:
              type: object
              description: The required status/situation before the duty/obligation can be met
              format: condition(class)
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Schedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            Postconditions:
              type: object
              description: The completion status once the duty has been complied with (note the need to fulfill a duty may recur frequently)
              format: condition(class)
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            RelationshipDevelopmentDutyReference:
              type: object
              description: Reference to Relationship Development Duty
              format: plannedaction(class)
            RelationshipDevelopmentDutyType:
              $ref: '#/components/schemas/text'
      description: 'Output: Retrieve Relationship Development Duty'
    RetrieveRelationshipReciprocityAssessmentDutyRequest:
      type: object
      properties:
        RelationshipReciprocityAssessmentDuty:
          type: object
          properties:
            Preconditions:
              type: object
              description: The required status/situation before the duty/obligation can be met
              format: condition(class)
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Schedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            Postconditions:
              type: object
              description: The completion status once the duty has been complied with (note the need to fulfill a duty may recur frequently)
              format: condition(class)
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            RelationshipReciprocityAssessmentDutyReference:
              type: object
              description: Reference to Relationship Reciprocity Assessment Duty
              format: plannedaction(class)
            RelationshipReciprocityAssessmentDutyType:
              $ref: '#/components/schemas/text'
      description: 'Input: Retrieve Relationship Reciprocity Assessment Duty'
    RetrieveRelationshipReciprocityAssessmentDutyResponse:
      type: object
      properties:
        RelationshipReciprocityAssessmentDuty:
          type: object
          properties:
            Preconditions:
              type: object
              description: The required status/situation before the duty/obligation can be met
              format: condition(class)
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Schedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            Postconditions:
              type: object
              description: The completion status once the duty has been complied with (note the need to fulfill a duty may recur frequently)
              format: condition(class)
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            RelationshipReciprocityAssessmentDutyReference:
              type: object
              description: Reference to Relationship Reciprocity Assessment Duty
              format: plannedaction(class)
            RelationshipReciprocityAssessmentDutyType:
              $ref: '#/components/schemas/text'
      description: 'Output: Retrieve Relationship Reciprocity Assessment Duty'
    UpdateIncidentTroubleshootingOversightDutyRequest:
      type: object
      properties:
        IncidentTroubleshootingOversightDuty:
          type: object
          properties:
            Preconditions:
              type: object
              description: The required status/situation before the duty/obligation can be met
              format: condition(class)
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Schedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            Postconditions:
              type: object
              description: The completion status once the duty has been complied with (note the need to fulfill a duty may recur frequently)
              format: condition(class)
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            IncidentTroubleshootingOversightDutyReference:
              type: object
              description: Reference to Incident Troubleshooting Oversight Duty
              format: plannedaction(class)
            IncidentTroubleshootingOversightDutyType:
              $ref: '#/components/schemas/text'
      description: 'Input: Update Incident Troubleshooting Oversight Duty'
    UpdateIncidentTroubleshootingOversightDutyResponse:
      type: object
      properties:
        IncidentTroubleshootingOversightDuty:
          type: object
          properties:
            Preconditions:
              type: object
              description: The required status/situation before the duty/obligation can be met
              format: condition(class)
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Schedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            Postconditions:
              type: object
              description: The completion status once the duty has been complied with (note the need to fulfill a duty may recur frequently)
              format: condition(class)
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            IncidentTroubleshootingOversightDutyReference:
              type: object
              description: Reference to Incident Troubleshooting Oversight Duty
              format: plannedaction(class)
            IncidentTroubleshootingOversightDutyType:
              $ref: '#/components/schemas/text'
      description: 'Output: Update Incident Troubleshooting Oversight Duty'
    UpdateRelationshipDevelopmentDutyRequest:
      type: object
      properties:
        RelationshipDevelopmentDuty:
          type: object
          properties:
            Preconditions:
              type: object
              description: The required status/situation before the duty/obligation can be met
              format: condition(class)
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Schedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            Postconditions:
              type: object
              description: The completion status once the duty has been complied with (note the need to fulfill a duty may recur frequently)
              format: condition(class)
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            RelationshipDevelopmentDutyReference:
              type: object
              description: Reference to Relationship Development Duty
              format: plannedaction(class)
            RelationshipDevelopmentDutyType:
              $ref: '#/components/schemas/text'
      description: 'Input: Update Relationship Development Duty'
    UpdateRelationshipDevelopmentDutyResponse:
      type: object
      properties:
        RelationshipDevelopmentDuty:
          type: object
          properties:
            Preconditions:
              type: object
              description: The required status/situation before the duty/obligation can be met
              format: condition(class)
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Schedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            Postconditions:
              type: object
              description: The completion status once the duty has been complied with (note the need to fulfill a duty may recur frequently)
              format: condition(class)
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            RelationshipDevelopmentDutyReference:
              type: object
              description: Reference to Relationship Development Duty
              format: plannedaction(class)
            RelationshipDevelopmentDutyType:
              $ref: '#/components/schemas/text'
      description: 'Output: Update Relationship Development Duty'
    UpdateRelationshipReciprocityAssessmentDutyRequest:
      type: object
      properties:
        RelationshipReciprocityAssessmentDuty:
          type: object
          properties:
            Preconditions:
              type: object
              description: The required status/situation before the duty/obligation can be met
              format: condition(class)
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Schedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            Postconditions:
              type: object
              description: The completion status once the duty has been complied with (note the need to fulfill a duty may recur frequently)
              format: condition(class)
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            RelationshipReciprocityAssessmentDutyReference:
              type: object
              description: Reference to Relationship Reciprocity Assessment Duty
              format: plannedaction(class)
            RelationshipReciprocityAssessmentDutyType:
              $ref: '#/components/schemas/text'
      description: 'Input: Update Relationship Reciprocity Assessment Duty'
    UpdateRelationshipReciprocityAssessmentDutyResponse:
      type: object
      properties:
        RelationshipReciprocityAssessmentDuty:
          type: object
          properties:
            Preconditions:
              type: object
              description: The required status/situation before the duty/obligation can be met
              format: condition(class)
            BusinessUnitOrEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            Schedule:
              $ref: '#/components/schemas/schedule'
            BusinessService:
              $ref: '#/components/schemas/businessservice'
            Postconditions:
              type: object
              description: The completion status once the duty has been complied with (note the need to fulfill a duty may recur frequently)
              format: condition(class)
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            RelationshipReciprocityAssessmentDutyReference:
              type: object
              description: Reference to Relationship Reciprocity Assessment Duty
              format: plannedaction(class)
            RelationshipReciprocityAssessmentDutyType:
              $ref: '#/components/schemas/text'
      description: 'Output: Update Relationship Reciprocity Assessment Duty'
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ControlCorrepondentBankRelationshipManagementPlanResponse:
      description: ControlCorrepondentBankRelationshipManagementPlanResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ControlCorrepondentBankRelationshipManagementPlanResponse'
    CreateCorrepondentBankRelationshipManagementPlanResponse:
      description: CreateCorrepondentBankRelationshipManagementPlanResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateCorrepondentBankRelationshipManagementPlanResponse'
    ExchangeCorrepondentBankRelationshipManagementPlanResponse:
      description: ExchangeCorrepondentBankRelationshipManagementPlanResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExchangeCorrepondentBankRelationshipManagementPlanResponse'
    GrantCorrepondentBankRelationshipManagementPlanResponse:
      description: GrantCorrepondentBankRelationshipManagementPlanResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GrantCorrepondentBankRelationshipManagementPlanResponse'
    NotifyCorrepondentBankRelationshipManagementPlanResponse:
      description: NotifyCorrepondentBankRelationshipManagementPlanResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotifyCorrepondentBankRelationshipManagementPlanResponse'
    RequestCorrepondentBankRelationshipManagementPlanResponse:
      description: RequestCorrepondentBankRelationshipManagementPlanResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestCorrepondentBankRelationshipManagementPlanResponse'
    RetrieveCorrepondentBankRelationshipManagementPlanResponse:
      description: RetrieveCorrepondentBankRelationshipManagementPlanResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveCorrepondentBankRelationshipManagementPlanResponse'
    UpdateCorrepondentBankRelationshipManagementPlanResponse:
      description: UpdateCorrepondentBankRelationshipManagementPlanResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateCorrepondentBankRelationshipManagementPlanResponse'
    ExchangeIncidentTroubleshootingOversightDutyResponse:
      description: ExchangeIncidentTroubleshootingOversightDutyResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExchangeIncidentTroubleshootingOversightDutyResponse'
    ExchangeRelationshipDevelopmentDutyResponse:
      description: ExchangeRelationshipDevelopmentDutyResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExchangeRelationshipDevelopmentDutyResponse'
    ExchangeRelationshipReciprocityAssessmentDutyResponse:
      description: ExchangeRelationshipReciprocityAssessmentDutyResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExchangeRelationshipReciprocityAssessmentDutyResponse'
    GrantIncidentTroubleshootingOversightDutyResponse:
      description: GrantIncidentTroubleshootingOversightDutyResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GrantIncidentTroubleshootingOversightDutyResponse'
    GrantRelationshipDevelopmentDutyResponse:
      description: GrantRelationshipDevelopmentDutyResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GrantRelationshipDevelopmentDutyResponse'
    GrantRelationshipReciprocityAssessmentDutyResponse:
      description: GrantRelationshipReciprocityAssessmentDutyResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GrantRelationshipReciprocityAssessmentDutyResponse'
    NotifyIncidentTroubleshootingOversightDutyResponse:
      description: NotifyIncidentTroubleshootingOversightDutyResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotifyIncidentTroubleshootingOversightDutyResponse'
    NotifyRelationshipDevelopmentDutyResponse:
      description: NotifyRelationshipDevelopmentDutyResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotifyRelationshipDevelopmentDutyResponse'
    NotifyRelationshipReciprocityAssessmentDutyResponse:
      description: NotifyRelationshipReciprocityAssessmentDutyResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotifyRelationshipReciprocityAssessmentDutyResponse'
    RequestIncidentTroubleshootingOversightDutyResponse:
      description: RequestIncidentTroubleshootingOversightDutyResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestIncidentTroubleshootingOversightDutyResponse'
    RequestRelationshipDevelopmentDutyResponse:
      description: RequestRelationshipDevelopmentDutyResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestRelationshipDevelopmentDutyResponse'
    RequestRelationshipReciprocityAssessmentDutyResponse:
      description: RequestRelationshipReciprocityAssessmentDutyResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestRelationshipReciprocityAssessmentDutyResponse'
    RetrieveIncidentTroubleshootingOversightDutyResponse:
      description: RetrieveIncidentTroubleshootingOversightDutyResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveIncidentTroubleshootingOversightDutyResponse'
    RetrieveRelationshipDevelopmentDutyResponse:
      description: RetrieveRelationshipDevelopmentDutyResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveRelationshipDevelopmentDutyResponse'
    RetrieveRelationshipReciprocityAssessmentDutyResponse:
      description: RetrieveRelationshipReciprocityAssessmentDutyResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveRelationshipReciprocityAssessmentDutyResponse'
    UpdateIncidentTroubleshootingOversightDutyResponse:
      description: UpdateIncidentTroubleshootingOversightDutyResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateIncidentTroubleshootingOversightDutyResponse'
    UpdateRelationshipDevelopmentDutyResponse:
      description: UpdateRelationshipDevelopmentDutyResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateRelationshipDevelopmentDutyResponse'
    UpdateRelationshipReciprocityAssessmentDutyResponse:
      description: UpdateRelationshipReciprocityAssessmentDutyResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateRelationshipReciprocityAssessmentDutyResponse'
  parameters:
    correspondentbankrelationshipmanagementid:
      name: correspondentbankrelationshipmanagementid
      in: path
      required: true
      style: simple
      schema:
        type: string
    incidenttroubleshootingoversightdutyid:
      name: incidenttroubleshootingoversightdutyid
      in: path
      required: true
      style: simple
      schema:
        type: string
    relationshipdevelopmentdutyid:
      name: relationshipdevelopmentdutyid
      in: path
      required: true
      style: simple
      schema:
        type: string
    relationshipreciprocityassessmentdutyid:
      name: relationshipreciprocityassessmentdutyid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    ControlCorrepondentBankRelationshipManagementPlanRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ControlCorrepondentBankRelationshipManagementPlanRequest'
      required: true
    CreateCorrepondentBankRelationshipManagementPlanRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateCorrepondentBankRelationshipManagementPlanRequest'
      required: true
    ExchangeCorrepondentBankRelationshipManagementPlanRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExchangeCorrepondentBankRelationshipManagementPlanRequest'
      required: true
    GrantCorrepondentBankRelationshipManagementPlanRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GrantCorrepondentBankRelationshipManagementPlanRequest'
      required: true
    RequestCorrepondentBankRelationshipManagementPlanRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestCorrepondentBankRelationshipManagementPlanRequest'
      required: true
    UpdateCorrepondentBankRelationshipManagementPlanRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateCorrepondentBankRelationshipManagementPlanRequest'
      required: true
    ExchangeIncidentTroubleshootingOversightDutyRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExchangeIncidentTroubleshootingOversightDutyRequest'
      required: true
    ExchangeRelationshipDevelopmentDutyRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExchangeRelationshipDevelopmentDutyRequest'
      required: true
    ExchangeRelationshipReciprocityAssessmentDutyRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExchangeRelationshipReciprocityAssessmentDutyRequest'
      required: true
    GrantIncidentTroubleshootingOversightDutyRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GrantIncidentTroubleshootingOversightDutyRequest'
      required: true
    GrantRelationshipDevelopmentDutyRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GrantRelationshipDevelopmentDutyRequest'
      required: true
    GrantRelationshipReciprocityAssessmentDutyRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GrantRelationshipReciprocityAssessmentDutyRequest'
      required: true
    RequestIncidentTroubleshootingOversightDutyRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestIncidentTroubleshootingOversightDutyRequest'
      required: true
    RequestRelationshipDevelopmentDutyRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestRelationshipDevelopmentDutyRequest'
      required: true
    RequestRelationshipReciprocityAssessmentDutyRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestRelationshipReciprocityAssessmentDutyRequest'
      required: true
    UpdateIncidentTroubleshootingOversightDutyRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateIncidentTroubleshootingOversightDutyRequest'
      required: true
    UpdateRelationshipDevelopmentDutyRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateRelationshipDevelopmentDutyRequest'
      required: true
    UpdateRelationshipReciprocityAssessmentDutyRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateRelationshipReciprocityAssessmentDutyRequest'
      required: true