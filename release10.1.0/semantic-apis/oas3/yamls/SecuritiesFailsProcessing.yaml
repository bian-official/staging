openapi: 3.0.1
info:
  title: Securities Fails Processing
  description: This Service Domain handles the resolution of clerical and processing errors that lead to failures in the securities trade clearing and settlement processes
  contact:
    name: BIAN
    url: https://bian.org
  version: '10.1.0'
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/SecuritiesFailsProcessing/10.1.0
paths:
  '/SecuritiesFailsProcessing/{securitiesfailsprocessingid}/Control':
    put:
      tags:
        - CR - SecurityTradingFailsProcedure
      summary: Control Security Trading Fails Procedure
      description: Control Security Trading Fails Procedure
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/securitiesfailsprocessingid'
      requestBody:
        $ref: '#/components/requestBodies/ControlSecurityTradingFailsProcedureRequest'
      responses:
        '200':
          $ref: '#/components/responses/ControlSecurityTradingFailsProcedureResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SecuritiesFailsProcessing/{securitiesfailsprocessingid}/Exchange':
    put:
      tags:
        - CR - SecurityTradingFailsProcedure
      summary: Exchange Security Trading Fails Procedure
      description: Exchange Security Trading Fails Procedure
      operationId: Exchange
      parameters:
        - $ref: '#/components/parameters/securitiesfailsprocessingid'
      requestBody:
        $ref: '#/components/requestBodies/ExchangeSecurityTradingFailsProcedureRequest'
      responses:
        '200':
          $ref: '#/components/responses/ExchangeSecurityTradingFailsProcedureResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SecuritiesFailsProcessing/{securitiesfailsprocessingid}/Execute':
    put:
      tags:
        - CR - SecurityTradingFailsProcedure
      summary: Execute Security Trading Fails Procedure
      description: Execute Security Trading Fails Procedure
      operationId: Execute
      parameters:
        - $ref: '#/components/parameters/securitiesfailsprocessingid'
      requestBody:
        $ref: '#/components/requestBodies/ExecuteSecurityTradingFailsProcedureRequest'
      responses:
        '200':
          $ref: '#/components/responses/ExecuteSecurityTradingFailsProcedureResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /SecuritiesFailsProcessing/Initiate:
    post:
      tags:
        - CR - SecurityTradingFailsProcedure
      summary: Initiate Security Trading Fails Procedure
      description: Initiate Security Trading Fails Procedure
      operationId: Initiate
      requestBody:
        $ref: '#/components/requestBodies/InitiateSecurityTradingFailsProcedureRequest'
      responses:
        '200':
          $ref: '#/components/responses/InitiateSecurityTradingFailsProcedureResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SecuritiesFailsProcessing/{securitiesfailsprocessingid}/Notify':
    get:
      tags:
        - CR - SecurityTradingFailsProcedure
      summary: Notify Security Trading Fails Procedure
      description: Notify Security Trading Fails Procedure
      operationId: Notify
      parameters:
        - $ref: '#/components/parameters/securitiesfailsprocessingid'
      responses:
        '200':
          $ref: '#/components/responses/NotifySecurityTradingFailsProcedureResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SecuritiesFailsProcessing/{securitiesfailsprocessingid}/Request':
    put:
      tags:
        - CR - SecurityTradingFailsProcedure
      summary: Request Security Trading Fails Procedure
      description: Request Security Trading Fails Procedure
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/securitiesfailsprocessingid'
      requestBody:
        $ref: '#/components/requestBodies/RequestSecurityTradingFailsProcedureRequest'
      responses:
        '200':
          $ref: '#/components/responses/RequestSecurityTradingFailsProcedureResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SecuritiesFailsProcessing/{securitiesfailsprocessingid}/Retrieve':
    get:
      tags:
        - CR - SecurityTradingFailsProcedure
      summary: Retrieve Security Trading Fails Procedure
      description: Retrieve Security Trading Fails Procedure
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/securitiesfailsprocessingid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveSecurityTradingFailsProcedureResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SecuritiesFailsProcessing/{securitiesfailsprocessingid}/Update':
    put:
      tags:
        - CR - SecurityTradingFailsProcedure
      summary: Update Security Trading Fails Procedure
      description: Update Security Trading Fails Procedure
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/securitiesfailsprocessingid'
      requestBody:
        $ref: '#/components/requestBodies/UpdateSecurityTradingFailsProcedureRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateSecurityTradingFailsProcedureResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SecuritiesFailsProcessing/{securitiesfailsprocessingid}/SecuritiesFailAnalysisWorkstep/{securitiesfailanalysisworkstepid}/Exchange':
    put:
      tags:
        - BQ - SecuritiesFailAnalysisWorkstep
      summary: Exchange Securities Fail Analysis Workstep
      description: Exchange Securities Fail Analysis Workstep
      operationId: ExchangeSecuritiesFailAnalysisWorkstep
      parameters:
        - $ref: '#/components/parameters/securitiesfailsprocessingid'
        - $ref: '#/components/parameters/securitiesfailanalysisworkstepid'
      requestBody:
        $ref: '#/components/requestBodies/SecuritiesFailAnalysisWorkstep'
      responses:
        '200':
          $ref: '#/components/responses/SecuritiesFailAnalysisWorkstep'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SecuritiesFailsProcessing/{securitiesfailsprocessingid}/SecuritiesFailDeterminationWorkstep/{securitiesfaildeterminationworkstepid}/Exchange':
    put:
      tags:
        - BQ - SecuritiesFailDeterminationWorkstep
      summary: Exchange Securities Fail Determination Workstep
      description: Exchange Securities Fail Determination Workstep
      operationId: ExchangeSecuritiesFailDeterminationWorkstep
      parameters:
        - $ref: '#/components/parameters/securitiesfailsprocessingid'
        - $ref: '#/components/parameters/securitiesfaildeterminationworkstepid'
      requestBody:
        $ref: '#/components/requestBodies/SecuritiesFailDeterminationWorkstep'
      responses:
        '200':
          $ref: '#/components/responses/SecuritiesFailDeterminationWorkstep'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SecuritiesFailsProcessing/{securitiesfailsprocessingid}/SecuritiesFailAnalysisWorkstep/{securitiesfailanalysisworkstepid}/Execute':
    put:
      tags:
        - BQ - SecuritiesFailAnalysisWorkstep
      summary: Execute Securities Fail Analysis Workstep
      description: Execute Securities Fail Analysis Workstep
      operationId: ExecuteSecuritiesFailAnalysisWorkstep
      parameters:
        - $ref: '#/components/parameters/securitiesfailsprocessingid'
        - $ref: '#/components/parameters/securitiesfailanalysisworkstepid'
      requestBody:
        $ref: '#/components/requestBodies/SecuritiesFailAnalysisWorkstep'
      responses:
        '200':
          $ref: '#/components/responses/SecuritiesFailAnalysisWorkstep'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SecuritiesFailsProcessing/{securitiesfailsprocessingid}/SecuritiesFailDeterminationWorkstep/{securitiesfaildeterminationworkstepid}/Execute':
    put:
      tags:
        - BQ - SecuritiesFailDeterminationWorkstep
      summary: Execute Securities Fail Determination Workstep
      description: Execute Securities Fail Determination Workstep
      operationId: ExecuteSecuritiesFailDeterminationWorkstep
      parameters:
        - $ref: '#/components/parameters/securitiesfailsprocessingid'
        - $ref: '#/components/parameters/securitiesfaildeterminationworkstepid'
      requestBody:
        $ref: '#/components/requestBodies/SecuritiesFailDeterminationWorkstep'
      responses:
        '200':
          $ref: '#/components/responses/SecuritiesFailDeterminationWorkstep'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SecuritiesFailsProcessing/{securitiesfailsprocessingid}/SecuritiesFailAnalysisWorkstep/{securitiesfailanalysisworkstepid}/Initiate':
    post:
      tags:
        - BQ - SecuritiesFailAnalysisWorkstep
      summary: Initiate Securities Fail Analysis Workstep
      description: Initiate Securities Fail Analysis Workstep
      operationId: InitiateSecuritiesFailAnalysisWorkstep
      parameters:
        - $ref: '#/components/parameters/securitiesfailsprocessingid'
        - $ref: '#/components/parameters/securitiesfailanalysisworkstepid'
      requestBody:
        $ref: '#/components/requestBodies/SecuritiesFailAnalysisWorkstep'
      responses:
        '200':
          $ref: '#/components/responses/SecuritiesFailAnalysisWorkstep'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SecuritiesFailsProcessing/{securitiesfailsprocessingid}/SecuritiesFailDeterminationWorkstep/{securitiesfaildeterminationworkstepid}/Initiate':
    post:
      tags:
        - BQ - SecuritiesFailDeterminationWorkstep
      summary: Initiate Securities Fail Determination Workstep
      description: Initiate Securities Fail Determination Workstep
      operationId: InitiateSecuritiesFailDeterminationWorkstep
      parameters:
        - $ref: '#/components/parameters/securitiesfailsprocessingid'
        - $ref: '#/components/parameters/securitiesfaildeterminationworkstepid'
      requestBody:
        $ref: '#/components/requestBodies/SecuritiesFailDeterminationWorkstep'
      responses:
        '200':
          $ref: '#/components/responses/SecuritiesFailDeterminationWorkstep'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SecuritiesFailsProcessing/{securitiesfailsprocessingid}/SecuritiesFailAnalysisWorkstep/{securitiesfailanalysisworkstepid}/Notify':
    get:
      tags:
        - BQ - SecuritiesFailAnalysisWorkstep
      summary: Notify Securities Fail Analysis Workstep
      description: Notify Securities Fail Analysis Workstep
      operationId: NotifySecuritiesFailAnalysisWorkstep
      parameters:
        - $ref: '#/components/parameters/securitiesfailsprocessingid'
        - $ref: '#/components/parameters/securitiesfailanalysisworkstepid'
      responses:
        '200':
          $ref: '#/components/responses/SecuritiesFailAnalysisWorkstep'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SecuritiesFailsProcessing/{securitiesfailsprocessingid}/SecuritiesFailDeterminationWorkstep/{securitiesfaildeterminationworkstepid}/Notify':
    get:
      tags:
        - BQ - SecuritiesFailDeterminationWorkstep
      summary: Notify Securities Fail Determination Workstep
      description: Notify Securities Fail Determination Workstep
      operationId: NotifySecuritiesFailDeterminationWorkstep
      parameters:
        - $ref: '#/components/parameters/securitiesfailsprocessingid'
        - $ref: '#/components/parameters/securitiesfaildeterminationworkstepid'
      responses:
        '200':
          $ref: '#/components/responses/SecuritiesFailDeterminationWorkstep'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SecuritiesFailsProcessing/{securitiesfailsprocessingid}/SecuritiesFailAnalysisWorkstep/{securitiesfailanalysisworkstepid}/Request':
    put:
      tags:
        - BQ - SecuritiesFailAnalysisWorkstep
      summary: Request Securities Fail Analysis Workstep
      description: Request Securities Fail Analysis Workstep
      operationId: RequestSecuritiesFailAnalysisWorkstep
      parameters:
        - $ref: '#/components/parameters/securitiesfailsprocessingid'
        - $ref: '#/components/parameters/securitiesfailanalysisworkstepid'
      requestBody:
        $ref: '#/components/requestBodies/SecuritiesFailAnalysisWorkstep'
      responses:
        '200':
          $ref: '#/components/responses/SecuritiesFailAnalysisWorkstep'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SecuritiesFailsProcessing/{securitiesfailsprocessingid}/SecuritiesFailDeterminationWorkstep/{securitiesfaildeterminationworkstepid}/Request':
    put:
      tags:
        - BQ - SecuritiesFailDeterminationWorkstep
      summary: Request Securities Fail Determination Workstep
      description: Request Securities Fail Determination Workstep
      operationId: RequestSecuritiesFailDeterminationWorkstep
      parameters:
        - $ref: '#/components/parameters/securitiesfailsprocessingid'
        - $ref: '#/components/parameters/securitiesfaildeterminationworkstepid'
      requestBody:
        $ref: '#/components/requestBodies/SecuritiesFailDeterminationWorkstep'
      responses:
        '200':
          $ref: '#/components/responses/SecuritiesFailDeterminationWorkstep'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SecuritiesFailsProcessing/{securitiesfailsprocessingid}/SecuritiesFailAnalysisWorkstep/{securitiesfailanalysisworkstepid}/Retrieve':
    get:
      tags:
        - BQ - SecuritiesFailAnalysisWorkstep
      summary: Retrieve Securities Fail Analysis Workstep
      description: Retrieve Securities Fail Analysis Workstep
      operationId: RetrieveSecuritiesFailAnalysisWorkstep
      parameters:
        - $ref: '#/components/parameters/securitiesfailsprocessingid'
        - $ref: '#/components/parameters/securitiesfailanalysisworkstepid'
      responses:
        '200':
          $ref: '#/components/responses/SecuritiesFailAnalysisWorkstep'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SecuritiesFailsProcessing/{securitiesfailsprocessingid}/SecuritiesFailDeterminationWorkstep/{securitiesfaildeterminationworkstepid}/Retrieve':
    get:
      tags:
        - BQ - SecuritiesFailDeterminationWorkstep
      summary: Retrieve Securities Fail Determination Workstep
      description: Retrieve Securities Fail Determination Workstep
      operationId: RetrieveSecuritiesFailDeterminationWorkstep
      parameters:
        - $ref: '#/components/parameters/securitiesfailsprocessingid'
        - $ref: '#/components/parameters/securitiesfaildeterminationworkstepid'
      responses:
        '200':
          $ref: '#/components/responses/SecuritiesFailDeterminationWorkstep'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SecuritiesFailsProcessing/{securitiesfailsprocessingid}/SecuritiesFailAnalysisWorkstep/{securitiesfailanalysisworkstepid}/Update':
    put:
      tags:
        - BQ - SecuritiesFailAnalysisWorkstep
      summary: Update Securities Fail Analysis Workstep
      description: Update Securities Fail Analysis Workstep
      operationId: UpdateSecuritiesFailAnalysisWorkstep
      parameters:
        - $ref: '#/components/parameters/securitiesfailsprocessingid'
        - $ref: '#/components/parameters/securitiesfailanalysisworkstepid'
      requestBody:
        $ref: '#/components/requestBodies/SecuritiesFailAnalysisWorkstep'
      responses:
        '200':
          $ref: '#/components/responses/SecuritiesFailAnalysisWorkstep'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SecuritiesFailsProcessing/{securitiesfailsprocessingid}/SecuritiesFailDeterminationWorkstep/{securitiesfaildeterminationworkstepid}/Update':
    put:
      tags:
        - BQ - SecuritiesFailDeterminationWorkstep
      summary: Update Securities Fail Determination Workstep
      description: Update Securities Fail Determination Workstep
      operationId: UpdateSecuritiesFailDeterminationWorkstep
      parameters:
        - $ref: '#/components/parameters/securitiesfailsprocessingid'
        - $ref: '#/components/parameters/securitiesfaildeterminationworkstepid'
      requestBody:
        $ref: '#/components/requestBodies/SecuritiesFailDeterminationWorkstep'
      responses:
        '200':
          $ref: '#/components/responses/SecuritiesFailDeterminationWorkstep'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    condition:
      type: object
      properties:
        Condition:
          type: string
          description: "Condition is a premise upon which the fulfillment of an agreement depends \n\nGeneral and special arrangements, provisions, requirements, rules, specifications, and standards that form an integral part of an agreement or contract.\n\nRead more: http://www.businessdictionary.com/definition/terms-and-conditions.html\n\n"
          format: class
      description: The required status/situation and or tasks that need to be completed prior to the initiation of the workstep
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: Name by which a party is known and which is usually used to identify that party. (ISO20022)
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\n"
    datetime:
      type: object
      properties:
        DateTimeContent:
          type: string
          description: ''
          format: string
        TimeZoneCode:
          type: string
          description: ''
          format: string
        DaylightSavingIndicator:
          type: string
          description: ''
          format: string
      description: ''
    value:
      type: object
      properties:
        Value:
          type: string
          description: 'A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)'
          format: datatype
      description: ''
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          type: string
          description: ''
          format: partyidentificationtypevalues
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
      description: ''
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: ''
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\n* `Agreementinvolvement` - \n* `Partyinvolvement` - \n* `Arrangementinvolvement` - \n* `Designspecificationinvolvement` - \n* `Relationshipinvolvement` - \n* `Locationinvolvement` - \n* `Bankguaranteeinvolvement` - \n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: The operating unit/employee responsible for the workstep
    schedule:
      type: object
      properties:
        ScheduleType:
          type: string
          description: ''
          format: string
      description: The timing and key actions/milestones making up the workstep
    proceduretype:
      type: object
      properties:
        ProcedureTypeName:
          $ref: '#/components/schemas/name'
        ProcedureType:
          type: string
          description: ''
          format: proceduretypevalues
      description: A Classification value that distinguishes between the type of process undertaken within Procedure
    date:
      type: object
      properties:
        DateContent:
          type: string
          description: ''
          format: string
      description: ''
    instructiondate:
      type: object
      properties:
        InstructionDate:
          $ref: '#/components/schemas/date'
        InstructionDateType:
          type: string
          description: ''
          format: instructiondatetypevalues
      description: ''
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: ''
    instructionlifecyclestatus:
      type: object
      properties:
        InstructionLifecycleStatusType:
          type: string
          description: ''
          format: instructionlifecylestatustypevalues
        InstructionLifecycleStatus:
          $ref: '#/components/schemas/status'
      description: 'A characteristic of instruction which refers to the LifecycleStatus of instruction (e.g., requested, executed, fulfilled, etc.); '
    instructionidentification:
      type: object
      properties:
        InstructionIdentifier:
          $ref: '#/components/schemas/identifier'
        InstructionIdentifierType:
          type: string
          description: ''
          format: instructionidentificationtypevalues
      description: "An identifier that allows to uniquely refer to an instance of an Instruction.\n"
    instructiontypevalues:
      enum:
        - PaymentInstruction
        - DeliveryOrder
        - InformationRequest
        - ExchangeInstruction
        - AllocationInstruction
        - MaintenanceInstruction
      type: string
      description: ">\n* `PaymentInstruction` - \n* `DeliveryOrder` - \n* `InformationRequest` - \n* `ExchangeInstruction` - \n* `AllocationInstruction` - \n* `MaintenanceInstruction` - \n"
    log:
      type: object
      properties:
        LogType:
          type: string
          description: ''
          format: string
        LogPeriod:
          type: string
          description: ''
          format: string
        LogDate:
          type: string
          description: Key dates associated with the log (e.g. start time).
          format: string
        LogIdentification:
          type: string
          description: ''
          format: string
      description: ''
    instruction:
      type: object
      properties:
        InstructionDate:
          $ref: '#/components/schemas/instructiondate'
        InstructionStatus:
          $ref: '#/components/schemas/instructionlifecyclestatus'
        InstructionIdentifier:
          $ref: '#/components/schemas/instructionidentification'
        InstructionType:
          $ref: '#/components/schemas/instructiontypevalues'
        InstructionResult:
          $ref: '#/components/schemas/text'
        InstructionDescription:
          $ref: '#/components/schemas/text'
        InstructionLog:
          $ref: '#/components/schemas/log'
        InstructionPurpose:
          $ref: '#/components/schemas/text'
      description: Request to process something (most refers to Asset Type)
    procedure:
      type: object
      properties:
        ProcedureType:
          $ref: '#/components/schemas/proceduretype'
        ProcedureDateTime:
          $ref: '#/components/schemas/datetime'
        ProcedureRequest:
          $ref: '#/components/schemas/instruction'
        ProcedureSchedule:
          $ref: '#/components/schemas/schedule'
        ProcedureStatus:
          $ref: '#/components/schemas/status'
      description: Reference to Securities Fail Determination Workstep
    worksteptype:
      type: object
      properties:
        WorkstepTypeName:
          $ref: '#/components/schemas/name'
        WorkstepType:
          type: string
          description: ''
          format: worksteptypevalues
      description: A Classification value that distinguishes between the type of workstep undertaken within Procedure
    workstep:
      type: object
      properties:
        WorkstepResult:
          type: string
          description: ''
          format: string
        WorkstepType:
          $ref: '#/components/schemas/worksteptype'
        WorkstepDescription:
          $ref: '#/components/schemas/text'
        WorkstepDateTime:
          $ref: '#/components/schemas/datetime'
        WorkstepStatus:
          $ref: '#/components/schemas/status'
      description: Reference to Securities Fail Determination Workstep
    SecuritiesFailDeterminationWorkstep:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        BusinessUnitEmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          type: string
          description: The Securities Fail Determination Workstep specific Business Service
          format: businessservice
        Postconditions:
          $ref: '#/components/schemas/condition'
        SecurityTradingFailsProcedureReference:
          $ref: '#/components/schemas/procedure'
        SecuritiesFailDeterminationWorkstepReference:
          $ref: '#/components/schemas/workstep'
        SecuritiesFailDeterminationWorkstepType:
          $ref: '#/components/schemas/text'
      description: A course of action for doing Securities Fail Determination Workstep in the context of executing the Securities Fail Determination Workstep
    SecuritiesFailAnalysisWorkstep:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        BusinessUnitEmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          type: string
          description: The Securities Fail Analysis Workstep specific Business Service
          format: businessservice
        Postconditions:
          $ref: '#/components/schemas/condition'
        SecurityTradingFailsProcedureReference:
          $ref: '#/components/schemas/procedure'
        SecuritiesFailAnalysisWorkstepReference:
          $ref: '#/components/schemas/workstep'
        SecuritiesFailAnalysisWorkstepType:
          $ref: '#/components/schemas/text'
      description: A course of action for doing Securities Fail Determination Workstep in the context of executing the Securities Fail Determination Workstep
    workproduct:
      type: object
      properties:
        WorkProductType:
          type: string
          description: ''
          format: workproducttypevalues
        WorkProductIdentifoication:
          type: string
          description: ''
          format: string
      description: ''
    SecuritiesFailsProcessingOutcome:
      type: object
      properties:
        SecuritiesFailsProcessingWorkProduct:
          $ref: '#/components/schemas/workproduct'
        SecuritiesFailsProcessingProcedure:
          $ref: '#/components/schemas/procedure'
      description: A course of action for doing Securities Fail Determination Workstep in the context of executing the Securities Fail Determination Workstep
    feature:
      type: object
      properties:
        FeatureType:
          type: string
          description: ''
          format: string
      description: A selected optional business service as subject matter of Security Trading Fails Procedure
    financialfacility:
      type: object
      properties:
        FinancialFacility:
          type: string
          description: "A production or operational capacity to perform a business function for delivering a banking product or service\n\nA functional classification of banking product that provides ongoing capacity to deliver financial services (e.g. loan service, payment service)\n\n\n"
          format: class
      description: Reference to the Financial Facility related to Security Trading Fails Procedure
    servicetype:
      type: object
      properties:
        ServiceTypeName:
          $ref: '#/components/schemas/name'
        ServiceType:
          type: string
          description: ''
          format: servicetypevalues
      description: A Classification value that distinguishes between the type of services in Security Trading Fails Procedure
    productidentification:
      type: object
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/identifier'
        ProductIdentificationType:
          type: string
          description: ''
          format: productidentificationtypevalues
      description: The identifier of product e.g. ISIN Code.
    bankingproducttypevalues:
      enum:
        - LoanProduct
        - CurrentAccountProduct
        - SavingAccountProduct
      type: string
      description: ">\n* `LoanProduct` - \n* `CurrentAccountProduct` - \n* `SavingAccountProduct` - \n"
    productlifecyclestatus:
      type: object
      properties:
        ProductLifecycleStatus:
          $ref: '#/components/schemas/status'
        ProductLifecycleStatusType:
          type: string
          description: ''
          format: productlifecyclestatustypevalues
      description: 'Refers to the lifecycle of a product (e.g., initiated, announced, active, obsolete, withdrawn).'
    bankingproduct:
      type: object
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/productidentification'
        ProductType:
          $ref: '#/components/schemas/bankingproducttypevalues'
        ProductLifecycleStatus:
          $ref: '#/components/schemas/productlifecyclestatus'
        ProductPriority:
          $ref: '#/components/schemas/text'
        ProductDescription:
          $ref: '#/components/schemas/text'
        ProductVersion:
          $ref: '#/components/schemas/text'
      description: Reference to the product or service that is related to Security Trading Fails Procedure
    transactiondate:
      type: object
      properties:
        TransactionDate:
          $ref: '#/components/schemas/datetime'
        TransactionDateType:
          type: string
          description: ''
          format: transactiondatetypevalues
      description: "The Date that the transaction has occurred or is planned to occur.\nA characteristic of transaction which refers to the LifecycleDate of transaction (e.g., initiated date, executed date, fulfillment date). "
    transactiontypevalues:
      enum:
        - FinancialTransaction
        - BusinessTransaction
        - BankingTransaction
        - AccountingTransaction
        - BookingTransaction
        - AllocationTransaction
        - DeliveryTransaction
        - ProductionTransaction
      type: string
      description: ">\n* `FinancialTransaction` - \n* `BusinessTransaction` - \n* `BankingTransaction` - \n* `AccountingTransaction` - \n* `BookingTransaction` - \n* `AllocationTransaction` - \n* `DeliveryTransaction` - \n* `ProductionTransaction` - \n"
    transactionlifecyclestatus:
      type: object
      properties:
        TransactionLifecycleStatus:
          $ref: '#/components/schemas/status'
        TransactionLifecycleStatusType:
          type: string
          description: ''
          format: transactionlifecyclestatustypevalues
      description: 'A characteristic of transaction which refers to the LifecycleStatus of transaction (e.g., initiated, executed, confirmed, cancelled, etc.) '
    transaction:
      type: object
      properties:
        TransactionIdentification:
          $ref: '#/components/schemas/identifier'
        TransactionDate:
          $ref: '#/components/schemas/transactiondate'
        TransactionType:
          $ref: '#/components/schemas/transactiontypevalues'
        TransactionDescription:
          $ref: '#/components/schemas/text'
        TransactionStatus:
          $ref: '#/components/schemas/transactionlifecyclestatus'
        TransactionName:
          $ref: '#/components/schemas/name'
      description: Reference to the transaction that is related to Security Trading Fails Procedure
    actiontypevalues:
      enum:
        - Initiate
        - Execute
        - Create
        - Transfer
        - Pay
        - Deliver
        - Apply
        - Calculate
      type: string
      description: ">\n* `Initiate` - \n* `Execute` - \n* `Create` - \n* `Transfer` - \n* `Pay` - \n* `Deliver` - \n* `Apply` - \n* `Calculate` - \n"
    action:
      type: object
      properties:
        ActionType:
          $ref: '#/components/schemas/actiontypevalues'
      description: ''
    arrangementlifecyclestatus:
      type: object
      properties:
        ArrangementLifecycleStatus:
          $ref: '#/components/schemas/status'
        ArrangementLifecycleStatusType:
          type: string
          description: ''
          format: arrangementlifecyclestatustypevalues
      description: 'A characteristic of arrangement which refers to the LifecycleStatus of arrangement (e.g., requested, proposed, offered, accepted, cancelled, terminated, fulfilled, etc.)'
    subject:
      type: object
      properties:
        Subject:
          type: string
          description: A thing that is discussed or dealt whit in agreement/arrangement about doing or not doing (as action) something.
          format: class
      description: ''
    arrangementtypevalues:
      enum:
        - SweepArrangement
        - WithdrawalArrangement
        - DepositArrangement
        - InterestArrangement
        - FeeArrangement
        - LienArrangement
        - InformationArrangement
        - PaymentServiceArrangement
        - EntitlementArrangement
        - PeriodArrangement
        - CollateralArrangement
        - LimitArrangement
        - AccessArrangement
        - CardPaymentArrangement
        - StandingOrderArrangement
        - OverdraftArrangement
        - RepaymentArrangement
        - StatementArrangement
        - CreditTransferArrangement
        - ProductAndServiceArrangement
        - FactoringArrangement
      type: string
      description: ">\n* `SweepArrangement` - An arrangement into which is promised for the set-up and execution of structured sweeps to and from the facility to a linked account.\n* `WithdrawalArrangement` - An arrangement into which is promised to deliver Withdraw Service  to take fund out of an account. \n* `DepositArrangement` - An arrangement into which is promised to deliver Deposit Service  to place funds into an account for safekeeping. \n* `InterestArrangement` - An arrangement into which is promised to apply a pricing element expressed in a percentage  to a principal amount.\n* `FeeArrangement` - An arrangement into which is promised to apply a charge for services rendered. \n* `LienArrangement` - An arrangement into which is promised for placing a lien or block on the account for a specified purpose, amount, and period. \n* `InformationArrangement` - An arrangement concerning the information the bank will provide about the agreement/account\n* `PaymentServiceArrangement` - An arrangement into which is promised to deliver a specific payment service including regular payments, standing orders, direct debits and bill pay instructions. \n* `EntitlementArrangement` - Right or obligation linked to the involvement of a party in an agreement\n* `PeriodArrangement` - \n* `CollateralArrangement` - An arrangement into which is promised for handling the oversight of the allocation, valuation and administration of collateral associated with the facility. \n* `LimitArrangement` - An arrangement to limit something\ne.g., the number of transaction per week, the amount of money allowed to withdraw per week/day and etc. \n* `AccessArrangement` - An arrangement that allows or restricts the access to a service or product, channel or device through a specific access point\n* `CardPaymentArrangement` - An arrangement into which is promised to deliver Card payment Service to execute payment transactions through a payment card, including online payments. \n* `StandingOrderArrangement` - An arrangement into which is promised to deliver Standing Order Service to make regular transfers on given dates to a named beneﬁciary. \n* `OverdraftArrangement` - An arrangement into which is promised to deliver Overdraft Service  that allows fund transfer even if there is no provision on the account. \n* `RepaymentArrangement` - An arrangement into which is promised for paying back money previously borrowed from a lender. \n* `StatementArrangement` - An arrangement into which is promised to deliver a reporting service on payment transactions registered on an account. \n* `CreditTransferArrangement` - An arrangement into which is promised to allow a payer to transfer fund to a beneficiary. \n* `ProductAndServiceArrangement` - \n* `FactoringArrangement` - \n"
    arrangement:
      type: object
      properties:
        ArrangementAction:
          $ref: '#/components/schemas/action'
        ArrangementStartDate:
          $ref: '#/components/schemas/datetime'
        ArrangementEndDate:
          $ref: '#/components/schemas/datetime'
        ArrangementStatus:
          $ref: '#/components/schemas/arrangementlifecyclestatus'
        ArrangementSubjectMatter:
          $ref: '#/components/schemas/subject'
        Arrangementtype:
          $ref: '#/components/schemas/arrangementtypevalues'
      description: Reference to the Financial Transaction Arrangement that is related to Security Trading Fails Procedure
    agreementtypevalues:
      enum:
        - CustomerAgreement
        - SupplierAgreement
        - BrokerAgreement
        - SalesAgreement
        - PurchaseAgreement
        - MaintenanceAgreement
        - ProductAgreement
        - ProductSalesAgreement
        - ResourceAgreement
      type: string
      description: ">\n* `CustomerAgreement` - \n* `SupplierAgreement` - \n* `BrokerAgreement` - \n* `SalesAgreement` - \n* `PurchaseAgreement` - \n* `MaintenanceAgreement` - \n* `ProductAgreement` - \n* `ProductSalesAgreement` - \n* `ResourceAgreement` - \n"
    agreementlifecyclestatus:
      type: object
      properties:
        AgreementLifecycleStatus:
          $ref: '#/components/schemas/status'
        AgreementLifecycleStatusType:
          type: string
          description: ''
          format: agreementlifecyclestatustypevalues
      description: 'A characteristic of agreement which refers to the LifecycleStatus of agreement (e.g., potential, offered, confirmed, completed, signed, terminated).'
    agreement:
      type: object
      properties:
        AgreementSignedDate:
          $ref: '#/components/schemas/date'
        AgreementType:
          $ref: '#/components/schemas/agreementtypevalues'
        AgreementValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        AgreementVersion:
          $ref: '#/components/schemas/text'
        AgreementStatus:
          $ref: '#/components/schemas/agreementlifecyclestatus'
        AgreementSubjectMatter:
          $ref: '#/components/schemas/text'
        AgreementIdentification:
          $ref: '#/components/schemas/identifier'
        AgreementDate:
          $ref: '#/components/schemas/datetime'
      description: Reference to the Customer Agreement that is related to Security Trading Fails Procedure
    SecurityTradingFailsProcedure:
      type: object
      properties:
        SecurityTradingFailsProcedureParameterType:
          $ref: '#/components/schemas/text'
        SecurityTradingFailsProcedureSelectedOption:
          $ref: '#/components/schemas/feature'
        SecurityTradingFailsProcedureRequest:
          $ref: '#/components/schemas/instruction'
        SecurityTradingFailsProcedureSchedule:
          $ref: '#/components/schemas/schedule'
        SecurityTradingFailsProcedureStatus:
          $ref: '#/components/schemas/status'
        SecurityTradingFailsProcedureAssociatedPartyReference:
          $ref: '#/components/schemas/involvedparty'
        SecurityTradingFailsProcedureBusinessUnitReference:
          $ref: '#/components/schemas/involvedparty'
        SecurityTradingFailsProcedureServiceProviderReference:
          $ref: '#/components/schemas/involvedparty'
        SecurityTradingFailsProcedureFinancialFacilityReference:
          $ref: '#/components/schemas/financialfacility'
        SecurityTradingFailsProcedureEmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        SecurityTradingFailsProcedureCustomerReference:
          $ref: '#/components/schemas/involvedparty'
        SecurityTradingFailsProcedureType:
          $ref: '#/components/schemas/proceduretype'
        SecurityTradingFailsProcedureServiceProviderSchedule:
          $ref: '#/components/schemas/schedule'
        SecurityTradingFailsProcedureServiceType:
          $ref: '#/components/schemas/servicetype'
        SecurityTradingFailsProcedureProductandServiceType:
          type: string
          description: A Classification value that distinguishes between the type of products/services related to Security Trading Fails Procedure
          format: bankingproducttype
        SecurityTradingFailsProcedureProductandServiceInstance:
          $ref: '#/components/schemas/bankingproduct'
        SecurityTradingFailsProcedureTransactionType:
          type: string
          description: A Classification value that distinguishes between the type of transactions in Security Trading Fails Procedure
          format: transactiontype
        SecurityTradingFailsProcedureTransaction:
          $ref: '#/components/schemas/transaction'
        SecurityTradingFailsProcedureFinancialTransactionArrangement:
          $ref: '#/components/schemas/arrangement'
        SecurityTradingFailsProcedureCustomerAgreementReference:
          $ref: '#/components/schemas/agreement'
        SecurityTradingFailsProcedureReference:
          $ref: '#/components/schemas/procedure'
      description: 'Complete work tasks following a defined procedure in support of general office activities and product and service delivery within Securities Fails Processing. '
    ControlSecurityTradingFailsProcedureRequest:
      type: object
      properties:
        SecurityTradingFailsProcedure:
          type: object
          properties:
            SecurityTradingFailsProcedureParameterType:
              $ref: '#/components/schemas/text'
            SecurityTradingFailsProcedureSelectedOption:
              $ref: '#/components/schemas/feature'
            SecurityTradingFailsProcedureRequest:
              $ref: '#/components/schemas/instruction'
            SecurityTradingFailsProcedureSchedule:
              $ref: '#/components/schemas/schedule'
            SecurityTradingFailsProcedureStatus:
              $ref: '#/components/schemas/status'
            SecurityTradingFailsProcedureAssociatedPartyReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureBusinessUnitReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureServiceProviderReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureFinancialFacilityReference:
              $ref: '#/components/schemas/financialfacility'
            SecurityTradingFailsProcedureEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureType:
              $ref: '#/components/schemas/proceduretype'
            SecurityTradingFailsProcedureServiceProviderSchedule:
              $ref: '#/components/schemas/schedule'
            SecurityTradingFailsProcedureServiceType:
              $ref: '#/components/schemas/servicetype'
            SecurityTradingFailsProcedureProductandServiceType:
              type: string
              description: A Classification value that distinguishes between the type of products/services related to Security Trading Fails Procedure
              format: bankingproducttype
            SecurityTradingFailsProcedureProductandServiceInstance:
              $ref: '#/components/schemas/bankingproduct'
            SecurityTradingFailsProcedureTransactionType:
              type: string
              description: A Classification value that distinguishes between the type of transactions in Security Trading Fails Procedure
              format: transactiontype
            SecurityTradingFailsProcedureFinancialTransactionArrangement:
              $ref: '#/components/schemas/arrangement'
            SecurityTradingFailsProcedureCustomerAgreementReference:
              $ref: '#/components/schemas/agreement'
            SecurityTradingFailsProcedureReference:
              $ref: '#/components/schemas/procedure'
      description: 'Input: Control Security Trading Fails Procedure'
    ControlSecurityTradingFailsProcedureResponse:
      type: object
      properties:
        SecurityTradingFailsProcedure:
          type: object
          properties:
            SecurityTradingFailsProcedureParameterType:
              $ref: '#/components/schemas/text'
            SecurityTradingFailsProcedureSelectedOption:
              $ref: '#/components/schemas/feature'
            SecurityTradingFailsProcedureRequest:
              $ref: '#/components/schemas/instruction'
            SecurityTradingFailsProcedureSchedule:
              $ref: '#/components/schemas/schedule'
            SecurityTradingFailsProcedureStatus:
              $ref: '#/components/schemas/status'
            SecurityTradingFailsProcedureAssociatedPartyReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureBusinessUnitReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureServiceProviderReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureFinancialFacilityReference:
              $ref: '#/components/schemas/financialfacility'
            SecurityTradingFailsProcedureEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureType:
              $ref: '#/components/schemas/proceduretype'
            SecurityTradingFailsProcedureServiceProviderSchedule:
              $ref: '#/components/schemas/schedule'
            SecurityTradingFailsProcedureServiceType:
              $ref: '#/components/schemas/servicetype'
            SecurityTradingFailsProcedureProductandServiceType:
              type: string
              description: A Classification value that distinguishes between the type of products/services related to Security Trading Fails Procedure
              format: bankingproducttype
            SecurityTradingFailsProcedureProductandServiceInstance:
              $ref: '#/components/schemas/bankingproduct'
            SecurityTradingFailsProcedureTransactionType:
              type: string
              description: A Classification value that distinguishes between the type of transactions in Security Trading Fails Procedure
              format: transactiontype
            SecurityTradingFailsProcedureFinancialTransactionArrangement:
              $ref: '#/components/schemas/arrangement'
            SecurityTradingFailsProcedureCustomerAgreementReference:
              $ref: '#/components/schemas/agreement'
            SecurityTradingFailsProcedureReference:
              $ref: '#/components/schemas/procedure'
      description: 'Output: Control Security Trading Fails Procedure'
    ExchangeSecurityTradingFailsProcedureRequest:
      type: object
      properties:
        SecurityTradingFailsProcedure:
          type: object
          properties:
            SecurityTradingFailsProcedureParameterType:
              $ref: '#/components/schemas/text'
            SecurityTradingFailsProcedureSelectedOption:
              $ref: '#/components/schemas/feature'
            SecurityTradingFailsProcedureRequest:
              $ref: '#/components/schemas/instruction'
            SecurityTradingFailsProcedureSchedule:
              $ref: '#/components/schemas/schedule'
            SecurityTradingFailsProcedureStatus:
              $ref: '#/components/schemas/status'
            SecurityTradingFailsProcedureAssociatedPartyReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureBusinessUnitReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureServiceProviderReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureFinancialFacilityReference:
              $ref: '#/components/schemas/financialfacility'
            SecurityTradingFailsProcedureEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureType:
              $ref: '#/components/schemas/proceduretype'
            SecurityTradingFailsProcedureServiceProviderSchedule:
              $ref: '#/components/schemas/schedule'
            SecurityTradingFailsProcedureServiceType:
              $ref: '#/components/schemas/servicetype'
            SecurityTradingFailsProcedureProductandServiceType:
              type: string
              description: A Classification value that distinguishes between the type of products/services related to Security Trading Fails Procedure
              format: bankingproducttype
            SecurityTradingFailsProcedureProductandServiceInstance:
              $ref: '#/components/schemas/bankingproduct'
            SecurityTradingFailsProcedureTransactionType:
              type: string
              description: A Classification value that distinguishes between the type of transactions in Security Trading Fails Procedure
              format: transactiontype
            SecurityTradingFailsProcedureFinancialTransactionArrangement:
              $ref: '#/components/schemas/arrangement'
            SecurityTradingFailsProcedureCustomerAgreementReference:
              $ref: '#/components/schemas/agreement'
            SecurityTradingFailsProcedureReference:
              $ref: '#/components/schemas/procedure'
      description: 'Input: Exchange Security Trading Fails Procedure'
    ExchangeSecurityTradingFailsProcedureResponse:
      type: object
      properties:
        SecurityTradingFailsProcedure:
          type: object
          properties:
            SecurityTradingFailsProcedureParameterType:
              $ref: '#/components/schemas/text'
            SecurityTradingFailsProcedureSelectedOption:
              $ref: '#/components/schemas/feature'
            SecurityTradingFailsProcedureRequest:
              $ref: '#/components/schemas/instruction'
            SecurityTradingFailsProcedureSchedule:
              $ref: '#/components/schemas/schedule'
            SecurityTradingFailsProcedureStatus:
              $ref: '#/components/schemas/status'
            SecurityTradingFailsProcedureAssociatedPartyReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureBusinessUnitReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureServiceProviderReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureFinancialFacilityReference:
              $ref: '#/components/schemas/financialfacility'
            SecurityTradingFailsProcedureEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureType:
              $ref: '#/components/schemas/proceduretype'
            SecurityTradingFailsProcedureServiceProviderSchedule:
              $ref: '#/components/schemas/schedule'
            SecurityTradingFailsProcedureServiceType:
              $ref: '#/components/schemas/servicetype'
            SecurityTradingFailsProcedureProductandServiceType:
              type: string
              description: A Classification value that distinguishes between the type of products/services related to Security Trading Fails Procedure
              format: bankingproducttype
            SecurityTradingFailsProcedureProductandServiceInstance:
              $ref: '#/components/schemas/bankingproduct'
            SecurityTradingFailsProcedureTransactionType:
              type: string
              description: A Classification value that distinguishes between the type of transactions in Security Trading Fails Procedure
              format: transactiontype
            SecurityTradingFailsProcedureFinancialTransactionArrangement:
              $ref: '#/components/schemas/arrangement'
            SecurityTradingFailsProcedureCustomerAgreementReference:
              $ref: '#/components/schemas/agreement'
            SecurityTradingFailsProcedureReference:
              $ref: '#/components/schemas/procedure'
      description: 'Output: Exchange Security Trading Fails Procedure'
    ExecuteSecurityTradingFailsProcedureRequest:
      type: object
      properties:
        SecurityTradingFailsProcedure:
          type: object
          properties:
            SecurityTradingFailsProcedureParameterType:
              $ref: '#/components/schemas/text'
            SecurityTradingFailsProcedureSelectedOption:
              $ref: '#/components/schemas/feature'
            SecurityTradingFailsProcedureRequest:
              $ref: '#/components/schemas/instruction'
            SecurityTradingFailsProcedureSchedule:
              $ref: '#/components/schemas/schedule'
            SecurityTradingFailsProcedureStatus:
              $ref: '#/components/schemas/status'
            SecurityTradingFailsProcedureAssociatedPartyReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureBusinessUnitReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureServiceProviderReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureFinancialFacilityReference:
              $ref: '#/components/schemas/financialfacility'
            SecurityTradingFailsProcedureEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureType:
              $ref: '#/components/schemas/proceduretype'
            SecurityTradingFailsProcedureServiceProviderSchedule:
              $ref: '#/components/schemas/schedule'
            SecurityTradingFailsProcedureServiceType:
              $ref: '#/components/schemas/servicetype'
            SecurityTradingFailsProcedureProductandServiceType:
              type: string
              description: A Classification value that distinguishes between the type of products/services related to Security Trading Fails Procedure
              format: bankingproducttype
            SecurityTradingFailsProcedureProductandServiceInstance:
              $ref: '#/components/schemas/bankingproduct'
            SecurityTradingFailsProcedureTransactionType:
              type: string
              description: A Classification value that distinguishes between the type of transactions in Security Trading Fails Procedure
              format: transactiontype
            SecurityTradingFailsProcedureFinancialTransactionArrangement:
              $ref: '#/components/schemas/arrangement'
            SecurityTradingFailsProcedureCustomerAgreementReference:
              $ref: '#/components/schemas/agreement'
            SecurityTradingFailsProcedureReference:
              $ref: '#/components/schemas/procedure'
      description: 'Input: Execute Security Trading Fails Procedure'
    ExecuteSecurityTradingFailsProcedureResponse:
      type: object
      properties:
        SecurityTradingFailsProcedure:
          type: object
          properties:
            SecurityTradingFailsProcedureParameterType:
              $ref: '#/components/schemas/text'
            SecurityTradingFailsProcedureSelectedOption:
              $ref: '#/components/schemas/feature'
            SecurityTradingFailsProcedureRequest:
              $ref: '#/components/schemas/instruction'
            SecurityTradingFailsProcedureSchedule:
              $ref: '#/components/schemas/schedule'
            SecurityTradingFailsProcedureStatus:
              $ref: '#/components/schemas/status'
            SecurityTradingFailsProcedureAssociatedPartyReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureBusinessUnitReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureServiceProviderReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureFinancialFacilityReference:
              $ref: '#/components/schemas/financialfacility'
            SecurityTradingFailsProcedureEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureType:
              $ref: '#/components/schemas/proceduretype'
            SecurityTradingFailsProcedureServiceProviderSchedule:
              $ref: '#/components/schemas/schedule'
            SecurityTradingFailsProcedureServiceType:
              $ref: '#/components/schemas/servicetype'
            SecurityTradingFailsProcedureProductandServiceType:
              type: string
              description: A Classification value that distinguishes between the type of products/services related to Security Trading Fails Procedure
              format: bankingproducttype
            SecurityTradingFailsProcedureProductandServiceInstance:
              $ref: '#/components/schemas/bankingproduct'
            SecurityTradingFailsProcedureTransactionType:
              type: string
              description: A Classification value that distinguishes between the type of transactions in Security Trading Fails Procedure
              format: transactiontype
            SecurityTradingFailsProcedureFinancialTransactionArrangement:
              $ref: '#/components/schemas/arrangement'
            SecurityTradingFailsProcedureCustomerAgreementReference:
              $ref: '#/components/schemas/agreement'
            SecurityTradingFailsProcedureReference:
              $ref: '#/components/schemas/procedure'
      description: 'Output: Execute Security Trading Fails Procedure'
    InitiateSecurityTradingFailsProcedureRequest:
      type: object
      properties:
        SecurityTradingFailsProcedure:
          type: object
          properties:
            SecurityTradingFailsProcedureParameterType:
              $ref: '#/components/schemas/text'
            SecurityTradingFailsProcedureSelectedOption:
              $ref: '#/components/schemas/feature'
            SecurityTradingFailsProcedureRequest:
              $ref: '#/components/schemas/instruction'
            SecurityTradingFailsProcedureSchedule:
              $ref: '#/components/schemas/schedule'
            SecurityTradingFailsProcedureStatus:
              $ref: '#/components/schemas/status'
            SecurityTradingFailsProcedureAssociatedPartyReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureBusinessUnitReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureServiceProviderReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureFinancialFacilityReference:
              $ref: '#/components/schemas/financialfacility'
            SecurityTradingFailsProcedureEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureType:
              $ref: '#/components/schemas/proceduretype'
            SecurityTradingFailsProcedureServiceProviderSchedule:
              $ref: '#/components/schemas/schedule'
            SecurityTradingFailsProcedureServiceType:
              $ref: '#/components/schemas/servicetype'
            SecurityTradingFailsProcedureProductandServiceType:
              type: string
              description: A Classification value that distinguishes between the type of products/services related to Security Trading Fails Procedure
              format: bankingproducttype
            SecurityTradingFailsProcedureProductandServiceInstance:
              $ref: '#/components/schemas/bankingproduct'
            SecurityTradingFailsProcedureTransactionType:
              type: string
              description: A Classification value that distinguishes between the type of transactions in Security Trading Fails Procedure
              format: transactiontype
            SecurityTradingFailsProcedureFinancialTransactionArrangement:
              $ref: '#/components/schemas/arrangement'
            SecurityTradingFailsProcedureCustomerAgreementReference:
              $ref: '#/components/schemas/agreement'
            SecurityTradingFailsProcedureReference:
              $ref: '#/components/schemas/procedure'
      description: 'Input: Initiate Security Trading Fails Procedure'
    InitiateSecurityTradingFailsProcedureResponse:
      type: object
      properties:
        SecurityTradingFailsProcedure:
          type: object
          properties:
            SecurityTradingFailsProcedureParameterType:
              $ref: '#/components/schemas/text'
            SecurityTradingFailsProcedureSelectedOption:
              $ref: '#/components/schemas/feature'
            SecurityTradingFailsProcedureRequest:
              $ref: '#/components/schemas/instruction'
            SecurityTradingFailsProcedureSchedule:
              $ref: '#/components/schemas/schedule'
            SecurityTradingFailsProcedureStatus:
              $ref: '#/components/schemas/status'
            SecurityTradingFailsProcedureAssociatedPartyReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureBusinessUnitReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureServiceProviderReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureFinancialFacilityReference:
              $ref: '#/components/schemas/financialfacility'
            SecurityTradingFailsProcedureEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureType:
              $ref: '#/components/schemas/proceduretype'
            SecurityTradingFailsProcedureServiceProviderSchedule:
              $ref: '#/components/schemas/schedule'
            SecurityTradingFailsProcedureServiceType:
              $ref: '#/components/schemas/servicetype'
            SecurityTradingFailsProcedureProductandServiceType:
              type: string
              description: A Classification value that distinguishes between the type of products/services related to Security Trading Fails Procedure
              format: bankingproducttype
            SecurityTradingFailsProcedureProductandServiceInstance:
              $ref: '#/components/schemas/bankingproduct'
            SecurityTradingFailsProcedureTransactionType:
              type: string
              description: A Classification value that distinguishes between the type of transactions in Security Trading Fails Procedure
              format: transactiontype
            SecurityTradingFailsProcedureFinancialTransactionArrangement:
              $ref: '#/components/schemas/arrangement'
            SecurityTradingFailsProcedureCustomerAgreementReference:
              $ref: '#/components/schemas/agreement'
            SecurityTradingFailsProcedureReference:
              $ref: '#/components/schemas/procedure'
      description: 'Output: Initiate Security Trading Fails Procedure'
    NotifySecurityTradingFailsProcedureRequest:
      type: object
      properties:
        SecurityTradingFailsProcedure:
          type: object
          properties:
            SecurityTradingFailsProcedureParameterType:
              $ref: '#/components/schemas/text'
            SecurityTradingFailsProcedureSelectedOption:
              $ref: '#/components/schemas/feature'
            SecurityTradingFailsProcedureRequest:
              $ref: '#/components/schemas/instruction'
            SecurityTradingFailsProcedureSchedule:
              $ref: '#/components/schemas/schedule'
            SecurityTradingFailsProcedureStatus:
              $ref: '#/components/schemas/status'
            SecurityTradingFailsProcedureAssociatedPartyReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureBusinessUnitReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureServiceProviderReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureFinancialFacilityReference:
              $ref: '#/components/schemas/financialfacility'
            SecurityTradingFailsProcedureEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureType:
              $ref: '#/components/schemas/proceduretype'
            SecurityTradingFailsProcedureServiceProviderSchedule:
              $ref: '#/components/schemas/schedule'
            SecurityTradingFailsProcedureServiceType:
              $ref: '#/components/schemas/servicetype'
            SecurityTradingFailsProcedureProductandServiceType:
              type: string
              description: A Classification value that distinguishes between the type of products/services related to Security Trading Fails Procedure
              format: bankingproducttype
            SecurityTradingFailsProcedureProductandServiceInstance:
              $ref: '#/components/schemas/bankingproduct'
            SecurityTradingFailsProcedureTransactionType:
              type: string
              description: A Classification value that distinguishes between the type of transactions in Security Trading Fails Procedure
              format: transactiontype
            SecurityTradingFailsProcedureFinancialTransactionArrangement:
              $ref: '#/components/schemas/arrangement'
            SecurityTradingFailsProcedureCustomerAgreementReference:
              $ref: '#/components/schemas/agreement'
            SecurityTradingFailsProcedureReference:
              $ref: '#/components/schemas/procedure'
      description: 'Input: Notify Security Trading Fails Procedure'
    NotifySecurityTradingFailsProcedureResponse:
      type: object
      properties:
        SecurityTradingFailsProcedure:
          type: object
          properties:
            SecurityTradingFailsProcedureParameterType:
              $ref: '#/components/schemas/text'
            SecurityTradingFailsProcedureSelectedOption:
              $ref: '#/components/schemas/feature'
            SecurityTradingFailsProcedureRequest:
              $ref: '#/components/schemas/instruction'
            SecurityTradingFailsProcedureSchedule:
              $ref: '#/components/schemas/schedule'
            SecurityTradingFailsProcedureStatus:
              $ref: '#/components/schemas/status'
            SecurityTradingFailsProcedureAssociatedPartyReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureBusinessUnitReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureServiceProviderReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureFinancialFacilityReference:
              $ref: '#/components/schemas/financialfacility'
            SecurityTradingFailsProcedureEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureType:
              $ref: '#/components/schemas/proceduretype'
            SecurityTradingFailsProcedureServiceProviderSchedule:
              $ref: '#/components/schemas/schedule'
            SecurityTradingFailsProcedureServiceType:
              $ref: '#/components/schemas/servicetype'
            SecurityTradingFailsProcedureProductandServiceType:
              type: string
              description: A Classification value that distinguishes between the type of products/services related to Security Trading Fails Procedure
              format: bankingproducttype
            SecurityTradingFailsProcedureProductandServiceInstance:
              $ref: '#/components/schemas/bankingproduct'
            SecurityTradingFailsProcedureTransactionType:
              type: string
              description: A Classification value that distinguishes between the type of transactions in Security Trading Fails Procedure
              format: transactiontype
            SecurityTradingFailsProcedureFinancialTransactionArrangement:
              $ref: '#/components/schemas/arrangement'
            SecurityTradingFailsProcedureCustomerAgreementReference:
              $ref: '#/components/schemas/agreement'
            SecurityTradingFailsProcedureReference:
              $ref: '#/components/schemas/procedure'
      description: 'Output: Notify Security Trading Fails Procedure'
    RequestSecurityTradingFailsProcedureRequest:
      type: object
      properties:
        SecurityTradingFailsProcedure:
          type: object
          properties:
            SecurityTradingFailsProcedureParameterType:
              $ref: '#/components/schemas/text'
            SecurityTradingFailsProcedureSelectedOption:
              $ref: '#/components/schemas/feature'
            SecurityTradingFailsProcedureRequest:
              $ref: '#/components/schemas/instruction'
            SecurityTradingFailsProcedureSchedule:
              $ref: '#/components/schemas/schedule'
            SecurityTradingFailsProcedureStatus:
              $ref: '#/components/schemas/status'
            SecurityTradingFailsProcedureAssociatedPartyReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureBusinessUnitReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureServiceProviderReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureFinancialFacilityReference:
              $ref: '#/components/schemas/financialfacility'
            SecurityTradingFailsProcedureEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureType:
              $ref: '#/components/schemas/proceduretype'
            SecurityTradingFailsProcedureServiceProviderSchedule:
              $ref: '#/components/schemas/schedule'
            SecurityTradingFailsProcedureServiceType:
              $ref: '#/components/schemas/servicetype'
            SecurityTradingFailsProcedureProductandServiceType:
              type: string
              description: A Classification value that distinguishes between the type of products/services related to Security Trading Fails Procedure
              format: bankingproducttype
            SecurityTradingFailsProcedureProductandServiceInstance:
              $ref: '#/components/schemas/bankingproduct'
            SecurityTradingFailsProcedureTransactionType:
              type: string
              description: A Classification value that distinguishes between the type of transactions in Security Trading Fails Procedure
              format: transactiontype
            SecurityTradingFailsProcedureFinancialTransactionArrangement:
              $ref: '#/components/schemas/arrangement'
            SecurityTradingFailsProcedureCustomerAgreementReference:
              $ref: '#/components/schemas/agreement'
            SecurityTradingFailsProcedureReference:
              $ref: '#/components/schemas/procedure'
      description: 'Input: Request Security Trading Fails Procedure'
    RequestSecurityTradingFailsProcedureResponse:
      type: object
      properties:
        SecurityTradingFailsProcedure:
          type: object
          properties:
            SecurityTradingFailsProcedureParameterType:
              $ref: '#/components/schemas/text'
            SecurityTradingFailsProcedureSelectedOption:
              $ref: '#/components/schemas/feature'
            SecurityTradingFailsProcedureRequest:
              $ref: '#/components/schemas/instruction'
            SecurityTradingFailsProcedureSchedule:
              $ref: '#/components/schemas/schedule'
            SecurityTradingFailsProcedureStatus:
              $ref: '#/components/schemas/status'
            SecurityTradingFailsProcedureAssociatedPartyReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureBusinessUnitReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureServiceProviderReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureFinancialFacilityReference:
              $ref: '#/components/schemas/financialfacility'
            SecurityTradingFailsProcedureEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureType:
              $ref: '#/components/schemas/proceduretype'
            SecurityTradingFailsProcedureServiceProviderSchedule:
              $ref: '#/components/schemas/schedule'
            SecurityTradingFailsProcedureServiceType:
              $ref: '#/components/schemas/servicetype'
            SecurityTradingFailsProcedureProductandServiceType:
              type: string
              description: A Classification value that distinguishes between the type of products/services related to Security Trading Fails Procedure
              format: bankingproducttype
            SecurityTradingFailsProcedureProductandServiceInstance:
              $ref: '#/components/schemas/bankingproduct'
            SecurityTradingFailsProcedureTransactionType:
              type: string
              description: A Classification value that distinguishes between the type of transactions in Security Trading Fails Procedure
              format: transactiontype
            SecurityTradingFailsProcedureFinancialTransactionArrangement:
              $ref: '#/components/schemas/arrangement'
            SecurityTradingFailsProcedureCustomerAgreementReference:
              $ref: '#/components/schemas/agreement'
            SecurityTradingFailsProcedureReference:
              $ref: '#/components/schemas/procedure'
      description: 'Output: Request Security Trading Fails Procedure'
    RetrieveSecurityTradingFailsProcedureRequest:
      type: object
      properties:
        SecurityTradingFailsProcedure:
          type: object
          properties:
            SecurityTradingFailsProcedureParameterType:
              $ref: '#/components/schemas/text'
            SecurityTradingFailsProcedureSelectedOption:
              $ref: '#/components/schemas/feature'
            SecurityTradingFailsProcedureRequest:
              $ref: '#/components/schemas/instruction'
            SecurityTradingFailsProcedureSchedule:
              $ref: '#/components/schemas/schedule'
            SecurityTradingFailsProcedureStatus:
              $ref: '#/components/schemas/status'
            SecurityTradingFailsProcedureAssociatedPartyReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureBusinessUnitReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureServiceProviderReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureFinancialFacilityReference:
              $ref: '#/components/schemas/financialfacility'
            SecurityTradingFailsProcedureEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureType:
              $ref: '#/components/schemas/proceduretype'
            SecurityTradingFailsProcedureServiceProviderSchedule:
              $ref: '#/components/schemas/schedule'
            SecurityTradingFailsProcedureServiceType:
              $ref: '#/components/schemas/servicetype'
            SecurityTradingFailsProcedureProductandServiceType:
              type: string
              description: A Classification value that distinguishes between the type of products/services related to Security Trading Fails Procedure
              format: bankingproducttype
            SecurityTradingFailsProcedureProductandServiceInstance:
              $ref: '#/components/schemas/bankingproduct'
            SecurityTradingFailsProcedureTransactionType:
              type: string
              description: A Classification value that distinguishes between the type of transactions in Security Trading Fails Procedure
              format: transactiontype
            SecurityTradingFailsProcedureFinancialTransactionArrangement:
              $ref: '#/components/schemas/arrangement'
            SecurityTradingFailsProcedureCustomerAgreementReference:
              $ref: '#/components/schemas/agreement'
            SecurityTradingFailsProcedureReference:
              $ref: '#/components/schemas/procedure'
      description: 'Input: Retrieve Security Trading Fails Procedure'
    RetrieveSecurityTradingFailsProcedureResponse:
      type: object
      properties:
        SecurityTradingFailsProcedure:
          type: object
          properties:
            SecurityTradingFailsProcedureParameterType:
              $ref: '#/components/schemas/text'
            SecurityTradingFailsProcedureSelectedOption:
              $ref: '#/components/schemas/feature'
            SecurityTradingFailsProcedureRequest:
              $ref: '#/components/schemas/instruction'
            SecurityTradingFailsProcedureSchedule:
              $ref: '#/components/schemas/schedule'
            SecurityTradingFailsProcedureStatus:
              $ref: '#/components/schemas/status'
            SecurityTradingFailsProcedureAssociatedPartyReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureBusinessUnitReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureServiceProviderReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureFinancialFacilityReference:
              $ref: '#/components/schemas/financialfacility'
            SecurityTradingFailsProcedureEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureType:
              $ref: '#/components/schemas/proceduretype'
            SecurityTradingFailsProcedureServiceProviderSchedule:
              $ref: '#/components/schemas/schedule'
            SecurityTradingFailsProcedureServiceType:
              $ref: '#/components/schemas/servicetype'
            SecurityTradingFailsProcedureProductandServiceType:
              type: string
              description: A Classification value that distinguishes between the type of products/services related to Security Trading Fails Procedure
              format: bankingproducttype
            SecurityTradingFailsProcedureProductandServiceInstance:
              $ref: '#/components/schemas/bankingproduct'
            SecurityTradingFailsProcedureTransactionType:
              type: string
              description: A Classification value that distinguishes between the type of transactions in Security Trading Fails Procedure
              format: transactiontype
            SecurityTradingFailsProcedureFinancialTransactionArrangement:
              $ref: '#/components/schemas/arrangement'
            SecurityTradingFailsProcedureCustomerAgreementReference:
              $ref: '#/components/schemas/agreement'
            SecurityTradingFailsProcedureReference:
              $ref: '#/components/schemas/procedure'
      description: 'Output: Retrieve Security Trading Fails Procedure'
    UpdateSecurityTradingFailsProcedureRequest:
      type: object
      properties:
        SecurityTradingFailsProcedure:
          type: object
          properties:
            SecurityTradingFailsProcedureParameterType:
              $ref: '#/components/schemas/text'
            SecurityTradingFailsProcedureSelectedOption:
              $ref: '#/components/schemas/feature'
            SecurityTradingFailsProcedureRequest:
              $ref: '#/components/schemas/instruction'
            SecurityTradingFailsProcedureSchedule:
              $ref: '#/components/schemas/schedule'
            SecurityTradingFailsProcedureStatus:
              $ref: '#/components/schemas/status'
            SecurityTradingFailsProcedureAssociatedPartyReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureBusinessUnitReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureServiceProviderReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureFinancialFacilityReference:
              $ref: '#/components/schemas/financialfacility'
            SecurityTradingFailsProcedureEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureType:
              $ref: '#/components/schemas/proceduretype'
            SecurityTradingFailsProcedureServiceProviderSchedule:
              $ref: '#/components/schemas/schedule'
            SecurityTradingFailsProcedureServiceType:
              $ref: '#/components/schemas/servicetype'
            SecurityTradingFailsProcedureProductandServiceType:
              type: string
              description: A Classification value that distinguishes between the type of products/services related to Security Trading Fails Procedure
              format: bankingproducttype
            SecurityTradingFailsProcedureProductandServiceInstance:
              $ref: '#/components/schemas/bankingproduct'
            SecurityTradingFailsProcedureTransactionType:
              type: string
              description: A Classification value that distinguishes between the type of transactions in Security Trading Fails Procedure
              format: transactiontype
            SecurityTradingFailsProcedureFinancialTransactionArrangement:
              $ref: '#/components/schemas/arrangement'
            SecurityTradingFailsProcedureCustomerAgreementReference:
              $ref: '#/components/schemas/agreement'
            SecurityTradingFailsProcedureReference:
              $ref: '#/components/schemas/procedure'
      description: 'Input: Update Security Trading Fails Procedure'
    UpdateSecurityTradingFailsProcedureResponse:
      type: object
      properties:
        SecurityTradingFailsProcedure:
          type: object
          properties:
            SecurityTradingFailsProcedureParameterType:
              $ref: '#/components/schemas/text'
            SecurityTradingFailsProcedureSelectedOption:
              $ref: '#/components/schemas/feature'
            SecurityTradingFailsProcedureRequest:
              $ref: '#/components/schemas/instruction'
            SecurityTradingFailsProcedureSchedule:
              $ref: '#/components/schemas/schedule'
            SecurityTradingFailsProcedureStatus:
              $ref: '#/components/schemas/status'
            SecurityTradingFailsProcedureAssociatedPartyReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureBusinessUnitReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureServiceProviderReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureFinancialFacilityReference:
              $ref: '#/components/schemas/financialfacility'
            SecurityTradingFailsProcedureEmployeeReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            SecurityTradingFailsProcedureType:
              $ref: '#/components/schemas/proceduretype'
            SecurityTradingFailsProcedureServiceProviderSchedule:
              $ref: '#/components/schemas/schedule'
            SecurityTradingFailsProcedureServiceType:
              $ref: '#/components/schemas/servicetype'
            SecurityTradingFailsProcedureProductandServiceType:
              type: string
              description: A Classification value that distinguishes between the type of products/services related to Security Trading Fails Procedure
              format: bankingproducttype
            SecurityTradingFailsProcedureProductandServiceInstance:
              $ref: '#/components/schemas/bankingproduct'
            SecurityTradingFailsProcedureTransactionType:
              type: string
              description: A Classification value that distinguishes between the type of transactions in Security Trading Fails Procedure
              format: transactiontype
            SecurityTradingFailsProcedureFinancialTransactionArrangement:
              $ref: '#/components/schemas/arrangement'
            SecurityTradingFailsProcedureCustomerAgreementReference:
              $ref: '#/components/schemas/agreement'
            SecurityTradingFailsProcedureReference:
              $ref: '#/components/schemas/procedure'
      description: 'Output: Update Security Trading Fails Procedure'
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ControlSecurityTradingFailsProcedureResponse:
      description: ControlSecurityTradingFailsProcedureResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ControlSecurityTradingFailsProcedureResponse'
    ExchangeSecurityTradingFailsProcedureResponse:
      description: ExchangeSecurityTradingFailsProcedureResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExchangeSecurityTradingFailsProcedureResponse'
    ExecuteSecurityTradingFailsProcedureResponse:
      description: ExecuteSecurityTradingFailsProcedureResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExecuteSecurityTradingFailsProcedureResponse'
    InitiateSecurityTradingFailsProcedureResponse:
      description: InitiateSecurityTradingFailsProcedureResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateSecurityTradingFailsProcedureResponse'
    NotifySecurityTradingFailsProcedureResponse:
      description: NotifySecurityTradingFailsProcedureResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotifySecurityTradingFailsProcedureResponse'
    RequestSecurityTradingFailsProcedureResponse:
      description: RequestSecurityTradingFailsProcedureResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestSecurityTradingFailsProcedureResponse'
    RetrieveSecurityTradingFailsProcedureResponse:
      description: RetrieveSecurityTradingFailsProcedureResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveSecurityTradingFailsProcedureResponse'
    UpdateSecurityTradingFailsProcedureResponse:
      description: UpdateSecurityTradingFailsProcedureResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateSecurityTradingFailsProcedureResponse'
    SecuritiesFailAnalysisWorkstep:
      description: SecuritiesFailAnalysisWorkstep
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SecuritiesFailAnalysisWorkstep'
    SecuritiesFailDeterminationWorkstep:
      description: SecuritiesFailDeterminationWorkstep
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SecuritiesFailDeterminationWorkstep'
  parameters:
    securitiesfailsprocessingid:
      name: securitiesfailsprocessingid
      in: path
      required: true
      style: simple
      schema:
        type: string
    securitiesfailanalysisworkstepid:
      name: securitiesfailanalysisworkstepid
      in: path
      required: true
      style: simple
      schema:
        type: string
    securitiesfaildeterminationworkstepid:
      name: securitiesfaildeterminationworkstepid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    ControlSecurityTradingFailsProcedureRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ControlSecurityTradingFailsProcedureRequest'
      required: true
    ExchangeSecurityTradingFailsProcedureRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExchangeSecurityTradingFailsProcedureRequest'
      required: true
    ExecuteSecurityTradingFailsProcedureRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExecuteSecurityTradingFailsProcedureRequest'
      required: true
    InitiateSecurityTradingFailsProcedureRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateSecurityTradingFailsProcedureRequest'
      required: true
    RequestSecurityTradingFailsProcedureRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestSecurityTradingFailsProcedureRequest'
      required: true
    UpdateSecurityTradingFailsProcedureRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateSecurityTradingFailsProcedureRequest'
      required: true
    SecuritiesFailAnalysisWorkstep:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SecuritiesFailAnalysisWorkstep'
      required: true
    SecuritiesFailDeterminationWorkstep:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SecuritiesFailDeterminationWorkstep'
      required: true