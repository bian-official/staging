openapi: 3.0.1
info:
  title: Financial Statement Assessment
  description: 'This Service Domain supports a range of financial analyses that can be used to extract specific insights (e.g. valuations, liquidity, risk, market sensitivities) from an entity''s financial statements'
  contact:
    name: BIAN
    url: https://bian.org
  version: '10.1.0'
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/FinancialStatementAssessment/10.1.0
paths:
  /FinancialStatementAssessment/Evaluate:
    post:
      tags:
        - CR - FinancialStatementAssessment
      summary: Evaluate Financial Statement Assessment
      description: Evaluate Financial Statement Assessment
      operationId: Evaluate
      requestBody:
        $ref: '#/components/requestBodies/FinancialStatementAssessment'
      responses:
        '200':
          $ref: '#/components/responses/FinancialStatementAssessment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/Execute':
    put:
      tags:
        - CR - FinancialStatementAssessment
      summary: Execute Financial Statement Assessment
      description: Execute Financial Statement Assessment
      operationId: Execute
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
      requestBody:
        $ref: '#/components/requestBodies/FinancialStatementAssessment'
      responses:
        '200':
          $ref: '#/components/responses/FinancialStatementAssessment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/Grant':
    put:
      tags:
        - CR - FinancialStatementAssessment
      summary: Grant Financial Statement Assessment
      description: Grant Financial Statement Assessment
      operationId: Grant
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
      requestBody:
        $ref: '#/components/requestBodies/FinancialStatementAssessment'
      responses:
        '200':
          $ref: '#/components/responses/FinancialStatementAssessment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/Notify':
    get:
      tags:
        - CR - FinancialStatementAssessment
      summary: Notify Financial Statement Assessment
      description: Notify Financial Statement Assessment
      operationId: Notify
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
      responses:
        '200':
          $ref: '#/components/responses/FinancialStatementAssessment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/Request':
    put:
      tags:
        - CR - FinancialStatementAssessment
      summary: Request Financial Statement Assessment
      description: Request Financial Statement Assessment
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
      requestBody:
        $ref: '#/components/requestBodies/FinancialStatementAssessment'
      responses:
        '200':
          $ref: '#/components/responses/FinancialStatementAssessment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/Retrieve':
    get:
      tags:
        - CR - FinancialStatementAssessment
      summary: Retrieve Financial Statement Assessment
      description: Retrieve Financial Statement Assessment
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
      responses:
        '200':
          $ref: '#/components/responses/FinancialStatementAssessment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/AssetandLiabilityValuationTest/{assetandliabilityvaluationtestid}/Evaluate':
    post:
      tags:
        - BQ - AssetandLiabilityValuationTest
      summary: Evaluate Asset and Liability Valuation Test
      description: Evaluate Asset and Liability Valuation Test
      operationId: EvaluateAssetandLiabilityValuationTest
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
        - $ref: '#/components/parameters/assetandliabilityvaluationtestid'
      requestBody:
        $ref: '#/components/requestBodies/AssetandLiabilityValuationTest'
      responses:
        '200':
          $ref: '#/components/responses/AssetandLiabilityValuationTest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/LiquidityandCashFlowTest/{liquidityandcashflowtestid}/Evaluate':
    post:
      tags:
        - BQ - LiquidityandCashFlowTest
      summary: Evaluate Liquidity and Cash Flow Test
      description: Evaluate Liquidity and Cash Flow Test
      operationId: EvaluateLiquidityandCashFlowTest
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
        - $ref: '#/components/parameters/liquidityandcashflowtestid'
      requestBody:
        $ref: '#/components/requestBodies/LiquidityandCashFlowTest'
      responses:
        '200':
          $ref: '#/components/responses/LiquidityandCashFlowTest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/RiskTest/{risktestid}/Evaluate':
    post:
      tags:
        - BQ - RiskTest
      summary: Evaluate Risk Test
      description: Evaluate Risk Test
      operationId: EvaluateRiskTest
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
        - $ref: '#/components/parameters/risktestid'
      requestBody:
        $ref: '#/components/requestBodies/RiskTest'
      responses:
        '200':
          $ref: '#/components/responses/RiskTest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/SensitivityTest/{sensitivitytestid}/Evaluate':
    post:
      tags:
        - BQ - SensitivityTest
      summary: Evaluate Sensitivity Test
      description: Evaluate Sensitivity Test
      operationId: EvaluateSensitivityTest
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
        - $ref: '#/components/parameters/sensitivitytestid'
      requestBody:
        $ref: '#/components/requestBodies/SensitivityTest'
      responses:
        '200':
          $ref: '#/components/responses/SensitivityTest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/AssetandLiabilityValuationTest/{assetandliabilityvaluationtestid}/Execute':
    put:
      tags:
        - BQ - AssetandLiabilityValuationTest
      summary: Execute Asset and Liability Valuation Test
      description: Execute Asset and Liability Valuation Test
      operationId: ExecuteAssetandLiabilityValuationTest
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
        - $ref: '#/components/parameters/assetandliabilityvaluationtestid'
      requestBody:
        $ref: '#/components/requestBodies/AssetandLiabilityValuationTest'
      responses:
        '200':
          $ref: '#/components/responses/AssetandLiabilityValuationTest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/LiquidityandCashFlowTest/{liquidityandcashflowtestid}/Execute':
    put:
      tags:
        - BQ - LiquidityandCashFlowTest
      summary: Execute Liquidity and Cash Flow Test
      description: Execute Liquidity and Cash Flow Test
      operationId: ExecuteLiquidityandCashFlowTest
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
        - $ref: '#/components/parameters/liquidityandcashflowtestid'
      requestBody:
        $ref: '#/components/requestBodies/LiquidityandCashFlowTest'
      responses:
        '200':
          $ref: '#/components/responses/LiquidityandCashFlowTest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/RiskTest/{risktestid}/Execute':
    put:
      tags:
        - BQ - RiskTest
      summary: Execute Risk Test
      description: Execute Risk Test
      operationId: ExecuteRiskTest
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
        - $ref: '#/components/parameters/risktestid'
      requestBody:
        $ref: '#/components/requestBodies/RiskTest'
      responses:
        '200':
          $ref: '#/components/responses/RiskTest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/SensitivityTest/{sensitivitytestid}/Execute':
    put:
      tags:
        - BQ - SensitivityTest
      summary: Execute Sensitivity Test
      description: Execute Sensitivity Test
      operationId: ExecuteSensitivityTest
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
        - $ref: '#/components/parameters/sensitivitytestid'
      requestBody:
        $ref: '#/components/requestBodies/SensitivityTest'
      responses:
        '200':
          $ref: '#/components/responses/SensitivityTest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/AssetandLiabilityValuationTest/{assetandliabilityvaluationtestid}/Notify':
    get:
      tags:
        - BQ - AssetandLiabilityValuationTest
      summary: Notify Asset and Liability Valuation Test
      description: Notify Asset and Liability Valuation Test
      operationId: NotifyAssetandLiabilityValuationTest
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
        - $ref: '#/components/parameters/assetandliabilityvaluationtestid'
      responses:
        '200':
          $ref: '#/components/responses/AssetandLiabilityValuationTest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/LiquidityandCashFlowTest/{liquidityandcashflowtestid}/Notify':
    get:
      tags:
        - BQ - LiquidityandCashFlowTest
      summary: Notify Liquidity and Cash Flow Test
      description: Notify Liquidity and Cash Flow Test
      operationId: NotifyLiquidityandCashFlowTest
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
        - $ref: '#/components/parameters/liquidityandcashflowtestid'
      responses:
        '200':
          $ref: '#/components/responses/LiquidityandCashFlowTest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/RiskTest/{risktestid}/Notify':
    get:
      tags:
        - BQ - RiskTest
      summary: Notify Risk Test
      description: Notify Risk Test
      operationId: NotifyRiskTest
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
        - $ref: '#/components/parameters/risktestid'
      responses:
        '200':
          $ref: '#/components/responses/RiskTest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/SensitivityTest/{sensitivitytestid}/Notify':
    get:
      tags:
        - BQ - SensitivityTest
      summary: Notify Sensitivity Test
      description: Notify Sensitivity Test
      operationId: NotifySensitivityTest
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
        - $ref: '#/components/parameters/sensitivitytestid'
      responses:
        '200':
          $ref: '#/components/responses/SensitivityTest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/AssetandLiabilityValuationTest/{assetandliabilityvaluationtestid}/Request':
    put:
      tags:
        - BQ - AssetandLiabilityValuationTest
      summary: Request Asset and Liability Valuation Test
      description: Request Asset and Liability Valuation Test
      operationId: RequestAssetandLiabilityValuationTest
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
        - $ref: '#/components/parameters/assetandliabilityvaluationtestid'
      requestBody:
        $ref: '#/components/requestBodies/AssetandLiabilityValuationTest'
      responses:
        '200':
          $ref: '#/components/responses/AssetandLiabilityValuationTest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/LiquidityandCashFlowTest/{liquidityandcashflowtestid}/Request':
    put:
      tags:
        - BQ - LiquidityandCashFlowTest
      summary: Request Liquidity and Cash Flow Test
      description: Request Liquidity and Cash Flow Test
      operationId: RequestLiquidityandCashFlowTest
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
        - $ref: '#/components/parameters/liquidityandcashflowtestid'
      requestBody:
        $ref: '#/components/requestBodies/LiquidityandCashFlowTest'
      responses:
        '200':
          $ref: '#/components/responses/LiquidityandCashFlowTest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/RiskTest/{risktestid}/Request':
    put:
      tags:
        - BQ - RiskTest
      summary: Request Risk Test
      description: Request Risk Test
      operationId: RequestRiskTest
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
        - $ref: '#/components/parameters/risktestid'
      requestBody:
        $ref: '#/components/requestBodies/RiskTest'
      responses:
        '200':
          $ref: '#/components/responses/RiskTest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/SensitivityTest/{sensitivitytestid}/Request':
    put:
      tags:
        - BQ - SensitivityTest
      summary: Request Sensitivity Test
      description: Request Sensitivity Test
      operationId: RequestSensitivityTest
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
        - $ref: '#/components/parameters/sensitivitytestid'
      requestBody:
        $ref: '#/components/requestBodies/SensitivityTest'
      responses:
        '200':
          $ref: '#/components/responses/SensitivityTest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/AssetandLiabilityValuationTest/{assetandliabilityvaluationtestid}/Retrieve':
    get:
      tags:
        - BQ - AssetandLiabilityValuationTest
      summary: Retrieve Asset and Liability Valuation Test
      description: Retrieve Asset and Liability Valuation Test
      operationId: RetrieveAssetandLiabilityValuationTest
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
        - $ref: '#/components/parameters/assetandliabilityvaluationtestid'
      responses:
        '200':
          $ref: '#/components/responses/AssetandLiabilityValuationTest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/LiquidityandCashFlowTest/{liquidityandcashflowtestid}/Retrieve':
    get:
      tags:
        - BQ - LiquidityandCashFlowTest
      summary: Retrieve Liquidity and Cash Flow Test
      description: Retrieve Liquidity and Cash Flow Test
      operationId: RetrieveLiquidityandCashFlowTest
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
        - $ref: '#/components/parameters/liquidityandcashflowtestid'
      responses:
        '200':
          $ref: '#/components/responses/LiquidityandCashFlowTest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/RiskTest/{risktestid}/Retrieve':
    get:
      tags:
        - BQ - RiskTest
      summary: Retrieve Risk Test
      description: Retrieve Risk Test
      operationId: RetrieveRiskTest
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
        - $ref: '#/components/parameters/risktestid'
      responses:
        '200':
          $ref: '#/components/responses/RiskTest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/SensitivityTest/{sensitivitytestid}/Retrieve':
    get:
      tags:
        - BQ - SensitivityTest
      summary: Retrieve Sensitivity Test
      description: Retrieve Sensitivity Test
      operationId: RetrieveSensitivityTest
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
        - $ref: '#/components/parameters/sensitivitytestid'
      responses:
        '200':
          $ref: '#/components/responses/SensitivityTest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    condition:
      type: object
      properties:
        Condition:
          type: string
          description: "Condition is a premise upon which the fulfillment of an agreement depends \n\nGeneral and special arrangements, provisions, requirements, rules, specifications, and standards that form an integral part of an agreement or contract.\n\nRead more: http://www.businessdictionary.com/definition/terms-and-conditions.html\n\n"
          format: class
      description: The required status/situation before the test can be applied
    schedule:
      type: object
      properties:
        ScheduleType:
          type: string
          description: ''
          format: string
      description: The schedule and timing of the testing performed
    assessmenttypevalues:
      enum:
        - AssetValuation
        - ProductMatching
        - Authorization
        - Authentication
        - QualityAssurance
        - Audit
        - ComplianceCheck
        - FundingCheck
        - SuitabilityCheck
        - PerformanceCheck
        - ImpactAssessment
        - RiskAssessment
        - Rating
      type: string
      description: ">\n* `AssetValuation` - \n* `ProductMatching` - \n* `Authorization` - \n* `Authentication` - \n* `QualityAssurance` - \n* `Audit` - \n* `ComplianceCheck` - \n* `FundingCheck` - \n* `SuitabilityCheck` - \n* `PerformanceCheck` - \n* `ImpactAssessment` - \n* `RiskAssessment` - \n* `Rating` - \n"
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: ''
    model:
      type: object
      properties:
        ModelType:
          type: string
          description: 'The type or category of model  '
          format: string
        ModelPurpose:
          type: string
          description: A description of the model that clarifies the intended analysis/insights provided
          format: string
        ModelVersion:
          type: string
          description: ''
          format: string
      description: ''
    datetime:
      type: object
      properties:
        DateTimeContent:
          type: string
          description: ''
          format: string
        TimeZoneCode:
          type: string
          description: ''
          format: string
        DaylightSavingIndicator:
          type: string
          description: ''
          format: string
      description: ''
    value:
      type: object
      properties:
        Value:
          type: string
          description: 'A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)'
          format: datatype
      description: ''
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: Name by which a party is known and which is usually used to identify that party. (ISO20022)
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\n"
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          type: string
          description: ''
          format: partyidentificationtypevalues
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
      description: ''
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\n* `Agreementinvolvement` - \n* `Partyinvolvement` - \n* `Arrangementinvolvement` - \n* `Designspecificationinvolvement` - \n* `Relationshipinvolvement` - \n* `Locationinvolvement` - \n* `Bankguaranteeinvolvement` - \n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: ''
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: An identifier that allows to uniquely refer to an instance of a Document.
    documenttypevalues:
      enum:
        - Meteredserviceinvoice
        - Creditnoterelatedtofinancialadjustment
        - Debitnoterelatedtofinancialadjustment
        - Commercialinvoice
        - Creditnote
        - Debitnote
        - Hireinvoice
        - Selfbilledinvoice
        - Remittanceadvicemessage
        - Relatedpaymentinstruction
        - Commercialcontract
        - Foreignexchangedealreference
        - Statementofaccount
        - Dispatchadvice
        - Purchaseorder
        - Structuredcommunicationreference
        - Billoflading
        - Voucher
        - Accountreceivableopenitem
        - Tradeservicesutilitytransaction
        - Cashierreceipt
        - Customerreceipt
        - Journal
        - Salereceipt
      type: string
      description: ">\n* `Meteredserviceinvoice` - Document is an invoice claiming payment for the supply of metered services, for example gas or electricity supplied to a fixed meter.\n* `Creditnoterelatedtofinancialadjustment` - Document is a credit note for the final amount settled for a commercial transaction.\n* `Debitnoterelatedtofinancialadjustment` - Document is a debit note for the final amount settled for a commercial transaction.\n* `Commercialinvoice` - Document is an invoice.\n* `Creditnote` - Document is a credit note.\n* `Debitnote` - Document is a debit note.\n* `Hireinvoice` - Document is an invoice for the hiring of human resources or renting goods or equipment.\n* `Selfbilledinvoice` - Document is an invoice issued by the debtor.\n* `Remittanceadvicemessage` - Document is a remittance advice sent separately from the current transaction.\n* `Relatedpaymentinstruction` - Document is a linked payment instruction to which the current payment instruction is related, for example, in a cover scenario.\n* `Commercialcontract` - Document is an agreement between the parties, stipulating the terms and conditions of the delivery of goods or services.\n* `Foreignexchangedealreference` - Document is a pre-agreed or pre-arranged foreign exchange transaction to which the payment transaction refers.\n* `Statementofaccount` - Document is a statement of the transactions posted to the debtor's account at the supplier.\n* `Dispatchadvice` - Document is a dispatch advice.\n* `Purchaseorder` - Document is a purchase order.\n* `Structuredcommunicationreference` - Document is a structured communication reference provided by the creditor to identify the referred transaction.\n* `Billoflading` - Document is a shipping notice.\n* `Voucher` - Document is an electronic payment document.\n* `Accountreceivableopenitem` - Document is a payment that applies to a specific source document.\n* `Tradeservicesutilitytransaction` - Document is a transaction identifier as assigned by the Trade Services Utility.\n* `Cashierreceipt` - When the Sale system print the Cashier copy of the Payment receipt.\n* `Customerreceipt` - When the Sale System requires   the POI system to print the Customer receipt.\n* `Journal` - When the POI or the Sale System wants to store a message on the journal printer or electronic journal of the Sale Terminal (it is sometimes a Sale Logging/Journal Printer).\n* `Salereceipt` - When the Sale System requires the POI system to print the Sale receipt.\n"
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: 'Status of the document (e.g. delivered, paid, etc.). ISO20022'
    documentdatetimetypevalues:
      enum:
        - Creationdate
        - Capturingdate
        - Versiondate
        - Valuedate
        - Issuedate
      type: string
      description: ">\n* `Creationdate` - \n* `Capturingdate` - \n* `Versiondate` - \n* `Valuedate` - \n* `Issuedate` - \n"
    document:
      type: object
      properties:
        DocumentIdentifer:
          $ref: '#/components/schemas/identifier'
        DocumentVersion:
          $ref: '#/components/schemas/text'
        DocumentType:
          $ref: '#/components/schemas/documenttypevalues'
        DocumentStatus:
          $ref: '#/components/schemas/status'
        DocumentDateTime:
          $ref: '#/components/schemas/datetime'
        DocumentName:
          $ref: '#/components/schemas/name'
        DocumentDateTimeType:
          $ref: '#/components/schemas/documentdatetimetypevalues'
        DocumentPurpose:
          $ref: '#/components/schemas/text'
        DocumentFormat:
          $ref: '#/components/schemas/text'
        DocumentSubject:
          $ref: '#/components/schemas/text'
        DocumentDescription:
          $ref: '#/components/schemas/text'
      description: Document that provides background or corroborating information regarding an assessment(s).
    requirement:
      type: object
      properties:
        RequirementType:
          type: string
          description: ''
          format: string
      description: ''
    date:
      type: object
      properties:
        DateContent:
          type: string
          description: ''
          format: string
      description: Date when the assessment expires. (ISO20022)
    assessment:
      type: object
      properties:
        AssessmentType:
          $ref: '#/components/schemas/assessmenttypevalues'
        AssessmentMethod:
          $ref: '#/components/schemas/text'
        AssessmentSchedule:
          $ref: '#/components/schemas/schedule'
        AssessmentDescription:
          $ref: '#/components/schemas/text'
        AssessmentModel:
          $ref: '#/components/schemas/model'
        AssessmentDateTime:
          $ref: '#/components/schemas/datetime'
        AssessmentResult:
          $ref: '#/components/schemas/text'
        AssessmentSupportingDocument:
          $ref: '#/components/schemas/document'
        AssessmentRepresentingDocument:
          $ref: '#/components/schemas/document'
        AssessmentRequiredAdjustment:
          $ref: '#/components/schemas/text'
        AssessmentRequirement:
          $ref: '#/components/schemas/requirement'
        AssessmentExpiryDate:
          $ref: '#/components/schemas/date'
      description: Reference to Risk Test
    test:
      type: object
      properties:
        TestResult:
          type: string
          description: ''
          format: string
        TestGuidance:
          type: string
          description: ''
          format: string
        TestType:
          type: string
          description: ''
          format: string
        TestDescription:
          type: string
          description: ''
          format: string
      description: Reference to Risk Test
    RiskTest:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        VersionNumber:
          type: string
          description: The test version employed
          format: number
        BusinessService:
          type: string
          description: The Risk Test specific Business Service
          format: businessservice
        FinancialStatementAssessmentReference:
          $ref: '#/components/schemas/assessment'
        RiskTestReference:
          $ref: '#/components/schemas/test'
        RiskTestType:
          $ref: '#/components/schemas/text'
      description: The Risk Test test is one aspect that can be intergrated into the overall Risk Test
    SensitivityTest:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        VersionNumber:
          type: string
          description: The test version employed
          format: number
        BusinessService:
          type: string
          description: The Sensitivity Test specific Business Service
          format: businessservice
        FinancialStatementAssessmentReference:
          $ref: '#/components/schemas/assessment'
        SensitivityTestReference:
          $ref: '#/components/schemas/test'
        SensitivityTestType:
          $ref: '#/components/schemas/text'
      description: The Risk Test test is one aspect that can be intergrated into the overall Risk Test
    LiquidityandCashFlowTest:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        VersionNumber:
          type: string
          description: The test version employed
          format: number
        BusinessService:
          type: string
          description: The Liquidity and Cash Flow Test specific Business Service
          format: businessservice
        FinancialStatementAssessmentReference:
          $ref: '#/components/schemas/assessment'
        LiquidityandCashFlowTestReference:
          $ref: '#/components/schemas/test'
        LiquidityandCashFlowTestType:
          $ref: '#/components/schemas/text'
      description: The Risk Test test is one aspect that can be intergrated into the overall Risk Test
    AssetandLiabilityValuationTest:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        VersionNumber:
          type: string
          description: The test version employed
          format: number
        BusinessService:
          type: string
          description: The Asset and Liability Valuation Test specific Business Service
          format: businessservice
        FinancialStatementAssessmentReference:
          $ref: '#/components/schemas/assessment'
        AssetandLiabilityValuationTestReference:
          $ref: '#/components/schemas/test'
        AssetandLiabilityValuationTestType:
          $ref: '#/components/schemas/text'
      description: The Risk Test test is one aspect that can be intergrated into the overall Risk Test
    workproduct:
      type: object
      properties:
        WorkProductType:
          type: string
          description: ''
          format: workproducttypevalues
        WorkProductIdentifoication:
          type: string
          description: ''
          format: string
      description: ''
    FinancialStatementAssessmentOutcome:
      type: object
      properties:
        FinancialStatementAssessmentWorkProduct:
          $ref: '#/components/schemas/workproduct'
        FinancialStatementAssessmentAssessmentType:
          $ref: '#/components/schemas/text'
      description: The Risk Test test is one aspect that can be intergrated into the overall Risk Test
    servicetype:
      type: object
      properties:
        ServiceTypeName:
          $ref: '#/components/schemas/name'
        ServiceType:
          type: string
          description: ''
          format: servicetypevalues
      description: ''
    service:
      type: object
      properties:
        ServiceName:
          $ref: '#/components/schemas/name'
        ServiceDescription:
          $ref: '#/components/schemas/text'
        ServiceType:
          $ref: '#/components/schemas/servicetype'
      description: A selected optional business service as subject matter of Financial Statement Assessment
    instructiondate:
      type: object
      properties:
        InstructionDate:
          $ref: '#/components/schemas/date'
        InstructionDateType:
          type: string
          description: ''
          format: instructiondatetypevalues
      description: ''
    instructionlifecyclestatus:
      type: object
      properties:
        InstructionLifecycleStatusType:
          type: string
          description: ''
          format: instructionlifecylestatustypevalues
        InstructionLifecycleStatus:
          $ref: '#/components/schemas/status'
      description: 'A characteristic of instruction which refers to the LifecycleStatus of instruction (e.g., requested, executed, fulfilled, etc.); '
    instructionidentification:
      type: object
      properties:
        InstructionIdentifier:
          $ref: '#/components/schemas/identifier'
        InstructionIdentifierType:
          type: string
          description: ''
          format: instructionidentificationtypevalues
      description: "An identifier that allows to uniquely refer to an instance of an Instruction.\n"
    instructiontypevalues:
      enum:
        - PaymentInstruction
        - DeliveryOrder
        - InformationRequest
        - ExchangeInstruction
        - AllocationInstruction
        - MaintenanceInstruction
      type: string
      description: ">\n* `PaymentInstruction` - \n* `DeliveryOrder` - \n* `InformationRequest` - \n* `ExchangeInstruction` - \n* `AllocationInstruction` - \n* `MaintenanceInstruction` - \n"
    log:
      type: object
      properties:
        LogType:
          type: string
          description: ''
          format: string
        LogPeriod:
          type: string
          description: ''
          format: string
        LogDate:
          type: string
          description: Key dates associated with the log (e.g. start time).
          format: string
        LogIdentification:
          type: string
          description: ''
          format: string
      description: ''
    instruction:
      type: object
      properties:
        InstructionDate:
          $ref: '#/components/schemas/instructiondate'
        InstructionStatus:
          $ref: '#/components/schemas/instructionlifecyclestatus'
        InstructionIdentifier:
          $ref: '#/components/schemas/instructionidentification'
        InstructionType:
          $ref: '#/components/schemas/instructiontypevalues'
        InstructionResult:
          $ref: '#/components/schemas/text'
        InstructionDescription:
          $ref: '#/components/schemas/text'
        InstructionLog:
          $ref: '#/components/schemas/log'
        InstructionPurpose:
          $ref: '#/components/schemas/text'
      description: Request to assess
    FinancialStatementAssessment:
      type: object
      properties:
        FinancialStatementAssessmentParameterType:
          $ref: '#/components/schemas/text'
        FinancialStatementAssessmentSelectedOption:
          $ref: '#/components/schemas/service'
        FinancialStatementAssessmentType:
          $ref: '#/components/schemas/text'
        FinancialStatementAssessmentReference:
          $ref: '#/components/schemas/assessment'
        FinancialStatementAssessmentRequest:
          $ref: '#/components/schemas/instruction'
        FinancialStatementAssessmentSchedule:
          $ref: '#/components/schemas/schedule'
        FinancialStatementAssessmentStatus:
          $ref: '#/components/schemas/status'
        FinancialStatementAssessmentUsageLog:
          $ref: '#/components/schemas/log'
        FinancialStatementAssessmentRequesterReference:
          $ref: '#/components/schemas/involvedparty'
        FinancialStatementAssessmentAssociatedParty:
          $ref: '#/components/schemas/involvedparty'
        FinancialStatementAssessmentServiceProviderReference:
          $ref: '#/components/schemas/involvedparty'
      description: 'To test or assess an entity, possibly against some formal qualification or certification requirement within Financial Statement Assessment. '
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    FinancialStatementAssessment:
      description: FinancialStatementAssessment
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FinancialStatementAssessment'
    AssetandLiabilityValuationTest:
      description: AssetandLiabilityValuationTest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AssetandLiabilityValuationTest'
    LiquidityandCashFlowTest:
      description: LiquidityandCashFlowTest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LiquidityandCashFlowTest'
    RiskTest:
      description: RiskTest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RiskTest'
    SensitivityTest:
      description: SensitivityTest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SensitivityTest'
  parameters:
    financialstatementassessmentid:
      name: financialstatementassessmentid
      in: path
      required: true
      style: simple
      schema:
        type: string
    assetandliabilityvaluationtestid:
      name: assetandliabilityvaluationtestid
      in: path
      required: true
      style: simple
      schema:
        type: string
    liquidityandcashflowtestid:
      name: liquidityandcashflowtestid
      in: path
      required: true
      style: simple
      schema:
        type: string
    risktestid:
      name: risktestid
      in: path
      required: true
      style: simple
      schema:
        type: string
    sensitivitytestid:
      name: sensitivitytestid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    FinancialStatementAssessment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FinancialStatementAssessment'
      required: true
    AssetandLiabilityValuationTest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AssetandLiabilityValuationTest'
      required: true
    LiquidityandCashFlowTest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LiquidityandCashFlowTest'
      required: true
    RiskTest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RiskTest'
      required: true
    SensitivityTest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SensitivityTest'
      required: true