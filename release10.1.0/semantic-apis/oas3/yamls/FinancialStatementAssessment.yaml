openapi: 3.0.1
info:
  title: Financial Statement Assessment
  description: 'This Service Domain supports a range of financial analyses that can be used to extract specific insights (e.g. valuations, liquidity, risk, market sensitivities) from an entity''s financial statements'
  contact:
    name: BIAN
    url: https://bian.org
  version: '10.1.0'
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/FinancialStatementAssessment/10.1.0
paths:
  /FinancialStatementAssessment/Evaluate:
    post:
      tags:
        - CR - FinancialStatementAssessment
      summary: Evaluate Financial Statement Assessment
      description: Evaluate Financial Statement Assessment
      operationId: Evaluate
      requestBody:
        $ref: '#/components/requestBodies/FinancialStatementAssessment'
      responses:
        '200':
          $ref: '#/components/responses/FinancialStatementAssessment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/Execute':
    put:
      tags:
        - CR - FinancialStatementAssessment
      summary: Execute Financial Statement Assessment
      description: Execute Financial Statement Assessment
      operationId: Execute
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
      requestBody:
        $ref: '#/components/requestBodies/FinancialStatementAssessment'
      responses:
        '200':
          $ref: '#/components/responses/FinancialStatementAssessment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/Grant':
    put:
      tags:
        - CR - FinancialStatementAssessment
      summary: Grant Financial Statement Assessment
      description: Grant Financial Statement Assessment
      operationId: Grant
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
      requestBody:
        $ref: '#/components/requestBodies/FinancialStatementAssessment'
      responses:
        '200':
          $ref: '#/components/responses/FinancialStatementAssessment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/Notify':
    get:
      tags:
        - CR - FinancialStatementAssessment
      summary: Notify Financial Statement Assessment
      description: Notify Financial Statement Assessment
      operationId: Notify
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
      responses:
        '200':
          $ref: '#/components/responses/FinancialStatementAssessment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/Request':
    put:
      tags:
        - CR - FinancialStatementAssessment
      summary: Request Financial Statement Assessment
      description: Request Financial Statement Assessment
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
      requestBody:
        $ref: '#/components/requestBodies/FinancialStatementAssessment'
      responses:
        '200':
          $ref: '#/components/responses/FinancialStatementAssessment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/Retrieve':
    get:
      tags:
        - CR - FinancialStatementAssessment
      summary: Retrieve Financial Statement Assessment
      description: Retrieve Financial Statement Assessment
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
      responses:
        '200':
          $ref: '#/components/responses/FinancialStatementAssessment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/AssetandLiabilityValuationTest/{assetandliabilityvaluationtestid}/Evaluate':
    post:
      tags:
        - BQ - AssetandLiabilityValuationTest
      summary: Evaluate Asset and Liability Valuation Test
      description: Evaluate Asset and Liability Valuation Test
      operationId: EvaluateAssetandLiabilityValuationTest
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
        - $ref: '#/components/parameters/assetandliabilityvaluationtestid'
      requestBody:
        $ref: '#/components/requestBodies/AssetandLiabilityValuationTest'
      responses:
        '200':
          $ref: '#/components/responses/AssetandLiabilityValuationTest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/LiquidityandCashFlowTest/{liquidityandcashflowtestid}/Evaluate':
    post:
      tags:
        - BQ - LiquidityandCashFlowTest
      summary: Evaluate Liquidity and Cash Flow Test
      description: Evaluate Liquidity and Cash Flow Test
      operationId: EvaluateLiquidityandCashFlowTest
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
        - $ref: '#/components/parameters/liquidityandcashflowtestid'
      requestBody:
        $ref: '#/components/requestBodies/LiquidityandCashFlowTest'
      responses:
        '200':
          $ref: '#/components/responses/LiquidityandCashFlowTest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/RiskTest/{risktestid}/Evaluate':
    post:
      tags:
        - BQ - RiskTest
      summary: Evaluate Risk Test
      description: Evaluate Risk Test
      operationId: EvaluateRiskTest
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
        - $ref: '#/components/parameters/risktestid'
      requestBody:
        $ref: '#/components/requestBodies/RiskTest'
      responses:
        '200':
          $ref: '#/components/responses/RiskTest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/SensitivityTest/{sensitivitytestid}/Evaluate':
    post:
      tags:
        - BQ - SensitivityTest
      summary: Evaluate Sensitivity Test
      description: Evaluate Sensitivity Test
      operationId: EvaluateSensitivityTest
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
        - $ref: '#/components/parameters/sensitivitytestid'
      requestBody:
        $ref: '#/components/requestBodies/SensitivityTest'
      responses:
        '200':
          $ref: '#/components/responses/SensitivityTest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/AssetandLiabilityValuationTest/{assetandliabilityvaluationtestid}/Execute':
    put:
      tags:
        - BQ - AssetandLiabilityValuationTest
      summary: Execute Asset and Liability Valuation Test
      description: Execute Asset and Liability Valuation Test
      operationId: ExecuteAssetandLiabilityValuationTest
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
        - $ref: '#/components/parameters/assetandliabilityvaluationtestid'
      requestBody:
        $ref: '#/components/requestBodies/AssetandLiabilityValuationTest'
      responses:
        '200':
          $ref: '#/components/responses/AssetandLiabilityValuationTest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/LiquidityandCashFlowTest/{liquidityandcashflowtestid}/Execute':
    put:
      tags:
        - BQ - LiquidityandCashFlowTest
      summary: Execute Liquidity and Cash Flow Test
      description: Execute Liquidity and Cash Flow Test
      operationId: ExecuteLiquidityandCashFlowTest
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
        - $ref: '#/components/parameters/liquidityandcashflowtestid'
      requestBody:
        $ref: '#/components/requestBodies/LiquidityandCashFlowTest'
      responses:
        '200':
          $ref: '#/components/responses/LiquidityandCashFlowTest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/RiskTest/{risktestid}/Execute':
    put:
      tags:
        - BQ - RiskTest
      summary: Execute Risk Test
      description: Execute Risk Test
      operationId: ExecuteRiskTest
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
        - $ref: '#/components/parameters/risktestid'
      requestBody:
        $ref: '#/components/requestBodies/RiskTest'
      responses:
        '200':
          $ref: '#/components/responses/RiskTest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/SensitivityTest/{sensitivitytestid}/Execute':
    put:
      tags:
        - BQ - SensitivityTest
      summary: Execute Sensitivity Test
      description: Execute Sensitivity Test
      operationId: ExecuteSensitivityTest
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
        - $ref: '#/components/parameters/sensitivitytestid'
      requestBody:
        $ref: '#/components/requestBodies/SensitivityTest'
      responses:
        '200':
          $ref: '#/components/responses/SensitivityTest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/AssetandLiabilityValuationTest/{assetandliabilityvaluationtestid}/Notify':
    get:
      tags:
        - BQ - AssetandLiabilityValuationTest
      summary: Notify Asset and Liability Valuation Test
      description: Notify Asset and Liability Valuation Test
      operationId: NotifyAssetandLiabilityValuationTest
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
        - $ref: '#/components/parameters/assetandliabilityvaluationtestid'
      responses:
        '200':
          $ref: '#/components/responses/AssetandLiabilityValuationTest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/LiquidityandCashFlowTest/{liquidityandcashflowtestid}/Notify':
    get:
      tags:
        - BQ - LiquidityandCashFlowTest
      summary: Notify Liquidity and Cash Flow Test
      description: Notify Liquidity and Cash Flow Test
      operationId: NotifyLiquidityandCashFlowTest
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
        - $ref: '#/components/parameters/liquidityandcashflowtestid'
      responses:
        '200':
          $ref: '#/components/responses/LiquidityandCashFlowTest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/RiskTest/{risktestid}/Notify':
    get:
      tags:
        - BQ - RiskTest
      summary: Notify Risk Test
      description: Notify Risk Test
      operationId: NotifyRiskTest
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
        - $ref: '#/components/parameters/risktestid'
      responses:
        '200':
          $ref: '#/components/responses/RiskTest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/SensitivityTest/{sensitivitytestid}/Notify':
    get:
      tags:
        - BQ - SensitivityTest
      summary: Notify Sensitivity Test
      description: Notify Sensitivity Test
      operationId: NotifySensitivityTest
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
        - $ref: '#/components/parameters/sensitivitytestid'
      responses:
        '200':
          $ref: '#/components/responses/SensitivityTest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/AssetandLiabilityValuationTest/{assetandliabilityvaluationtestid}/Request':
    put:
      tags:
        - BQ - AssetandLiabilityValuationTest
      summary: Request Asset and Liability Valuation Test
      description: Request Asset and Liability Valuation Test
      operationId: RequestAssetandLiabilityValuationTest
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
        - $ref: '#/components/parameters/assetandliabilityvaluationtestid'
      requestBody:
        $ref: '#/components/requestBodies/AssetandLiabilityValuationTest'
      responses:
        '200':
          $ref: '#/components/responses/AssetandLiabilityValuationTest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/LiquidityandCashFlowTest/{liquidityandcashflowtestid}/Request':
    put:
      tags:
        - BQ - LiquidityandCashFlowTest
      summary: Request Liquidity and Cash Flow Test
      description: Request Liquidity and Cash Flow Test
      operationId: RequestLiquidityandCashFlowTest
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
        - $ref: '#/components/parameters/liquidityandcashflowtestid'
      requestBody:
        $ref: '#/components/requestBodies/LiquidityandCashFlowTest'
      responses:
        '200':
          $ref: '#/components/responses/LiquidityandCashFlowTest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/RiskTest/{risktestid}/Request':
    put:
      tags:
        - BQ - RiskTest
      summary: Request Risk Test
      description: Request Risk Test
      operationId: RequestRiskTest
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
        - $ref: '#/components/parameters/risktestid'
      requestBody:
        $ref: '#/components/requestBodies/RiskTest'
      responses:
        '200':
          $ref: '#/components/responses/RiskTest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/SensitivityTest/{sensitivitytestid}/Request':
    put:
      tags:
        - BQ - SensitivityTest
      summary: Request Sensitivity Test
      description: Request Sensitivity Test
      operationId: RequestSensitivityTest
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
        - $ref: '#/components/parameters/sensitivitytestid'
      requestBody:
        $ref: '#/components/requestBodies/SensitivityTest'
      responses:
        '200':
          $ref: '#/components/responses/SensitivityTest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/AssetandLiabilityValuationTest/{assetandliabilityvaluationtestid}/Retrieve':
    get:
      tags:
        - BQ - AssetandLiabilityValuationTest
      summary: Retrieve Asset and Liability Valuation Test
      description: Retrieve Asset and Liability Valuation Test
      operationId: RetrieveAssetandLiabilityValuationTest
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
        - $ref: '#/components/parameters/assetandliabilityvaluationtestid'
      responses:
        '200':
          $ref: '#/components/responses/AssetandLiabilityValuationTest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/LiquidityandCashFlowTest/{liquidityandcashflowtestid}/Retrieve':
    get:
      tags:
        - BQ - LiquidityandCashFlowTest
      summary: Retrieve Liquidity and Cash Flow Test
      description: Retrieve Liquidity and Cash Flow Test
      operationId: RetrieveLiquidityandCashFlowTest
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
        - $ref: '#/components/parameters/liquidityandcashflowtestid'
      responses:
        '200':
          $ref: '#/components/responses/LiquidityandCashFlowTest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/RiskTest/{risktestid}/Retrieve':
    get:
      tags:
        - BQ - RiskTest
      summary: Retrieve Risk Test
      description: Retrieve Risk Test
      operationId: RetrieveRiskTest
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
        - $ref: '#/components/parameters/risktestid'
      responses:
        '200':
          $ref: '#/components/responses/RiskTest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/SensitivityTest/{sensitivitytestid}/Retrieve':
    get:
      tags:
        - BQ - SensitivityTest
      summary: Retrieve Sensitivity Test
      description: Retrieve Sensitivity Test
      operationId: RetrieveSensitivityTest
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
        - $ref: '#/components/parameters/sensitivitytestid'
      responses:
        '200':
          $ref: '#/components/responses/SensitivityTest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    condition:
      type: object
      properties:
        Condition:
          type: string
          description: "Condition is a premise upon which the fulfillment of an agreement depends \n\nGeneral and special arrangements, provisions, requirements, rules, specifications, and standards that form an integral part of an agreement or contract.\n\nRead more: http://www.businessdictionary.com/definition/terms-and-conditions.html\n\n"
          format: class
      description: The required status/situation before the test can be applied
    schedule:
      type: object
      properties:
        Schedule:
          type: string
          description: "Defined sequence of planned tasks/actions or a timetable of available services\n\nA schedule is a time based series of something"
          format: datatype
      description: The schedule and timing of the testing performed
    businessservice:
      type: object
      properties:
        BusinessService:
          type: string
          description: "A business service supports business capabilities through an explicitly defined interface and is explicitly governed by an organization. TOGAF 9.2\n\nA business service represents explicitly defined behavior that a business role, business actor, or business collaboration exposes to its environment. ArchiMate 3.1\n"
          format: class
      description: The Risk Test specific Business Service
    assessment:
      type: object
      properties:
        Assessment:
          type: string
          description: the rating/certification derived as result of an applied test assessment of an entity using specific testing criteria
          format: class
      description: Reference to Risk Test
    test:
      type: object
      properties:
        Test:
          type: string
          description: 'A measure taken to check the quality, performance, or reliability of (something), especially before putting it into widespread use or practice.'
          format: class
      description: Reference to Risk Test
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: The type of Risk Test
    RiskTest:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        VersionNumber:
          type: string
          description: The test version employed
          format: number
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        FinancialStatementAssessmentReference:
          $ref: '#/components/schemas/assessment'
        RiskTestReference:
          $ref: '#/components/schemas/test'
        RiskTestType:
          $ref: '#/components/schemas/text'
      description: The Risk Test test is one aspect that can be intergrated into the overall Risk Test
    SensitivityTest:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        VersionNumber:
          type: string
          description: The test version employed
          format: number
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        FinancialStatementAssessmentReference:
          $ref: '#/components/schemas/assessment'
        SensitivityTestReference:
          $ref: '#/components/schemas/test'
        SensitivityTestType:
          $ref: '#/components/schemas/text'
      description: The Risk Test test is one aspect that can be intergrated into the overall Risk Test
    LiquidityandCashFlowTest:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        VersionNumber:
          type: string
          description: The test version employed
          format: number
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        FinancialStatementAssessmentReference:
          $ref: '#/components/schemas/assessment'
        LiquidityandCashFlowTestReference:
          $ref: '#/components/schemas/test'
        LiquidityandCashFlowTestType:
          $ref: '#/components/schemas/text'
      description: The Risk Test test is one aspect that can be intergrated into the overall Risk Test
    AssetandLiabilityValuationTest:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        VersionNumber:
          type: string
          description: The test version employed
          format: number
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        FinancialStatementAssessmentReference:
          $ref: '#/components/schemas/assessment'
        AssetandLiabilityValuationTestReference:
          $ref: '#/components/schemas/test'
        AssetandLiabilityValuationTestType:
          $ref: '#/components/schemas/text'
      description: The Risk Test test is one aspect that can be intergrated into the overall Risk Test
    workproduct:
      type: object
      properties:
        Workproduct:
          type: string
          description: 'Contact records, working papers, documents and activity logs produced during the execution of a work task'
          format: datatype
      description: ''
    FinancialStatementAssessmentOutcome:
      type: object
      properties:
        FinancialStatementAssessmentWorkProduct:
          $ref: '#/components/schemas/workproduct'
        FinancialStatementAssessmentAssessmentType:
          $ref: '#/components/schemas/text'
      description: The Risk Test test is one aspect that can be intergrated into the overall Risk Test
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: ''
    servicetype:
      type: object
      properties:
        ServiceTypeName:
          $ref: '#/components/schemas/name'
        ServiceType:
          type: string
          description: ''
          format: servicetypevalues
      description: ''
    service:
      type: object
      properties:
        ServiceName:
          $ref: '#/components/schemas/name'
        ServiceDescription:
          $ref: '#/components/schemas/text'
        ServiceType:
          $ref: '#/components/schemas/servicetype'
      description: A selected optional business service as subject matter of Financial Statement Assessment
    date:
      type: object
      properties:
        DateContent:
          type: string
          description: ''
          format: string
      description: ''
    instructiondate:
      type: object
      properties:
        InstructionDate:
          $ref: '#/components/schemas/date'
        InstructionDateType:
          type: string
          description: ''
          format: instructiondatetypevalues
      description: ''
    datetime:
      type: object
      properties:
        Datetime:
          type: string
          description: "A date time identifies a date and time of day to various common resolutions: year, month, week, day, hour, minute, second, and fraction of second. (UN/CEFACT)\n\nA particular point in the progression of time defined by a mandatory date and a mandatory time component, expressed in either UTC time format (YYYY-MM-DDThh:mm:ss.sssZ), local time with UTC offset format (YYYY-MM-DDThh:mm:ss.sss+/-hh:mm), or local time format (YYYY-MM-DDThh:mm:ss.sss). These representations are defined in \"XML Schema Part 2: Datatypes Second Edition - W3C Recommendation 28 October 2004\" which is aligned with ISO 8601. (ISO20022)\nNote on the time format:\n1) beginning / end of calendar day\n00:00:00 = the beginning of a calendar day\n24:00:00 = the end of a calendar day\n2) fractions of second in time format\nDecimal fractions of seconds may be included. In this case, the involved parties shall agree on the maximum number of digits that are allowed."
          format: datatype
      description: Date and time at which the status was assigned.
    datetimeperiod:
      type: object
      properties:
        Datetimeperiod:
          type: string
          description: 'Time span defined by a start date and time, and an end date and time. (ISO20022)'
          format: datatype
      description: Period of time during which the status is valid.
    involvedparty:
      type: object
      properties:
        Involvedparty:
          type: string
          description: ''
          format: datatype
      description: Party who plays a  specific role in the context of assigning a status.
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: ''
    instructionlifecyclestatus:
      type: object
      properties:
        InstructionLifecycleStatusType:
          type: string
          description: ''
          format: instructionlifecylestatustypevalues
        InstructionLifecycleStatus:
          $ref: '#/components/schemas/status'
      description: 'A characteristic of instruction which refers to the LifecycleStatus of instruction (e.g., requested, executed, fulfilled, etc.); '
    value:
      type: object
      properties:
        Value:
          type: string
          description: 'A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)'
          format: datatype
      description: ''
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: ''
    instructionidentification:
      type: object
      properties:
        InstructionIdentifier:
          $ref: '#/components/schemas/identifier'
        InstructionIdentifierType:
          type: string
          description: ''
          format: instructionidentificationtypevalues
      description: "An identifier that allows to uniquely refer to an instance of an Instruction.\n"
    instructiontypevalues:
      enum:
        - PaymentInstruction
        - DeliveryOrder
        - InformationRequest
        - ExchangeInstruction
        - AllocationInstruction
        - MaintenanceInstruction
      type: string
      description: ">\n* `PaymentInstruction` - \n* `DeliveryOrder` - \n* `InformationRequest` - \n* `ExchangeInstruction` - \n* `AllocationInstruction` - \n* `MaintenanceInstruction` - \n"
    log:
      type: object
      properties:
        Log:
          type: string
          description: "A record of events/entries.\n"
          format: class
      description: ''
    instruction:
      type: object
      properties:
        InstructionDate:
          $ref: '#/components/schemas/instructiondate'
        InstructionStatus:
          $ref: '#/components/schemas/instructionlifecyclestatus'
        InstructionIdentifier:
          $ref: '#/components/schemas/instructionidentification'
        InstructionType:
          $ref: '#/components/schemas/instructiontypevalues'
        InstructionResult:
          $ref: '#/components/schemas/text'
        InstructionDescription:
          $ref: '#/components/schemas/text'
        InstructionLog:
          $ref: '#/components/schemas/log'
        InstructionPurpose:
          $ref: '#/components/schemas/text'
      description: Request to assess
    FinancialStatementAssessment:
      type: object
      properties:
        FinancialStatementAssessmentParameterType:
          $ref: '#/components/schemas/text'
        FinancialStatementAssessmentSelectedOption:
          $ref: '#/components/schemas/service'
        FinancialStatementAssessmentType:
          $ref: '#/components/schemas/text'
        FinancialStatementAssessmentReference:
          $ref: '#/components/schemas/assessment'
        FinancialStatementAssessmentRequest:
          $ref: '#/components/schemas/instruction'
        FinancialStatementAssessmentSchedule:
          $ref: '#/components/schemas/schedule'
        FinancialStatementAssessmentStatus:
          $ref: '#/components/schemas/status'
        FinancialStatementAssessmentUsageLog:
          $ref: '#/components/schemas/log'
        FinancialStatementAssessmentRequesterReference:
          $ref: '#/components/schemas/involvedparty'
        FinancialStatementAssessmentAssociatedParty:
          $ref: '#/components/schemas/involvedparty'
        FinancialStatementAssessmentServiceProviderReference:
          $ref: '#/components/schemas/involvedparty'
      description: 'To test or assess an entity, possibly against some formal qualification or certification requirement within Financial Statement Assessment. '
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    FinancialStatementAssessment:
      description: FinancialStatementAssessment
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FinancialStatementAssessment'
    AssetandLiabilityValuationTest:
      description: AssetandLiabilityValuationTest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AssetandLiabilityValuationTest'
    LiquidityandCashFlowTest:
      description: LiquidityandCashFlowTest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LiquidityandCashFlowTest'
    RiskTest:
      description: RiskTest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RiskTest'
    SensitivityTest:
      description: SensitivityTest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SensitivityTest'
  parameters:
    financialstatementassessmentid:
      name: financialstatementassessmentid
      in: path
      required: true
      style: simple
      schema:
        type: string
    assetandliabilityvaluationtestid:
      name: assetandliabilityvaluationtestid
      in: path
      required: true
      style: simple
      schema:
        type: string
    liquidityandcashflowtestid:
      name: liquidityandcashflowtestid
      in: path
      required: true
      style: simple
      schema:
        type: string
    risktestid:
      name: risktestid
      in: path
      required: true
      style: simple
      schema:
        type: string
    sensitivitytestid:
      name: sensitivitytestid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    FinancialStatementAssessment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FinancialStatementAssessment'
      required: true
    AssetandLiabilityValuationTest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AssetandLiabilityValuationTest'
      required: true
    LiquidityandCashFlowTest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LiquidityandCashFlowTest'
      required: true
    RiskTest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RiskTest'
      required: true
    SensitivityTest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SensitivityTest'
      required: true