openapi: 3.0.1
info:
  title: Financial Statement Assessment
  description: This Service Domain supports a range of financial analyses that can be used to extract specific insights (e.g. valuations, liquidity, risk, market sensitivities) from an entity's financial statements
  version: 10.1.0
servers:
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/B154/FinancialStatementAssessment/10.1.0
paths:
  /FinancialStatementAssessment/Evaluate:
    post:
      tags:
      - CR - FinancialStatementAssessment
      summary: Evaluate Financial Statement Assessment
      description: Evaluate Financial Statement Assessment
      operationId: Evaluate
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/FinancialStatementAssessment'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinancialStatementAssessment'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /FinancialStatementAssessment/{financialstatementassessmentId}/Execute:
    put:
      tags:
      - CR - FinancialStatementAssessment
      summary: Execute Financial Statement Assessment
      description: Execute Financial Statement Assessment
      operationId: Execute
      parameters:
      - $ref: '#/components/parameters/FinancialStatementAssessmentID'
      requestBody:
        $ref: '#/components/requestBodies/FinancialStatementAssessment'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinancialStatementAssessment'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /FinancialStatementAssessment/{financialstatementassessmentId}/Grant:
    put:
      tags:
      - CR - FinancialStatementAssessment
      summary: Grant Financial Statement Assessment
      description: Grant Financial Statement Assessment
      operationId: Grant
      parameters:
      - $ref: '#/components/parameters/FinancialStatementAssessmentID'
      requestBody:
        $ref: '#/components/requestBodies/FinancialStatementAssessment'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinancialStatementAssessment'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /FinancialStatementAssessment/{financialstatementassessmentId}/Notify:
    get:
      tags:
      - CR - FinancialStatementAssessment
      summary: Notify Financial Statement Assessment
      description: Notify Financial Statement Assessment
      operationId: Notify
      parameters:
      - $ref: '#/components/parameters/FinancialStatementAssessmentID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinancialStatementAssessment'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /FinancialStatementAssessment/{financialstatementassessmentId}/Request:
    put:
      tags:
      - CR - FinancialStatementAssessment
      summary: Request Financial Statement Assessment
      description: Request Financial Statement Assessment
      operationId: Request
      parameters:
      - $ref: '#/components/parameters/FinancialStatementAssessmentID'
      requestBody:
        $ref: '#/components/requestBodies/FinancialStatementAssessment'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinancialStatementAssessment'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /FinancialStatementAssessment/{financialstatementassessmentId}/Retrieve:
    get:
      tags:
      - CR - FinancialStatementAssessment
      summary: Retrieve Financial Statement Assessment
      description: Retrieve Financial Statement Assessment
      operationId: Retrieve
      parameters:
      - $ref: '#/components/parameters/FinancialStatementAssessmentID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinancialStatementAssessment'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /FinancialStatementAssessment/{financialstatementassessmentId}/AssetandLiabilityValuationTest/Evaluate:
    post:
      tags:
      - BQ - AssetandLiabilityValuationTest
      summary: Evaluate Asset and Liability Valuation Test
      description: Evaluate Asset and Liability Valuation Test
      operationId: EvaluateAssetandLiabilityValuationTest
      parameters:
      - $ref: '#/components/parameters/FinancialStatementAssessmentID'
      requestBody:
        $ref: '#/components/requestBodies/AssetandLiabilityValuationTest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetandLiabilityValuationTest'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /FinancialStatementAssessment/{financialstatementassessmentId}/LiquidityandCashFlowTest/Evaluate:
    post:
      tags:
      - BQ - LiquidityandCashFlowTest
      summary: Evaluate Liquidity and Cash Flow Test
      description: Evaluate Liquidity and Cash Flow Test
      operationId: EvaluateLiquidityandCashFlowTest
      parameters:
      - $ref: '#/components/parameters/FinancialStatementAssessmentID'
      requestBody:
        $ref: '#/components/requestBodies/LiquidityandCashFlowTest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiquidityandCashFlowTest'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /FinancialStatementAssessment/{financialstatementassessmentId}/RiskTest/Evaluate:
    post:
      tags:
      - BQ - RiskTest
      summary: Evaluate Risk Test
      description: Evaluate Risk Test
      operationId: EvaluateRiskTest
      parameters:
      - $ref: '#/components/parameters/FinancialStatementAssessmentID'
      requestBody:
        $ref: '#/components/requestBodies/RiskTest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiskTest'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /FinancialStatementAssessment/{financialstatementassessmentId}/SensitivityTest/Evaluate:
    post:
      tags:
      - BQ - SensitivityTest
      summary: Evaluate Sensitivity Test
      description: Evaluate Sensitivity Test
      operationId: EvaluateSensitivityTest
      parameters:
      - $ref: '#/components/parameters/FinancialStatementAssessmentID'
      requestBody:
        $ref: '#/components/requestBodies/SensitivityTest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SensitivityTest'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  ? /FinancialStatementAssessment/{financialstatementassessmentId}/AssetandLiabilityValuationTest/{assetandliabilityvaluationtestId}/Execute
  : put:
      tags:
      - BQ - AssetandLiabilityValuationTest
      summary: Execute Asset and Liability Valuation Test
      description: Execute Asset and Liability Valuation Test
      operationId: ExecuteAssetandLiabilityValuationTest
      parameters:
      - $ref: '#/components/parameters/FinancialStatementAssessmentID'
      - $ref: '#/components/parameters/AssetandLiabilityValuationTestID'
      requestBody:
        $ref: '#/components/requestBodies/AssetandLiabilityValuationTest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetandLiabilityValuationTest'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /FinancialStatementAssessment/{financialstatementassessmentId}/LiquidityandCashFlowTest/{liquidityandcashflowtestId}/Execute:
    put:
      tags:
      - BQ - LiquidityandCashFlowTest
      summary: Execute Liquidity and Cash Flow Test
      description: Execute Liquidity and Cash Flow Test
      operationId: ExecuteLiquidityandCashFlowTest
      parameters:
      - $ref: '#/components/parameters/FinancialStatementAssessmentID'
      - $ref: '#/components/parameters/LiquidityandCashFlowTestID'
      requestBody:
        $ref: '#/components/requestBodies/LiquidityandCashFlowTest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiquidityandCashFlowTest'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /FinancialStatementAssessment/{financialstatementassessmentId}/RiskTest/{risktestId}/Execute:
    put:
      tags:
      - BQ - RiskTest
      summary: Execute Risk Test
      description: Execute Risk Test
      operationId: ExecuteRiskTest
      parameters:
      - $ref: '#/components/parameters/FinancialStatementAssessmentID'
      - $ref: '#/components/parameters/RiskTestID'
      requestBody:
        $ref: '#/components/requestBodies/RiskTest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiskTest'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /FinancialStatementAssessment/{financialstatementassessmentId}/SensitivityTest/{sensitivitytestId}/Execute:
    put:
      tags:
      - BQ - SensitivityTest
      summary: Execute Sensitivity Test
      description: Execute Sensitivity Test
      operationId: ExecuteSensitivityTest
      parameters:
      - $ref: '#/components/parameters/FinancialStatementAssessmentID'
      - $ref: '#/components/parameters/SensitivityTestID'
      requestBody:
        $ref: '#/components/requestBodies/SensitivityTest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SensitivityTest'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  ? /FinancialStatementAssessment/{financialstatementassessmentId}/AssetandLiabilityValuationTest/{assetandliabilityvaluationtestId}/Notify
  : get:
      tags:
      - BQ - AssetandLiabilityValuationTest
      summary: Notify Asset and Liability Valuation Test
      description: Notify Asset and Liability Valuation Test
      operationId: NotifyAssetandLiabilityValuationTest
      parameters:
      - $ref: '#/components/parameters/FinancialStatementAssessmentID'
      - $ref: '#/components/parameters/AssetandLiabilityValuationTestID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetandLiabilityValuationTest'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /FinancialStatementAssessment/{financialstatementassessmentId}/LiquidityandCashFlowTest/{liquidityandcashflowtestId}/Notify:
    get:
      tags:
      - BQ - LiquidityandCashFlowTest
      summary: Notify Liquidity and Cash Flow Test
      description: Notify Liquidity and Cash Flow Test
      operationId: NotifyLiquidityandCashFlowTest
      parameters:
      - $ref: '#/components/parameters/FinancialStatementAssessmentID'
      - $ref: '#/components/parameters/LiquidityandCashFlowTestID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiquidityandCashFlowTest'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /FinancialStatementAssessment/{financialstatementassessmentId}/RiskTest/{risktestId}/Notify:
    get:
      tags:
      - BQ - RiskTest
      summary: Notify Risk Test
      description: Notify Risk Test
      operationId: NotifyRiskTest
      parameters:
      - $ref: '#/components/parameters/FinancialStatementAssessmentID'
      - $ref: '#/components/parameters/RiskTestID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiskTest'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /FinancialStatementAssessment/{financialstatementassessmentId}/SensitivityTest/{sensitivitytestId}/Notify:
    get:
      tags:
      - BQ - SensitivityTest
      summary: Notify Sensitivity Test
      description: Notify Sensitivity Test
      operationId: NotifySensitivityTest
      parameters:
      - $ref: '#/components/parameters/FinancialStatementAssessmentID'
      - $ref: '#/components/parameters/SensitivityTestID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SensitivityTest'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  ? /FinancialStatementAssessment/{financialstatementassessmentId}/AssetandLiabilityValuationTest/{assetandliabilityvaluationtestId}/Request
  : put:
      tags:
      - BQ - AssetandLiabilityValuationTest
      summary: Request Asset and Liability Valuation Test
      description: Request Asset and Liability Valuation Test
      operationId: RequestAssetandLiabilityValuationTest
      parameters:
      - $ref: '#/components/parameters/FinancialStatementAssessmentID'
      - $ref: '#/components/parameters/AssetandLiabilityValuationTestID'
      requestBody:
        $ref: '#/components/requestBodies/AssetandLiabilityValuationTest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetandLiabilityValuationTest'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /FinancialStatementAssessment/{financialstatementassessmentId}/LiquidityandCashFlowTest/{liquidityandcashflowtestId}/Request:
    put:
      tags:
      - BQ - LiquidityandCashFlowTest
      summary: Request Liquidity and Cash Flow Test
      description: Request Liquidity and Cash Flow Test
      operationId: RequestLiquidityandCashFlowTest
      parameters:
      - $ref: '#/components/parameters/FinancialStatementAssessmentID'
      - $ref: '#/components/parameters/LiquidityandCashFlowTestID'
      requestBody:
        $ref: '#/components/requestBodies/LiquidityandCashFlowTest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiquidityandCashFlowTest'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /FinancialStatementAssessment/{financialstatementassessmentId}/RiskTest/{risktestId}/Request:
    put:
      tags:
      - BQ - RiskTest
      summary: Request Risk Test
      description: Request Risk Test
      operationId: RequestRiskTest
      parameters:
      - $ref: '#/components/parameters/FinancialStatementAssessmentID'
      - $ref: '#/components/parameters/RiskTestID'
      requestBody:
        $ref: '#/components/requestBodies/RiskTest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiskTest'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /FinancialStatementAssessment/{financialstatementassessmentId}/SensitivityTest/{sensitivitytestId}/Request:
    put:
      tags:
      - BQ - SensitivityTest
      summary: Request Sensitivity Test
      description: Request Sensitivity Test
      operationId: RequestSensitivityTest
      parameters:
      - $ref: '#/components/parameters/FinancialStatementAssessmentID'
      - $ref: '#/components/parameters/SensitivityTestID'
      requestBody:
        $ref: '#/components/requestBodies/SensitivityTest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SensitivityTest'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  ? /FinancialStatementAssessment/{financialstatementassessmentId}/AssetandLiabilityValuationTest/{assetandliabilityvaluationtestId}/Retrieve
  : get:
      tags:
      - BQ - AssetandLiabilityValuationTest
      summary: Retrieve Asset and Liability Valuation Test
      description: Retrieve Asset and Liability Valuation Test
      operationId: RetrieveAssetandLiabilityValuationTest
      parameters:
      - $ref: '#/components/parameters/FinancialStatementAssessmentID'
      - $ref: '#/components/parameters/AssetandLiabilityValuationTestID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetandLiabilityValuationTest'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /FinancialStatementAssessment/{financialstatementassessmentId}/LiquidityandCashFlowTest/{liquidityandcashflowtestId}/Retrieve:
    get:
      tags:
      - BQ - LiquidityandCashFlowTest
      summary: Retrieve Liquidity and Cash Flow Test
      description: Retrieve Liquidity and Cash Flow Test
      operationId: RetrieveLiquidityandCashFlowTest
      parameters:
      - $ref: '#/components/parameters/FinancialStatementAssessmentID'
      - $ref: '#/components/parameters/LiquidityandCashFlowTestID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiquidityandCashFlowTest'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /FinancialStatementAssessment/{financialstatementassessmentId}/RiskTest/{risktestId}/Retrieve:
    get:
      tags:
      - BQ - RiskTest
      summary: Retrieve Risk Test
      description: Retrieve Risk Test
      operationId: RetrieveRiskTest
      parameters:
      - $ref: '#/components/parameters/FinancialStatementAssessmentID'
      - $ref: '#/components/parameters/RiskTestID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiskTest'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /FinancialStatementAssessment/{financialstatementassessmentId}/SensitivityTest/{sensitivitytestId}/Retrieve:
    get:
      tags:
      - BQ - SensitivityTest
      summary: Retrieve Sensitivity Test
      description: Retrieve Sensitivity Test
      operationId: RetrieveSensitivityTest
      parameters:
      - $ref: '#/components/parameters/FinancialStatementAssessmentID'
      - $ref: '#/components/parameters/SensitivityTestID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SensitivityTest'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    FinancialStatementAssessment:
      type: object
      properties:
        FinancialStatementAssessmentParameterType:
          type: string
          description: A Classification value that distinguishes between Assessments according to type of concern defined within Financial Statement Assessment .
        FinancialStatementAssessmentSelectedOption:
          type: string
          description: A selected optional business service as subject matter of Financial Statement Assessment
        FinancialStatementAssessmentType:
          type: string
          description: The type of Financial Statement Assessment
        FinancialStatementAssessmentReference:
          type: string
          description: An unique reference to an item or an occurrence of Financial Statement Assessment
        FinancialStatementAssessmentRequest:
          type: string
          description: Request to assess
        FinancialStatementAssessmentSchedule:
          type: object
          description: Timetable to assess Financial Statement Assessment
        FinancialStatementAssessmentStatus:
          type: string
          description: The status of Financial Statement Assessment
        FinancialStatementAssessmentUsageLog:
          type: string
          description: Reference to the log of (usage) ativities/events of Financial Statement Assessment
        FinancialStatementAssessmentRequesterReference:
          type: object
          description: Reference to the party who has requested Financial Statement Assessment
        FinancialStatementAssessmentAssociatedParty:
          type: object
          description: Party who is involved in Financial Statement Assessment
        FinancialStatementAssessmentServiceProviderReference:
          type: object
          description: Reference to the party who has provided Financial Statement Assessment
    RiskTest:
      type: object
      properties:
        Preconditions:
          type: object
          description: The required status/situation before the test can be applied
        Schedule:
          type: object
          description: The schedule and timing of the testing performed
        VersionNumber:
          type: string
          description: The test version employed
        BusinessService:
          type: object
          description: The Risk Test specific Business Service
        FinancialStatementAssessmentReference:
          type: string
          description: Reference to Risk Test
        RiskTestReference:
          type: string
          description: Reference to Risk Test
        RiskTestType:
          type: string
          description: The type of Risk Test
    SensitivityTest:
      type: object
      properties:
        Preconditions:
          type: object
          description: The required status/situation before the test can be applied
        Schedule:
          type: object
          description: The schedule and timing of the testing performed
        VersionNumber:
          type: string
          description: The test version employed
        BusinessService:
          type: object
          description: The Sensitivity Test specific Business Service
        FinancialStatementAssessmentReference:
          type: string
          description: Reference to Sensitivity Test
        SensitivityTestReference:
          type: string
          description: Reference to Sensitivity Test
        SensitivityTestType:
          type: string
          description: The type of Sensitivity Test
    LiquidityandCashFlowTest:
      type: object
      properties:
        Preconditions:
          type: object
          description: The required status/situation before the test can be applied
        Schedule:
          type: object
          description: The schedule and timing of the testing performed
        VersionNumber:
          type: string
          description: The test version employed
        BusinessService:
          type: object
          description: The Liquidity and Cash Flow Test specific Business Service
        FinancialStatementAssessmentReference:
          type: string
          description: Reference to Liquidity and Cash Flow Test
        LiquidityandCashFlowTestReference:
          type: string
          description: Reference to Liquidity and Cash Flow Test
        LiquidityandCashFlowTestType:
          type: string
          description: The type of Liquidity and Cash Flow Test
    AssetandLiabilityValuationTest:
      type: object
      properties:
        Preconditions:
          type: object
          description: The required status/situation before the test can be applied
        Schedule:
          type: object
          description: The schedule and timing of the testing performed
        VersionNumber:
          type: string
          description: The test version employed
        BusinessService:
          type: object
          description: The Asset and Liability Valuation Test specific Business Service
        FinancialStatementAssessmentReference:
          type: string
          description: Reference to Asset and Liability Valuation Test
        AssetandLiabilityValuationTestReference:
          type: string
          description: Reference to Asset and Liability Valuation Test
        AssetandLiabilityValuationTestType:
          type: string
          description: The type of Asset and Liability Valuation Test
    FinancialStatementAssessmentOutcome:
      type: object
      properties:
        FinancialStatementAssessmentWorkProduct:
          type: object
          description: ''
        FinancialStatementAssessmentAssessmentType:
          type: string
          description: ''
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          description: NA
        status:
          type: string
          description: NA
        message:
          type: string
          description: NA
  parameters:
    FinancialStatementAssessmentID:
      name: financialstatementassessmentId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    RiskTestID:
      name: risktestId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    SensitivityTestID:
      name: sensitivitytestId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    LiquidityandCashFlowTestID:
      name: liquidityandcashflowtestId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    AssetandLiabilityValuationTestID:
      name: assetandliabilityvaluationtestId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    FinancialStatementAssessmentOutcomeID:
      name: financialstatementassessmentoutcomeId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
  requestBodies:
    FinancialStatementAssessment:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FinancialStatementAssessment'
    AssetandLiabilityValuationTest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AssetandLiabilityValuationTest'
    LiquidityandCashFlowTest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LiquidityandCashFlowTest'
    RiskTest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RiskTest'
    SensitivityTest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SensitivityTest'
  responses:
    HTTPError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    BadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequestsError:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
...
