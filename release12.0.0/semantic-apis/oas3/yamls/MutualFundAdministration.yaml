openapi: 3.0.1
info:
  title: Mutual Fund Administration
  description: The Mutual Fund Administration Service Domain handles all aspects of the set-up and operation of mutual funds that can be offered to the bank's general (non-accredited) customers
  contact:
    name: BIAN
    url: https://bian.org
  version: 12.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/MutualFundAdministration/12.0.0
paths:
  '/MutualFundAdministration/{mutualfundadministrationid}/Control':
    put:
      tags:
        - CR - MutualFundAdministrativePlan
      summary: Control Mutual Fund Administrative Plan
      description: Control Mutual Fund Administrative Plan
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
      requestBody:
        $ref: '#/components/requestBodies/ControlMutualFundAdministrativePlanRequest'
      responses:
        '200':
          $ref: '#/components/responses/ControlMutualFundAdministrativePlanResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /MutualFundAdministration/Create:
    post:
      tags:
        - CR - MutualFundAdministrativePlan
      summary: Create Mutual Fund Administrative Plan
      description: Create Mutual Fund Administrative Plan
      operationId: Create
      requestBody:
        $ref: '#/components/requestBodies/CreateMutualFundAdministrativePlanRequest'
      responses:
        '200':
          $ref: '#/components/responses/CreateMutualFundAdministrativePlanResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/Exchange':
    put:
      tags:
        - CR - MutualFundAdministrativePlan
      summary: Exchange Mutual Fund Administrative Plan
      description: Exchange Mutual Fund Administrative Plan
      operationId: Exchange
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
      requestBody:
        $ref: '#/components/requestBodies/ExchangeMutualFundAdministrativePlanRequest'
      responses:
        '200':
          $ref: '#/components/responses/ExchangeMutualFundAdministrativePlanResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/Grant':
    put:
      tags:
        - CR - MutualFundAdministrativePlan
      summary: Grant Mutual Fund Administrative Plan
      description: Grant Mutual Fund Administrative Plan
      operationId: Grant
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
      requestBody:
        $ref: '#/components/requestBodies/GrantMutualFundAdministrativePlanRequest'
      responses:
        '200':
          $ref: '#/components/responses/GrantMutualFundAdministrativePlanResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/Notify':
    get:
      tags:
        - CR - MutualFundAdministrativePlan
      summary: Notify Mutual Fund Administrative Plan
      description: Notify Mutual Fund Administrative Plan
      operationId: Notify
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
      responses:
        '200':
          $ref: '#/components/responses/NotifyMutualFundAdministrativePlanResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/Request':
    put:
      tags:
        - CR - MutualFundAdministrativePlan
      summary: Request Mutual Fund Administrative Plan
      description: Request Mutual Fund Administrative Plan
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
      requestBody:
        $ref: '#/components/requestBodies/RequestMutualFundAdministrativePlanRequest'
      responses:
        '200':
          $ref: '#/components/responses/RequestMutualFundAdministrativePlanResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/Retrieve':
    get:
      tags:
        - CR - MutualFundAdministrativePlan
      summary: Retrieve Mutual Fund Administrative Plan
      description: Retrieve Mutual Fund Administrative Plan
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveMutualFundAdministrativePlanResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/Update':
    put:
      tags:
        - CR - MutualFundAdministrativePlan
      summary: Update Mutual Fund Administrative Plan
      description: Update Mutual Fund Administrative Plan
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
      requestBody:
        $ref: '#/components/requestBodies/UpdateMutualFundAdministrativePlanRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateMutualFundAdministrativePlanResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundAccounting/{fundaccountingid}/Exchange':
    put:
      tags:
        - BQ - FundAccounting
      summary: Exchange Fund Accounting Routine
      description: Exchange Fund Accounting Routine
      operationId: ExchangeFundAccounting
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundaccountingid'
      requestBody:
        $ref: '#/components/requestBodies/FundAccounting'
      responses:
        '200':
          $ref: '#/components/responses/FundAccounting'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundDevelopment/{funddevelopmentid}/Exchange':
    put:
      tags:
        - BQ - FundDevelopment
      summary: Exchange Fund Development Routine
      description: Exchange Fund Development Routine
      operationId: ExchangeFundDevelopment
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/funddevelopmentid'
      requestBody:
        $ref: '#/components/requestBodies/FundDevelopment'
      responses:
        '200':
          $ref: '#/components/responses/FundDevelopment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundEnrolment/{fundenrolmentid}/Exchange':
    put:
      tags:
        - BQ - FundEnrolment
      summary: Exchange Fund Enrolment Routine
      description: Exchange Fund Enrolment Routine
      operationId: ExchangeFundEnrolment
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundenrolmentid'
      requestBody:
        $ref: '#/components/requestBodies/FundEnrolment'
      responses:
        '200':
          $ref: '#/components/responses/FundEnrolment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundFinancialReporting/{fundfinancialreportingid}/Exchange':
    put:
      tags:
        - BQ - FundFinancialReporting
      summary: Exchange Fund Financial Reporting Routine
      description: Exchange Fund Financial Reporting Routine
      operationId: ExchangeFundFinancialReporting
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundfinancialreportingid'
      requestBody:
        $ref: '#/components/requestBodies/FundFinancialReporting'
      responses:
        '200':
          $ref: '#/components/responses/FundFinancialReporting'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundInflowsandOutflow/{fundinflowsandoutflowid}/Exchange':
    put:
      tags:
        - BQ - FundInflowsandOutflow
      summary: Exchange Fund Inflows and Outflow Routine
      description: Exchange Fund Inflows and Outflow Routine
      operationId: ExchangeFundInflowsandOutflow
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundinflowsandoutflowid'
      requestBody:
        $ref: '#/components/requestBodies/FundInflowsandOutflow'
      responses:
        '200':
          $ref: '#/components/responses/FundInflowsandOutflow'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundInvestor_MiddleandBackOfficeService/{fundinvestor_middleandbackofficeserviceid}/Exchange':
    put:
      tags:
        - BQ - FundInvestor_MiddleandBackOfficeService
      summary: 'Exchange Fund Investor, Middle and Back Office Service Routine'
      description: 'Exchange Fund Investor, Middle and Back Office Service Routine'
      operationId: ExchangeFundInvestor_MiddleandBackOfficeService
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundinvestor_middleandbackofficeserviceid'
      requestBody:
        $ref: '#/components/requestBodies/FundInvestor_MiddleandBackOfficeService'
      responses:
        '200':
          $ref: '#/components/responses/FundInvestor_MiddleandBackOfficeService'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundManagementFee/{fundmanagementfeeid}/Exchange':
    put:
      tags:
        - BQ - FundManagementFee
      summary: Exchange Fund Management Fee Routine
      description: Exchange Fund Management Fee Routine
      operationId: ExchangeFundManagementFee
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundmanagementfeeid'
      requestBody:
        $ref: '#/components/requestBodies/FundManagementFee'
      responses:
        '200':
          $ref: '#/components/responses/FundManagementFee'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundTaxAdministration/{fundtaxadministrationid}/Exchange':
    put:
      tags:
        - BQ - FundTaxAdministration
      summary: Exchange Fund Tax Administration Routine
      description: Exchange Fund Tax Administration Routine
      operationId: ExchangeFundTaxAdministration
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundtaxadministrationid'
      requestBody:
        $ref: '#/components/requestBodies/FundTaxAdministration'
      responses:
        '200':
          $ref: '#/components/responses/FundTaxAdministration'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundAccounting/{fundaccountingid}/Grant':
    put:
      tags:
        - BQ - FundAccounting
      summary: Grant Fund Accounting Routine
      description: Grant Fund Accounting Routine
      operationId: GrantFundAccounting
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundaccountingid'
      requestBody:
        $ref: '#/components/requestBodies/FundAccounting'
      responses:
        '200':
          $ref: '#/components/responses/FundAccounting'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundDevelopment/{funddevelopmentid}/Grant':
    put:
      tags:
        - BQ - FundDevelopment
      summary: Grant Fund Development Routine
      description: Grant Fund Development Routine
      operationId: GrantFundDevelopment
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/funddevelopmentid'
      requestBody:
        $ref: '#/components/requestBodies/FundDevelopment'
      responses:
        '200':
          $ref: '#/components/responses/FundDevelopment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundEnrolment/{fundenrolmentid}/Grant':
    put:
      tags:
        - BQ - FundEnrolment
      summary: Grant Fund Enrolment Routine
      description: Grant Fund Enrolment Routine
      operationId: GrantFundEnrolment
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundenrolmentid'
      requestBody:
        $ref: '#/components/requestBodies/FundEnrolment'
      responses:
        '200':
          $ref: '#/components/responses/FundEnrolment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundFinancialReporting/{fundfinancialreportingid}/Grant':
    put:
      tags:
        - BQ - FundFinancialReporting
      summary: Grant Fund Financial Reporting Routine
      description: Grant Fund Financial Reporting Routine
      operationId: GrantFundFinancialReporting
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundfinancialreportingid'
      requestBody:
        $ref: '#/components/requestBodies/FundFinancialReporting'
      responses:
        '200':
          $ref: '#/components/responses/FundFinancialReporting'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundInflowsandOutflow/{fundinflowsandoutflowid}/Grant':
    put:
      tags:
        - BQ - FundInflowsandOutflow
      summary: Grant Fund Inflows and Outflow Routine
      description: Grant Fund Inflows and Outflow Routine
      operationId: GrantFundInflowsandOutflow
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundinflowsandoutflowid'
      requestBody:
        $ref: '#/components/requestBodies/FundInflowsandOutflow'
      responses:
        '200':
          $ref: '#/components/responses/FundInflowsandOutflow'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundInvestor_MiddleandBackOfficeService/{fundinvestor_middleandbackofficeserviceid}/Grant':
    put:
      tags:
        - BQ - FundInvestor_MiddleandBackOfficeService
      summary: 'Grant Fund Investor, Middle and Back Office Service Routine'
      description: 'Grant Fund Investor, Middle and Back Office Service Routine'
      operationId: GrantFundInvestor_MiddleandBackOfficeService
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundinvestor_middleandbackofficeserviceid'
      requestBody:
        $ref: '#/components/requestBodies/FundInvestor_MiddleandBackOfficeService'
      responses:
        '200':
          $ref: '#/components/responses/FundInvestor_MiddleandBackOfficeService'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundManagementFee/{fundmanagementfeeid}/Grant':
    put:
      tags:
        - BQ - FundManagementFee
      summary: Grant Fund Management Fee Routine
      description: Grant Fund Management Fee Routine
      operationId: GrantFundManagementFee
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundmanagementfeeid'
      requestBody:
        $ref: '#/components/requestBodies/FundManagementFee'
      responses:
        '200':
          $ref: '#/components/responses/FundManagementFee'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundTaxAdministration/{fundtaxadministrationid}/Grant':
    put:
      tags:
        - BQ - FundTaxAdministration
      summary: Grant Fund Tax Administration Routine
      description: Grant Fund Tax Administration Routine
      operationId: GrantFundTaxAdministration
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundtaxadministrationid'
      requestBody:
        $ref: '#/components/requestBodies/FundTaxAdministration'
      responses:
        '200':
          $ref: '#/components/responses/FundTaxAdministration'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundAccounting/{fundaccountingid}/Notify':
    get:
      tags:
        - BQ - FundAccounting
      summary: Notify Fund Accounting Routine
      description: Notify Fund Accounting Routine
      operationId: NotifyFundAccounting
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundaccountingid'
      responses:
        '200':
          $ref: '#/components/responses/FundAccounting'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundDevelopment/{funddevelopmentid}/Notify':
    get:
      tags:
        - BQ - FundDevelopment
      summary: Notify Fund Development Routine
      description: Notify Fund Development Routine
      operationId: NotifyFundDevelopment
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/funddevelopmentid'
      responses:
        '200':
          $ref: '#/components/responses/FundDevelopment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundEnrolment/{fundenrolmentid}/Notify':
    get:
      tags:
        - BQ - FundEnrolment
      summary: Notify Fund Enrolment Routine
      description: Notify Fund Enrolment Routine
      operationId: NotifyFundEnrolment
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundenrolmentid'
      responses:
        '200':
          $ref: '#/components/responses/FundEnrolment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundFinancialReporting/{fundfinancialreportingid}/Notify':
    get:
      tags:
        - BQ - FundFinancialReporting
      summary: Notify Fund Financial Reporting Routine
      description: Notify Fund Financial Reporting Routine
      operationId: NotifyFundFinancialReporting
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundfinancialreportingid'
      responses:
        '200':
          $ref: '#/components/responses/FundFinancialReporting'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundInflowsandOutflow/{fundinflowsandoutflowid}/Notify':
    get:
      tags:
        - BQ - FundInflowsandOutflow
      summary: Notify Fund Inflows and Outflow Routine
      description: Notify Fund Inflows and Outflow Routine
      operationId: NotifyFundInflowsandOutflow
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundinflowsandoutflowid'
      responses:
        '200':
          $ref: '#/components/responses/FundInflowsandOutflow'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundInvestor_MiddleandBackOfficeService/{fundinvestor_middleandbackofficeserviceid}/Notify':
    get:
      tags:
        - BQ - FundInvestor_MiddleandBackOfficeService
      summary: 'Notify Fund Investor, Middle and Back Office Service Routine'
      description: 'Notify Fund Investor, Middle and Back Office Service Routine'
      operationId: NotifyFundInvestor_MiddleandBackOfficeService
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundinvestor_middleandbackofficeserviceid'
      responses:
        '200':
          $ref: '#/components/responses/FundInvestor_MiddleandBackOfficeService'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundManagementFee/{fundmanagementfeeid}/Notify':
    get:
      tags:
        - BQ - FundManagementFee
      summary: Notify Fund Management Fee Routine
      description: Notify Fund Management Fee Routine
      operationId: NotifyFundManagementFee
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundmanagementfeeid'
      responses:
        '200':
          $ref: '#/components/responses/FundManagementFee'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundTaxAdministration/{fundtaxadministrationid}/Notify':
    get:
      tags:
        - BQ - FundTaxAdministration
      summary: Notify Fund Tax Administration Routine
      description: Notify Fund Tax Administration Routine
      operationId: NotifyFundTaxAdministration
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundtaxadministrationid'
      responses:
        '200':
          $ref: '#/components/responses/FundTaxAdministration'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundAccounting/{fundaccountingid}/Request':
    put:
      tags:
        - BQ - FundAccounting
      summary: Request Fund Accounting Routine
      description: Request Fund Accounting Routine
      operationId: RequestFundAccounting
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundaccountingid'
      requestBody:
        $ref: '#/components/requestBodies/FundAccounting'
      responses:
        '200':
          $ref: '#/components/responses/FundAccounting'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundDevelopment/{funddevelopmentid}/Request':
    put:
      tags:
        - BQ - FundDevelopment
      summary: Request Fund Development Routine
      description: Request Fund Development Routine
      operationId: RequestFundDevelopment
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/funddevelopmentid'
      requestBody:
        $ref: '#/components/requestBodies/FundDevelopment'
      responses:
        '200':
          $ref: '#/components/responses/FundDevelopment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundEnrolment/{fundenrolmentid}/Request':
    put:
      tags:
        - BQ - FundEnrolment
      summary: Request Fund Enrolment Routine
      description: Request Fund Enrolment Routine
      operationId: RequestFundEnrolment
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundenrolmentid'
      requestBody:
        $ref: '#/components/requestBodies/FundEnrolment'
      responses:
        '200':
          $ref: '#/components/responses/FundEnrolment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundFinancialReporting/{fundfinancialreportingid}/Request':
    put:
      tags:
        - BQ - FundFinancialReporting
      summary: Request Fund Financial Reporting Routine
      description: Request Fund Financial Reporting Routine
      operationId: RequestFundFinancialReporting
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundfinancialreportingid'
      requestBody:
        $ref: '#/components/requestBodies/FundFinancialReporting'
      responses:
        '200':
          $ref: '#/components/responses/FundFinancialReporting'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundInflowsandOutflow/{fundinflowsandoutflowid}/Request':
    put:
      tags:
        - BQ - FundInflowsandOutflow
      summary: Request Fund Inflows and Outflow Routine
      description: Request Fund Inflows and Outflow Routine
      operationId: RequestFundInflowsandOutflow
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundinflowsandoutflowid'
      requestBody:
        $ref: '#/components/requestBodies/FundInflowsandOutflow'
      responses:
        '200':
          $ref: '#/components/responses/FundInflowsandOutflow'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundInvestor_MiddleandBackOfficeService/{fundinvestor_middleandbackofficeserviceid}/Request':
    put:
      tags:
        - BQ - FundInvestor_MiddleandBackOfficeService
      summary: 'Request Fund Investor, Middle and Back Office Service Routine'
      description: 'Request Fund Investor, Middle and Back Office Service Routine'
      operationId: RequestFundInvestor_MiddleandBackOfficeService
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundinvestor_middleandbackofficeserviceid'
      requestBody:
        $ref: '#/components/requestBodies/FundInvestor_MiddleandBackOfficeService'
      responses:
        '200':
          $ref: '#/components/responses/FundInvestor_MiddleandBackOfficeService'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundManagementFee/{fundmanagementfeeid}/Request':
    put:
      tags:
        - BQ - FundManagementFee
      summary: Request Fund Management Fee Routine
      description: Request Fund Management Fee Routine
      operationId: RequestFundManagementFee
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundmanagementfeeid'
      requestBody:
        $ref: '#/components/requestBodies/FundManagementFee'
      responses:
        '200':
          $ref: '#/components/responses/FundManagementFee'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundTaxAdministration/{fundtaxadministrationid}/Request':
    put:
      tags:
        - BQ - FundTaxAdministration
      summary: Request Fund Tax Administration Routine
      description: Request Fund Tax Administration Routine
      operationId: RequestFundTaxAdministration
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundtaxadministrationid'
      requestBody:
        $ref: '#/components/requestBodies/FundTaxAdministration'
      responses:
        '200':
          $ref: '#/components/responses/FundTaxAdministration'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundAccounting/{fundaccountingid}/Retrieve':
    get:
      tags:
        - BQ - FundAccounting
      summary: Retrieve Fund Accounting Routine
      description: Retrieve Fund Accounting Routine
      operationId: RetrieveFundAccounting
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundaccountingid'
      responses:
        '200':
          $ref: '#/components/responses/FundAccounting'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundDevelopment/{funddevelopmentid}/Retrieve':
    get:
      tags:
        - BQ - FundDevelopment
      summary: Retrieve Fund Development Routine
      description: Retrieve Fund Development Routine
      operationId: RetrieveFundDevelopment
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/funddevelopmentid'
      responses:
        '200':
          $ref: '#/components/responses/FundDevelopment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundEnrolment/{fundenrolmentid}/Retrieve':
    get:
      tags:
        - BQ - FundEnrolment
      summary: Retrieve Fund Enrolment Routine
      description: Retrieve Fund Enrolment Routine
      operationId: RetrieveFundEnrolment
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundenrolmentid'
      responses:
        '200':
          $ref: '#/components/responses/FundEnrolment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundFinancialReporting/{fundfinancialreportingid}/Retrieve':
    get:
      tags:
        - BQ - FundFinancialReporting
      summary: Retrieve Fund Financial Reporting Routine
      description: Retrieve Fund Financial Reporting Routine
      operationId: RetrieveFundFinancialReporting
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundfinancialreportingid'
      responses:
        '200':
          $ref: '#/components/responses/FundFinancialReporting'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundInflowsandOutflow/{fundinflowsandoutflowid}/Retrieve':
    get:
      tags:
        - BQ - FundInflowsandOutflow
      summary: Retrieve Fund Inflows and Outflow Routine
      description: Retrieve Fund Inflows and Outflow Routine
      operationId: RetrieveFundInflowsandOutflow
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundinflowsandoutflowid'
      responses:
        '200':
          $ref: '#/components/responses/FundInflowsandOutflow'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundInvestor_MiddleandBackOfficeService/{fundinvestor_middleandbackofficeserviceid}/Retrieve':
    get:
      tags:
        - BQ - FundInvestor_MiddleandBackOfficeService
      summary: 'Retrieve Fund Investor, Middle and Back Office Service Routine'
      description: 'Retrieve Fund Investor, Middle and Back Office Service Routine'
      operationId: RetrieveFundInvestor_MiddleandBackOfficeService
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundinvestor_middleandbackofficeserviceid'
      responses:
        '200':
          $ref: '#/components/responses/FundInvestor_MiddleandBackOfficeService'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundManagementFee/{fundmanagementfeeid}/Retrieve':
    get:
      tags:
        - BQ - FundManagementFee
      summary: Retrieve Fund Management Fee Routine
      description: Retrieve Fund Management Fee Routine
      operationId: RetrieveFundManagementFee
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundmanagementfeeid'
      responses:
        '200':
          $ref: '#/components/responses/FundManagementFee'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundTaxAdministration/{fundtaxadministrationid}/Retrieve':
    get:
      tags:
        - BQ - FundTaxAdministration
      summary: Retrieve Fund Tax Administration Routine
      description: Retrieve Fund Tax Administration Routine
      operationId: RetrieveFundTaxAdministration
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundtaxadministrationid'
      responses:
        '200':
          $ref: '#/components/responses/FundTaxAdministration'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundAccounting/{fundaccountingid}/Update':
    put:
      tags:
        - BQ - FundAccounting
      summary: Update Fund Accounting Routine
      description: Update Fund Accounting Routine
      operationId: UpdateFundAccounting
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundaccountingid'
      requestBody:
        $ref: '#/components/requestBodies/FundAccounting'
      responses:
        '200':
          $ref: '#/components/responses/FundAccounting'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundDevelopment/{funddevelopmentid}/Update':
    put:
      tags:
        - BQ - FundDevelopment
      summary: Update Fund Development Routine
      description: Update Fund Development Routine
      operationId: UpdateFundDevelopment
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/funddevelopmentid'
      requestBody:
        $ref: '#/components/requestBodies/FundDevelopment'
      responses:
        '200':
          $ref: '#/components/responses/FundDevelopment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundEnrolment/{fundenrolmentid}/Update':
    put:
      tags:
        - BQ - FundEnrolment
      summary: Update Fund Enrolment Routine
      description: Update Fund Enrolment Routine
      operationId: UpdateFundEnrolment
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundenrolmentid'
      requestBody:
        $ref: '#/components/requestBodies/FundEnrolment'
      responses:
        '200':
          $ref: '#/components/responses/FundEnrolment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundFinancialReporting/{fundfinancialreportingid}/Update':
    put:
      tags:
        - BQ - FundFinancialReporting
      summary: Update Fund Financial Reporting Routine
      description: Update Fund Financial Reporting Routine
      operationId: UpdateFundFinancialReporting
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundfinancialreportingid'
      requestBody:
        $ref: '#/components/requestBodies/FundFinancialReporting'
      responses:
        '200':
          $ref: '#/components/responses/FundFinancialReporting'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundInflowsandOutflow/{fundinflowsandoutflowid}/Update':
    put:
      tags:
        - BQ - FundInflowsandOutflow
      summary: Update Fund Inflows and Outflow Routine
      description: Update Fund Inflows and Outflow Routine
      operationId: UpdateFundInflowsandOutflow
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundinflowsandoutflowid'
      requestBody:
        $ref: '#/components/requestBodies/FundInflowsandOutflow'
      responses:
        '200':
          $ref: '#/components/responses/FundInflowsandOutflow'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundInvestor_MiddleandBackOfficeService/{fundinvestor_middleandbackofficeserviceid}/Update':
    put:
      tags:
        - BQ - FundInvestor_MiddleandBackOfficeService
      summary: 'Update Fund Investor, Middle and Back Office Service Routine'
      description: 'Update Fund Investor, Middle and Back Office Service Routine'
      operationId: UpdateFundInvestor_MiddleandBackOfficeService
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundinvestor_middleandbackofficeserviceid'
      requestBody:
        $ref: '#/components/requestBodies/FundInvestor_MiddleandBackOfficeService'
      responses:
        '200':
          $ref: '#/components/responses/FundInvestor_MiddleandBackOfficeService'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundManagementFee/{fundmanagementfeeid}/Update':
    put:
      tags:
        - BQ - FundManagementFee
      summary: Update Fund Management Fee Routine
      description: Update Fund Management Fee Routine
      operationId: UpdateFundManagementFee
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundmanagementfeeid'
      requestBody:
        $ref: '#/components/requestBodies/FundManagementFee'
      responses:
        '200':
          $ref: '#/components/responses/FundManagementFee'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundTaxAdministration/{fundtaxadministrationid}/Update':
    put:
      tags:
        - BQ - FundTaxAdministration
      summary: Update Fund Tax Administration Routine
      description: Update Fund Tax Administration Routine
      operationId: UpdateFundTaxAdministration
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundtaxadministrationid'
      requestBody:
        $ref: '#/components/requestBodies/FundTaxAdministration'
      responses:
        '200':
          $ref: '#/components/responses/FundTaxAdministration'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    condition:
      type: object
      properties:
        Condition:
          type: string
          description: "Condition is a premise upon which the fulfillment of an agreement depends \n\nGeneral and special arrangements, provisions, requirements, rules, specifications, and standards that form an integral part of an agreement or contract.\n\nRead more: http://www.businessdictionary.com/definition/terms-and-conditions.html\n\n"
          format: class
      description: The required status/situation before the routine can be undertaken
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: "Name by which a party is known and which is usually used to identify that party. (ISO20022)\n"
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    datetime:
      type: object
      properties:
        DateTimeContent:
          type: string
          description: ''
          format: string
        TimeZoneCode:
          type: string
          description: ''
          format: string
        DaylightSavingIndicator:
          type: string
          description: ''
          format: string
      description: ''
    partyidentificationtypevalues:
      enum:
        - Taxidentificationnumber
        - Nationalregistrationnumber
        - Registrationauthorityidentification
        - LEI(LegalEntityIdentifier)
        - Alienregistrationnumber
        - Passportnumber
        - Taxexemptidentificationnumber
        - Corporateidentification
        - Driverlicensenumber
        - Foreigninvestmentidentitynumber
        - Socialsecuritynumber
        - Identitycardnumber
        - Concat
        - Nationalregistrationidentificationnumber
      type: string
      description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC.\r\n"
    value:
      type: object
      properties:
        Value:
          type: string
          description: "Data or set of data \n\n- A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)"
          format: datatype
      description: ''
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    partylegalstructuretypevalues:
      enum:
        - Individual
        - CommunityInterestCompany
        - CharitableIncorporatedOrganisation
        - Co-Operative
        - Charity
        - GeneralPartnership
        - LimitedLiabilityPartnership
        - ScottishLimitedPartnership
        - LimitedPartnership
        - PrivateLimitedCompany
        - PublicLimitedCompany
        - Sole(SoleTrader)
      type: string
      description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - \r\n"
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
        PartyLegalStructureType:
          $ref: '#/components/schemas/partylegalstructuretypevalues'
      description: ''
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: "Documentation of Mutual Fund Administrative Plan ||\r\n|"
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: "Party who is involved in Mutual Fund Administrative Plan ||\r\n|"
    schedule:
      type: object
      properties:
        ScheduleType:
          type: string
          description: ''
          format: string
      description: The timing and key actions/milestones involved in completing the routine
    businessservicetypevalues:
      type: object
      properties:
        Businessservicetypevalues:
          type: string
          description: ''
          format: enumeration
      description: ''
    businessservice:
      type: object
      properties:
        BusinessServiceType:
          $ref: '#/components/schemas/businessservicetypevalues'
      description: The Fund Accounting Routine specific Business Service
    goal:
      type: object
      properties:
        GoalType:
          type: string
          description: The type of goal
          format: string
        GoalDefinition:
          type: string
          description: 'A definition of the goal, including the intended actions required to achieve the goal'
          format: string
        GoalOrganisation:
          type: string
          description: Identifies the interested parties and their roles and responsibilities for the specific actions supporting the achievement of the goal
          format: ''
        GoalResult:
          type: string
          description: 'Assessment of how the work is progressing towards achieving the goal, including projections of likely outcomes'
          format: string
      description: ''
    budgettypevalues:
      enum:
        - OperatingBudget
        - FinancialBudget
        - ResourceBudget
      type: string
      description: ">\r\n* `OperatingBudget` - \r\n* `FinancialBudget` - \r\n* `ResourceBudget` - \r\n"
    budgettype:
      type: object
      properties:
        BudgetTypeName:
          $ref: '#/components/schemas/name'
        BudgetType:
          $ref: '#/components/schemas/budgettypevalues'
      description: "A Classification value that distinguishes between Budgets within Mutual Fund Administrative Plan according to the type of resource and/or activity that is budgetted ||\r\n|"
    currencycode:
      type: object
      properties:
        Currencycode:
          type: string
          description: "A code identifying a currency according to ISO-4217.\nA currency is a system of money in general use in a particular country.\n\nCode allocated to a currency, by a maintenance agency, under an international identification scheme as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\". Valid currency codes are registered with the ISO 4217 Maintenance Agency, and consist of three contiguous letters. (ISO20022)\n\n"
          format: datatype
      description: ''
    amounttypevalues:
      enum:
        - Principal
        - Actual
        - Estimated
        - Maximum
        - Default
        - Replacement
        - Incremental
        - Decremental
        - Reserved
        - Available
        - Used
      type: string
      description: ">\r\n* `Principal` - \r\n* `Actual` - Actual amount.\r\n* `Estimated` - Estimated amount (the final amount could be above or below).\r\n* `Maximum` - Maximum amount (the final amount must be less or equal).\r\n* `Default` - Default amount.\r\n* `Replacement` - Replacement amount.\r\n* `Incremental` - Incremental amount for reservation.\r\n* `Decremental` - Decremental amount for reservation.\r\n* `Reserved` - Reserved or updated reserved amount for reservation.\r\n* `Available` - \r\n* `Used` - \r\n"
    amount:
      type: object
      properties:
        AmountValue:
          $ref: '#/components/schemas/value'
        AmountCurrency:
          $ref: '#/components/schemas/currencycode'
        DecimalPointPosition:
          type: string
          description: "Decimal point position starts calulating from the right\n"
          format: string
        AmountType:
          $ref: '#/components/schemas/amounttypevalues'
      description: Amount of budget which is arranged whitin Mutual Fund Administrative Plan CurrencyAndAmount|CurrencyAndAmount (https://www.iso20022.org/standardsrepository/type/CurrencyAndAmount)|Standard|ISO20022  ()
    budgetarrangement:
      type: object
      properties:
        BudgetType:
          $ref: '#/components/schemas/budgettype'
        BudgetAmount:
          $ref: '#/components/schemas/amount'
      description: 'An arrangement which is specifying an estimate of costs, revenues, and resources over a specified period, reflecting a reading of future financial conditions and goals. (adapted from Business Dictionary)'
    plannedaction:
      type: object
      properties:
        PlannedAction:
          type: string
          description: 'An action that is arranged in a plan for doing or achieving something '
          format: class
      description: 'An action that is arranged in a plan for doing or achieving something '
    plantypevalues:
      enum:
        - AdministrativePlan
        - ManagementPlan
        - StratgyPlan
        - FinancialPlan
      type: string
      description: ">\r\n* `AdministrativePlan` - \r\n* `ManagementPlan` - \r\n* `StratgyPlan` - \r\n* `FinancialPlan` - \r\n"
    plantype:
      type: object
      properties:
        PlanTypeName:
          $ref: '#/components/schemas/name'
        PlanType:
          $ref: '#/components/schemas/plantypevalues'
      description: "The type of Mutual Fund Administrative Plan ||\r\n|"
    plan:
      type: object
      properties:
        PlanGoal:
          $ref: '#/components/schemas/goal'
        PlanBudget:
          $ref: '#/components/schemas/budgetarrangement'
        PlannedAction:
          $ref: '#/components/schemas/plannedaction'
        PlanType:
          $ref: '#/components/schemas/plantype'
        PlanOrganisation:
          type: string
          description: ''
          format: string
        PlanValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PlanDescription:
          $ref: '#/components/schemas/text'
      description: "An unique reference to an item or an occurrence of Mutual Fund Administrative Plan ||\r\n|"
    FundAccounting:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        BusinessUnitEmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        MutualFundAdministrativePlanReference:
          $ref: '#/components/schemas/plan'
        FundAccountingRoutineReference:
          $ref: '#/components/schemas/plannedaction'
        FundAccountingRoutineType:
          $ref: '#/components/schemas/text'
      description: The Fund Accounting Routine is an activity that is performed as one aspect of carrying out the Fund Accounting Routine
    FundTaxAdministration:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        BusinessUnitEmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        MutualFundAdministrativePlanReference:
          $ref: '#/components/schemas/plan'
        FundTaxAdministrationRoutineReference:
          $ref: '#/components/schemas/plannedaction'
        FundTaxAdministrationRoutineType:
          $ref: '#/components/schemas/text'
      description: The Fund Accounting Routine is an activity that is performed as one aspect of carrying out the Fund Accounting Routine
    FundFinancialReporting:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        BusinessUnitEmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        MutualFundAdministrativePlanReference:
          $ref: '#/components/schemas/plan'
        FundFinancialReportingRoutineReference:
          $ref: '#/components/schemas/plannedaction'
        FundFinancialReportingRoutineType:
          $ref: '#/components/schemas/text'
      description: The Fund Accounting Routine is an activity that is performed as one aspect of carrying out the Fund Accounting Routine
    FundInvestor_MiddleandBackOfficeService:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        BusinessUnitEmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        MutualFundAdministrativePlanReference:
          $ref: '#/components/schemas/plan'
        FundInvestor_MiddleandBackOfficeServiceRoutineReference:
          $ref: '#/components/schemas/plannedaction'
        FundInvestor_MiddleandBackOfficeServiceRoutineType:
          $ref: '#/components/schemas/text'
      description: The Fund Accounting Routine is an activity that is performed as one aspect of carrying out the Fund Accounting Routine
    FundEnrolment:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        BusinessUnitEmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        MutualFundAdministrativePlanReference:
          $ref: '#/components/schemas/plan'
        FundEnrolmentRoutineReference:
          $ref: '#/components/schemas/plannedaction'
        FundEnrolmentRoutineType:
          $ref: '#/components/schemas/text'
      description: The Fund Accounting Routine is an activity that is performed as one aspect of carrying out the Fund Accounting Routine
    FundInflowsandOutflow:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        BusinessUnitEmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        MutualFundAdministrativePlanReference:
          $ref: '#/components/schemas/plan'
        FundInflowsandOutflowRoutineReference:
          $ref: '#/components/schemas/plannedaction'
        FundInflowsandOutflowRoutineType:
          $ref: '#/components/schemas/text'
      description: The Fund Accounting Routine is an activity that is performed as one aspect of carrying out the Fund Accounting Routine
    FundDevelopment:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        BusinessUnitEmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        MutualFundAdministrativePlanReference:
          $ref: '#/components/schemas/plan'
        FundDevelopmentRoutineReference:
          $ref: '#/components/schemas/plannedaction'
        FundDevelopmentRoutineType:
          $ref: '#/components/schemas/text'
      description: The Fund Accounting Routine is an activity that is performed as one aspect of carrying out the Fund Accounting Routine
    analysistypevalues:
      enum:
        - PerformanceAnalysis
        - ActivityAnalysis
      type: string
      description: ">\r\n* `PerformanceAnalysis` - \r\n* `ActivityAnalysis` - \r\n"
    financialdocumenttypevalues:
      enum:
        - Meteredserviceinvoice
        - Creditnoterelatedtofinancialadjustment
        - Debitnoterelatedtofinancialadjustment
        - Commercialinvoice
        - Creditnote
        - Debitnote
        - Hireinvoice
        - Selfbilledinvoice
        - Remittanceadvicemessage
        - Relatedpaymentinstruction
        - Commercialcontract
        - Foreignexchangedealreference
        - Statementofaccount
        - Dispatchadvice
        - Purchaseorder
        - Structuredcommunicationreference
        - Billoflading
        - Voucher
        - Accountreceivableopenitem
        - Tradeservicesutilitytransaction
        - Cashierreceipt
        - Customerreceipt
        - Journal
        - Salereceipt
      type: string
      description: ">\r\n* `Meteredserviceinvoice` - Document is an invoice claiming payment for the supply of metered services, for example gas or electricity supplied to a fixed meter.\r\n* `Creditnoterelatedtofinancialadjustment` - Document is a credit note for the final amount settled for a commercial transaction.\r\n* `Debitnoterelatedtofinancialadjustment` - Document is a debit note for the final amount settled for a commercial transaction.\r\n* `Commercialinvoice` - Document is an invoice.\r\n* `Creditnote` - Document is a credit note.\r\n* `Debitnote` - Document is a debit note.\r\n* `Hireinvoice` - Document is an invoice for the hiring of human resources or renting goods or equipment.\r\n* `Selfbilledinvoice` - Document is an invoice issued by the debtor.\r\n* `Remittanceadvicemessage` - Document is a remittance advice sent separately from the current transaction.\r\n* `Relatedpaymentinstruction` - Document is a linked payment instruction to which the current payment instruction is related, for example, in a cover scenario.\r\n* `Commercialcontract` - Document is an agreement between the parties, stipulating the terms and conditions of the delivery of goods or services.\r\n* `Foreignexchangedealreference` - Document is a pre-agreed or pre-arranged foreign exchange transaction to which the payment transaction refers.\r\n* `Statementofaccount` - Document is a statement of the transactions posted to the debtor's account at the supplier.\r\n* `Dispatchadvice` - Document is a dispatch advice.\r\n* `Purchaseorder` - Document is a purchase order.\r\n* `Structuredcommunicationreference` - Document is a structured communication reference provided by the creditor to identify the referred transaction.\r\n* `Billoflading` - Document is a shipping notice.\r\n* `Voucher` - Document is an electronic payment document.\r\n* `Accountreceivableopenitem` - Document is a payment that applies to a specific source document.\r\n* `Tradeservicesutilitytransaction` - Document is a transaction identifier as assigned by the Trade Services Utility.\r\n* `Cashierreceipt` - When the Sale system print the Cashier copy of the Payment receipt.\r\n* `Customerreceipt` - When the Sale System requires   the POI system to print the Customer receipt.\r\n* `Journal` - When the POI or the Sale System wants to store a message on the journal printer or electronic journal of the Sale Terminal (it is sometimes a Sale Logging/Journal Printer).\r\n* `Salereceipt` - When the Sale System requires the POI system to print the Sale receipt.\r\n"
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: 'Status of the document (e.g. delivered, paid, etc.). ISO20022'
    documentdatetimetypevalues:
      enum:
        - CreationDate
        - CapturingDate
        - VersionDate
        - ValueDate
        - IssueDate
      type: string
      description: ">\r\n* `CreationDate` - \r\n* `CapturingDate` - \r\n* `VersionDate` - \r\n* `ValueDate` - \r\n* `IssueDate` - \r\n"
    document:
      type: object
      properties:
        DocumentIdentification:
          $ref: '#/components/schemas/identifier'
        DocumentVersion:
          type: string
          description: ''
          format: number
        DocumentType:
          $ref: '#/components/schemas/financialdocumenttypevalues'
        DocumentStatus:
          $ref: '#/components/schemas/status'
        DocumentDateTime:
          $ref: '#/components/schemas/datetime'
        DocumentName:
          $ref: '#/components/schemas/name'
        DocumentDateTimeType:
          $ref: '#/components/schemas/documentdatetimetypevalues'
        DocumentPurpose:
          $ref: '#/components/schemas/text'
        DocumentFormat:
          $ref: '#/components/schemas/text'
        DocumentSubject:
          $ref: '#/components/schemas/text'
        DocumentDescription:
          $ref: '#/components/schemas/text'
        DocumentValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
      description: ''
    analysis:
      type: object
      properties:
        AnalysisType:
          $ref: '#/components/schemas/analysistypevalues'
        AnalysisResult:
          $ref: '#/components/schemas/text'
        AnalysisPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        AnalysisDocument:
          $ref: '#/components/schemas/document'
        AnalysisDateTime:
          $ref: '#/components/schemas/datetime'
        AnalysisSpecification:
          $ref: '#/components/schemas/text'
      description: ''
    actiontypevalues:
      enum:
        - Initiate
        - Execute
        - Create
        - Transfer
        - Pay
        - Deliver
        - Apply
        - Calculate
      type: string
      description: ">\r\n* `Initiate` - \r\n* `Execute` - \r\n* `Create` - \r\n* `Transfer` - \r\n* `Pay` - \r\n* `Deliver` - \r\n* `Apply` - \r\n* `Calculate` - \r\n"
    action:
      type: object
      properties:
        ActionType:
          $ref: '#/components/schemas/actiontypevalues'
      description: ''
    arrangementlifecyclestatustypevalues:
      enum:
        - Requested
        - Proposed
        - Offered
        - Accepted
        - Cancelled
        - Fulfilled
        - Terminated
      type: string
      description: ">\r\n* `Requested` - \r\n* `Proposed` - \r\n* `Offered` - \r\n* `Accepted` - \r\n* `Cancelled` - \r\n* `Fulfilled` - \r\n* `Terminated` - \r\n"
    arrangementlifecyclestatus:
      type: object
      properties:
        ArrangementLifecycleStatus:
          $ref: '#/components/schemas/status'
        ArrangementLifecycleStatusType:
          $ref: '#/components/schemas/arrangementlifecyclestatustypevalues'
      description: 'A characteristic of arrangement which refers to the LifecycleStatus of arrangement (e.g., requested, proposed, offered, accepted, cancelled, terminated, fulfilled, etc.)'
    subject:
      type: object
      properties:
        Subject:
          type: string
          description: A thing that is discussed or dealt whit in agreement/arrangement about doing or not doing (as action) something.
          format: class
      description: ''
    arrangementtypevalues:
      enum:
        - SweepArrangement
        - WithdrawalArrangement
        - DepositArrangement
        - InterestArrangement
        - FeeArrangement
        - LienArrangement
        - InformationArrangement
        - PaymentArrangement
        - EntitlementArrangement
        - PeriodArrangement
        - CollateralArrangement
        - LimitArrangement
        - AccessArrangement
        - CardPaymentArrangement
        - StandingOrderArrangement
        - OverdraftArrangement
        - RepaymentArrangement
        - StatementArrangement
        - CreditTransferArrangement
        - ProductAndServiceArrangement
        - FactoringArrangement
        - RolloverArrangement
        - RestructuringArrangement
        - InsuranceArrangement
        - CollectionArrangement
        - UnderwritingArrangement
        - TerminationArrangement
        - MaturityArrangement
      type: string
      description: ">\r\n* `SweepArrangement` - An arrangement into which is promised for the set-up and execution of structured sweeps to and from the facility to a linked account.\r\n* `WithdrawalArrangement` - An arrangement into which is promised to deliver Withdraw Service  to take fund out of an account. \r\n* `DepositArrangement` - An arrangement into which is promised to deliver Deposit Service  to place funds into an account for safekeeping. \r\n* `InterestArrangement` - An arrangement into which is promised to apply a pricing element expressed in a percentage  to a principal amount.\r\n* `FeeArrangement` - An arrangement into which is promised to apply a charge for services rendered. \r\n* `LienArrangement` - An arrangement into which is promised for placing a lien or block on the account for a specified purpose, amount, and period. \r\n* `InformationArrangement` - An arrangement concerning the information the bank will provide about the agreement/account\r\n* `PaymentArrangement` - An arrangement into which is promised to deliver a specific payment service including regular payments, standing orders, direct debits and bill pay instructions. \r\n* `EntitlementArrangement` - Right or obligation linked to the involvement of a party in an agreement\r\n* `PeriodArrangement` - \r\n* `CollateralArrangement` - An arrangement into which is promised for handling the oversight of the allocation, valuation and administration of collateral associated with the facility. \r\n* `LimitArrangement` - An arrangement to limit something\ne.g., the number of transaction per week, the amount of money allowed to withdraw per week/day and etc. \r\n* `AccessArrangement` - An arrangement that allows or restricts the access to a service or product, channel or device through a specific access point\r\n* `CardPaymentArrangement` - An arrangement into which is promised to deliver Card payment Service to execute payment transactions through a payment card, including online payments. \r\n* `StandingOrderArrangement` - An arrangement into which is promised to deliver Standing Order Service to make regular transfers on given dates to a named beneﬁciary. \r\n* `OverdraftArrangement` - An arrangement into which is promised to deliver Overdraft Service  that allows fund transfer even if there is no provision on the account. \r\n* `RepaymentArrangement` - An arrangement into which is promised for paying back money previously borrowed from a lender. \r\n* `StatementArrangement` - An arrangement into which is promised to deliver a reporting service on payment transactions registered on an account. \r\n* `CreditTransferArrangement` - An arrangement into which is promised to allow a payer to transfer fund to a beneficiary. \r\n* `ProductAndServiceArrangement` - \r\n* `FactoringArrangement` - \r\n* `RolloverArrangement` - Arrangement stipulating the modalities for an automatic renewal of the agreement\n\ni.e. the replacement of the agreement with a new one without renewed negociation and witout explicit agreement of the customer \r\n* `RestructuringArrangement` - \r\n* `InsuranceArrangement` - \r\n* `CollectionArrangement` - An arrangement into which is promised to collect past-due debts from borrowers\r\n* `UnderwritingArrangement` - A contractual agreement between parties that commits the underwriter to assuming risk.\r\n* `TerminationArrangement` - \r\n* `MaturityArrangement` - \r\n"
    arrangement:
      type: object
      properties:
        ArrangementAction:
          $ref: '#/components/schemas/action'
        ArrangementStartDate:
          $ref: '#/components/schemas/datetime'
        ArrangementEndDate:
          $ref: '#/components/schemas/datetime'
        ArrangementStatus:
          $ref: '#/components/schemas/arrangementlifecyclestatus'
        ArrangementSubjectMatter:
          $ref: '#/components/schemas/subject'
        Arrangementtype:
          $ref: '#/components/schemas/arrangementtypevalues'
      description: The set of administrative responsibilities defined in Mutual Fund Administrative Plan Obligation|Obligation (https://www.iso20022.org/standardsrepository/type/Obligation)|Standard|ISO20022 BM ()
    MutualFundAdministrationOutcome:
      type: object
      properties:
        MutualFundAdministrationPerformanceAnalysis:
          $ref: '#/components/schemas/analysis'
        MutualFundAdministrationActivityAnalysis:
          $ref: '#/components/schemas/analysis'
        MutualFundAdministrationAdministrativePlan:
          $ref: '#/components/schemas/plan'
        MutualFundAdministrationAdministrationTask:
          $ref: '#/components/schemas/arrangement'
      description: The Fund Accounting Routine is an activity that is performed as one aspect of carrying out the Fund Accounting Routine
    FundManagementFee:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        BusinessUnitEmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        MutualFundAdministrativePlanReference:
          $ref: '#/components/schemas/plan'
        FundManagementFeeRoutineReference:
          $ref: '#/components/schemas/plannedaction'
        FundManagementFeeRoutineType:
          $ref: '#/components/schemas/text'
      description: The Fund Accounting Routine is an activity that is performed as one aspect of carrying out the Fund Accounting Routine
    assignment:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
        SubjectMatter:
          type: string
          description: ''
          format: object
      description: "The assignment of a required activity to a responsibe party in Mutual Fund Administrative Plan ||\r\n|"
    balancetypevalues:
      enum:
        - Openingbalance
        - Closingbalance
        - Currentbalance
        - Availablebalance
        - Ledgerbalance
        - Reservebalance
        - Freebalance
        - Principalbalance
      type: string
      description: ">\r\n* `Openingbalance` - Book balance of the account at the beginning of the account servicer's business day. It always equals the closing book balance from the previous business day. Note: the available balance at the beginning of the account servicer's business day may be different from the closing book balance from the previous business day. (ISO20022)\r\n* `Closingbalance` - Balance of the account at the end of the account servicer's business day. It is the sum of the opening balance at the beginning of the day and all entries booked to the account during the account servicer's business day. (ISO20022)\r\n* `Currentbalance` - Balance of the account at a precise moment in time. (ISO20022)\r\n* `Availablebalance` - Balance of money or securities that is at the disposal of the account owner on the date specified. (ISO20022)\r\n* `Ledgerbalance` - Ledger balance refers to posted transactions (e.g. limit authorisation amount - posted transactions). (ISO20022)\r\n* `Reservebalance` - \r\n* `Freebalance` - \r\n* `Principalbalance` - \r\n"
    debitcreditindicatortvalues:
      enum:
        - Debit
        - Credit
      type: string
      description: ">\r\n* `Debit` - Transaction is a debt entry\r\n* `Credit` - Transaction is a credit entry\r\n"
    accountbalance:
      type: object
      properties:
        BalanceAmount:
          $ref: '#/components/schemas/amount'
        BalanceType:
          $ref: '#/components/schemas/balancetypevalues'
        BalanceDate:
          $ref: '#/components/schemas/datetime'
        BalanceIndicator:
          $ref: '#/components/schemas/debitcreditindicatortvalues'
      description: Balance of budget which is arranged whitin Mutual Fund Administrative Plan Balance|Balance (https://www.iso20022.org/standardsrepository/type/Balance)|Standard|ISO20022 BM ()
    MutualFundAdministrativePlan:
      type: object
      properties:
        MutualFundAdministrativePlanBudgetType:
          $ref: '#/components/schemas/budgettype'
        MutualFundAdministrativePlanBudget:
          $ref: '#/components/schemas/amount'
        MutualFundAdministrativePlanAssignment:
          $ref: '#/components/schemas/assignment'
        MutualFundAdministrativePlanDuty:
          $ref: '#/components/schemas/arrangement'
        MutualFundAdministrativePlanAssociatedParty:
          $ref: '#/components/schemas/involvedparty'
        MutualFundAdministrativePlanBudgetBalance:
          $ref: '#/components/schemas/accountbalance'
        MutualFundAdministrativePlanSubjectMatter:
          type: string
          description: The subject matter of Mutual Fund Administrative Plan
          format: object
        MutualFundAdministrativePlanType:
          $ref: '#/components/schemas/plantype'
        MutualFundAdministrativePlanReference:
          $ref: '#/components/schemas/plan'
        MutualFundAdministrativePlanDescription:
          $ref: '#/components/schemas/text'
      description: 'Handle and assign the day to day activities, capture time, costs and income for an operational unit within Mutual Fund Administration. '
    ControlMutualFundAdministrativePlanRequest:
      type: object
      properties:
        MutualFundAdministrativePlan:
          type: object
          properties:
            MutualFundAdministrativePlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            MutualFundAdministrativePlanAssignment:
              $ref: '#/components/schemas/assignment'
            MutualFundAdministrativePlanDuty:
              $ref: '#/components/schemas/arrangement'
            MutualFundAdministrativePlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            MutualFundAdministrativePlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            MutualFundAdministrativePlanSubjectMatter:
              type: string
              description: "\r\n"
              format: object
            MutualFundAdministrativePlanType:
              $ref: '#/components/schemas/plantype'
            MutualFundAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            MutualFundAdministrativePlanDescription:
              $ref: '#/components/schemas/text'
      description: 'Input: Control Mutual Fund Administrative Plan'
    ControlMutualFundAdministrativePlanResponse:
      type: object
      properties:
        MutualFundAdministrativePlan:
          type: object
          properties:
            MutualFundAdministrativePlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            MutualFundAdministrativePlanAssignment:
              $ref: '#/components/schemas/assignment'
            MutualFundAdministrativePlanDuty:
              $ref: '#/components/schemas/arrangement'
            MutualFundAdministrativePlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            MutualFundAdministrativePlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            MutualFundAdministrativePlanSubjectMatter:
              type: string
              description: "\r\n"
              format: object
            MutualFundAdministrativePlanType:
              $ref: '#/components/schemas/plantype'
            MutualFundAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            MutualFundAdministrativePlanDescription:
              $ref: '#/components/schemas/text'
      description: 'Output: Control Mutual Fund Administrative Plan'
    CreateMutualFundAdministrativePlanRequest:
      type: object
      properties:
        MutualFundAdministrativePlan:
          type: object
          properties:
            MutualFundAdministrativePlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            MutualFundAdministrativePlanAssignment:
              $ref: '#/components/schemas/assignment'
            MutualFundAdministrativePlanDuty:
              $ref: '#/components/schemas/arrangement'
            MutualFundAdministrativePlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            MutualFundAdministrativePlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            MutualFundAdministrativePlanSubjectMatter:
              type: string
              description: "\r\n"
              format: object
            MutualFundAdministrativePlanType:
              $ref: '#/components/schemas/plantype'
            MutualFundAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            MutualFundAdministrativePlanDescription:
              $ref: '#/components/schemas/text'
      description: 'Input: Create Mutual Fund Administrative Plan'
    CreateMutualFundAdministrativePlanResponse:
      type: object
      properties:
        MutualFundAdministrativePlan:
          type: object
          properties:
            MutualFundAdministrativePlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            MutualFundAdministrativePlanAssignment:
              $ref: '#/components/schemas/assignment'
            MutualFundAdministrativePlanDuty:
              $ref: '#/components/schemas/arrangement'
            MutualFundAdministrativePlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            MutualFundAdministrativePlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            MutualFundAdministrativePlanSubjectMatter:
              type: string
              description: "\r\n"
              format: object
            MutualFundAdministrativePlanType:
              $ref: '#/components/schemas/plantype'
            MutualFundAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            MutualFundAdministrativePlanDescription:
              $ref: '#/components/schemas/text'
      description: 'Output: Create Mutual Fund Administrative Plan'
    ExchangeMutualFundAdministrativePlanRequest:
      type: object
      properties:
        MutualFundAdministrativePlan:
          type: object
          properties:
            MutualFundAdministrativePlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            MutualFundAdministrativePlanAssignment:
              $ref: '#/components/schemas/assignment'
            MutualFundAdministrativePlanDuty:
              $ref: '#/components/schemas/arrangement'
            MutualFundAdministrativePlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            MutualFundAdministrativePlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            MutualFundAdministrativePlanSubjectMatter:
              type: string
              description: "\r\n"
              format: object
            MutualFundAdministrativePlanType:
              $ref: '#/components/schemas/plantype'
            MutualFundAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            MutualFundAdministrativePlanDescription:
              $ref: '#/components/schemas/text'
      description: 'Input: Exchange Mutual Fund Administrative Plan'
    ExchangeMutualFundAdministrativePlanResponse:
      type: object
      properties:
        MutualFundAdministrativePlan:
          type: object
          properties:
            MutualFundAdministrativePlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            MutualFundAdministrativePlanAssignment:
              $ref: '#/components/schemas/assignment'
            MutualFundAdministrativePlanDuty:
              $ref: '#/components/schemas/arrangement'
            MutualFundAdministrativePlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            MutualFundAdministrativePlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            MutualFundAdministrativePlanSubjectMatter:
              type: string
              description: "\r\n"
              format: object
            MutualFundAdministrativePlanType:
              $ref: '#/components/schemas/plantype'
            MutualFundAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            MutualFundAdministrativePlanDescription:
              $ref: '#/components/schemas/text'
      description: 'Output: Exchange Mutual Fund Administrative Plan'
    GrantMutualFundAdministrativePlanRequest:
      type: object
      properties:
        MutualFundAdministrativePlan:
          type: object
          properties:
            MutualFundAdministrativePlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            MutualFundAdministrativePlanAssignment:
              $ref: '#/components/schemas/assignment'
            MutualFundAdministrativePlanDuty:
              $ref: '#/components/schemas/arrangement'
            MutualFundAdministrativePlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            MutualFundAdministrativePlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            MutualFundAdministrativePlanSubjectMatter:
              type: string
              description: "\r\n"
              format: object
            MutualFundAdministrativePlanType:
              $ref: '#/components/schemas/plantype'
            MutualFundAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            MutualFundAdministrativePlanDescription:
              $ref: '#/components/schemas/text'
      description: 'Input: Grant Mutual Fund Administrative Plan'
    GrantMutualFundAdministrativePlanResponse:
      type: object
      properties:
        MutualFundAdministrativePlan:
          type: object
          properties:
            MutualFundAdministrativePlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            MutualFundAdministrativePlanAssignment:
              $ref: '#/components/schemas/assignment'
            MutualFundAdministrativePlanDuty:
              $ref: '#/components/schemas/arrangement'
            MutualFundAdministrativePlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            MutualFundAdministrativePlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            MutualFundAdministrativePlanSubjectMatter:
              type: string
              description: "\r\n"
              format: object
            MutualFundAdministrativePlanType:
              $ref: '#/components/schemas/plantype'
            MutualFundAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            MutualFundAdministrativePlanDescription:
              $ref: '#/components/schemas/text'
      description: 'Output: Grant Mutual Fund Administrative Plan'
    NotifyMutualFundAdministrativePlanRequest:
      type: object
      properties:
        MutualFundAdministrativePlan:
          type: object
          properties:
            MutualFundAdministrativePlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            MutualFundAdministrativePlanAssignment:
              $ref: '#/components/schemas/assignment'
            MutualFundAdministrativePlanDuty:
              $ref: '#/components/schemas/arrangement'
            MutualFundAdministrativePlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            MutualFundAdministrativePlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            MutualFundAdministrativePlanSubjectMatter:
              type: string
              description: "\r\n"
              format: object
            MutualFundAdministrativePlanType:
              $ref: '#/components/schemas/plantype'
            MutualFundAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            MutualFundAdministrativePlanDescription:
              $ref: '#/components/schemas/text'
      description: 'Input: Notify Mutual Fund Administrative Plan'
    NotifyMutualFundAdministrativePlanResponse:
      type: object
      properties:
        MutualFundAdministrativePlan:
          type: object
          properties:
            MutualFundAdministrativePlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            MutualFundAdministrativePlanAssignment:
              $ref: '#/components/schemas/assignment'
            MutualFundAdministrativePlanDuty:
              $ref: '#/components/schemas/arrangement'
            MutualFundAdministrativePlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            MutualFundAdministrativePlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            MutualFundAdministrativePlanSubjectMatter:
              type: string
              description: "\r\n"
              format: object
            MutualFundAdministrativePlanType:
              $ref: '#/components/schemas/plantype'
            MutualFundAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            MutualFundAdministrativePlanDescription:
              $ref: '#/components/schemas/text'
      description: 'Output: Notify Mutual Fund Administrative Plan'
    RequestMutualFundAdministrativePlanRequest:
      type: object
      properties:
        MutualFundAdministrativePlan:
          type: object
          properties:
            MutualFundAdministrativePlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            MutualFundAdministrativePlanAssignment:
              $ref: '#/components/schemas/assignment'
            MutualFundAdministrativePlanDuty:
              $ref: '#/components/schemas/arrangement'
            MutualFundAdministrativePlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            MutualFundAdministrativePlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            MutualFundAdministrativePlanSubjectMatter:
              type: string
              description: "\r\n"
              format: object
            MutualFundAdministrativePlanType:
              $ref: '#/components/schemas/plantype'
            MutualFundAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            MutualFundAdministrativePlanDescription:
              $ref: '#/components/schemas/text'
      description: 'Input: Request Mutual Fund Administrative Plan'
    RequestMutualFundAdministrativePlanResponse:
      type: object
      properties:
        MutualFundAdministrativePlan:
          type: object
          properties:
            MutualFundAdministrativePlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            MutualFundAdministrativePlanAssignment:
              $ref: '#/components/schemas/assignment'
            MutualFundAdministrativePlanDuty:
              $ref: '#/components/schemas/arrangement'
            MutualFundAdministrativePlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            MutualFundAdministrativePlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            MutualFundAdministrativePlanSubjectMatter:
              type: string
              description: "\r\n"
              format: object
            MutualFundAdministrativePlanType:
              $ref: '#/components/schemas/plantype'
            MutualFundAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            MutualFundAdministrativePlanDescription:
              $ref: '#/components/schemas/text'
      description: 'Output: Request Mutual Fund Administrative Plan'
    RetrieveMutualFundAdministrativePlanRequest:
      type: object
      properties:
        MutualFundAdministrativePlan:
          type: object
          properties:
            MutualFundAdministrativePlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            MutualFundAdministrativePlanAssignment:
              $ref: '#/components/schemas/assignment'
            MutualFundAdministrativePlanDuty:
              $ref: '#/components/schemas/arrangement'
            MutualFundAdministrativePlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            MutualFundAdministrativePlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            MutualFundAdministrativePlanSubjectMatter:
              type: string
              description: "\r\n"
              format: object
            MutualFundAdministrativePlanType:
              $ref: '#/components/schemas/plantype'
            MutualFundAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            MutualFundAdministrativePlanDescription:
              $ref: '#/components/schemas/text'
      description: 'Input: Retrieve Mutual Fund Administrative Plan'
    RetrieveMutualFundAdministrativePlanResponse:
      type: object
      properties:
        MutualFundAdministrativePlan:
          type: object
          properties:
            MutualFundAdministrativePlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            MutualFundAdministrativePlanAssignment:
              $ref: '#/components/schemas/assignment'
            MutualFundAdministrativePlanDuty:
              $ref: '#/components/schemas/arrangement'
            MutualFundAdministrativePlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            MutualFundAdministrativePlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            MutualFundAdministrativePlanSubjectMatter:
              type: string
              description: "\r\n"
              format: object
            MutualFundAdministrativePlanType:
              $ref: '#/components/schemas/plantype'
            MutualFundAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            MutualFundAdministrativePlanDescription:
              $ref: '#/components/schemas/text'
      description: 'Output: Retrieve Mutual Fund Administrative Plan'
    UpdateMutualFundAdministrativePlanRequest:
      type: object
      properties:
        MutualFundAdministrativePlan:
          type: object
          properties:
            MutualFundAdministrativePlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            MutualFundAdministrativePlanAssignment:
              $ref: '#/components/schemas/assignment'
            MutualFundAdministrativePlanDuty:
              $ref: '#/components/schemas/arrangement'
            MutualFundAdministrativePlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            MutualFundAdministrativePlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            MutualFundAdministrativePlanSubjectMatter:
              type: string
              description: "\r\n"
              format: object
            MutualFundAdministrativePlanType:
              $ref: '#/components/schemas/plantype'
            MutualFundAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            MutualFundAdministrativePlanDescription:
              $ref: '#/components/schemas/text'
      description: 'Input: Update Mutual Fund Administrative Plan'
    UpdateMutualFundAdministrativePlanResponse:
      type: object
      properties:
        MutualFundAdministrativePlan:
          type: object
          properties:
            MutualFundAdministrativePlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            MutualFundAdministrativePlanAssignment:
              $ref: '#/components/schemas/assignment'
            MutualFundAdministrativePlanDuty:
              $ref: '#/components/schemas/arrangement'
            MutualFundAdministrativePlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            MutualFundAdministrativePlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            MutualFundAdministrativePlanSubjectMatter:
              type: string
              description: "\r\n"
              format: object
            MutualFundAdministrativePlanType:
              $ref: '#/components/schemas/plantype'
            MutualFundAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            MutualFundAdministrativePlanDescription:
              $ref: '#/components/schemas/text'
      description: 'Output: Update Mutual Fund Administrative Plan'
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ControlMutualFundAdministrativePlanResponse:
      description: ControlMutualFundAdministrativePlanResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ControlMutualFundAdministrativePlanResponse'
    CreateMutualFundAdministrativePlanResponse:
      description: CreateMutualFundAdministrativePlanResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateMutualFundAdministrativePlanResponse'
    ExchangeMutualFundAdministrativePlanResponse:
      description: ExchangeMutualFundAdministrativePlanResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExchangeMutualFundAdministrativePlanResponse'
    GrantMutualFundAdministrativePlanResponse:
      description: GrantMutualFundAdministrativePlanResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GrantMutualFundAdministrativePlanResponse'
    NotifyMutualFundAdministrativePlanResponse:
      description: NotifyMutualFundAdministrativePlanResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotifyMutualFundAdministrativePlanResponse'
    RequestMutualFundAdministrativePlanResponse:
      description: RequestMutualFundAdministrativePlanResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestMutualFundAdministrativePlanResponse'
    RetrieveMutualFundAdministrativePlanResponse:
      description: RetrieveMutualFundAdministrativePlanResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveMutualFundAdministrativePlanResponse'
    UpdateMutualFundAdministrativePlanResponse:
      description: UpdateMutualFundAdministrativePlanResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateMutualFundAdministrativePlanResponse'
    FundAccounting:
      description: FundAccounting
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FundAccounting'
    FundDevelopment:
      description: FundDevelopment
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FundDevelopment'
    FundEnrolment:
      description: FundEnrolment
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FundEnrolment'
    FundFinancialReporting:
      description: FundFinancialReporting
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FundFinancialReporting'
    FundInflowsandOutflow:
      description: FundInflowsandOutflow
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FundInflowsandOutflow'
    FundInvestor_MiddleandBackOfficeService:
      description: FundInvestor_MiddleandBackOfficeService
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FundInvestor_MiddleandBackOfficeService'
    FundManagementFee:
      description: FundManagementFee
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FundManagementFee'
    FundTaxAdministration:
      description: FundTaxAdministration
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FundTaxAdministration'
  parameters:
    mutualfundadministrationid:
      name: mutualfundadministrationid
      in: path
      required: true
      style: simple
      schema:
        type: string
    fundaccountingid:
      name: fundaccountingid
      in: path
      required: true
      style: simple
      schema:
        type: string
    funddevelopmentid:
      name: funddevelopmentid
      in: path
      required: true
      style: simple
      schema:
        type: string
    fundenrolmentid:
      name: fundenrolmentid
      in: path
      required: true
      style: simple
      schema:
        type: string
    fundfinancialreportingid:
      name: fundfinancialreportingid
      in: path
      required: true
      style: simple
      schema:
        type: string
    fundinflowsandoutflowid:
      name: fundinflowsandoutflowid
      in: path
      required: true
      style: simple
      schema:
        type: string
    fundinvestor_middleandbackofficeserviceid:
      name: fundinvestor_middleandbackofficeserviceid
      in: path
      required: true
      style: simple
      schema:
        type: string
    fundmanagementfeeid:
      name: fundmanagementfeeid
      in: path
      required: true
      style: simple
      schema:
        type: string
    fundtaxadministrationid:
      name: fundtaxadministrationid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    ControlMutualFundAdministrativePlanRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ControlMutualFundAdministrativePlanRequest'
      required: true
    CreateMutualFundAdministrativePlanRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateMutualFundAdministrativePlanRequest'
      required: true
    ExchangeMutualFundAdministrativePlanRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExchangeMutualFundAdministrativePlanRequest'
      required: true
    GrantMutualFundAdministrativePlanRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GrantMutualFundAdministrativePlanRequest'
      required: true
    RequestMutualFundAdministrativePlanRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestMutualFundAdministrativePlanRequest'
      required: true
    UpdateMutualFundAdministrativePlanRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateMutualFundAdministrativePlanRequest'
      required: true
    FundAccounting:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FundAccounting'
      required: true
    FundDevelopment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FundDevelopment'
      required: true
    FundEnrolment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FundEnrolment'
      required: true
    FundFinancialReporting:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FundFinancialReporting'
      required: true
    FundInflowsandOutflow:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FundInflowsandOutflow'
      required: true
    FundInvestor_MiddleandBackOfficeService:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FundInvestor_MiddleandBackOfficeService'
      required: true
    FundManagementFee:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FundManagementFee'
      required: true
    FundTaxAdministration:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FundTaxAdministration'
      required: true