openapi: 3.0.1
info:
  title: Product Matching
  description: 'Capability used to match eligible product and product combinations to a customer based on prevailing conditions such as customer type, product interest, solicitation/retention, campaign alignment'
  contact:
    name: BIAN
    url: https://bian.org
  version: 12.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/ProductMatching/12.0.0
paths:
  '/ProductMatching/{productmatchingid}/Exchange':
    put:
      tags:
        - CR - ProductCustomerCombinationAssessment
      summary: 'EcCR Accept, verify, etc. aspects of Product/Customer Combination Assessment processing'
      description: 'EcCR Accept, verify, etc. aspects of Product/Customer Combination Assessment processing'
      operationId: Exchange
      parameters:
        - $ref: '#/components/parameters/productmatchingid'
      requestBody:
        $ref: '#/components/requestBodies/ExchangeProductCustomerCombinationAssessmentRequest'
      responses:
        '200':
          $ref: '#/components/responses/ExchangeProductCustomerCombinationAssessmentResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductMatching/{productmatchingid}/Execute':
    put:
      tags:
        - CR - ProductCustomerCombinationAssessment
      summary: ExCR Execute an available automated action for Product/Customer Combination Assessment
      description: ExCR Execute an available automated action for Product/Customer Combination Assessment
      operationId: Execute
      parameters:
        - $ref: '#/components/parameters/productmatchingid'
      requestBody:
        $ref: '#/components/requestBodies/ExecuteProductCustomerCombinationAssessmentRequest'
      responses:
        '200':
          $ref: '#/components/responses/ExecuteProductCustomerCombinationAssessmentResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductMatching/{productmatchingid}/Grant':
    put:
      tags:
        - CR - ProductCustomerCombinationAssessment
      summary: GrCR Obtain permission to act in relation to Product/Customer Combination Assessment
      description: GrCR Obtain permission to act in relation to Product/Customer Combination Assessment
      operationId: Grant
      parameters:
        - $ref: '#/components/parameters/productmatchingid'
      requestBody:
        $ref: '#/components/requestBodies/GrantProductCustomerCombinationAssessmentRequest'
      responses:
        '200':
          $ref: '#/components/responses/GrantProductCustomerCombinationAssessmentResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /ProductMatching/Evaluate:
    post:
      tags:
        - CR - ProductCustomerCombinationAssessment
      summary: EvCR Instantiate a new Product/Customer Combination Assessment
      description: EvCR Instantiate a new Product/Customer Combination Assessment
      operationId: Evaluate
      requestBody:
        $ref: '#/components/requestBodies/EvaluateProductCustomerCombinationAssessmentRequest'
      responses:
        '200':
          $ref: '#/components/responses/EvaluateProductCustomerCombinationAssessmentResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductMatching/{productmatchingid}/Retrieve':
    get:
      tags:
        - CR - ProductCustomerCombinationAssessment
      summary: ReCR Retrieve details about any aspect of Product/Customer Combination Assessment
      description: ReCR Retrieve details about any aspect of Product/Customer Combination Assessment
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/productmatchingid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveProductCustomerCombinationAssessmentResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductMatching/{productmatchingid}/Request':
    put:
      tags:
        - CR - ProductCustomerCombinationAssessment
      summary: RqCR Request manual intervention or a decision with respect to Product/Customer Combination Assessment
      description: RqCR Request manual intervention or a decision with respect to Product/Customer Combination Assessment
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/productmatchingid'
      requestBody:
        $ref: '#/components/requestBodies/RequestProductCustomerCombinationAssessmentRequest'
      responses:
        '200':
          $ref: '#/components/responses/RequestProductCustomerCombinationAssessmentResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductMatching/{productmatchingid}/Update':
    put:
      tags:
        - CR - ProductCustomerCombinationAssessment
      summary: UpCR Update details relating to Product/Customer Combination Assessment
      description: UpCR Update details relating to Product/Customer Combination Assessment
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/productmatchingid'
      requestBody:
        $ref: '#/components/requestBodies/UpdateProductCustomerCombinationAssessmentRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateProductCustomerCombinationAssessmentResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductMatching/{productmatchingid}/BankandCampaignAlignment/Evaluate':
    post:
      tags:
        - BQ - BankandCampaignAlignment
      summary: EvBQ Instantiate a new Bank and Campaign Alignment
      description: EvBQ Instantiate a new Bank and Campaign Alignment
      operationId: EvaluateBankandCampaignAlignment
      parameters:
        - $ref: '#/components/parameters/productmatchingid'
      requestBody:
        $ref: '#/components/requestBodies/BankandCampaignAlignment'
      responses:
        '200':
          $ref: '#/components/responses/BankandCampaignAlignment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductMatching/{productmatchingid}/ContextCriteria/Evaluate':
    post:
      tags:
        - BQ - ContextCriteria
      summary: EvBQ Instantiate a new Context Criteria
      description: EvBQ Instantiate a new Context Criteria
      operationId: EvaluateContextCriteria
      parameters:
        - $ref: '#/components/parameters/productmatchingid'
      requestBody:
        $ref: '#/components/requestBodies/EvaluateContextCriteriaRequest'
      responses:
        '200':
          $ref: '#/components/responses/EvaluateContextCriteriaResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductMatching/{productmatchingid}/ProductEligibility/Evaluate':
    post:
      tags:
        - BQ - ProductEligibility
      summary: EvBQ Instantiate a new Product Eligibility
      description: EvBQ Instantiate a new Product Eligibility
      operationId: EvaluateProductEligibility
      parameters:
        - $ref: '#/components/parameters/productmatchingid'
      requestBody:
        $ref: '#/components/requestBodies/EvaluateProductEligibilityRequest'
      responses:
        '200':
          $ref: '#/components/responses/EvaluateProductEligibilityResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductMatching/{productmatchingid}/ProductTypeSelection/Evaluate':
    post:
      tags:
        - BQ - ProductTypeSelection
      summary: EvBQ Instantiate a new Product Type Selection
      description: EvBQ Instantiate a new Product Type Selection
      operationId: EvaluateProductTypeSelection
      parameters:
        - $ref: '#/components/parameters/productmatchingid'
      requestBody:
        $ref: '#/components/requestBodies/EvaluateProductTypeSelectionRequest'
      responses:
        '200':
          $ref: '#/components/responses/EvaluateProductTypeSelectionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductMatching/{productmatchingid}/BankandCampaignAlignment/{bankandcampaignalignmentid}/Retrieve':
    get:
      tags:
        - BQ - BankandCampaignAlignment
      summary: ReBQ Retrieve details about any aspect of Bank and Campaign Alignment
      description: ReBQ Retrieve details about any aspect of Bank and Campaign Alignment
      operationId: RetrieveBankandCampaignAlignment
      parameters:
        - $ref: '#/components/parameters/productmatchingid'
        - $ref: '#/components/parameters/bankandcampaignalignmentid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveBankandCampaignAlignmentResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductMatching/{productmatchingid}/ContextCriteria/{contextcriteriaid}/Retrieve':
    get:
      tags:
        - BQ - ContextCriteria
      summary: ReBQ Retrieve details about any aspect of Context Criteria
      description: ReBQ Retrieve details about any aspect of Context Criteria
      operationId: RetrieveContextCriteria
      parameters:
        - $ref: '#/components/parameters/productmatchingid'
        - $ref: '#/components/parameters/contextcriteriaid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveContextCriteriaResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductMatching/{productmatchingid}/ProductEligibility/{producteligibilityid}/Retrieve':
    get:
      tags:
        - BQ - ProductEligibility
      summary: ReBQ Retrieve details about any aspect of Product Eligibility
      description: ReBQ Retrieve details about any aspect of Product Eligibility
      operationId: RetrieveProductEligibility
      parameters:
        - $ref: '#/components/parameters/productmatchingid'
        - $ref: '#/components/parameters/producteligibilityid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveProductEligibilityResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductMatching/{productmatchingid}/ProductTypeSelection/{producttypeselectionid}/Retrieve':
    get:
      tags:
        - BQ - ProductTypeSelection
      summary: ReBQ Retrieve details about any aspect of Product Type Selection
      description: ReBQ Retrieve details about any aspect of Product Type Selection
      operationId: RetrieveProductTypeSelection
      parameters:
        - $ref: '#/components/parameters/productmatchingid'
        - $ref: '#/components/parameters/producttypeselectionid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveProductTypeSelectionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductMatching/{productmatchingid}/BankandCampaignAlignment/{bankandcampaignalignmentid}/Update':
    put:
      tags:
        - BQ - BankandCampaignAlignment
      summary: UpBQ Update details relating to Bank and Campaign Alignment
      description: UpBQ Update details relating to Bank and Campaign Alignment
      operationId: UpdateBankandCampaignAlignment
      parameters:
        - $ref: '#/components/parameters/productmatchingid'
        - $ref: '#/components/parameters/bankandcampaignalignmentid'
      requestBody:
        $ref: '#/components/requestBodies/BankandCampaignAlignment'
      responses:
        '200':
          $ref: '#/components/responses/BankandCampaignAlignment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductMatching/{productmatchingid}/ContextCriteria/{contextcriteriaid}/Update':
    put:
      tags:
        - BQ - ContextCriteria
      summary: UpBQ Update details relating to Context Criteria
      description: UpBQ Update details relating to Context Criteria
      operationId: UpdateContextCriteria
      parameters:
        - $ref: '#/components/parameters/productmatchingid'
        - $ref: '#/components/parameters/contextcriteriaid'
      requestBody:
        $ref: '#/components/requestBodies/UpdateContextCriteriaRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateContextCriteriaResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductMatching/{productmatchingid}/ProductEligibility/{producteligibilityid}/Update':
    put:
      tags:
        - BQ - ProductEligibility
      summary: UpBQ Update details relating to Product Eligibility
      description: UpBQ Update details relating to Product Eligibility
      operationId: UpdateProductEligibility
      parameters:
        - $ref: '#/components/parameters/productmatchingid'
        - $ref: '#/components/parameters/producteligibilityid'
      requestBody:
        $ref: '#/components/requestBodies/UpdateProductEligibilityRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateProductEligibilityResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductMatching/{productmatchingid}/ProductTypeSelection/{producttypeselectionid}/Update':
    put:
      tags:
        - BQ - ProductTypeSelection
      summary: UpBQ Update details relating to Product Type Selection
      description: UpBQ Update details relating to Product Type Selection
      operationId: UpdateProductTypeSelection
      parameters:
        - $ref: '#/components/parameters/productmatchingid'
        - $ref: '#/components/parameters/producttypeselectionid'
      requestBody:
        $ref: '#/components/requestBodies/UpdateProductTypeSelectionRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateProductTypeSelectionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    businessservicetypevalues:
      type: object
      properties:
        Businessservicetypevalues:
          type: string
          description: ''
          format: enumeration
      description: ''
    businessservice:
      type: object
      properties:
        BusinessServiceType:
          $ref: '#/components/schemas/businessservicetypevalues'
      description: The Product/Customer Combination Assessment specific  Business Service
    ProductTypeSelection:
      type: object
      properties:
        ProductTypeSelectionPreconditions:
          type: string
          description: The required status/situation before the test can be applied
          format: string
        ProductTypeSelectionAnalysisSchedule:
          type: string
          description: The schedule and timing of the testing performed
          format: string
        ProductTypeSelectionVersionNumber:
          type: string
          description: The test version employed
          format: string
        ProductTypeSelection:
          $ref: '#/components/schemas/businessservice'
        ProductTypeSelectionServiceType:
          type: string
          description: Reference to the specific business service type
          format: string
        ProductTypeSelectionServiceDescription:
          type: string
          description: Description of the performed business service
          format: string
        ProductTypeSelectionServiceInputsandOuputs:
          type: string
          description: Mandatory and optional inputs and output information for the business service
          format: string
        ProductTypeSelectionServiceWorkProduct:
          type: string
          description: 'Documentation, meeting schedules, notes, reasearch. calculations and any other work products produced by the business service'
          format: string
        ProductTypeSelectionServiceName:
          type: string
          description: ''
          format: string
      description: "To test or assess an entity, possibly against some formal qualification or certification requirement  within Product Matching. \n\nExamples: Perform regulatory tests on a proposed financial transaction and check a new offer conforms to an existing contractual agreement."
    ContextCriteria:
      type: object
      properties:
        ContextCriteriaPreconditions:
          type: string
          description: The required status/situation before the test can be applied
          format: string
        ContextCriteriaAnalysisSchedule:
          type: string
          description: The schedule and timing of the testing performed
          format: string
        ContextCriteriaVersionNumber:
          type: string
          description: The test version employed
          format: string
        ContextCriteria:
          $ref: '#/components/schemas/businessservice'
        ContextCriteriaServiceType:
          type: string
          description: Reference to the specific business service type
          format: string
        ContextCriteriaServiceDescription:
          type: string
          description: Description of the performed business service
          format: string
        ContextCriteriaServiceInputsandOuputs:
          type: string
          description: Mandatory and optional inputs and output information for the business service
          format: string
        ContextCriteriaServiceWorkProduct:
          type: string
          description: 'Documentation, meeting schedules, notes, reasearch. calculations and any other work products produced by the business service'
          format: string
        ContextCriteriaServiceName:
          type: string
          description: ''
          format: string
      description: "To test or assess an entity, possibly against some formal qualification or certification requirement  within Product Matching. \n\nExamples: Perform regulatory tests on a proposed financial transaction and check a new offer conforms to an existing contractual agreement."
    ProductEligibility:
      type: object
      properties:
        ProductEligibilityPreconditions:
          type: string
          description: The required status/situation before the test can be applied
          format: string
        ProductEligibilityAnalysisSchedule:
          type: string
          description: The schedule and timing of the testing performed
          format: string
        ProductEligibilityVersionNumber:
          type: string
          description: The test version employed
          format: string
        ProductEligibility:
          $ref: '#/components/schemas/businessservice'
        ProductEligibilityServiceType:
          type: string
          description: Reference to the specific business service type
          format: string
        ProductEligibilityServiceDescription:
          type: string
          description: Description of the performed business service
          format: string
        ProductEligibilityServiceInputsandOuputs:
          type: string
          description: Mandatory and optional inputs and output information for the business service
          format: string
        ProductEligibilityServiceWorkProduct:
          type: string
          description: 'Documentation, meeting schedules, notes, reasearch. calculations and any other work products produced by the business service'
          format: string
        ProductEligibilityServiceName:
          type: string
          description: ''
          format: string
      description: "To test or assess an entity, possibly against some formal qualification or certification requirement  within Product Matching. \n\nExamples: Perform regulatory tests on a proposed financial transaction and check a new offer conforms to an existing contractual agreement."
    BankandCampaignAlignment:
      type: object
      properties:
        BankandCampaignAlignmentPreconditions:
          type: string
          description: The required status/situation before the test can be applied
          format: string
        BankandCampaignAlignmentAnalysisSchedule:
          type: string
          description: The schedule and timing of the testing performed
          format: string
        BankandCampaignAlignmentVersionNumber:
          type: string
          description: The test version employed
          format: string
        BankandCampaignAlignment:
          $ref: '#/components/schemas/businessservice'
        BankandCampaignAlignmentServiceType:
          type: string
          description: Reference to the specific business service type
          format: string
        BankandCampaignAlignmentServiceDescription:
          type: string
          description: Description of the performed business service
          format: string
        BankandCampaignAlignmentServiceInputsandOuputs:
          type: string
          description: Mandatory and optional inputs and output information for the business service
          format: string
        BankandCampaignAlignmentServiceWorkProduct:
          type: string
          description: 'Documentation, meeting schedules, notes, reasearch. calculations and any other work products produced by the business service'
          format: string
        BankandCampaignAlignmentServiceName:
          type: string
          description: ''
          format: string
      description: "To test or assess an entity, possibly against some formal qualification or certification requirement  within Product Matching. \n\nExamples: Perform regulatory tests on a proposed financial transaction and check a new offer conforms to an existing contractual agreement."
    customerproductmatch:
      type: object
      properties:
        CustomerProductMatch:
          type: string
          description: 'A set of preferred product(s) for which a customer is eligible in a specific servicing situation. '
          format: class
      description: ''
    ProductMatchingOutcome:
      type: object
      properties:
        ProductMatchingWorkProduct:
          $ref: '#/components/schemas/customerproductmatch'
        ProductMatchingAssessmentType:
          type: string
          description: ''
          format: string
      description: "To test or assess an entity, possibly against some formal qualification or certification requirement  within Product Matching. \n\nExamples: Perform regulatory tests on a proposed financial transaction and check a new offer conforms to an existing contractual agreement."
    productmatchingtypevalues:
      type: object
      properties:
        Productmatchingtypevalues:
          type: string
          description: A classification for Product Matching
          format: enumeration
      description: "The type of Product/Customer Combination Assessment ||\r\n|"
    productmatching:
      type: object
      properties:
        ProductMatchingContext:
          type: string
          description: 'e.g. solicitation, cross/up-sell, retention, relationship review'
          format: string
        ProductMatchingAuthorizationCode:
          type: string
          description: 'A code which is used when the match requires authorization. '
          format: string
      description: "Reference to Product/Customer Combination Assessment ||\r\n|"
    productmatchinginstruction:
      type: object
      properties:
        ProductMatchingInstruction:
          type: string
          description: "An instruction to match eligible product and product combinations to a customer \n"
          format: class
      description: "Request to assess Product/CustomerCombination ||\r\n|"
    schedule:
      type: object
      properties:
        ScheduleType:
          type: string
          description: ''
          format: string
      description: "Timetable to assess Product/CustomerCombination ||\r\n|"
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: Specifies the reasons for the status.
    datetime:
      type: object
      properties:
        DateTimeContent:
          type: string
          description: ''
          format: string
        TimeZoneCode:
          type: string
          description: ''
          format: string
        DaylightSavingIndicator:
          type: string
          description: ''
          format: string
      description: Date and time at which the status was assigned.
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: Period of time during which the status is valid.
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: "Name by which a party is known and which is usually used to identify that party. (ISO20022)\n"
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    partyidentificationtypevalues:
      enum:
        - Taxidentificationnumber
        - Nationalregistrationnumber
        - Registrationauthorityidentification
        - LEI(LegalEntityIdentifier)
        - Alienregistrationnumber
        - Passportnumber
        - Taxexemptidentificationnumber
        - Corporateidentification
        - Driverlicensenumber
        - Foreigninvestmentidentitynumber
        - Socialsecuritynumber
        - Identitycardnumber
        - Concat
        - Nationalregistrationidentificationnumber
      type: string
      description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC.\r\n"
    value:
      type: object
      properties:
        Value:
          type: string
          description: "Data or set of data \n\n- A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)"
          format: datatype
      description: ''
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    partylegalstructuretypevalues:
      enum:
        - Individual
        - CommunityInterestCompany
        - CharitableIncorporatedOrganisation
        - Co-Operative
        - Charity
        - GeneralPartnership
        - LimitedLiabilityPartnership
        - ScottishLimitedPartnership
        - LimitedPartnership
        - PrivateLimitedCompany
        - PublicLimitedCompany
        - Sole(SoleTrader)
      type: string
      description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - \r\n"
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
        PartyLegalStructureType:
          $ref: '#/components/schemas/partylegalstructuretypevalues'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: "Reference to the party who has requested Product/Customer Combination Assessment ||\r\n|"
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: The status of Product/Customer Combination Assessment Status |Status  (https://www.iso20022.org/standardsrepository/type/Status)|Standard|ISO20022 BM ()
    log:
      type: object
      properties:
        LogType:
          type: string
          description: ''
          format: string
        LogPeriod:
          type: string
          description: ''
          format: string
        LogDate:
          type: string
          description: Key dates associated with the log (e.g. start time).
          format: string
        LogIdentification:
          type: string
          description: ''
          format: string
      description: "Reference to the log of (usage) ativities/events of Product/Customer Combination Assessment ||\r\n|"
    customerrelationship:
      type: object
      properties:
        CustomerRelationship:
          type: string
          description: A specific relationship between a specific Bank (= party acting as a supplier of banking services) and one or more other involved parties acting as (potential) consumers of banking services as agreed in one or more banking product or service offerings and/or agreements.
          format: class
      description: " ||\r\n|"
    ProductCustomerCombinationAssessment:
      type: object
      properties:
        ProductCustomerCombinationAssessmentParameterType:
          type: string
          description: 'A Classification value that distinguishes between Assessments according to type of concern defined within Product/Customer Combination Assessment . Eg Market Analysis, Risk Analysis, Perfomance Analysis, etc.'
          format: string
        ProductCustomerCombinationAssessmentSelectedOption:
          type: string
          description: A selected optional business service as subject matter of assessment
          format: string
        ProductCustomerCombinationAssessmentType:
          $ref: '#/components/schemas/productmatchingtypevalues'
        ProductCustomerCombinationAssessmentReference:
          $ref: '#/components/schemas/productmatching'
        ProductCustomerCombinationAssessmentRequest:
          $ref: '#/components/schemas/productmatchinginstruction'
        ProductCustomerCombinationAssessmentSchedule:
          $ref: '#/components/schemas/schedule'
        ProductCustomerCombinationAssessmentStatus:
          $ref: '#/components/schemas/status'
        ProductCustomerCombinationAssessmentUsageLog:
          $ref: '#/components/schemas/log'
        ProductCustomerCombinationAssessmentAssociatedParty:
          $ref: '#/components/schemas/involvedparty'
        ProductCustomerCombinationAssessmentServiceProviderReference:
          $ref: '#/components/schemas/involvedparty'
        ProductCustomerCombinationAssessmentRequesterReference:
          $ref: '#/components/schemas/involvedparty'
        CustomerReference:
          $ref: '#/components/schemas/customerrelationship'
      description: "To test or assess an entity, possibly against some formal qualification or certification requirement  within Product Matching. \n\nExamples: Perform regulatory tests on a proposed financial transaction and check a new offer conforms to an existing contractual agreement."
    ExchangeProductCustomerCombinationAssessmentRequest:
      type: object
      properties:
        ProductCustomerCombinationAssessment:
          type: object
          properties:
            ProductCustomerCombinationAssessmentParameterType:
              type: string
              description: "\r\n"
              format: string
            ProductCustomerCombinationAssessmentSelectedOption:
              type: string
              description: "\r\n"
              format: string
            ProductCustomerCombinationAssessmentType:
              $ref: '#/components/schemas/productmatchingtypevalues'
            ProductCustomerCombinationAssessmentReference:
              $ref: '#/components/schemas/productmatching'
            ProductCustomerCombinationAssessmentRequest:
              $ref: '#/components/schemas/productmatchinginstruction'
            ProductCustomerCombinationAssessmentSchedule:
              $ref: '#/components/schemas/schedule'
            ProductCustomerCombinationAssessmentStatus:
              $ref: '#/components/schemas/status'
            ProductCustomerCombinationAssessmentUsageLog:
              $ref: '#/components/schemas/log'
            ProductCustomerCombinationAssessmentServiceProviderReference:
              $ref: '#/components/schemas/involvedparty'
            ProductCustomerCombinationAssessmentRequesterReference:
              $ref: '#/components/schemas/involvedparty'
      description: 'Input: EcCR Accept, verify, etc. aspects of Product/Customer Combination Assessment processing'
    ExchangeProductCustomerCombinationAssessmentResponse:
      type: object
      properties:
        ProductCustomerCombinationAssessment:
          type: object
          properties:
            ProductCustomerCombinationAssessmentParameterType:
              type: string
              description: "\r\n"
              format: string
            ProductCustomerCombinationAssessmentSelectedOption:
              type: string
              description: "\r\n"
              format: string
            ProductCustomerCombinationAssessmentRequest:
              $ref: '#/components/schemas/productmatchinginstruction'
      description: 'Output: EcCR Accept, verify, etc. aspects of Product/Customer Combination Assessment processing'
    ExecuteProductCustomerCombinationAssessmentRequest:
      type: object
      properties:
        ProductCustomerCombinationAssessment:
          type: object
          properties:
            ProductCustomerCombinationAssessmentParameterType:
              type: string
              description: "\r\n"
              format: string
            ProductCustomerCombinationAssessmentSelectedOption:
              type: string
              description: "\r\n"
              format: string
            ProductCustomerCombinationAssessmentType:
              $ref: '#/components/schemas/productmatchingtypevalues'
            ProductCustomerCombinationAssessmentReference:
              $ref: '#/components/schemas/productmatching'
            ProductCustomerCombinationAssessmentRequest:
              $ref: '#/components/schemas/productmatchinginstruction'
            ProductCustomerCombinationAssessmentSchedule:
              $ref: '#/components/schemas/schedule'
            ProductCustomerCombinationAssessmentStatus:
              $ref: '#/components/schemas/status'
            ProductCustomerCombinationAssessmentUsageLog:
              $ref: '#/components/schemas/log'
            ProductCustomerCombinationAssessmentServiceProviderReference:
              $ref: '#/components/schemas/involvedparty'
            ProductCustomerCombinationAssessmentRequesterReference:
              $ref: '#/components/schemas/involvedparty'
      description: 'Input: ExCR Execute an available automated action for Product/Customer Combination Assessment'
    ExecuteProductCustomerCombinationAssessmentResponse:
      type: object
      properties:
        ProductCustomerCombinationAssessment:
          type: object
          properties:
            ProductCustomerCombinationAssessmentParameterType:
              type: string
              description: "\r\n"
              format: string
            ProductCustomerCombinationAssessmentSelectedOption:
              type: string
              description: "\r\n"
              format: string
            ProductCustomerCombinationAssessmentRequest:
              $ref: '#/components/schemas/productmatchinginstruction'
      description: 'Output: ExCR Execute an available automated action for Product/Customer Combination Assessment'
    GrantProductCustomerCombinationAssessmentRequest:
      type: object
      properties:
        ProductCustomerCombinationAssessment:
          type: object
          properties:
            ProductCustomerCombinationAssessmentParameterType:
              type: string
              description: "\r\n"
              format: string
            ProductCustomerCombinationAssessmentSelectedOption:
              type: string
              description: "\r\n"
              format: string
            ProductCustomerCombinationAssessmentType:
              $ref: '#/components/schemas/productmatchingtypevalues'
            ProductCustomerCombinationAssessmentReference:
              $ref: '#/components/schemas/productmatching'
            ProductCustomerCombinationAssessmentRequest:
              $ref: '#/components/schemas/productmatchinginstruction'
            ProductCustomerCombinationAssessmentSchedule:
              $ref: '#/components/schemas/schedule'
            ProductCustomerCombinationAssessmentStatus:
              $ref: '#/components/schemas/status'
            ProductCustomerCombinationAssessmentUsageLog:
              $ref: '#/components/schemas/log'
            ProductCustomerCombinationAssessmentServiceProviderReference:
              $ref: '#/components/schemas/involvedparty'
            ProductCustomerCombinationAssessmentRequesterReference:
              $ref: '#/components/schemas/involvedparty'
      description: 'Input: GrCR Obtain permission to act in relation to Product/Customer Combination Assessment'
    GrantProductCustomerCombinationAssessmentResponse:
      type: object
      properties:
        ProductCustomerCombinationAssessment:
          type: object
          properties:
            ProductCustomerCombinationAssessmentParameterType:
              type: string
              description: "\r\n"
              format: string
            ProductCustomerCombinationAssessmentSelectedOption:
              type: string
              description: "\r\n"
              format: string
            ProductCustomerCombinationAssessmentRequest:
              $ref: '#/components/schemas/productmatchinginstruction'
      description: 'Output: GrCR Obtain permission to act in relation to Product/Customer Combination Assessment'
    EvaluateProductCustomerCombinationAssessmentRequest:
      type: object
      properties:
        ProductCustomerCombinationAssessment:
          type: object
          properties:
            ProductCustomerCombinationAssessmentParameterType:
              type: string
              description: "\r\n"
              format: string
            ProductCustomerCombinationAssessmentSelectedOption:
              type: string
              description: "\r\n"
              format: string
            ProductCustomerCombinationAssessmentType:
              $ref: '#/components/schemas/productmatchingtypevalues'
            ProductCustomerCombinationAssessmentReference:
              $ref: '#/components/schemas/productmatching'
            ProductCustomerCombinationAssessmentRequest:
              $ref: '#/components/schemas/productmatchinginstruction'
            ProductCustomerCombinationAssessmentSchedule:
              $ref: '#/components/schemas/schedule'
            ProductCustomerCombinationAssessmentStatus:
              $ref: '#/components/schemas/status'
            ProductCustomerCombinationAssessmentUsageLog:
              $ref: '#/components/schemas/log'
            ProductCustomerCombinationAssessmentServiceProviderReference:
              $ref: '#/components/schemas/involvedparty'
            ProductCustomerCombinationAssessmentRequesterReference:
              $ref: '#/components/schemas/involvedparty'
      description: 'Input: EvCR Instantiate a new Product/Customer Combination Assessment'
    EvaluateProductCustomerCombinationAssessmentResponse:
      type: object
      properties:
        ProductCustomerCombinationAssessment:
          type: object
          properties:
            ProductCustomerCombinationAssessmentParameterType:
              type: string
              description: "\r\n"
              format: string
            ProductCustomerCombinationAssessmentSelectedOption:
              type: string
              description: "\r\n"
              format: string
            ProductCustomerCombinationAssessmentRequest:
              $ref: '#/components/schemas/productmatchinginstruction'
      description: 'Output: EvCR Instantiate a new Product/Customer Combination Assessment'
    RetrieveProductCustomerCombinationAssessmentResponse:
      type: object
      properties:
        ProductCustomerCombinationAssessment:
          type: object
          properties:
            ProductCustomerCombinationAssessmentParameterType:
              type: string
              description: "\r\n"
              format: string
            ProductCustomerCombinationAssessmentSelectedOption:
              type: string
              description: "\r\n"
              format: string
            ProductCustomerCombinationAssessmentType:
              $ref: '#/components/schemas/productmatchingtypevalues'
            ProductCustomerCombinationAssessmentReference:
              $ref: '#/components/schemas/productmatching'
            ProductCustomerCombinationAssessmentRequest:
              $ref: '#/components/schemas/productmatchinginstruction'
            ProductCustomerCombinationAssessmentSchedule:
              $ref: '#/components/schemas/schedule'
            ProductCustomerCombinationAssessmentStatus:
              $ref: '#/components/schemas/status'
            ProductCustomerCombinationAssessmentUsageLog:
              $ref: '#/components/schemas/log'
            ProductCustomerCombinationAssessmentServiceProviderReference:
              $ref: '#/components/schemas/involvedparty'
            ProductCustomerCombinationAssessmentRequesterReference:
              $ref: '#/components/schemas/involvedparty'
      description: 'Output: ReCR Retrieve details about any aspect of Product/Customer Combination Assessment'
    RequestProductCustomerCombinationAssessmentRequest:
      type: object
      properties:
        ProductCustomerCombinationAssessment:
          type: object
          properties:
            ProductCustomerCombinationAssessmentParameterType:
              type: string
              description: "\r\n"
              format: string
            ProductCustomerCombinationAssessmentSelectedOption:
              type: string
              description: "\r\n"
              format: string
            ProductCustomerCombinationAssessmentType:
              $ref: '#/components/schemas/productmatchingtypevalues'
            ProductCustomerCombinationAssessmentReference:
              $ref: '#/components/schemas/productmatching'
            ProductCustomerCombinationAssessmentRequest:
              $ref: '#/components/schemas/productmatchinginstruction'
            ProductCustomerCombinationAssessmentSchedule:
              $ref: '#/components/schemas/schedule'
            ProductCustomerCombinationAssessmentStatus:
              $ref: '#/components/schemas/status'
            ProductCustomerCombinationAssessmentUsageLog:
              $ref: '#/components/schemas/log'
            ProductCustomerCombinationAssessmentServiceProviderReference:
              $ref: '#/components/schemas/involvedparty'
            ProductCustomerCombinationAssessmentRequesterReference:
              $ref: '#/components/schemas/involvedparty'
      description: 'Input: RqCR Request manual intervention or a decision with respect to Product/Customer Combination Assessment'
    RequestProductCustomerCombinationAssessmentResponse:
      type: object
      properties:
        ProductCustomerCombinationAssessment:
          type: object
          properties:
            ProductCustomerCombinationAssessmentParameterType:
              type: string
              description: "\r\n"
              format: string
            ProductCustomerCombinationAssessmentSelectedOption:
              type: string
              description: "\r\n"
              format: string
            ProductCustomerCombinationAssessmentRequest:
              $ref: '#/components/schemas/productmatchinginstruction'
      description: 'Output: RqCR Request manual intervention or a decision with respect to Product/Customer Combination Assessment'
    UpdateProductCustomerCombinationAssessmentRequest:
      type: object
      properties:
        ProductCustomerCombinationAssessment:
          type: object
          properties:
            ProductCustomerCombinationAssessmentParameterType:
              type: string
              description: "\r\n"
              format: string
            ProductCustomerCombinationAssessmentSelectedOption:
              type: string
              description: "\r\n"
              format: string
            ProductCustomerCombinationAssessmentType:
              $ref: '#/components/schemas/productmatchingtypevalues'
            ProductCustomerCombinationAssessmentReference:
              $ref: '#/components/schemas/productmatching'
            ProductCustomerCombinationAssessmentRequest:
              $ref: '#/components/schemas/productmatchinginstruction'
            ProductCustomerCombinationAssessmentSchedule:
              $ref: '#/components/schemas/schedule'
            ProductCustomerCombinationAssessmentStatus:
              $ref: '#/components/schemas/status'
            ProductCustomerCombinationAssessmentUsageLog:
              $ref: '#/components/schemas/log'
            ProductCustomerCombinationAssessmentServiceProviderReference:
              $ref: '#/components/schemas/involvedparty'
            ProductCustomerCombinationAssessmentRequesterReference:
              $ref: '#/components/schemas/involvedparty'
      description: 'Input: UpCR Update details relating to Product/Customer Combination Assessment'
    UpdateProductCustomerCombinationAssessmentResponse:
      type: object
      properties:
        ProductCustomerCombinationAssessment:
          type: object
          properties:
            ProductCustomerCombinationAssessmentParameterType:
              type: string
              description: "\r\n"
              format: string
            ProductCustomerCombinationAssessmentSelectedOption:
              type: string
              description: "\r\n"
              format: string
            ProductCustomerCombinationAssessmentRequest:
              $ref: '#/components/schemas/productmatchinginstruction'
      description: 'Output: UpCR Update details relating to Product/Customer Combination Assessment'
    EvaluateContextCriteriaRequest:
      type: object
      properties:
        ContextCriteria:
          type: object
          properties:
            ContextCriteriaPreconditions:
              type: string
              description: "\r\n"
              format: string
            ContextCriteriaAnalysisSchedule:
              type: string
              description: "\r\n"
              format: string
            ContextCriteriaVersionNumber:
              type: string
              description: "\r\n"
              format: string
            ContextCriteriaServiceType:
              type: string
              description: "\r\n"
              format: string
            ContextCriteriaServiceDescription:
              type: string
              description: "\r\n"
              format: string
            ContextCriteriaServiceInputsandOuputs:
              type: string
              description: "\r\n"
              format: string
            ContextCriteriaServiceWorkProduct:
              type: string
              description: "\r\n"
              format: string
            ContextCriteriaServiceName:
              type: string
              description: "\r\n"
              format: string
      description: 'Input: EvBQ Instantiate a new Context Criteria'
    EvaluateContextCriteriaResponse:
      type: object
      properties:
        ContextCriteria:
          type: object
          properties:
            ContextCriteriaPreconditions:
              type: string
              description: "\r\n"
              format: string
            ContextCriteriaAnalysisSchedule:
              type: string
              description: "\r\n"
              format: string
            ContextCriteriaVersionNumber:
              type: string
              description: "\r\n"
              format: string
            ContextCriteriaServiceType:
              type: string
              description: "\r\n"
              format: string
            ContextCriteriaServiceDescription:
              type: string
              description: "\r\n"
              format: string
            ContextCriteriaServiceInputsandOuputs:
              type: string
              description: "\r\n"
              format: string
            ContextCriteriaServiceWorkProduct:
              type: string
              description: "\r\n"
              format: string
            ContextCriteriaServiceName:
              type: string
              description: "\r\n"
              format: string
      description: 'Output: EvBQ Instantiate a new Context Criteria'
    EvaluateProductEligibilityRequest:
      type: object
      properties:
        ProductEligibility:
          type: object
          properties:
            ProductEligibilityPreconditions:
              type: string
              description: "\r\n"
              format: string
            ProductEligibilityAnalysisSchedule:
              type: string
              description: "\r\n"
              format: string
            ProductEligibilityVersionNumber:
              type: string
              description: "\r\n"
              format: string
            ProductEligibilityServiceType:
              type: string
              description: "\r\n"
              format: string
            ProductEligibilityServiceDescription:
              type: string
              description: "\r\n"
              format: string
            ProductEligibilityServiceInputsandOuputs:
              type: string
              description: "\r\n"
              format: string
            ProductEligibilityServiceWorkProduct:
              type: string
              description: "\r\n"
              format: string
            ProductEligibilityServiceName:
              type: string
              description: "\r\n"
              format: string
      description: 'Input: EvBQ Instantiate a new Product Eligibility'
    EvaluateProductEligibilityResponse:
      type: object
      properties:
        ProductEligibility:
          type: object
          properties:
            ProductEligibilityPreconditions:
              type: string
              description: "\r\n"
              format: string
            ProductEligibilityAnalysisSchedule:
              type: string
              description: "\r\n"
              format: string
            ProductEligibilityVersionNumber:
              type: string
              description: "\r\n"
              format: string
            ProductEligibilityServiceType:
              type: string
              description: "\r\n"
              format: string
            ProductEligibilityServiceDescription:
              type: string
              description: "\r\n"
              format: string
            ProductEligibilityServiceInputsandOuputs:
              type: string
              description: "\r\n"
              format: string
            ProductEligibilityServiceWorkProduct:
              type: string
              description: "\r\n"
              format: string
            ProductEligibilityServiceName:
              type: string
              description: "\r\n"
              format: string
      description: 'Output: EvBQ Instantiate a new Product Eligibility'
    EvaluateProductTypeSelectionRequest:
      type: object
      properties:
        ProductTypeSelection:
          type: object
          properties:
            ProductTypeSelectionPreconditions:
              type: string
              description: "\r\n"
              format: string
            ProductTypeSelectionAnalysisSchedule:
              type: string
              description: "\r\n"
              format: string
            ProductTypeSelectionVersionNumber:
              type: string
              description: "\r\n"
              format: string
            ProductTypeSelectionServiceType:
              type: string
              description: "\r\n"
              format: string
            ProductTypeSelectionServiceDescription:
              type: string
              description: "\r\n"
              format: string
            ProductTypeSelectionServiceInputsandOuputs:
              type: string
              description: "\r\n"
              format: string
            ProductTypeSelectionServiceWorkProduct:
              type: string
              description: "\r\n"
              format: string
            ProductTypeSelectionServiceName:
              type: string
              description: "\r\n"
              format: string
      description: 'Input: EvBQ Instantiate a new Product Type Selection'
    EvaluateProductTypeSelectionResponse:
      type: object
      properties:
        ProductTypeSelection:
          type: object
          properties:
            ProductTypeSelectionPreconditions:
              type: string
              description: "\r\n"
              format: string
            ProductTypeSelectionAnalysisSchedule:
              type: string
              description: "\r\n"
              format: string
            ProductTypeSelectionVersionNumber:
              type: string
              description: "\r\n"
              format: string
            ProductTypeSelectionServiceType:
              type: string
              description: "\r\n"
              format: string
            ProductTypeSelectionServiceDescription:
              type: string
              description: "\r\n"
              format: string
            ProductTypeSelectionServiceInputsandOuputs:
              type: string
              description: "\r\n"
              format: string
            ProductTypeSelectionServiceWorkProduct:
              type: string
              description: "\r\n"
              format: string
            ProductTypeSelectionServiceName:
              type: string
              description: "\r\n"
              format: string
      description: 'Output: EvBQ Instantiate a new Product Type Selection'
    RetrieveBankandCampaignAlignmentResponse:
      type: object
      properties:
        BankandCampaignAlignment:
          type: object
          properties:
            BankandCampaignAlignmentPreconditions:
              type: string
              description: "\r\n"
              format: string
            BankandCampaignAlignmentAnalysisSchedule:
              type: string
              description: "\r\n"
              format: string
            BankandCampaignAlignmentVersionNumber:
              type: string
              description: "\r\n"
              format: string
            BankandCampaignAlignment:
              $ref: '#/components/schemas/businessservice'
            BankandCampaignAlignmentServiceType:
              type: string
              description: "\r\n"
              format: string
            BankandCampaignAlignmentServiceDescription:
              type: string
              description: "\r\n"
              format: string
            BankandCampaignAlignmentServiceInputsandOuputs:
              type: string
              description: "\r\n"
              format: string
            BankandCampaignAlignmentServiceWorkProduct:
              type: string
              description: "\r\n"
              format: string
            BankandCampaignAlignmentServiceName:
              type: string
              description: "\r\n"
              format: string
      description: 'Output: ReBQ Retrieve details about any aspect of Bank and Campaign Alignment'
    RetrieveContextCriteriaResponse:
      type: object
      properties:
        ContextCriteria:
          type: object
          properties:
            ContextCriteriaPreconditions:
              type: string
              description: "\r\n"
              format: string
            ContextCriteriaAnalysisSchedule:
              type: string
              description: "\r\n"
              format: string
            ContextCriteriaVersionNumber:
              type: string
              description: "\r\n"
              format: string
            ContextCriteriaServiceType:
              type: string
              description: "\r\n"
              format: string
            ContextCriteriaServiceDescription:
              type: string
              description: "\r\n"
              format: string
            ContextCriteriaServiceInputsandOuputs:
              type: string
              description: "\r\n"
              format: string
            ContextCriteriaServiceWorkProduct:
              type: string
              description: "\r\n"
              format: string
            ContextCriteriaServiceName:
              type: string
              description: "\r\n"
              format: string
      description: 'Output: ReBQ Retrieve details about any aspect of Context Criteria'
    RetrieveProductEligibilityResponse:
      type: object
      properties:
        ProductEligibility:
          type: object
          properties:
            ProductEligibilityPreconditions:
              type: string
              description: "\r\n"
              format: string
            ProductEligibilityAnalysisSchedule:
              type: string
              description: "\r\n"
              format: string
            ProductEligibilityVersionNumber:
              type: string
              description: "\r\n"
              format: string
            ProductEligibilityServiceType:
              type: string
              description: "\r\n"
              format: string
            ProductEligibilityServiceDescription:
              type: string
              description: "\r\n"
              format: string
            ProductEligibilityServiceInputsandOuputs:
              type: string
              description: "\r\n"
              format: string
            ProductEligibilityServiceWorkProduct:
              type: string
              description: "\r\n"
              format: string
            ProductEligibilityServiceName:
              type: string
              description: "\r\n"
              format: string
      description: 'Output: ReBQ Retrieve details about any aspect of Product Eligibility'
    RetrieveProductTypeSelectionResponse:
      type: object
      properties:
        ProductTypeSelection:
          type: object
          properties:
            ProductTypeSelectionPreconditions:
              type: string
              description: "\r\n"
              format: string
            ProductTypeSelectionAnalysisSchedule:
              type: string
              description: "\r\n"
              format: string
            ProductTypeSelectionVersionNumber:
              type: string
              description: "\r\n"
              format: string
            ProductTypeSelectionServiceType:
              type: string
              description: "\r\n"
              format: string
            ProductTypeSelectionServiceDescription:
              type: string
              description: "\r\n"
              format: string
            ProductTypeSelectionServiceInputsandOuputs:
              type: string
              description: "\r\n"
              format: string
            ProductTypeSelectionServiceWorkProduct:
              type: string
              description: "\r\n"
              format: string
            ProductTypeSelectionServiceName:
              type: string
              description: "\r\n"
              format: string
      description: 'Output: ReBQ Retrieve details about any aspect of Product Type Selection'
    UpdateContextCriteriaRequest:
      type: object
      properties:
        ContextCriteria:
          type: object
          properties:
            ContextCriteriaPreconditions:
              type: string
              description: "\r\n"
              format: string
            ContextCriteriaAnalysisSchedule:
              type: string
              description: "\r\n"
              format: string
            ContextCriteriaVersionNumber:
              type: string
              description: "\r\n"
              format: string
            ContextCriteriaServiceType:
              type: string
              description: "\r\n"
              format: string
            ContextCriteriaServiceDescription:
              type: string
              description: "\r\n"
              format: string
            ContextCriteriaServiceInputsandOuputs:
              type: string
              description: "\r\n"
              format: string
            ContextCriteriaServiceWorkProduct:
              type: string
              description: "\r\n"
              format: string
            ContextCriteriaServiceName:
              type: string
              description: "\r\n"
              format: string
      description: 'Input: UpBQ Update details relating to Context Criteria'
    UpdateContextCriteriaResponse:
      type: object
      properties:
        ContextCriteria:
          type: object
          properties:
            ContextCriteriaPreconditions:
              type: string
              description: "\r\n"
              format: string
            ContextCriteriaAnalysisSchedule:
              type: string
              description: "\r\n"
              format: string
            ContextCriteriaVersionNumber:
              type: string
              description: "\r\n"
              format: string
            ContextCriteriaServiceType:
              type: string
              description: "\r\n"
              format: string
            ContextCriteriaServiceDescription:
              type: string
              description: "\r\n"
              format: string
            ContextCriteriaServiceInputsandOuputs:
              type: string
              description: "\r\n"
              format: string
            ContextCriteriaServiceWorkProduct:
              type: string
              description: "\r\n"
              format: string
            ContextCriteriaServiceName:
              type: string
              description: "\r\n"
              format: string
      description: 'Output: UpBQ Update details relating to Context Criteria'
    UpdateProductEligibilityRequest:
      type: object
      properties:
        ProductEligibility:
          type: object
          properties:
            ProductEligibilityPreconditions:
              type: string
              description: "\r\n"
              format: string
            ProductEligibilityAnalysisSchedule:
              type: string
              description: "\r\n"
              format: string
            ProductEligibilityVersionNumber:
              type: string
              description: "\r\n"
              format: string
            ProductEligibilityServiceType:
              type: string
              description: "\r\n"
              format: string
            ProductEligibilityServiceDescription:
              type: string
              description: "\r\n"
              format: string
            ProductEligibilityServiceInputsandOuputs:
              type: string
              description: "\r\n"
              format: string
            ProductEligibilityServiceWorkProduct:
              type: string
              description: "\r\n"
              format: string
            ProductEligibilityServiceName:
              type: string
              description: "\r\n"
              format: string
      description: 'Input: UpBQ Update details relating to Product Eligibility'
    UpdateProductEligibilityResponse:
      type: object
      properties:
        ProductEligibility:
          type: object
          properties:
            ProductEligibilityPreconditions:
              type: string
              description: "\r\n"
              format: string
            ProductEligibilityAnalysisSchedule:
              type: string
              description: "\r\n"
              format: string
            ProductEligibilityVersionNumber:
              type: string
              description: "\r\n"
              format: string
            ProductEligibilityServiceType:
              type: string
              description: "\r\n"
              format: string
            ProductEligibilityServiceDescription:
              type: string
              description: "\r\n"
              format: string
            ProductEligibilityServiceInputsandOuputs:
              type: string
              description: "\r\n"
              format: string
            ProductEligibilityServiceWorkProduct:
              type: string
              description: "\r\n"
              format: string
            ProductEligibilityServiceName:
              type: string
              description: "\r\n"
              format: string
      description: 'Output: UpBQ Update details relating to Product Eligibility'
    UpdateProductTypeSelectionRequest:
      type: object
      properties:
        ProductTypeSelection:
          type: object
          properties:
            ProductTypeSelectionPreconditions:
              type: string
              description: "\r\n"
              format: string
            ProductTypeSelectionAnalysisSchedule:
              type: string
              description: "\r\n"
              format: string
            ProductTypeSelectionVersionNumber:
              type: string
              description: "\r\n"
              format: string
            ProductTypeSelectionServiceType:
              type: string
              description: "\r\n"
              format: string
            ProductTypeSelectionServiceDescription:
              type: string
              description: "\r\n"
              format: string
            ProductTypeSelectionServiceInputsandOuputs:
              type: string
              description: "\r\n"
              format: string
            ProductTypeSelectionServiceWorkProduct:
              type: string
              description: "\r\n"
              format: string
            ProductTypeSelectionServiceName:
              type: string
              description: "\r\n"
              format: string
      description: 'Input: UpBQ Update details relating to Product Type Selection'
    UpdateProductTypeSelectionResponse:
      type: object
      properties:
        ProductTypeSelection:
          type: object
          properties:
            ProductTypeSelectionPreconditions:
              type: string
              description: "\r\n"
              format: string
            ProductTypeSelectionAnalysisSchedule:
              type: string
              description: "\r\n"
              format: string
            ProductTypeSelectionVersionNumber:
              type: string
              description: "\r\n"
              format: string
            ProductTypeSelectionServiceType:
              type: string
              description: "\r\n"
              format: string
            ProductTypeSelectionServiceDescription:
              type: string
              description: "\r\n"
              format: string
            ProductTypeSelectionServiceInputsandOuputs:
              type: string
              description: "\r\n"
              format: string
            ProductTypeSelectionServiceWorkProduct:
              type: string
              description: "\r\n"
              format: string
            ProductTypeSelectionServiceName:
              type: string
              description: "\r\n"
              format: string
      description: 'Output: UpBQ Update details relating to Product Type Selection'
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ExchangeProductCustomerCombinationAssessmentResponse:
      description: ExchangeProductCustomerCombinationAssessmentResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExchangeProductCustomerCombinationAssessmentResponse'
    ExecuteProductCustomerCombinationAssessmentResponse:
      description: ExecuteProductCustomerCombinationAssessmentResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExecuteProductCustomerCombinationAssessmentResponse'
    GrantProductCustomerCombinationAssessmentResponse:
      description: GrantProductCustomerCombinationAssessmentResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GrantProductCustomerCombinationAssessmentResponse'
    EvaluateProductCustomerCombinationAssessmentResponse:
      description: EvaluateProductCustomerCombinationAssessmentResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EvaluateProductCustomerCombinationAssessmentResponse'
    RetrieveProductCustomerCombinationAssessmentResponse:
      description: RetrieveProductCustomerCombinationAssessmentResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveProductCustomerCombinationAssessmentResponse'
    RequestProductCustomerCombinationAssessmentResponse:
      description: RequestProductCustomerCombinationAssessmentResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestProductCustomerCombinationAssessmentResponse'
    UpdateProductCustomerCombinationAssessmentResponse:
      description: UpdateProductCustomerCombinationAssessmentResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateProductCustomerCombinationAssessmentResponse'
    BankandCampaignAlignment:
      description: BankandCampaignAlignment
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BankandCampaignAlignment'
    EvaluateContextCriteriaResponse:
      description: EvaluateContextCriteriaResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EvaluateContextCriteriaResponse'
    EvaluateProductEligibilityResponse:
      description: EvaluateProductEligibilityResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EvaluateProductEligibilityResponse'
    EvaluateProductTypeSelectionResponse:
      description: EvaluateProductTypeSelectionResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EvaluateProductTypeSelectionResponse'
    RetrieveBankandCampaignAlignmentResponse:
      description: RetrieveBankandCampaignAlignmentResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveBankandCampaignAlignmentResponse'
    RetrieveContextCriteriaResponse:
      description: RetrieveContextCriteriaResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveContextCriteriaResponse'
    RetrieveProductEligibilityResponse:
      description: RetrieveProductEligibilityResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveProductEligibilityResponse'
    RetrieveProductTypeSelectionResponse:
      description: RetrieveProductTypeSelectionResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveProductTypeSelectionResponse'
    UpdateContextCriteriaResponse:
      description: UpdateContextCriteriaResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateContextCriteriaResponse'
    UpdateProductEligibilityResponse:
      description: UpdateProductEligibilityResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateProductEligibilityResponse'
    UpdateProductTypeSelectionResponse:
      description: UpdateProductTypeSelectionResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateProductTypeSelectionResponse'
  parameters:
    productmatchingid:
      name: productmatchingid
      in: path
      required: true
      style: simple
      schema:
        type: string
    bankandcampaignalignmentid:
      name: bankandcampaignalignmentid
      in: path
      required: true
      style: simple
      schema:
        type: string
    contextcriteriaid:
      name: contextcriteriaid
      in: path
      required: true
      style: simple
      schema:
        type: string
    producteligibilityid:
      name: producteligibilityid
      in: path
      required: true
      style: simple
      schema:
        type: string
    producttypeselectionid:
      name: producttypeselectionid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    ExchangeProductCustomerCombinationAssessmentRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExchangeProductCustomerCombinationAssessmentRequest'
      required: true
    ExecuteProductCustomerCombinationAssessmentRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExecuteProductCustomerCombinationAssessmentRequest'
      required: true
    GrantProductCustomerCombinationAssessmentRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GrantProductCustomerCombinationAssessmentRequest'
      required: true
    EvaluateProductCustomerCombinationAssessmentRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EvaluateProductCustomerCombinationAssessmentRequest'
      required: true
    RequestProductCustomerCombinationAssessmentRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestProductCustomerCombinationAssessmentRequest'
      required: true
    UpdateProductCustomerCombinationAssessmentRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateProductCustomerCombinationAssessmentRequest'
      required: true
    BankandCampaignAlignment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BankandCampaignAlignment'
      required: true
    EvaluateContextCriteriaRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EvaluateContextCriteriaRequest'
      required: true
    EvaluateProductEligibilityRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EvaluateProductEligibilityRequest'
      required: true
    EvaluateProductTypeSelectionRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EvaluateProductTypeSelectionRequest'
      required: true
    UpdateContextCriteriaRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateContextCriteriaRequest'
      required: true
    UpdateProductEligibilityRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateProductEligibilityRequest'
      required: true
    UpdateProductTypeSelectionRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateProductTypeSelectionRequest'
      required: true