openapi: 3.0.1
info:
  title: Counterparty Administration
  description: This Service Domain maintains key counterparty reference information used in the clearing and settlement of wholesale trading
  contact:
    name: BIAN
    url: https://bian.org
  version: 12.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/CounterpartyAdministration/12.0.0
paths:
  '/CounterpartyAdministration/{counterpartyadministrationid}/Control':
    put:
      tags:
        - CR - CounterpartyDirectoryEntry
      summary: Control Counterparty Directory Entry
      description: Control Counterparty Directory Entry
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/counterpartyadministrationid'
      requestBody:
        $ref: '#/components/requestBodies/ControlCounterpartyDirectoryEntryRequest'
      responses:
        '200':
          $ref: '#/components/responses/ControlCounterpartyDirectoryEntryResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CounterpartyAdministration/{counterpartyadministrationid}/Execute':
    put:
      tags:
        - CR - CounterpartyDirectoryEntry
      summary: Execute Counterparty Directory Entry
      description: Execute Counterparty Directory Entry
      operationId: Execute
      parameters:
        - $ref: '#/components/parameters/counterpartyadministrationid'
      requestBody:
        $ref: '#/components/requestBodies/ExecuteCounterpartyDirectoryEntryRequest'
      responses:
        '200':
          $ref: '#/components/responses/ExecuteCounterpartyDirectoryEntryResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CounterpartyAdministration/{counterpartyadministrationid}/Notify':
    get:
      tags:
        - CR - CounterpartyDirectoryEntry
      summary: Notify Counterparty Directory Entry
      description: Notify Counterparty Directory Entry
      operationId: Notify
      parameters:
        - $ref: '#/components/parameters/counterpartyadministrationid'
      responses:
        '200':
          $ref: '#/components/responses/NotifyCounterpartyDirectoryEntryResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /CounterpartyAdministration/Register:
    post:
      tags:
        - CR - CounterpartyDirectoryEntry
      summary: Register Counterparty Directory Entry
      description: Register Counterparty Directory Entry
      operationId: Register
      requestBody:
        $ref: '#/components/requestBodies/RegisterCounterpartyDirectoryEntryRequest'
      responses:
        '200':
          $ref: '#/components/responses/RegisterCounterpartyDirectoryEntryResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CounterpartyAdministration/{counterpartyadministrationid}/Request':
    put:
      tags:
        - CR - CounterpartyDirectoryEntry
      summary: Request Counterparty Directory Entry
      description: Request Counterparty Directory Entry
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/counterpartyadministrationid'
      requestBody:
        $ref: '#/components/requestBodies/RequestCounterpartyDirectoryEntryRequest'
      responses:
        '200':
          $ref: '#/components/responses/RequestCounterpartyDirectoryEntryResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CounterpartyAdministration/{counterpartyadministrationid}/Retrieve':
    get:
      tags:
        - CR - CounterpartyDirectoryEntry
      summary: Retrieve Counterparty Directory Entry
      description: Retrieve Counterparty Directory Entry
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/counterpartyadministrationid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveCounterpartyDirectoryEntryResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CounterpartyAdministration/{counterpartyadministrationid}/Update':
    put:
      tags:
        - CR - CounterpartyDirectoryEntry
      summary: Update Counterparty Directory Entry
      description: Update Counterparty Directory Entry
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/counterpartyadministrationid'
      requestBody:
        $ref: '#/components/requestBodies/UpdateCounterpartyDirectoryEntryRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateCounterpartyDirectoryEntryResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CounterpartyAdministration/{counterpartyadministrationid}/CounterpartyEntityReference/{counterpartyentityreferenceid}/Execute':
    put:
      tags:
        - BQ - CounterpartyEntityReference
      summary: Execute Counterparty Entity Reference property
      description: Execute Counterparty Entity Reference property
      operationId: ExecuteCounterpartyEntityReference
      parameters:
        - $ref: '#/components/parameters/counterpartyadministrationid'
        - $ref: '#/components/parameters/counterpartyentityreferenceid'
      requestBody:
        $ref: '#/components/requestBodies/CounterpartyEntityReference'
      responses:
        '200':
          $ref: '#/components/responses/CounterpartyEntityReference'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CounterpartyAdministration/{counterpartyadministrationid}/CounterpartyPermittedTransaction/{counterpartypermittedtransactionid}/Execute':
    put:
      tags:
        - BQ - CounterpartyPermittedTransaction
      summary: Execute Counterparty Permitted Transaction property
      description: Execute Counterparty Permitted Transaction property
      operationId: ExecuteCounterpartyPermittedTransaction
      parameters:
        - $ref: '#/components/parameters/counterpartyadministrationid'
        - $ref: '#/components/parameters/counterpartypermittedtransactionid'
      requestBody:
        $ref: '#/components/requestBodies/CounterpartyPermittedTransaction'
      responses:
        '200':
          $ref: '#/components/responses/CounterpartyPermittedTransaction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CounterpartyAdministration/{counterpartyadministrationid}/CounterpartyEntityReference/{counterpartyentityreferenceid}/Notify':
    get:
      tags:
        - BQ - CounterpartyEntityReference
      summary: Notify Counterparty Entity Reference property
      description: Notify Counterparty Entity Reference property
      operationId: NotifyCounterpartyEntityReference
      parameters:
        - $ref: '#/components/parameters/counterpartyadministrationid'
        - $ref: '#/components/parameters/counterpartyentityreferenceid'
      responses:
        '200':
          $ref: '#/components/responses/CounterpartyEntityReference'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CounterpartyAdministration/{counterpartyadministrationid}/CounterpartyPermittedTransaction/{counterpartypermittedtransactionid}/Notify':
    get:
      tags:
        - BQ - CounterpartyPermittedTransaction
      summary: Notify Counterparty Permitted Transaction property
      description: Notify Counterparty Permitted Transaction property
      operationId: NotifyCounterpartyPermittedTransaction
      parameters:
        - $ref: '#/components/parameters/counterpartyadministrationid'
        - $ref: '#/components/parameters/counterpartypermittedtransactionid'
      responses:
        '200':
          $ref: '#/components/responses/CounterpartyPermittedTransaction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CounterpartyAdministration/{counterpartyadministrationid}/CounterpartyEntityReference/Register':
    post:
      tags:
        - BQ - CounterpartyEntityReference
      summary: Register Counterparty Entity Reference property
      description: Register Counterparty Entity Reference property
      operationId: RegisterCounterpartyEntityReference
      parameters:
        - $ref: '#/components/parameters/counterpartyadministrationid'
      requestBody:
        $ref: '#/components/requestBodies/CounterpartyEntityReference'
      responses:
        '200':
          $ref: '#/components/responses/CounterpartyEntityReference'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CounterpartyAdministration/{counterpartyadministrationid}/CounterpartyPermittedTransaction/Register':
    post:
      tags:
        - BQ - CounterpartyPermittedTransaction
      summary: Register Counterparty Permitted Transaction property
      description: Register Counterparty Permitted Transaction property
      operationId: RegisterCounterpartyPermittedTransaction
      parameters:
        - $ref: '#/components/parameters/counterpartyadministrationid'
      requestBody:
        $ref: '#/components/requestBodies/CounterpartyPermittedTransaction'
      responses:
        '200':
          $ref: '#/components/responses/CounterpartyPermittedTransaction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CounterpartyAdministration/{counterpartyadministrationid}/CounterpartyEntityReference/{counterpartyentityreferenceid}/Request':
    put:
      tags:
        - BQ - CounterpartyEntityReference
      summary: Request Counterparty Entity Reference property
      description: Request Counterparty Entity Reference property
      operationId: RequestCounterpartyEntityReference
      parameters:
        - $ref: '#/components/parameters/counterpartyadministrationid'
        - $ref: '#/components/parameters/counterpartyentityreferenceid'
      requestBody:
        $ref: '#/components/requestBodies/CounterpartyEntityReference'
      responses:
        '200':
          $ref: '#/components/responses/CounterpartyEntityReference'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CounterpartyAdministration/{counterpartyadministrationid}/CounterpartyPermittedTransaction/{counterpartypermittedtransactionid}/Request':
    put:
      tags:
        - BQ - CounterpartyPermittedTransaction
      summary: Request Counterparty Permitted Transaction property
      description: Request Counterparty Permitted Transaction property
      operationId: RequestCounterpartyPermittedTransaction
      parameters:
        - $ref: '#/components/parameters/counterpartyadministrationid'
        - $ref: '#/components/parameters/counterpartypermittedtransactionid'
      requestBody:
        $ref: '#/components/requestBodies/CounterpartyPermittedTransaction'
      responses:
        '200':
          $ref: '#/components/responses/CounterpartyPermittedTransaction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CounterpartyAdministration/{counterpartyadministrationid}/CounterpartyEntityReference/{counterpartyentityreferenceid}/Retrieve':
    get:
      tags:
        - BQ - CounterpartyEntityReference
      summary: Retrieve Counterparty Entity Reference property
      description: Retrieve Counterparty Entity Reference property
      operationId: RetrieveCounterpartyEntityReference
      parameters:
        - $ref: '#/components/parameters/counterpartyadministrationid'
        - $ref: '#/components/parameters/counterpartyentityreferenceid'
      responses:
        '200':
          $ref: '#/components/responses/CounterpartyEntityReference'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CounterpartyAdministration/{counterpartyadministrationid}/CounterpartyPermittedTransaction/{counterpartypermittedtransactionid}/Retrieve':
    get:
      tags:
        - BQ - CounterpartyPermittedTransaction
      summary: Retrieve Counterparty Permitted Transaction property
      description: Retrieve Counterparty Permitted Transaction property
      operationId: RetrieveCounterpartyPermittedTransaction
      parameters:
        - $ref: '#/components/parameters/counterpartyadministrationid'
        - $ref: '#/components/parameters/counterpartypermittedtransactionid'
      responses:
        '200':
          $ref: '#/components/responses/CounterpartyPermittedTransaction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CounterpartyAdministration/{counterpartyadministrationid}/CounterpartyEntityReference/{counterpartyentityreferenceid}/Update':
    put:
      tags:
        - BQ - CounterpartyEntityReference
      summary: Update Counterparty Entity Reference property
      description: Update Counterparty Entity Reference property
      operationId: UpdateCounterpartyEntityReference
      parameters:
        - $ref: '#/components/parameters/counterpartyadministrationid'
        - $ref: '#/components/parameters/counterpartyentityreferenceid'
      requestBody:
        $ref: '#/components/requestBodies/CounterpartyEntityReference'
      responses:
        '200':
          $ref: '#/components/responses/CounterpartyEntityReference'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CounterpartyAdministration/{counterpartyadministrationid}/CounterpartyPermittedTransaction/{counterpartypermittedtransactionid}/Update':
    put:
      tags:
        - BQ - CounterpartyPermittedTransaction
      summary: Update Counterparty Permitted Transaction property
      description: Update Counterparty Permitted Transaction property
      operationId: UpdateCounterpartyPermittedTransaction
      parameters:
        - $ref: '#/components/parameters/counterpartyadministrationid'
        - $ref: '#/components/parameters/counterpartypermittedtransactionid'
      requestBody:
        $ref: '#/components/requestBodies/CounterpartyPermittedTransaction'
      responses:
        '200':
          $ref: '#/components/responses/CounterpartyPermittedTransaction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    condition:
      type: object
      properties:
        Condition:
          type: string
          description: "Condition is a premise upon which the fulfillment of an agreement depends \n\nGeneral and special arrangements, provisions, requirements, rules, specifications, and standards that form an integral part of an agreement or contract.\n\nRead more: http://www.businessdictionary.com/definition/terms-and-conditions.html\n\n"
          format: class
      description: The required status/situation before the property is valid/meaningful
    schedule:
      type: object
      properties:
        ScheduleType:
          type: string
          description: ''
          format: string
      description: "The timetable to capture and maintain Counterparty Directory Entry ||\r\n|"
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: "The configuration of Counterparty Directory Entry ||\r\n|"
    businessservicetypevalues:
      type: object
      properties:
        Businessservicetypevalues:
          type: string
          description: ''
          format: enumeration
      description: ''
    businessservice:
      type: object
      properties:
        BusinessServiceType:
          $ref: '#/components/schemas/businessservicetypevalues'
      description: The Counterparty Entity Reference property specific  Business Service
    directoryentrydatetypevalues:
      enum:
        - OpenDate
        - RefreshDate
      type: string
      description: ">\r\n* `OpenDate` - \r\n* `RefreshDate` - \r\n"
    date:
      type: object
      properties:
        DateContent:
          type: string
          description: ''
          format: string
      description: ''
    datetime:
      type: object
      properties:
        DateTimeContent:
          type: string
          description: ''
          format: string
        TimeZoneCode:
          type: string
          description: ''
          format: string
        DaylightSavingIndicator:
          type: string
          description: ''
          format: string
      description: Date and time at which the status was assigned.
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: Period of time during which the status is valid.
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: "Name by which a party is known and which is usually used to identify that party. (ISO20022)\n"
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    partyidentificationtypevalues:
      enum:
        - Taxidentificationnumber
        - Nationalregistrationnumber
        - Registrationauthorityidentification
        - LEI(LegalEntityIdentifier)
        - Alienregistrationnumber
        - Passportnumber
        - Taxexemptidentificationnumber
        - Corporateidentification
        - Driverlicensenumber
        - Foreigninvestmentidentitynumber
        - Socialsecuritynumber
        - Identitycardnumber
        - Concat
        - Nationalregistrationidentificationnumber
      type: string
      description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC.\r\n"
    value:
      type: object
      properties:
        Value:
          type: string
          description: "Data or set of data \n\n- A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)"
          format: datatype
      description: ''
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    partylegalstructuretypevalues:
      enum:
        - Individual
        - CommunityInterestCompany
        - CharitableIncorporatedOrganisation
        - Co-Operative
        - Charity
        - GeneralPartnership
        - LimitedLiabilityPartnership
        - ScottishLimitedPartnership
        - LimitedPartnership
        - PrivateLimitedCompany
        - PublicLimitedCompany
        - Sole(SoleTrader)
      type: string
      description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - \r\n"
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
        PartyLegalStructureType:
          $ref: '#/components/schemas/partylegalstructuretypevalues'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: " ||\r\n|"
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: The status of Counterparty Directory Entry Status |Status  (https://www.iso20022.org/standardsrepository/type/Status)|Standard|ISO20022 BM ()
    directoryentry:
      type: object
      properties:
        DirectoryEntryDateType:
          $ref: '#/components/schemas/directoryentrydatetypevalues'
        DirectoryEntryDate:
          $ref: '#/components/schemas/date'
        DirectoryEntryStatus:
          $ref: '#/components/schemas/status'
      description: "An unique reference to an item or an occurrence of Counterparty Directory Entry ||\r\n|"
    CounterpartyEntityReference:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        VersionNumber:
          $ref: '#/components/schemas/text'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        CounterpartyDirectoryEntryReference:
          $ref: '#/components/schemas/directoryentry'
        CounterpartyEntityReferencepropertyReference:
          type: string
          description: Reference to Counterparty Entity Reference property
          format: object
        CounterpartyEntityReferencepropertyType:
          $ref: '#/components/schemas/text'
      description: The Counterparty Entity Reference property properties that represent a discrete aspect of the Counterparty Entity Reference property
    workproducttypevalues:
      enum:
        - Document
        - WorkingPaper
        - ActivityLog
        - Form
        - File
        - MeetingSchedule
        - MeetingMinute
      type: string
      description: ">\r\n* `Document` - \r\n* `WorkingPaper` - \r\n* `ActivityLog` - \r\n* `Form` - \r\n* `File` - File of consolidated notes, evaluations and recommendations for the work task\r\n* `MeetingSchedule` - \r\n* `MeetingMinute` - \r\n"
    workproduct:
      type: object
      properties:
        WorkProductType:
          $ref: '#/components/schemas/workproducttypevalues'
        WorkProductIdentifoication:
          type: string
          description: ''
          format: string
      description: ''
    CounterpartyAdministrationOutcome:
      type: object
      properties:
        CounterpartyAdministrationEntry:
          $ref: '#/components/schemas/directoryentry'
        CounterpartyAdministrationWorkProduct:
          $ref: '#/components/schemas/workproduct'
      description: The Counterparty Entity Reference property properties that represent a discrete aspect of the Counterparty Entity Reference property
    CounterpartyPermittedTransaction:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        VersionNumber:
          $ref: '#/components/schemas/text'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        CounterpartyDirectoryEntryReference:
          $ref: '#/components/schemas/directoryentry'
        CounterpartyPermittedTransactionpropertyReference:
          type: string
          description: Reference to Counterparty Permitted Transaction property
          format: object
        CounterpartyPermittedTransactionpropertyType:
          $ref: '#/components/schemas/text'
      description: The Counterparty Entity Reference property properties that represent a discrete aspect of the Counterparty Entity Reference property
    log:
      type: object
      properties:
        LogType:
          type: string
          description: ''
          format: string
        LogPeriod:
          type: string
          description: ''
          format: string
        LogDate:
          type: string
          description: Key dates associated with the log (e.g. start time).
          format: string
        LogIdentification:
          type: string
          description: ''
          format: string
      description: "Reference to the log of (update) ativities/events of Counterparty Directory Entry ||\r\n|"
    agreementtypevalues:
      enum:
        - CustomerAgreement
        - SupplierAgreement
        - BrokerAgreement
        - SalesAgreement
        - PurchaseAgreement
        - MaintenanceAgreement
        - ProductAgreement
        - ProductSalesAgreement
        - ResourceAgreement
      type: string
      description: ">\r\n* `CustomerAgreement` - \r\n* `SupplierAgreement` - \r\n* `BrokerAgreement` - \r\n* `SalesAgreement` - \r\n* `PurchaseAgreement` - \r\n* `MaintenanceAgreement` - \r\n* `ProductAgreement` - \r\n* `ProductSalesAgreement` - \r\n* `ResourceAgreement` - \r\n"
    agreementlifecyclestatustypevalues:
      enum:
        - Offered
        - Confirmed
        - Completed
        - Signed
        - Terminated
        - Rejected
      type: string
      description: ">\r\n* `Offered` - \r\n* `Confirmed` - \r\n* `Completed` - \r\n* `Signed` - \r\n* `Terminated` - \r\n* `Rejected` - \r\n"
    agreementlifecyclestatus:
      type: object
      properties:
        AgreementLifecycleStatus:
          $ref: '#/components/schemas/status'
        AgreementLifecycleStatusType:
          $ref: '#/components/schemas/agreementlifecyclestatustypevalues'
      description: 'A characteristic of agreement which refers to the LifecycleStatus of agreement (e.g., potential, offered, confirmed, completed, signed, terminated).'
    agreement:
      type: object
      properties:
        AgreementSignedDate:
          $ref: '#/components/schemas/date'
        AgreementType:
          $ref: '#/components/schemas/agreementtypevalues'
        AgreementValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        AgreementVersion:
          $ref: '#/components/schemas/text'
        AgreementStatus:
          $ref: '#/components/schemas/agreementlifecyclestatus'
        AgreementSubjectMatter:
          $ref: '#/components/schemas/text'
        AgreementIdentification:
          $ref: '#/components/schemas/identifier'
        AgreementDate:
          $ref: '#/components/schemas/datetime'
        AgreementDescription:
          $ref: '#/components/schemas/text'
      description: " Agreement_x000D_\n|Agreement (https://www.iso20022.org/standardsrepository/type/Agreement)|Standard|ISO20022 BM ()"
    financialtransactiontypevalues:
      enum:
        - PricingTransaction
        - FeeTransaction
        - WithdrawalTransaction
        - DepositTransaction
        - PaymentTransaction
        - ClearingTransaction
        - SettlementTransaction
        - Reconciliationtransaction
        - Updatetransaction
        - Securitiestransaction
        - RepaymentTransaction
      type: string
      description: ">\r\n* `PricingTransaction` - \r\n* `FeeTransaction` - \r\n* `WithdrawalTransaction` - \r\n* `DepositTransaction` - \r\n* `PaymentTransaction` - \r\n* `ClearingTransaction` - \r\n* `SettlementTransaction` - \r\n* `Reconciliationtransaction` - \r\n* `Updatetransaction` - \r\n* `Securitiestransaction` - \r\n* `RepaymentTransaction` - \r\n"
    currencycode:
      type: object
      properties:
        Currencycode:
          type: string
          description: "A code identifying a currency according to ISO-4217.\nA currency is a system of money in general use in a particular country.\n\nCode allocated to a currency, by a maintenance agency, under an international identification scheme as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\". Valid currency codes are registered with the ISO 4217 Maintenance Agency, and consist of three contiguous letters. (ISO20022)\n\n"
          format: datatype
      description: ''
    amounttypevalues:
      enum:
        - Principal
        - Actual
        - Estimated
        - Maximum
        - Default
        - Replacement
        - Incremental
        - Decremental
        - Reserved
        - Available
        - Used
      type: string
      description: ">\r\n* `Principal` - \r\n* `Actual` - Actual amount.\r\n* `Estimated` - Estimated amount (the final amount could be above or below).\r\n* `Maximum` - Maximum amount (the final amount must be less or equal).\r\n* `Default` - Default amount.\r\n* `Replacement` - Replacement amount.\r\n* `Incremental` - Incremental amount for reservation.\r\n* `Decremental` - Decremental amount for reservation.\r\n* `Reserved` - Reserved or updated reserved amount for reservation.\r\n* `Available` - \r\n* `Used` - \r\n"
    amount:
      type: object
      properties:
        AmountValue:
          $ref: '#/components/schemas/value'
        AmountCurrency:
          $ref: '#/components/schemas/currencycode'
        DecimalPointPosition:
          type: string
          description: "Decimal point position starts calulating from the right\n"
          format: string
        AmountType:
          $ref: '#/components/schemas/amounttypevalues'
      description: ''
    accountstatustypevalues:
      enum:
        - Enabled
        - Disabled
        - Deleted
        - Proforma
        - Pending
      type: string
      description: ">\r\n* `Enabled` - Account can be used for its intended purpose.\r\n* `Disabled` - Account cannot be used for its intended purpose, either temporarily or permanently.\r\n* `Deleted` - Account cannot be used any longer.\r\n* `Proforma` - Account is temporary and can be partially used for its intended purpose. The account will be fully available for use when the account servicer has received all relevant documents.\r\n* `Pending` - Account change is pending approval.\r\n"
    accountstatus:
      type: object
      properties:
        AccountStatus:
          $ref: '#/components/schemas/status'
        AccountStatusType:
          $ref: '#/components/schemas/accountstatustypevalues'
      description: "A characteristic of account which refers to the LifecycleStatus of account like opened, closed, blocked, etc.\n\nSpecifies the current state of an account. (ISO20022)"
    accountidentificationtypevalues:
      enum:
        - BBAN
        - IBAN
        - UPIC
        - AccountNumber
        - PAN
        - Paym
        - Wallet
      type: string
      description: ">\r\n* `BBAN` - Basic Bank Account Number (BBAN) - identifier used nationally by financial institutions, ie, in individual countries, generally as part of a National Account Numbering Scheme(s), to uniquely identify the account of a customer. (ISO20022)\n\n.\r\n* `IBAN` - International Bank Account Number (IBAN) - identifier used internationally by financial institutions to uniquely identify the account of a customer. Further specifications of the format and content of the IBAN can be found in the standard ISO 13616 \"Banking and related financial services - International Bank Account Number (IBAN)\" version 1997-10-01, or later revisions. (ISO20022)\n\nAn identifier used internationally by financial institutions to uniquely identify the account of a customer at a financial institution, as described in the latest edition of the international standard ISO 13616. \"Banking and related financial services - International Bank Account Number (IBAN)\". (OBExternalAccountIdentification4Code)\r\n* `UPIC` - Universal Payment Identification Code (UPIC) - identifier used by the New York Clearing House to mask confidential data, such as bank accounts and bank routing numbers. UPIC numbers remain with business customers, regardless of banking relationship changes. (ISO20022)\r\n* `AccountNumber` - String of characters (mainly numbers) used to identify an account.(ISO20022)\n\nSort Code and Account Number - identifier scheme used in the UK by financial institutions to identify the account of a customer. The identifier is the concatenation of the 6 digit UK sort code and 8 digit account number. (OBExternalAccountIdentification4Code)\nThe regular expression for this identifier is: ^[0-9]{6}[0-9]{8}$\r\n* `PAN` - Primary Account Number - identifier scheme used to identify a card account. (OBExternalAccountIdentification4Code)\r\n* `Paym` - Paym Scheme to make payments via mobile (OBExternalAccountIdentification4Code)\r\n* `Wallet` - A primary and unique account identifier used to identify a wallet.\nAn ASPSP must document on their developer portal, the payment methods that supports this account identifier.(OBExternalAccountIdentification4Code)\r\n"
    accountidentification:
      type: object
      properties:
        AccountIdentificationType:
          $ref: '#/components/schemas/accountidentificationtypevalues'
        AccountIdentification:
          $ref: '#/components/schemas/identifier'
      description: The identifier of account like Account Number.
    accountdatetypevalues:
      enum:
        - OpeningDate
        - ClosingDate
        - BlockingDate
        - MaturityDate
        - LiveDate
      type: string
      description: ">\r\n* `OpeningDate` - Date on which the account and related basic services are effectively operational for the account owner. (ISO20022)\r\n* `ClosingDate` - Date on which the account and related services cease effectively to be operational for the account owner. (ISO20022)\r\n* `BlockingDate` - \r\n* `MaturityDate` - Maturity date for the account.\r\n* `LiveDate` - \r\n"
    accountdate:
      type: object
      properties:
        AccountDateType:
          $ref: '#/components/schemas/accountdatetypevalues'
        AccountDate:
          $ref: '#/components/schemas/datetime'
      description: 'A characteristic of account which refers to LifecycleDate of account (e.g., ClosingDate, OpeningDate, LiveDate, etc.) '
    accounttypevalues:
      enum:
        - DebitAccount
        - CreditAccount
        - VostroAcount
        - NostroAccount
        - PaymentAccount
        - SettlementAccount
        - SavingAccount
        - CurrentAccount
        - CashAccount
        - LoanAccount
      type: string
      description: ">\r\n* `DebitAccount` - \r\n* `CreditAccount` - \r\n* `VostroAcount` - In correspondent banking, an account held by one bank on behalf of another bank (the customer bank); the customer bank regards this account as its nostro account. (ECB)\r\n* `NostroAccount` - In correspondent banking, an account held by a customer bank on the books of another bank acting as a service provider. The other bank regards this account as a loro account. (ECB)\r\n* `PaymentAccount` - \r\n* `SettlementAccount` - A specific purpose account used to post debit and credit entries as a result of the transaction. (ISO20022)\n\nAccount which is used for settlement. (ISO20022)\r\n* `SavingAccount` - \r\n* `CurrentAccount` - \r\n* `CashAccount` - \r\n* `LoanAccount` - \r\n"
    accounttype:
      type: object
      properties:
        AccountType:
          $ref: '#/components/schemas/accounttypevalues'
        AccountTypeName:
          $ref: '#/components/schemas/name'
      description: 'Specifies the category of account like payment account, loan account, cash account, securities account, etc. '
    balancetypevalues:
      enum:
        - Openingbalance
        - Closingbalance
        - Currentbalance
        - Availablebalance
        - Ledgerbalance
        - Reservebalance
        - Freebalance
        - Principalbalance
      type: string
      description: ">\r\n* `Openingbalance` - Book balance of the account at the beginning of the account servicer's business day. It always equals the closing book balance from the previous business day. Note: the available balance at the beginning of the account servicer's business day may be different from the closing book balance from the previous business day. (ISO20022)\r\n* `Closingbalance` - Balance of the account at the end of the account servicer's business day. It is the sum of the opening balance at the beginning of the day and all entries booked to the account during the account servicer's business day. (ISO20022)\r\n* `Currentbalance` - Balance of the account at a precise moment in time. (ISO20022)\r\n* `Availablebalance` - Balance of money or securities that is at the disposal of the account owner on the date specified. (ISO20022)\r\n* `Ledgerbalance` - Ledger balance refers to posted transactions (e.g. limit authorisation amount - posted transactions). (ISO20022)\r\n* `Reservebalance` - \r\n* `Freebalance` - \r\n* `Principalbalance` - \r\n"
    debitcreditindicatortvalues:
      enum:
        - Debit
        - Credit
      type: string
      description: ">\r\n* `Debit` - Transaction is a debt entry\r\n* `Credit` - Transaction is a credit entry\r\n"
    accountbalance:
      type: object
      properties:
        BalanceAmount:
          $ref: '#/components/schemas/amount'
        BalanceType:
          $ref: '#/components/schemas/balancetypevalues'
        BalanceDate:
          $ref: '#/components/schemas/datetime'
        BalanceIndicator:
          $ref: '#/components/schemas/debitcreditindicatortvalues'
      description: "The state of the obligations managed on the account, the result of all entries on the account.\n\nNumerical representation of the net increases and decreases in an account at a specific point in time. (ISO20022)\n\nBanking: Amount available in an account for withdrawal or use.\nRead more: http://www.businessdictionary.com/definition/balance.html\n\nBookkeeping: Difference between the debit and credit sides of an account.\nRead more: http://www.businessdictionary.com/definition/balance.html"
    currencytypevalues:
      enum:
        - BaseCurrency
        - ReportingCurrency
        - SecondaryCurrency
        - TransferCurrency
      type: string
      description: ">\r\n* `BaseCurrency` - Base currency of the account. (ISO20022)\n\r\n* `ReportingCurrency` - Currency used to calculate and report the balance and related entries of an account. (ISO20022)\n\r\n* `SecondaryCurrency` - \r\n* `TransferCurrency` - Currency of the amount to be transferred which may be different from the currency of the debtor's account. (ISO20022)\r\n"
    accountcurrency:
      type: object
      properties:
        AccountCurrencyType:
          $ref: '#/components/schemas/currencytypevalues'
        AccountCurrency:
          $ref: '#/components/schemas/currencycode'
      description: ''
    account:
      type: object
      properties:
        AccountStatus:
          $ref: '#/components/schemas/accountstatus'
        AccountIdentification:
          $ref: '#/components/schemas/accountidentification'
        AccountDate:
          $ref: '#/components/schemas/accountdate'
        AccountType:
          $ref: '#/components/schemas/accounttype'
        AccountPurpose:
          $ref: '#/components/schemas/text'
        AccountBalance:
          $ref: '#/components/schemas/accountbalance'
        AccountCurrency:
          $ref: '#/components/schemas/accountcurrency'
        AccountDescription:
          $ref: '#/components/schemas/text'
        AccountName:
          $ref: '#/components/schemas/name'
      description: ''
    financialtransaction:
      type: object
      properties:
        FinancialTransactionType:
          $ref: '#/components/schemas/financialtransactiontypevalues'
        FinancialTransactionCurrency:
          $ref: '#/components/schemas/currencycode'
        FinancialTransactionAmount:
          $ref: '#/components/schemas/amount'
        FinancialTransactionFromAccount:
          $ref: '#/components/schemas/account'
        FinancialTransactionTargetAccount:
          $ref: '#/components/schemas/account'
        FinancialTransactionDateTime:
          $ref: '#/components/schemas/datetime'
      description: " ||\r\n|"
    CounterpartyDirectoryEntry:
      type: object
      properties:
        CounterpartyDirectoryEntryDescription:
          $ref: '#/components/schemas/text'
        CounterpartyDirectoryEntrySchedule:
          $ref: '#/components/schemas/schedule'
        CounterpartyDirectoryEntryVersion:
          type: string
          description: The version of Counterparty Directory Entry
          format: number
        CounterpartyDirectoryEntryStatus:
          $ref: '#/components/schemas/status'
        CounterpartyDirectoryEntryUsageLog:
          $ref: '#/components/schemas/log'
        CounterpartyDirectoryEntryUpdateLog:
          $ref: '#/components/schemas/log'
        CounterpartyDirectoryEntryServiceConfiguration:
          $ref: '#/components/schemas/text'
        CounterpartyDirectoryEntryReference:
          $ref: '#/components/schemas/directoryentry'
        ConterpartyReference:
          $ref: '#/components/schemas/involvedparty'
        AgreementReference:
          $ref: '#/components/schemas/agreement'
        FinancialTransactionReference:
          $ref: '#/components/schemas/financialtransaction'
      description: Capture and maintain reference information about some type of entitity within Counterparty Administration.
    ControlCounterpartyDirectoryEntryRequest:
      type: object
      properties:
        CounterpartyDirectoryEntry:
          type: object
          properties:
            CounterpartyDirectoryEntryDescription:
              $ref: '#/components/schemas/text'
            CounterpartyDirectoryEntrySchedule:
              $ref: '#/components/schemas/schedule'
            CounterpartyDirectoryEntryVersion:
              type: string
              description: ''
              format: number
            CounterpartyDirectoryEntryStatus:
              $ref: '#/components/schemas/status'
            CounterpartyDirectoryEntryUsageLog:
              $ref: '#/components/schemas/log'
            CounterpartyDirectoryEntryUpdateLog:
              $ref: '#/components/schemas/log'
            CounterpartyDirectoryEntryServiceConfiguration:
              $ref: '#/components/schemas/text'
            CounterpartyDirectoryEntryReference:
              $ref: '#/components/schemas/directoryentry'
      description: 'Input: Control Counterparty Directory Entry'
    ControlCounterpartyDirectoryEntryResponse:
      type: object
      properties:
        CounterpartyDirectoryEntry:
          type: object
          properties:
            CounterpartyDirectoryEntryDescription:
              $ref: '#/components/schemas/text'
            CounterpartyDirectoryEntrySchedule:
              $ref: '#/components/schemas/schedule'
            CounterpartyDirectoryEntryVersion:
              type: string
              description: ''
              format: number
            CounterpartyDirectoryEntryStatus:
              $ref: '#/components/schemas/status'
            CounterpartyDirectoryEntryUsageLog:
              $ref: '#/components/schemas/log'
            CounterpartyDirectoryEntryUpdateLog:
              $ref: '#/components/schemas/log'
            CounterpartyDirectoryEntryServiceConfiguration:
              $ref: '#/components/schemas/text'
            CounterpartyDirectoryEntryReference:
              $ref: '#/components/schemas/directoryentry'
      description: 'Output: Control Counterparty Directory Entry'
    ExecuteCounterpartyDirectoryEntryRequest:
      type: object
      properties:
        CounterpartyDirectoryEntry:
          type: object
          properties:
            CounterpartyDirectoryEntryDescription:
              $ref: '#/components/schemas/text'
            CounterpartyDirectoryEntrySchedule:
              $ref: '#/components/schemas/schedule'
            CounterpartyDirectoryEntryVersion:
              type: string
              description: ''
              format: number
            CounterpartyDirectoryEntryStatus:
              $ref: '#/components/schemas/status'
            CounterpartyDirectoryEntryUsageLog:
              $ref: '#/components/schemas/log'
            CounterpartyDirectoryEntryUpdateLog:
              $ref: '#/components/schemas/log'
            CounterpartyDirectoryEntryServiceConfiguration:
              $ref: '#/components/schemas/text'
            CounterpartyDirectoryEntryReference:
              $ref: '#/components/schemas/directoryentry'
      description: 'Input: Execute Counterparty Directory Entry'
    ExecuteCounterpartyDirectoryEntryResponse:
      type: object
      properties:
        CounterpartyDirectoryEntry:
          type: object
          properties:
            CounterpartyDirectoryEntryDescription:
              $ref: '#/components/schemas/text'
            CounterpartyDirectoryEntrySchedule:
              $ref: '#/components/schemas/schedule'
            CounterpartyDirectoryEntryVersion:
              type: string
              description: ''
              format: number
            CounterpartyDirectoryEntryStatus:
              $ref: '#/components/schemas/status'
            CounterpartyDirectoryEntryUsageLog:
              $ref: '#/components/schemas/log'
            CounterpartyDirectoryEntryUpdateLog:
              $ref: '#/components/schemas/log'
            CounterpartyDirectoryEntryServiceConfiguration:
              $ref: '#/components/schemas/text'
            CounterpartyDirectoryEntryReference:
              $ref: '#/components/schemas/directoryentry'
      description: 'Output: Execute Counterparty Directory Entry'
    NotifyCounterpartyDirectoryEntryRequest:
      type: object
      properties:
        CounterpartyDirectoryEntry:
          type: object
          properties:
            CounterpartyDirectoryEntryDescription:
              $ref: '#/components/schemas/text'
            CounterpartyDirectoryEntrySchedule:
              $ref: '#/components/schemas/schedule'
            CounterpartyDirectoryEntryVersion:
              type: string
              description: ''
              format: number
            CounterpartyDirectoryEntryStatus:
              $ref: '#/components/schemas/status'
            CounterpartyDirectoryEntryUsageLog:
              $ref: '#/components/schemas/log'
            CounterpartyDirectoryEntryUpdateLog:
              $ref: '#/components/schemas/log'
            CounterpartyDirectoryEntryServiceConfiguration:
              $ref: '#/components/schemas/text'
            CounterpartyDirectoryEntryReference:
              $ref: '#/components/schemas/directoryentry'
      description: 'Input: Notify Counterparty Directory Entry'
    NotifyCounterpartyDirectoryEntryResponse:
      type: object
      properties:
        CounterpartyDirectoryEntry:
          type: object
          properties:
            CounterpartyDirectoryEntryDescription:
              $ref: '#/components/schemas/text'
            CounterpartyDirectoryEntrySchedule:
              $ref: '#/components/schemas/schedule'
            CounterpartyDirectoryEntryVersion:
              type: string
              description: ''
              format: number
            CounterpartyDirectoryEntryStatus:
              $ref: '#/components/schemas/status'
            CounterpartyDirectoryEntryUsageLog:
              $ref: '#/components/schemas/log'
            CounterpartyDirectoryEntryUpdateLog:
              $ref: '#/components/schemas/log'
            CounterpartyDirectoryEntryServiceConfiguration:
              $ref: '#/components/schemas/text'
            CounterpartyDirectoryEntryReference:
              $ref: '#/components/schemas/directoryentry'
      description: 'Output: Notify Counterparty Directory Entry'
    RegisterCounterpartyDirectoryEntryRequest:
      type: object
      properties:
        CounterpartyDirectoryEntry:
          type: object
          properties:
            CounterpartyDirectoryEntryDescription:
              $ref: '#/components/schemas/text'
            CounterpartyDirectoryEntrySchedule:
              $ref: '#/components/schemas/schedule'
            CounterpartyDirectoryEntryVersion:
              type: string
              description: ''
              format: number
            CounterpartyDirectoryEntryStatus:
              $ref: '#/components/schemas/status'
            CounterpartyDirectoryEntryUsageLog:
              $ref: '#/components/schemas/log'
            CounterpartyDirectoryEntryUpdateLog:
              $ref: '#/components/schemas/log'
            CounterpartyDirectoryEntryServiceConfiguration:
              $ref: '#/components/schemas/text'
            CounterpartyDirectoryEntryReference:
              $ref: '#/components/schemas/directoryentry'
      description: 'Input: Register Counterparty Directory Entry'
    RegisterCounterpartyDirectoryEntryResponse:
      type: object
      properties:
        CounterpartyDirectoryEntry:
          type: object
          properties:
            CounterpartyDirectoryEntryDescription:
              $ref: '#/components/schemas/text'
            CounterpartyDirectoryEntrySchedule:
              $ref: '#/components/schemas/schedule'
            CounterpartyDirectoryEntryVersion:
              type: string
              description: ''
              format: number
            CounterpartyDirectoryEntryStatus:
              $ref: '#/components/schemas/status'
            CounterpartyDirectoryEntryUsageLog:
              $ref: '#/components/schemas/log'
            CounterpartyDirectoryEntryUpdateLog:
              $ref: '#/components/schemas/log'
            CounterpartyDirectoryEntryServiceConfiguration:
              $ref: '#/components/schemas/text'
            CounterpartyDirectoryEntryReference:
              $ref: '#/components/schemas/directoryentry'
      description: 'Output: Register Counterparty Directory Entry'
    RequestCounterpartyDirectoryEntryRequest:
      type: object
      properties:
        CounterpartyDirectoryEntry:
          type: object
          properties:
            CounterpartyDirectoryEntryDescription:
              $ref: '#/components/schemas/text'
            CounterpartyDirectoryEntrySchedule:
              $ref: '#/components/schemas/schedule'
            CounterpartyDirectoryEntryVersion:
              type: string
              description: ''
              format: number
            CounterpartyDirectoryEntryStatus:
              $ref: '#/components/schemas/status'
            CounterpartyDirectoryEntryUsageLog:
              $ref: '#/components/schemas/log'
            CounterpartyDirectoryEntryUpdateLog:
              $ref: '#/components/schemas/log'
            CounterpartyDirectoryEntryServiceConfiguration:
              $ref: '#/components/schemas/text'
            CounterpartyDirectoryEntryReference:
              $ref: '#/components/schemas/directoryentry'
      description: 'Input: Request Counterparty Directory Entry'
    RequestCounterpartyDirectoryEntryResponse:
      type: object
      properties:
        CounterpartyDirectoryEntry:
          type: object
          properties:
            CounterpartyDirectoryEntryDescription:
              $ref: '#/components/schemas/text'
            CounterpartyDirectoryEntrySchedule:
              $ref: '#/components/schemas/schedule'
            CounterpartyDirectoryEntryVersion:
              type: string
              description: ''
              format: number
            CounterpartyDirectoryEntryStatus:
              $ref: '#/components/schemas/status'
            CounterpartyDirectoryEntryUsageLog:
              $ref: '#/components/schemas/log'
            CounterpartyDirectoryEntryUpdateLog:
              $ref: '#/components/schemas/log'
            CounterpartyDirectoryEntryServiceConfiguration:
              $ref: '#/components/schemas/text'
            CounterpartyDirectoryEntryReference:
              $ref: '#/components/schemas/directoryentry'
      description: 'Output: Request Counterparty Directory Entry'
    RetrieveCounterpartyDirectoryEntryRequest:
      type: object
      properties:
        CounterpartyDirectoryEntry:
          type: object
          properties:
            CounterpartyDirectoryEntryDescription:
              $ref: '#/components/schemas/text'
            CounterpartyDirectoryEntrySchedule:
              $ref: '#/components/schemas/schedule'
            CounterpartyDirectoryEntryVersion:
              type: string
              description: ''
              format: number
            CounterpartyDirectoryEntryStatus:
              $ref: '#/components/schemas/status'
            CounterpartyDirectoryEntryUsageLog:
              $ref: '#/components/schemas/log'
            CounterpartyDirectoryEntryUpdateLog:
              $ref: '#/components/schemas/log'
            CounterpartyDirectoryEntryServiceConfiguration:
              $ref: '#/components/schemas/text'
            CounterpartyDirectoryEntryReference:
              $ref: '#/components/schemas/directoryentry'
      description: 'Input: Retrieve Counterparty Directory Entry'
    RetrieveCounterpartyDirectoryEntryResponse:
      type: object
      properties:
        CounterpartyDirectoryEntry:
          type: object
          properties:
            CounterpartyDirectoryEntryDescription:
              $ref: '#/components/schemas/text'
            CounterpartyDirectoryEntrySchedule:
              $ref: '#/components/schemas/schedule'
            CounterpartyDirectoryEntryVersion:
              type: string
              description: ''
              format: number
            CounterpartyDirectoryEntryStatus:
              $ref: '#/components/schemas/status'
            CounterpartyDirectoryEntryUsageLog:
              $ref: '#/components/schemas/log'
            CounterpartyDirectoryEntryUpdateLog:
              $ref: '#/components/schemas/log'
            CounterpartyDirectoryEntryServiceConfiguration:
              $ref: '#/components/schemas/text'
            CounterpartyDirectoryEntryReference:
              $ref: '#/components/schemas/directoryentry'
      description: 'Output: Retrieve Counterparty Directory Entry'
    UpdateCounterpartyDirectoryEntryRequest:
      type: object
      properties:
        CounterpartyDirectoryEntry:
          type: object
          properties:
            CounterpartyDirectoryEntryDescription:
              $ref: '#/components/schemas/text'
            CounterpartyDirectoryEntrySchedule:
              $ref: '#/components/schemas/schedule'
            CounterpartyDirectoryEntryVersion:
              type: string
              description: ''
              format: number
            CounterpartyDirectoryEntryStatus:
              $ref: '#/components/schemas/status'
            CounterpartyDirectoryEntryUsageLog:
              $ref: '#/components/schemas/log'
            CounterpartyDirectoryEntryUpdateLog:
              $ref: '#/components/schemas/log'
            CounterpartyDirectoryEntryServiceConfiguration:
              $ref: '#/components/schemas/text'
            CounterpartyDirectoryEntryReference:
              $ref: '#/components/schemas/directoryentry'
      description: 'Input: Update Counterparty Directory Entry'
    UpdateCounterpartyDirectoryEntryResponse:
      type: object
      properties:
        CounterpartyDirectoryEntry:
          type: object
          properties:
            CounterpartyDirectoryEntryDescription:
              $ref: '#/components/schemas/text'
            CounterpartyDirectoryEntrySchedule:
              $ref: '#/components/schemas/schedule'
            CounterpartyDirectoryEntryVersion:
              type: string
              description: ''
              format: number
            CounterpartyDirectoryEntryStatus:
              $ref: '#/components/schemas/status'
            CounterpartyDirectoryEntryUsageLog:
              $ref: '#/components/schemas/log'
            CounterpartyDirectoryEntryUpdateLog:
              $ref: '#/components/schemas/log'
            CounterpartyDirectoryEntryServiceConfiguration:
              $ref: '#/components/schemas/text'
            CounterpartyDirectoryEntryReference:
              $ref: '#/components/schemas/directoryentry'
      description: 'Output: Update Counterparty Directory Entry'
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ControlCounterpartyDirectoryEntryResponse:
      description: ControlCounterpartyDirectoryEntryResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ControlCounterpartyDirectoryEntryResponse'
    ExecuteCounterpartyDirectoryEntryResponse:
      description: ExecuteCounterpartyDirectoryEntryResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExecuteCounterpartyDirectoryEntryResponse'
    NotifyCounterpartyDirectoryEntryResponse:
      description: NotifyCounterpartyDirectoryEntryResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotifyCounterpartyDirectoryEntryResponse'
    RegisterCounterpartyDirectoryEntryResponse:
      description: RegisterCounterpartyDirectoryEntryResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RegisterCounterpartyDirectoryEntryResponse'
    RequestCounterpartyDirectoryEntryResponse:
      description: RequestCounterpartyDirectoryEntryResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestCounterpartyDirectoryEntryResponse'
    RetrieveCounterpartyDirectoryEntryResponse:
      description: RetrieveCounterpartyDirectoryEntryResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveCounterpartyDirectoryEntryResponse'
    UpdateCounterpartyDirectoryEntryResponse:
      description: UpdateCounterpartyDirectoryEntryResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateCounterpartyDirectoryEntryResponse'
    CounterpartyEntityReference:
      description: CounterpartyEntityReference
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CounterpartyEntityReference'
    CounterpartyPermittedTransaction:
      description: CounterpartyPermittedTransaction
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CounterpartyPermittedTransaction'
  parameters:
    counterpartyadministrationid:
      name: counterpartyadministrationid
      in: path
      required: true
      style: simple
      schema:
        type: string
    counterpartyentityreferenceid:
      name: counterpartyentityreferenceid
      in: path
      required: true
      style: simple
      schema:
        type: string
    counterpartypermittedtransactionid:
      name: counterpartypermittedtransactionid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    ControlCounterpartyDirectoryEntryRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ControlCounterpartyDirectoryEntryRequest'
      required: true
    ExecuteCounterpartyDirectoryEntryRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExecuteCounterpartyDirectoryEntryRequest'
      required: true
    RegisterCounterpartyDirectoryEntryRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RegisterCounterpartyDirectoryEntryRequest'
      required: true
    RequestCounterpartyDirectoryEntryRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestCounterpartyDirectoryEntryRequest'
      required: true
    UpdateCounterpartyDirectoryEntryRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateCounterpartyDirectoryEntryRequest'
      required: true
    CounterpartyEntityReference:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CounterpartyEntityReference'
      required: true
    CounterpartyPermittedTransaction:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CounterpartyPermittedTransaction'
      required: true