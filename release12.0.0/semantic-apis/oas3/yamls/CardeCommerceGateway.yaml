openapi: 3.0.1
info:
  title: Card eCommerce Gateway
  description: 'This service domain orchestrates the processing of e-commerce transactions for authentication, authorization and capture of the financial transactions.'
  contact:
    name: BIAN
    url: https://bian.org
  version: 12.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/CardeCommerceGateway/12.0.0
paths:
  '/CardeCommerceGateway/{cardecommercegatewayid}/CardTransaction/Initiate':
    post:
      tags:
        - BQ - CardTransaction
      summary: InBQ Initiate a card transaction (initiated at merchant location)
      description: InBQ Initiate a card transaction (initiated at merchant location)
      operationId: InitiateCardTransaction
      parameters:
        - $ref: '#/components/parameters/cardecommercegatewayid'
      requestBody:
        $ref: '#/components/requestBodies/InitiateCardTransactionRequest'
      responses:
        '200':
          $ref: '#/components/responses/InitiateCardTransactionRequest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CardeCommerceGateway/{cardecommercegatewayid}/CardTransaction/{cardtransactionid}/Update':
    put:
      tags:
        - BQ - CardTransaction
      summary: UpBQ Update details of a card transaction
      description: UpBQ Update details of a card transaction
      operationId: UpdateCardTransaction
      parameters:
        - $ref: '#/components/parameters/cardecommercegatewayid'
        - $ref: '#/components/parameters/cardtransactionid'
      requestBody:
        $ref: '#/components/requestBodies/UpdateCardTransactionRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateCardTransactionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CardeCommerceGateway/{cardecommercegatewayid}/CardTransaction/{cardtransactionid}/Retrieve':
    get:
      tags:
        - BQ - CardTransaction
      summary: ReBQ Retrieve details about a card transaction
      description: ReBQ Retrieve details about a card transaction
      operationId: RetrieveCardTransaction
      parameters:
        - $ref: '#/components/parameters/cardecommercegatewayid'
        - $ref: '#/components/parameters/cardtransactionid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveCardTransactionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CardeCommerceGateway/{cardecommercegatewayid}/TransactionBatch/{transactionbatchid}/Update':
    put:
      tags:
        - BQ - TransactionBatch
      summary: UpBQ Update details of a batch of card transactions
      description: UpBQ Update details of a batch of card transactions
      operationId: UpdateTransactionBatch
      parameters:
        - $ref: '#/components/parameters/cardecommercegatewayid'
        - $ref: '#/components/parameters/transactionbatchid'
      requestBody:
        $ref: '#/components/requestBodies/UpdateTransactionBatchRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateTransactionBatchRequest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CardeCommerceGateway/{cardecommercegatewayid}/TransactionBatch/Initiate':
    post:
      tags:
        - BQ - TransactionBatch
      summary: InBQ Initiate a batch of card transaction (initiated at merchant location)
      description: InBQ Initiate a batch of card transaction (initiated at merchant location)
      operationId: InitiateTransactionBatch
      parameters:
        - $ref: '#/components/parameters/cardecommercegatewayid'
      requestBody:
        $ref: '#/components/requestBodies/InitiateTransactionBatchRequest'
      responses:
        '200':
          $ref: '#/components/responses/InitiateTransactionBatchResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CardeCommerceGateway/{cardecommercegatewayid}/TransactionBatch/{transactionbatchid}/Retrieve':
    get:
      tags:
        - BQ - TransactionBatch
      summary: ReBQ Retrieve details about a batch of card transactions
      description: ReBQ Retrieve details about a batch of card transactions
      operationId: RetrieveTransactionBatch
      parameters:
        - $ref: '#/components/parameters/cardecommercegatewayid'
        - $ref: '#/components/parameters/transactionbatchid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveTransactionBatchResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CardeCommerceGateway/{cardecommercegatewayid}/CardAuthentication/Initiate':
    post:
      tags:
        - BQ - CardAuthentication
      summary: InBQ Initiate card authentication (routed to issuing bank)
      description: InBQ Initiate card authentication (routed to issuing bank)
      operationId: InitiateCardAuthentication
      parameters:
        - $ref: '#/components/parameters/cardecommercegatewayid'
      requestBody:
        $ref: '#/components/requestBodies/InitiateCardAuthenticationRequest'
      responses:
        '200':
          $ref: '#/components/responses/InitiateCardAuthenticationRequest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CardeCommerceGateway/{cardecommercegatewayid}/CardAuthentication/{cardauthenticationid}/Update':
    put:
      tags:
        - BQ - CardAuthentication
      summary: UpBQ Update details of a card transaction used in authentication
      description: UpBQ Update details of a card transaction used in authentication
      operationId: UpdateCardAuthentication
      parameters:
        - $ref: '#/components/parameters/cardecommercegatewayid'
        - $ref: '#/components/parameters/cardauthenticationid'
      requestBody:
        $ref: '#/components/requestBodies/UpdateCardAuthenticationRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateCardAuthenticationResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CardeCommerceGateway/{cardecommercegatewayid}/CardAuthentication/{cardauthenticationid}/Retrieve':
    get:
      tags:
        - BQ - CardAuthentication
      summary: ReBQ Retrieve details about a card authentication
      description: ReBQ Retrieve details about a card authentication
      operationId: RetrieveCardAuthentication
      parameters:
        - $ref: '#/components/parameters/cardecommercegatewayid'
        - $ref: '#/components/parameters/cardauthenticationid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveCardAuthenticationResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CardeCommerceGateway/{cardecommercegatewayid}/TransactionAuthorization/Initiate':
    post:
      tags:
        - BQ - TransactionAuthorization
      summary: InBQ Initiate card transaction authorization (routed to issuing bank)
      description: InBQ Initiate card transaction authorization (routed to issuing bank)
      operationId: InitiateTransactionAuthorization
      parameters:
        - $ref: '#/components/parameters/cardecommercegatewayid'
      requestBody:
        $ref: '#/components/requestBodies/InitiateTransactionAuthorizationRequest'
      responses:
        '200':
          $ref: '#/components/responses/InitiateTransactionAuthorizationRequest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CardeCommerceGateway/{cardecommercegatewayid}/TransactionAuthorization/{transactionauthorizationid}/Update':
    put:
      tags:
        - BQ - TransactionAuthorization
      summary: UpBQ Update details of a card transaction used for authorization
      description: UpBQ Update details of a card transaction used for authorization
      operationId: UpdateTransactionAuthorization
      parameters:
        - $ref: '#/components/parameters/cardecommercegatewayid'
        - $ref: '#/components/parameters/transactionauthorizationid'
      requestBody:
        $ref: '#/components/requestBodies/UpdateTransactionAuthorizationRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateTransactionAuthorizationResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CardeCommerceGateway/{cardecommercegatewayid}/TransactionAuthorization/{transactionauthorizationid}/Retrieve':
    get:
      tags:
        - BQ - TransactionAuthorization
      summary: ReBQ Retrieve details about a card transaction authorization
      description: ReBQ Retrieve details about a card transaction authorization
      operationId: RetrieveTransactionAuthorization
      parameters:
        - $ref: '#/components/parameters/cardecommercegatewayid'
        - $ref: '#/components/parameters/transactionauthorizationid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveTransactionAuthorizationResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    value:
      type: object
      properties:
        Value:
          type: string
          description: "Data or set of data \n\n- A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)"
          format: datatype
      description: ''
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: "Name by which a party is known and which is usually used to identify that party. (ISO20022)\n"
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    datetime:
      type: object
      properties:
        DateTimeContent:
          type: string
          description: ''
          format: string
        TimeZoneCode:
          type: string
          description: ''
          format: string
        DaylightSavingIndicator:
          type: string
          description: ''
          format: string
      description: ''
    partyidentificationtypevalues:
      enum:
        - Taxidentificationnumber
        - Nationalregistrationnumber
        - Registrationauthorityidentification
        - LEI(LegalEntityIdentifier)
        - Alienregistrationnumber
        - Passportnumber
        - Taxexemptidentificationnumber
        - Corporateidentification
        - Driverlicensenumber
        - Foreigninvestmentidentitynumber
        - Socialsecuritynumber
        - Identitycardnumber
        - Concat
        - Nationalregistrationidentificationnumber
      type: string
      description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC.\r\n"
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    partylegalstructuretypevalues:
      enum:
        - Individual
        - CommunityInterestCompany
        - CharitableIncorporatedOrganisation
        - Co-Operative
        - Charity
        - GeneralPartnership
        - LimitedLiabilityPartnership
        - ScottishLimitedPartnership
        - LimitedPartnership
        - PrivateLimitedCompany
        - PublicLimitedCompany
        - Sole(SoleTrader)
      type: string
      description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - \r\n"
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
        PartyLegalStructureType:
          $ref: '#/components/schemas/partylegalstructuretypevalues'
      description: ''
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: ''
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: Entity that assigns and manages the identification.
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: ''
    productidentificationtypevalues:
      enum:
        - ISINCode
        - PackageCode
        - Buyersitemnumber
        - Commercialdescriptioncodename
        - EAN
        - Harmonizedtariffcodename
        - Manufacturersitemnumber
        - Modelnumber
        - Partnumber
        - Quotacategory
        - Stylenumber
        - Suppliersitemnumber
        - Universalproductcode
      type: string
      description: ">\r\n* `ISINCode` - \r\n* `PackageCode` - \r\n* `Buyersitemnumber` - Product identifier assigned by the buyer.\r\n* `Commercialdescriptioncodename` - A code to identify a product based on applicable commercial conditions.\r\n* `EAN` - The unique EAN (European Article Number) code.\r\n* `Harmonizedtariffcodename` - Classification of goods as developed by the Customs Cooperation council.\r\n* `Manufacturersitemnumber` - Product identifier as assigned by the manufacturer.\r\n* `Modelnumber` - Reference number assigned by the manufacturer to differentiate variations in similar products in a class or group.\r\n* `Partnumber` - Reference assigned by the manufacturer to a product part.\r\n* `Quotacategory` - Product identifier used by the retail industry.\r\n* `Stylenumber` - Identification of the style of a product.\r\n* `Suppliersitemnumber` - Number assigned to an article by the supplier of that article.\r\n* `Universalproductcode` - Number assigned to a manufacturer's product by the Product Code Council.\r\n"
    productidentification:
      type: object
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/identifier'
        ProductIdentificationType:
          $ref: '#/components/schemas/productidentificationtypevalues'
      description: The identifier of product e.g. ISIN Code.
    bankingproducttypevalues:
      enum:
        - LoanProduct
        - CurrentAccountProduct
        - SavingAccountProduct
        - BrokeredProduct
        - TermDepositProduct
      type: string
      description: ">\r\n* `LoanProduct` - \r\n* `CurrentAccountProduct` - \r\n* `SavingAccountProduct` - \r\n* `BrokeredProduct` - \r\n* `TermDepositProduct` - \r\n"
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: ''
    productlifecyclestatustypevalues:
      enum:
        - Initiated
        - Announced
        - Sold
        - Obsolete
        - Active
      type: string
      description: ">\r\n* `Initiated` - \r\n* `Announced` - \r\n* `Sold` - \r\n* `Obsolete` - \r\n* `Active` - \r\n"
    productlifecyclestatus:
      type: object
      properties:
        ProductLifecycleStatus:
          $ref: '#/components/schemas/status'
        ProductLifecycleStatusType:
          $ref: '#/components/schemas/productlifecyclestatustypevalues'
      description: 'Refers to the lifecycle of a product (e.g., initiated, announced, active, obsolete, withdrawn).'
    bankingproduct:
      type: object
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/productidentification'
        ProductType:
          $ref: '#/components/schemas/bankingproducttypevalues'
        ProductLifecycleStatus:
          $ref: '#/components/schemas/productlifecyclestatus'
        ProductPriority:
          $ref: '#/components/schemas/text'
        ProductDescription:
          $ref: '#/components/schemas/text'
        ProductVersion:
          $ref: '#/components/schemas/text'
        ProductName:
          $ref: '#/components/schemas/name'
      description: Reference to the card product identifier/number
    date:
      type: object
      properties:
        DateContent:
          type: string
          description: ''
          format: string
      description: As detailed on the plastic/token
    transactiontypevalues:
      enum:
        - FinancialTransaction
        - BusinessTransaction
        - BankingTransaction
        - AccountingTransaction
        - BookingTransaction
        - AllocationTransaction
        - DeliveryTransaction
        - ProductionTransaction
      type: string
      description: ">\r\n* `FinancialTransaction` - \r\n* `BusinessTransaction` - \r\n* `BankingTransaction` - \r\n* `AccountingTransaction` - \r\n* `BookingTransaction` - \r\n* `AllocationTransaction` - \r\n* `DeliveryTransaction` - \r\n* `ProductionTransaction` - \r\n"
    transactiontype:
      type: object
      properties:
        TransactionTypeName:
          $ref: '#/components/schemas/name'
        TransactionType:
          $ref: '#/components/schemas/transactiontypevalues'
      description: 'The type of transaction (purchase, cash advance, etc.)'
    currencycode:
      type: object
      properties:
        Currencycode:
          type: string
          description: "A code identifying a currency according to ISO-4217.\nA currency is a system of money in general use in a particular country.\n\nCode allocated to a currency, by a maintenance agency, under an international identification scheme as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\". Valid currency codes are registered with the ISO 4217 Maintenance Agency, and consist of three contiguous letters. (ISO20022)\n\n"
          format: datatype
      description: The currency that the transaction is made in
    amounttypevalues:
      enum:
        - Principal
        - Actual
        - Estimated
        - Maximum
        - Default
        - Replacement
        - Incremental
        - Decremental
        - Reserved
        - Available
        - Used
      type: string
      description: ">\r\n* `Principal` - \r\n* `Actual` - Actual amount.\r\n* `Estimated` - Estimated amount (the final amount could be above or below).\r\n* `Maximum` - Maximum amount (the final amount must be less or equal).\r\n* `Default` - Default amount.\r\n* `Replacement` - Replacement amount.\r\n* `Incremental` - Incremental amount for reservation.\r\n* `Decremental` - Decremental amount for reservation.\r\n* `Reserved` - Reserved or updated reserved amount for reservation.\r\n* `Available` - \r\n* `Used` - \r\n"
    amount:
      type: object
      properties:
        AmountValue:
          $ref: '#/components/schemas/value'
        AmountCurrency:
          $ref: '#/components/schemas/currencycode'
        DecimalPointPosition:
          type: string
          description: "Decimal point position starts calulating from the right\n"
          format: string
        AmountType:
          $ref: '#/components/schemas/amounttypevalues'
      description: The amount corresponding to the type
    CardTransaction:
      type: object
      properties:
        ProductInstanceReference:
          $ref: '#/components/schemas/bankingproduct'
        CustomerReference:
          $ref: '#/components/schemas/involvedparty'
        Cardexpirationdate:
          $ref: '#/components/schemas/date'
        CardCVV:
          type: string
          description: As detailed on the plastic/token
          format: string
        CardIssuingBankReference:
          type: string
          description: Refers to the card holder's issuing bank
          format: object
        MerchantAcquiringBankReference:
          type: string
          description: Refers to the merchant's acquiring bank
          format: object
        eCommerceTransactionType:
          $ref: '#/components/schemas/transactiontype'
        eCommerceTransactionCurrency:
          $ref: '#/components/schemas/currencycode'
        eCommerceTransactionAmountType:
          type: string
          description: 'Type of amount (e.g. original amount, billing currency amount, conversion rate, FX Mark-up)'
          format: string
        eCommerceTransactionAmount:
          $ref: '#/components/schemas/amount'
        eCommerceTransactionMerchantReference:
          type: string
          description: Refers to the merchant initiating the transaction
          format: object
        eCommerceTransactionLocationReference:
          type: string
          description: Refers to the point of sale location
          format: object
        eCommerceTransactionProductandServiceReference:
          type: string
          description: 'Details of the transaction (e.g. purchased service/product, purpose)'
          format: object
        eCommerceTransactionDateTime:
          $ref: '#/components/schemas/date'
      description: "The collection of operational serivces/functions offered by the operational facility\n\nExamples: messages, capture, routines"
    TransactionBatch:
      type: object
      properties:
        eCommerceBatchTransactionDateTime:
          $ref: '#/components/schemas/date'
        TransactionMerchantReference:
          type: string
          description: Refers to the merchant initiating the batch
          format: object
        eCommerceBatchTransactionRecord:
          type: string
          description: Batch record contains multiple Card Transactions
          format: string
      description: "The collection of operational serivces/functions offered by the operational facility\n\nExamples: messages, capture, routines"
    CardAuthentication:
      type: object
      properties:
        eCommerceTransactionInstanceReference:
          type: string
          description: Refers to the card transaction that is being authenticated - note all fields may not be required
          format: object
        eCommerceTransactionAuthenticationResponse:
          type: string
          description: The result of the card authentication request
          format: string
      description: "The collection of operational serivces/functions offered by the operational facility\n\nExamples: messages, capture, routines"
    TransactionAuthorization:
      type: object
      properties:
        eCommerceTransactionInstanceReference:
          type: string
          description: Refers to the card transaction that is being authorized - note all fields may not be required
          format: object
        eCommerceTransactionAuthorizationResponse:
          type: string
          description: The result of the transaction authorization request
          format: string
      description: "The collection of operational serivces/functions offered by the operational facility\n\nExamples: messages, capture, routines"
    eCommerceGatewayOperatingSession:
      type: object
      description: 'Operate equipment and/or a largely automated facility within Card eCommerce Gateway. '
    InitiateCardTransactionRequest:
      type: object
      properties:
        CardTransaction:
          type: object
          properties:
            ProductInstanceReference:
              $ref: '#/components/schemas/bankingproduct'
            CustomerReference:
              $ref: '#/components/schemas/involvedparty'
            Cardexpirationdate:
              $ref: '#/components/schemas/date'
            CardCVV:
              type: string
              description: "\r\n"
              format: string
            CardIssuingBankReference:
              type: string
              description: "\r\n"
              format: object
            MerchantAcquiringBankReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionType:
              $ref: '#/components/schemas/transactiontype'
            eCommerceTransactionCurrency:
              $ref: '#/components/schemas/currencycode'
            eCommerceTransactionAmountType:
              type: string
              description: "\r\n"
              format: string
            eCommerceTransactionMerchantReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionLocationReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionProductandServiceReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionDateTime:
              $ref: '#/components/schemas/date'
      description: 'Input: InBQ Initiate a card transaction (initiated at merchant location)'
    UpdateCardTransactionRequest:
      type: object
      properties:
        CardTransaction:
          type: object
          properties:
            ProductInstanceReference:
              $ref: '#/components/schemas/bankingproduct'
            CustomerReference:
              $ref: '#/components/schemas/involvedparty'
            Cardexpirationdate:
              $ref: '#/components/schemas/date'
            CardCVV:
              type: string
              description: "\r\n"
              format: string
            CardIssuingBankReference:
              type: string
              description: "\r\n"
              format: object
            MerchantAcquiringBankReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionType:
              $ref: '#/components/schemas/transactiontype'
            eCommerceTransactionCurrency:
              $ref: '#/components/schemas/currencycode'
            eCommerceTransactionAmountType:
              type: string
              description: "\r\n"
              format: string
            eCommerceTransactionMerchantReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionLocationReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionProductandServiceReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionDateTime:
              $ref: '#/components/schemas/date'
      description: 'Input: UpBQ Update details of a card transaction'
    UpdateCardTransactionResponse:
      type: object
      properties:
        CardTransaction:
          type: object
          properties:
            ProductInstanceReference:
              $ref: '#/components/schemas/bankingproduct'
            CustomerReference:
              $ref: '#/components/schemas/involvedparty'
            Cardexpirationdate:
              $ref: '#/components/schemas/date'
            CardCVV:
              type: string
              description: "\r\n"
              format: string
            CardIssuingBankReference:
              type: string
              description: "\r\n"
              format: object
            MerchantAcquiringBankReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionType:
              $ref: '#/components/schemas/transactiontype'
            eCommerceTransactionCurrency:
              $ref: '#/components/schemas/currencycode'
            eCommerceTransactionAmountType:
              type: string
              description: "\r\n"
              format: string
            eCommerceTransactionMerchantReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionLocationReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionProductandServiceReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionDateTime:
              $ref: '#/components/schemas/date'
      description: 'Output: UpBQ Update details of a card transaction'
    RetrieveCardTransactionResponse:
      type: object
      properties:
        CardTransaction:
          type: object
          properties:
            ProductInstanceReference:
              $ref: '#/components/schemas/bankingproduct'
            CustomerReference:
              $ref: '#/components/schemas/involvedparty'
            Cardexpirationdate:
              $ref: '#/components/schemas/date'
            CardCVV:
              type: string
              description: "\r\n"
              format: string
            CardIssuingBankReference:
              type: string
              description: "\r\n"
              format: object
            MerchantAcquiringBankReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionType:
              $ref: '#/components/schemas/transactiontype'
            eCommerceTransactionCurrency:
              $ref: '#/components/schemas/currencycode'
            eCommerceTransactionAmountType:
              type: string
              description: "\r\n"
              format: string
            eCommerceTransactionMerchantReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionLocationReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionProductandServiceReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionDateTime:
              $ref: '#/components/schemas/date'
      description: 'Output: ReBQ Retrieve details about a card transaction'
    UpdateTransactionBatchRequest:
      type: object
      properties:
        CardTransaction:
          type: object
          properties:
            ProductInstanceReference:
              $ref: '#/components/schemas/bankingproduct'
            CustomerReference:
              $ref: '#/components/schemas/involvedparty'
            Cardexpirationdate:
              $ref: '#/components/schemas/date'
            CardCVV:
              type: string
              description: "\r\n"
              format: string
            CardIssuingBankReference:
              type: string
              description: "\r\n"
              format: object
            MerchantAcquiringBankReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionType:
              $ref: '#/components/schemas/transactiontype'
            eCommerceTransactionCurrency:
              $ref: '#/components/schemas/currencycode'
            eCommerceTransactionAmountType:
              type: string
              description: "\r\n"
              format: string
            eCommerceTransactionMerchantReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionLocationReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionProductandServiceReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionDateTime:
              $ref: '#/components/schemas/date'
        TransactionBatch:
          type: object
          properties:
            eCommerceBatchTransactionDateTime:
              $ref: '#/components/schemas/date'
            eCommerceBatchTransactionRecord:
              type: string
              description: "\r\n"
              format: string
      description: 'Input: UpBQ Update details of a batch of card transactions'
    InitiateTransactionBatchRequest:
      type: object
      properties:
        CardTransaction:
          type: object
          properties:
            ProductInstanceReference:
              $ref: '#/components/schemas/bankingproduct'
            CustomerReference:
              $ref: '#/components/schemas/involvedparty'
            Cardexpirationdate:
              $ref: '#/components/schemas/date'
            CardCVV:
              type: string
              description: "\r\n"
              format: string
            CardIssuingBankReference:
              type: string
              description: "\r\n"
              format: object
            MerchantAcquiringBankReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionType:
              $ref: '#/components/schemas/transactiontype'
            eCommerceTransactionCurrency:
              $ref: '#/components/schemas/currencycode'
            eCommerceTransactionAmountType:
              type: string
              description: "\r\n"
              format: string
            eCommerceTransactionMerchantReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionLocationReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionProductandServiceReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionDateTime:
              $ref: '#/components/schemas/date'
        TransactionBatch:
          type: object
          properties:
            eCommerceBatchTransactionDateTime:
              $ref: '#/components/schemas/date'
            eCommerceBatchTransactionRecord:
              type: string
              description: "\r\n"
              format: string
      description: 'Input: InBQ Initiate a batch of card transaction (initiated at merchant location)'
    InitiateTransactionBatchResponse:
      type: object
      properties:
        CardTransaction:
          type: object
          properties:
            ProductInstanceReference:
              $ref: '#/components/schemas/bankingproduct'
            CustomerReference:
              $ref: '#/components/schemas/involvedparty'
            Cardexpirationdate:
              $ref: '#/components/schemas/date'
            CardCVV:
              type: string
              description: "\r\n"
              format: string
            CardIssuingBankReference:
              type: string
              description: "\r\n"
              format: object
            MerchantAcquiringBankReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionType:
              $ref: '#/components/schemas/transactiontype'
            eCommerceTransactionCurrency:
              $ref: '#/components/schemas/currencycode'
            eCommerceTransactionAmountType:
              type: string
              description: "\r\n"
              format: string
            eCommerceTransactionMerchantReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionLocationReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionProductandServiceReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionDateTime:
              $ref: '#/components/schemas/date'
        TransactionBatch:
          type: object
          properties:
            eCommerceBatchTransactionDateTime:
              $ref: '#/components/schemas/date'
            eCommerceBatchTransactionRecord:
              type: string
              description: "\r\n"
              format: string
      description: 'Output: InBQ Initiate a batch of card transaction (initiated at merchant location)'
    RetrieveTransactionBatchResponse:
      type: object
      properties:
        CardTransaction:
          type: object
          properties:
            ProductInstanceReference:
              $ref: '#/components/schemas/bankingproduct'
            CustomerReference:
              $ref: '#/components/schemas/involvedparty'
            Cardexpirationdate:
              $ref: '#/components/schemas/date'
            CardCVV:
              type: string
              description: "\r\n"
              format: string
            CardIssuingBankReference:
              type: string
              description: "\r\n"
              format: object
            MerchantAcquiringBankReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionType:
              $ref: '#/components/schemas/transactiontype'
            eCommerceTransactionCurrency:
              $ref: '#/components/schemas/currencycode'
            eCommerceTransactionAmountType:
              type: string
              description: "\r\n"
              format: string
            eCommerceTransactionMerchantReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionLocationReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionProductandServiceReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionDateTime:
              $ref: '#/components/schemas/date'
        TransactionBatch:
          type: object
          properties:
            eCommerceBatchTransactionDateTime:
              $ref: '#/components/schemas/date'
            eCommerceBatchTransactionRecord:
              type: string
              description: "\r\n"
              format: string
      description: 'Output: ReBQ Retrieve details about a batch of card transactions'
    InitiateCardAuthenticationRequest:
      type: object
      properties:
        CardTransaction:
          type: object
          properties:
            ProductInstanceReference:
              $ref: '#/components/schemas/bankingproduct'
            CustomerReference:
              $ref: '#/components/schemas/involvedparty'
            Cardexpirationdate:
              $ref: '#/components/schemas/date'
            CardCVV:
              type: string
              description: "\r\n"
              format: string
            CardIssuingBankReference:
              type: string
              description: "\r\n"
              format: object
            MerchantAcquiringBankReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionType:
              $ref: '#/components/schemas/transactiontype'
            eCommerceTransactionCurrency:
              $ref: '#/components/schemas/currencycode'
            eCommerceTransactionAmountType:
              type: string
              description: "\r\n"
              format: string
            eCommerceTransactionMerchantReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionLocationReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionProductandServiceReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionDateTime:
              $ref: '#/components/schemas/date'
        CardAuthentication:
          type: object
          properties:
            eCommerceTransactionInstanceReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionAuthenticationResponse:
              type: string
              description: "\r\n"
              format: string
      description: 'Input: InBQ Initiate card authentication (routed to issuing bank)'
    UpdateCardAuthenticationRequest:
      type: object
      properties:
        CardTransaction:
          type: object
          properties:
            ProductInstanceReference:
              $ref: '#/components/schemas/bankingproduct'
            CustomerReference:
              $ref: '#/components/schemas/involvedparty'
            Cardexpirationdate:
              $ref: '#/components/schemas/date'
            CardCVV:
              type: string
              description: "\r\n"
              format: string
            CardIssuingBankReference:
              type: string
              description: "\r\n"
              format: object
            MerchantAcquiringBankReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionType:
              $ref: '#/components/schemas/transactiontype'
            eCommerceTransactionCurrency:
              $ref: '#/components/schemas/currencycode'
            eCommerceTransactionAmountType:
              type: string
              description: "\r\n"
              format: string
            eCommerceTransactionMerchantReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionLocationReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionProductandServiceReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionDateTime:
              $ref: '#/components/schemas/date'
        CardAuthentication:
          type: object
          properties:
            eCommerceTransactionInstanceReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionAuthenticationResponse:
              type: string
              description: "\r\n"
              format: string
      description: 'Input: UpBQ Update details of a card transaction used in authentication'
    UpdateCardAuthenticationResponse:
      type: object
      properties:
        CardTransaction:
          type: object
          properties:
            ProductInstanceReference:
              $ref: '#/components/schemas/bankingproduct'
            CustomerReference:
              $ref: '#/components/schemas/involvedparty'
            Cardexpirationdate:
              $ref: '#/components/schemas/date'
            CardCVV:
              type: string
              description: "\r\n"
              format: string
            CardIssuingBankReference:
              type: string
              description: "\r\n"
              format: object
            MerchantAcquiringBankReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionType:
              $ref: '#/components/schemas/transactiontype'
            eCommerceTransactionCurrency:
              $ref: '#/components/schemas/currencycode'
            eCommerceTransactionAmountType:
              type: string
              description: "\r\n"
              format: string
            eCommerceTransactionMerchantReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionLocationReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionProductandServiceReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionDateTime:
              $ref: '#/components/schemas/date'
        CardAuthentication:
          type: object
          properties:
            eCommerceTransactionInstanceReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionAuthenticationResponse:
              type: string
              description: "\r\n"
              format: string
      description: 'Output: UpBQ Update details of a card transaction used in authentication'
    RetrieveCardAuthenticationResponse:
      type: object
      properties:
        CardTransaction:
          type: object
          properties:
            ProductInstanceReference:
              $ref: '#/components/schemas/bankingproduct'
            CustomerReference:
              $ref: '#/components/schemas/involvedparty'
            Cardexpirationdate:
              $ref: '#/components/schemas/date'
            CardCVV:
              type: string
              description: "\r\n"
              format: string
            CardIssuingBankReference:
              type: string
              description: "\r\n"
              format: object
            MerchantAcquiringBankReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionType:
              $ref: '#/components/schemas/transactiontype'
            eCommerceTransactionCurrency:
              $ref: '#/components/schemas/currencycode'
            eCommerceTransactionAmountType:
              type: string
              description: "\r\n"
              format: string
            eCommerceTransactionMerchantReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionLocationReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionProductandServiceReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionDateTime:
              $ref: '#/components/schemas/date'
        CardAuthentication:
          type: object
          properties:
            eCommerceTransactionInstanceReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionAuthenticationResponse:
              type: string
              description: "\r\n"
              format: string
      description: 'Output: ReBQ Retrieve details about a card authentication'
    InitiateTransactionAuthorizationRequest:
      type: object
      properties:
        CardTransaction:
          type: object
          properties:
            ProductInstanceReference:
              $ref: '#/components/schemas/bankingproduct'
            CustomerReference:
              $ref: '#/components/schemas/involvedparty'
            Cardexpirationdate:
              $ref: '#/components/schemas/date'
            CardCVV:
              type: string
              description: "\r\n"
              format: string
            CardIssuingBankReference:
              type: string
              description: "\r\n"
              format: object
            MerchantAcquiringBankReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionType:
              $ref: '#/components/schemas/transactiontype'
            eCommerceTransactionCurrency:
              $ref: '#/components/schemas/currencycode'
            eCommerceTransactionAmountType:
              type: string
              description: "\r\n"
              format: string
            eCommerceTransactionMerchantReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionLocationReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionProductandServiceReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionDateTime:
              $ref: '#/components/schemas/date'
        TransactionAuthorization:
          type: object
          properties:
            eCommerceTransactionInstanceReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionAuthorizationResponse:
              type: string
              description: "\r\n"
              format: string
      description: 'Input: InBQ Initiate card transaction authorization (routed to issuing bank)'
    UpdateTransactionAuthorizationRequest:
      type: object
      properties:
        CardTransaction:
          type: object
          properties:
            ProductInstanceReference:
              $ref: '#/components/schemas/bankingproduct'
            CustomerReference:
              $ref: '#/components/schemas/involvedparty'
            Cardexpirationdate:
              $ref: '#/components/schemas/date'
            CardCVV:
              type: string
              description: "\r\n"
              format: string
            CardIssuingBankReference:
              type: string
              description: "\r\n"
              format: object
            MerchantAcquiringBankReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionType:
              $ref: '#/components/schemas/transactiontype'
            eCommerceTransactionCurrency:
              $ref: '#/components/schemas/currencycode'
            eCommerceTransactionAmountType:
              type: string
              description: "\r\n"
              format: string
            eCommerceTransactionMerchantReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionLocationReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionProductandServiceReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionDateTime:
              $ref: '#/components/schemas/date'
        TransactionAuthorization:
          type: object
          properties:
            eCommerceTransactionInstanceReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionAuthorizationResponse:
              type: string
              description: "\r\n"
              format: string
      description: 'Input: UpBQ Update details of a card transaction used for authorization'
    UpdateTransactionAuthorizationResponse:
      type: object
      properties:
        CardTransaction:
          type: object
          properties:
            ProductInstanceReference:
              $ref: '#/components/schemas/bankingproduct'
            CustomerReference:
              $ref: '#/components/schemas/involvedparty'
            Cardexpirationdate:
              $ref: '#/components/schemas/date'
            CardCVV:
              type: string
              description: "\r\n"
              format: string
            CardIssuingBankReference:
              type: string
              description: "\r\n"
              format: object
            MerchantAcquiringBankReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionType:
              $ref: '#/components/schemas/transactiontype'
            eCommerceTransactionCurrency:
              $ref: '#/components/schemas/currencycode'
            eCommerceTransactionAmountType:
              type: string
              description: "\r\n"
              format: string
            eCommerceTransactionMerchantReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionLocationReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionProductandServiceReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionDateTime:
              $ref: '#/components/schemas/date'
        TransactionAuthorization:
          type: object
          properties:
            eCommerceTransactionInstanceReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionAuthorizationResponse:
              type: string
              description: "\r\n"
              format: string
      description: 'Output: UpBQ Update details of a card transaction used for authorization'
    RetrieveTransactionAuthorizationResponse:
      type: object
      properties:
        CardTransaction:
          type: object
          properties:
            ProductInstanceReference:
              $ref: '#/components/schemas/bankingproduct'
            CustomerReference:
              $ref: '#/components/schemas/involvedparty'
            Cardexpirationdate:
              $ref: '#/components/schemas/date'
            CardCVV:
              type: string
              description: "\r\n"
              format: string
            CardIssuingBankReference:
              type: string
              description: "\r\n"
              format: object
            MerchantAcquiringBankReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionType:
              $ref: '#/components/schemas/transactiontype'
            eCommerceTransactionCurrency:
              $ref: '#/components/schemas/currencycode'
            eCommerceTransactionAmountType:
              type: string
              description: "\r\n"
              format: string
            eCommerceTransactionMerchantReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionLocationReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionProductandServiceReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionDateTime:
              $ref: '#/components/schemas/date'
        TransactionAuthorization:
          type: object
          properties:
            eCommerceTransactionInstanceReference:
              type: string
              description: "\r\n"
              format: object
            eCommerceTransactionAuthorizationResponse:
              type: string
              description: "\r\n"
              format: string
      description: 'Output: ReBQ Retrieve details about a card transaction authorization'
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InitiateCardTransactionRequest:
      description: InitiateCardTransactionRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateCardTransactionRequest'
    UpdateCardTransactionResponse:
      description: UpdateCardTransactionResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateCardTransactionResponse'
    RetrieveCardTransactionResponse:
      description: RetrieveCardTransactionResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveCardTransactionResponse'
    UpdateTransactionBatchRequest:
      description: UpdateTransactionBatchRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateTransactionBatchRequest'
    InitiateTransactionBatchResponse:
      description: InitiateTransactionBatchResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateTransactionBatchResponse'
    RetrieveTransactionBatchResponse:
      description: RetrieveTransactionBatchResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveTransactionBatchResponse'
    InitiateCardAuthenticationRequest:
      description: InitiateCardAuthenticationRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateCardAuthenticationRequest'
    UpdateCardAuthenticationResponse:
      description: UpdateCardAuthenticationResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateCardAuthenticationResponse'
    RetrieveCardAuthenticationResponse:
      description: RetrieveCardAuthenticationResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveCardAuthenticationResponse'
    InitiateTransactionAuthorizationRequest:
      description: InitiateTransactionAuthorizationRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateTransactionAuthorizationRequest'
    UpdateTransactionAuthorizationResponse:
      description: UpdateTransactionAuthorizationResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateTransactionAuthorizationResponse'
    RetrieveTransactionAuthorizationResponse:
      description: RetrieveTransactionAuthorizationResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveTransactionAuthorizationResponse'
  parameters:
    cardtransactionid:
      name: cardtransactionid
      in: path
      required: true
      style: simple
      schema:
        type: string
    transactionbatchid:
      name: transactionbatchid
      in: path
      required: true
      style: simple
      schema:
        type: string
    cardauthenticationid:
      name: cardauthenticationid
      in: path
      required: true
      style: simple
      schema:
        type: string
    transactionauthorizationid:
      name: transactionauthorizationid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    InitiateCardTransactionRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateCardTransactionRequest'
      required: true
    UpdateCardTransactionRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateCardTransactionRequest'
      required: true
    UpdateTransactionBatchRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateTransactionBatchRequest'
      required: true
    InitiateTransactionBatchRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateTransactionBatchRequest'
      required: true
    InitiateCardAuthenticationRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateCardAuthenticationRequest'
      required: true
    UpdateCardAuthenticationRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateCardAuthenticationRequest'
      required: true
    InitiateTransactionAuthorizationRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateTransactionAuthorizationRequest'
      required: true
    UpdateTransactionAuthorizationRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateTransactionAuthorizationRequest'
      required: true