openapi: 3.0.1
info:
  title: Consumer Loan
  description: This service domain handles the fulfillment of a consumer loan product. This includes the initial set-up of the loan facility and the completion of scheduled and ad-hoc product processing tasks
  contact:
    name: BIAN
    url: https://bian.org
  version: 12.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/ConsumerLoan/12.0.0
paths:
  /ConsumerLoan/Initiate:
    post:
      tags:
        - CR - ConsumerLoanFacility
      summary: InCR Initiate a consumer loan
      description: InCR Initiate a consumer loan
      operationId: Initiate
      requestBody:
        $ref: '#/components/requestBodies/ConsumerLoanFacility'
      responses:
        '200':
          $ref: '#/components/responses/ConsumerLoanFacility'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ConsumerLoan/{consumerloanid}/Update':
    put:
      tags:
        - CR - ConsumerLoanFacility
      summary: UpCR Update details for an existing consumer loan
      description: UpCR Update details for an existing consumer loan
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/consumerloanid'
      requestBody:
        $ref: '#/components/requestBodies/ConsumerLoanFacility'
      responses:
        '200':
          $ref: '#/components/responses/ConsumerLoanFacility'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ConsumerLoan/{consumerloanid}/Control':
    put:
      tags:
        - CR - ConsumerLoanFacility
      summary: 'CoCR Control a consumer loan (e.g. suspend, terminate)'
      description: 'CoCR Control a consumer loan (e.g. suspend, terminate)'
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/consumerloanid'
      requestBody:
        $ref: '#/components/requestBodies/ConsumerLoanFacility'
      responses:
        '200':
          $ref: '#/components/responses/ConsumerLoanFacility'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ConsumerLoan/{consumerloanid}/Retrieve':
    get:
      tags:
        - CR - ConsumerLoanFacility
      summary: ReCR Retrieve details about a consumer loan
      description: ReCR Retrieve details about a consumer loan
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/consumerloanid'
      responses:
        '200':
          $ref: '#/components/responses/ConsumerLoanFacility'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ConsumerLoan/{consumerloanid}/Interest/{interestid}/Retrieve':
    get:
      tags:
        - BQ - Interest
      summary: ReBQ Retrieve details about interest applied to a consumer loan
      description: ReBQ Retrieve details about interest applied to a consumer loan
      operationId: RetrieveInterest
      parameters:
        - $ref: '#/components/parameters/consumerloanid'
        - $ref: '#/components/parameters/interestid'
      responses:
        '200':
          $ref: '#/components/responses/Interest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ConsumerLoan/{consumerloanid}/ServiceFees/{servicefeesid}/Execute':
    put:
      tags:
        - BQ - ServiceFees
      summary: ExBQ Execute Apply Service Fee
      description: ExBQ Execute Apply Service Fee
      operationId: ExecuteServiceFees
      parameters:
        - $ref: '#/components/parameters/consumerloanid'
        - $ref: '#/components/parameters/servicefeesid'
      requestBody:
        $ref: '#/components/requestBodies/ServiceFees'
      responses:
        '200':
          $ref: '#/components/responses/ServiceFees'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ConsumerLoan/{consumerloanid}/ServiceFees/{servicefeesid}/Retrieve':
    get:
      tags:
        - BQ - ServiceFees
      summary: ReBQ Retrieve details about a consumer loan fees
      description: ReBQ Retrieve details about a consumer loan fees
      operationId: RetrieveServiceFees
      parameters:
        - $ref: '#/components/parameters/consumerloanid'
        - $ref: '#/components/parameters/servicefeesid'
      responses:
        '200':
          $ref: '#/components/responses/ServiceFees'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ConsumerLoan/{consumerloanid}/Disbursement/{disbursementid}/Retrieve':
    get:
      tags:
        - BQ - Disbursement
      summary: ReBQ Retrieve details about a disbursement paid against a consumer loan
      description: ReBQ Retrieve details about a disbursement paid against a consumer loan
      operationId: RetrieveDisbursement
      parameters:
        - $ref: '#/components/parameters/consumerloanid'
        - $ref: '#/components/parameters/disbursementid'
      responses:
        '200':
          $ref: '#/components/responses/Disbursement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ConsumerLoan/{consumerloanid}/Maintenance/{maintenanceid}/Request':
    put:
      tags:
        - BQ - Maintenance
      summary: RqBQ Request a maintenance activity for a consumer load (e.g. obtain a fee statement)
      description: RqBQ Request a maintenance activity for a consumer load (e.g. obtain a fee statement)
      operationId: RequestMaintenance
      parameters:
        - $ref: '#/components/parameters/consumerloanid'
        - $ref: '#/components/parameters/maintenanceid'
      requestBody:
        $ref: '#/components/requestBodies/Maintenance'
      responses:
        '200':
          $ref: '#/components/responses/Maintenance'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ConsumerLoan/{consumerloanid}/Maintenance/{maintenanceid}/Retrieve':
    get:
      tags:
        - BQ - Maintenance
      summary: ReBQ Retrieve details about maintenance processing for a consumer loan
      description: ReBQ Retrieve details about maintenance processing for a consumer loan
      operationId: RetrieveMaintenance
      parameters:
        - $ref: '#/components/parameters/consumerloanid'
        - $ref: '#/components/parameters/maintenanceid'
      responses:
        '200':
          $ref: '#/components/responses/Maintenance'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ConsumerLoan/{consumerloanid}/Withdrawal/{withdrawalid}/Update':
    put:
      tags:
        - BQ - Withdrawal
      summary: UpBQ Update details of a withdrawal from a consumer loan
      description: UpBQ Update details of a withdrawal from a consumer loan
      operationId: UpdateWithdrawal
      parameters:
        - $ref: '#/components/parameters/consumerloanid'
        - $ref: '#/components/parameters/withdrawalid'
      requestBody:
        $ref: '#/components/requestBodies/Withdrawal'
      responses:
        '200':
          $ref: '#/components/responses/Withdrawal'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ConsumerLoan/{consumerloanid}/Withdrawal/{withdrawalid}/Execute':
    put:
      tags:
        - BQ - Withdrawal
      summary: ExBQ Execute an automated withdrawal against a consumer loan
      description: ExBQ Execute an automated withdrawal against a consumer loan
      operationId: ExecuteWithdrawal
      parameters:
        - $ref: '#/components/parameters/consumerloanid'
        - $ref: '#/components/parameters/withdrawalid'
      requestBody:
        $ref: '#/components/requestBodies/Withdrawal'
      responses:
        '200':
          $ref: '#/components/responses/Withdrawal'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ConsumerLoan/{consumerloanid}/Withdrawal/{withdrawalid}/Request':
    put:
      tags:
        - BQ - Withdrawal
      summary: RqBQ Request handling of a withdrawal (e.g. negotiate an exception)
      description: RqBQ Request handling of a withdrawal (e.g. negotiate an exception)
      operationId: RequestWithdrawal
      parameters:
        - $ref: '#/components/parameters/consumerloanid'
        - $ref: '#/components/parameters/withdrawalid'
      requestBody:
        $ref: '#/components/requestBodies/Withdrawal'
      responses:
        '200':
          $ref: '#/components/responses/Withdrawal'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ConsumerLoan/{consumerloanid}/Withdrawal/{withdrawalid}/Retrieve':
    get:
      tags:
        - BQ - Withdrawal
      summary: ReBQ Retrieve details about a consumer loan withdrawal
      description: ReBQ Retrieve details about a consumer loan withdrawal
      operationId: RetrieveWithdrawal
      parameters:
        - $ref: '#/components/parameters/consumerloanid'
        - $ref: '#/components/parameters/withdrawalid'
      responses:
        '200':
          $ref: '#/components/responses/Withdrawal'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ConsumerLoan/{consumerloanid}/Repayment/{repaymentid}/Update':
    put:
      tags:
        - BQ - Repayment
      summary: UpBQ Update a repayment transaction made to the consumer loan
      description: UpBQ Update a repayment transaction made to the consumer loan
      operationId: UpdateRepayment
      parameters:
        - $ref: '#/components/parameters/consumerloanid'
        - $ref: '#/components/parameters/repaymentid'
      requestBody:
        $ref: '#/components/requestBodies/Repayment'
      responses:
        '200':
          $ref: '#/components/responses/Repayment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ConsumerLoan/{consumerloanid}/Repayment/{repaymentid}/Execute':
    put:
      tags:
        - BQ - Repayment
      summary: ExBQ Execute an automated repayment transaction
      description: ExBQ Execute an automated repayment transaction
      operationId: ExecuteRepayment
      parameters:
        - $ref: '#/components/parameters/consumerloanid'
        - $ref: '#/components/parameters/repaymentid'
      requestBody:
        $ref: '#/components/requestBodies/Repayment'
      responses:
        '200':
          $ref: '#/components/responses/Repayment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ConsumerLoan/{consumerloanid}/Repayment/{repaymentid}/Request':
    put:
      tags:
        - BQ - Repayment
      summary: RqBQ Request handling of an exceptional repayment
      description: RqBQ Request handling of an exceptional repayment
      operationId: RequestRepayment
      parameters:
        - $ref: '#/components/parameters/consumerloanid'
        - $ref: '#/components/parameters/repaymentid'
      requestBody:
        $ref: '#/components/requestBodies/Repayment'
      responses:
        '200':
          $ref: '#/components/responses/Repayment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ConsumerLoan/{consumerloanid}/Repayment/{repaymentid}/Retrieve':
    get:
      tags:
        - BQ - Repayment
      summary: ReBQ Retrieve details about a consumer loan repayment
      description: ReBQ Retrieve details about a consumer loan repayment
      operationId: RetrieveRepayment
      parameters:
        - $ref: '#/components/parameters/consumerloanid'
        - $ref: '#/components/parameters/repaymentid'
      responses:
        '200':
          $ref: '#/components/responses/Repayment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ConsumerLoan/{consumerloanid}/Restructuring/Initiate':
    post:
      tags:
        - BQ - Restructuring
      summary: InBQ Initiate consumer loan account restructuring
      description: InBQ Initiate consumer loan account restructuring
      operationId: InitiateRestructuring
      parameters:
        - $ref: '#/components/parameters/consumerloanid'
      requestBody:
        $ref: '#/components/requestBodies/Restructuring'
      responses:
        '200':
          $ref: '#/components/responses/Restructuring'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ConsumerLoan/{consumerloanid}/Restructuring/{restructuringid}/Update':
    put:
      tags:
        - BQ - Restructuring
      summary: UpBQ Update details of a consumer loan or restructuring activities
      description: UpBQ Update details of a consumer loan or restructuring activities
      operationId: UpdateRestructuring
      parameters:
        - $ref: '#/components/parameters/consumerloanid'
        - $ref: '#/components/parameters/restructuringid'
      requestBody:
        $ref: '#/components/requestBodies/Restructuring'
      responses:
        '200':
          $ref: '#/components/responses/Restructuring'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ConsumerLoan/{consumerloanid}/Restructuring/{restructuringid}/Exchange':
    put:
      tags:
        - BQ - Restructuring
      summary: 'EcBQ Accept, reject etc a consumer loan restructuring proposal'
      description: 'EcBQ Accept, reject etc a consumer loan restructuring proposal'
      operationId: ExchangeRestructuring
      parameters:
        - $ref: '#/components/parameters/consumerloanid'
        - $ref: '#/components/parameters/restructuringid'
      requestBody:
        $ref: '#/components/requestBodies/Restructuring'
      responses:
        '200':
          $ref: '#/components/responses/Restructuring'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ConsumerLoan/{consumerloanid}/Restructuring/{restructuringid}/Request':
    put:
      tags:
        - BQ - Restructuring
      summary: RqBQ Request activity associated with a restructuring effort (e.g. negotiate)
      description: RqBQ Request activity associated with a restructuring effort (e.g. negotiate)
      operationId: RequestRestructuring
      parameters:
        - $ref: '#/components/parameters/consumerloanid'
        - $ref: '#/components/parameters/restructuringid'
      requestBody:
        $ref: '#/components/requestBodies/Restructuring'
      responses:
        '200':
          $ref: '#/components/responses/Restructuring'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ConsumerLoan/{consumerloanid}/Restructuring/{restructuringid}/Retrieve':
    get:
      tags:
        - BQ - Restructuring
      summary: ReBQ Retrieve details about a consumer loan restructuring task
      description: ReBQ Retrieve details about a consumer loan restructuring task
      operationId: RetrieveRestructuring
      parameters:
        - $ref: '#/components/parameters/consumerloanid'
        - $ref: '#/components/parameters/restructuringid'
      responses:
        '200':
          $ref: '#/components/responses/Restructuring'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ConsumerLoan/{consumerloanid}/ServiceFees/{servicefeesid}/Update':
    put:
      tags:
        - BQ - ServiceFees
      summary: Update details about an applied service fee
      description: Update details about an applied service fee
      operationId: UpdateServiceFees
      parameters:
        - $ref: '#/components/parameters/consumerloanid'
        - $ref: '#/components/parameters/servicefeesid'
      requestBody:
        $ref: '#/components/requestBodies/ServiceFees'
      responses:
        '200':
          $ref: '#/components/responses/ServiceFees'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ConsumerLoan/{consumerloanid}/AmountBlock/Initiate':
    post:
      tags:
        - BQ - AmountBlock
      summary: Initiate an amount block
      description: Initiate an amount block
      operationId: InitiateAmountBlock
      parameters:
        - $ref: '#/components/parameters/consumerloanid'
      requestBody:
        $ref: '#/components/requestBodies/AmountBlock'
      responses:
        '200':
          $ref: '#/components/responses/AmountBlock'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ConsumerLoan/{consumerloanid}/AmountBlock/{amountblockid}/Retrieve':
    get:
      tags:
        - BQ - AmountBlock
      summary: Retrieve details about an amount block
      description: Retrieve details about an amount block
      operationId: RetrieveAmountBlock
      parameters:
        - $ref: '#/components/parameters/consumerloanid'
        - $ref: '#/components/parameters/amountblockid'
      responses:
        '200':
          $ref: '#/components/responses/AmountBlock'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ConsumerLoan/{consumerloanid}/AmountBlock/{amountblockid}/Update':
    put:
      tags:
        - BQ - AmountBlock
      summary: Update details of an amount block
      description: Update details of an amount block
      operationId: UpdateAmountBlock
      parameters:
        - $ref: '#/components/parameters/consumerloanid'
        - $ref: '#/components/parameters/amountblockid'
      requestBody:
        $ref: '#/components/requestBodies/AmountBlock'
      responses:
        '200':
          $ref: '#/components/responses/AmountBlock'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ConsumerLoan/{consumerloanid}/BookingAuthorization/{bookingauthorizationid}/Execute':
    put:
      tags:
        - BQ - BookingAuthorization
      summary: Execute Authorization of Booking
      description: Execute Authorization of Booking
      operationId: ExecuteBookingAuthorization
      parameters:
        - $ref: '#/components/parameters/consumerloanid'
        - $ref: '#/components/parameters/bookingauthorizationid'
      requestBody:
        $ref: '#/components/requestBodies/BookingAuthorization'
      responses:
        '200':
          $ref: '#/components/responses/BookingAuthorization'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ConsumerLoan/{consumerloanid}/IssuedDevice/Initiate':
    post:
      tags:
        - BQ - IssuedDevice
      summary: Initiate Provision of Issued Device
      description: Initiate Provision of Issued Device
      operationId: InitiateIssuedDevice
      parameters:
        - $ref: '#/components/parameters/consumerloanid'
      requestBody:
        $ref: '#/components/requestBodies/IssuedDevice'
      responses:
        '200':
          $ref: '#/components/responses/IssuedDevice'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ConsumerLoan/{consumerloanid}/IssuedDevice/{issueddeviceid}/Retrieve':
    get:
      tags:
        - BQ - IssuedDevice
      summary: Retrieve Details about Issued Device
      description: Retrieve Details about Issued Device
      operationId: RetrieveIssuedDevice
      parameters:
        - $ref: '#/components/parameters/consumerloanid'
        - $ref: '#/components/parameters/issueddeviceid'
      responses:
        '200':
          $ref: '#/components/responses/IssuedDevice'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ConsumerLoan/{consumerloanid}/IssuedDevice/{issueddeviceid}/Update':
    put:
      tags:
        - BQ - IssuedDevice
      summary: Update Details of Issued Device Allocated to This Account
      description: Update Details of Issued Device Allocated to This Account
      operationId: UpdateIssuedDevice
      parameters:
        - $ref: '#/components/parameters/consumerloanid'
        - $ref: '#/components/parameters/issueddeviceid'
      requestBody:
        $ref: '#/components/requestBodies/IssuedDevice'
      responses:
        '200':
          $ref: '#/components/responses/IssuedDevice'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    value:
      type: object
      properties:
        Value:
          type: string
          description: "Data or set of data \n\n- A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)"
          format: datatype
      description: ''
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: The name of the product used for marketing purposes from a customer perspective. I.e. what the customer would recognise. (OB) Name|Name (https://www.iso20022.org/standardsrepository/type/Name)|Standard|ISO20022 ()
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    datetime:
      type: object
      properties:
        DateTimeContent:
          type: string
          description: ''
          format: string
        TimeZoneCode:
          type: string
          description: ''
          format: string
        DaylightSavingIndicator:
          type: string
          description: ''
          format: string
      description: Value of the date type ISODateTime|ISODateTime (https://www.iso20022.org/standardsrepository/type/ISODateTime)|Standard|ISO20022 BM ()
    partyidentificationtypevalues:
      enum:
        - Taxidentificationnumber
        - Nationalregistrationnumber
        - Registrationauthorityidentification
        - LEI(LegalEntityIdentifier)
        - Alienregistrationnumber
        - Passportnumber
        - Taxexemptidentificationnumber
        - Corporateidentification
        - Driverlicensenumber
        - Foreigninvestmentidentitynumber
        - Socialsecuritynumber
        - Identitycardnumber
        - Concat
        - Nationalregistrationidentificationnumber
      type: string
      description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC.\r\n"
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    partylegalstructuretypevalues:
      enum:
        - Individual
        - CommunityInterestCompany
        - CharitableIncorporatedOrganisation
        - Co-Operative
        - Charity
        - GeneralPartnership
        - LimitedLiabilityPartnership
        - ScottishLimitedPartnership
        - LimitedPartnership
        - PrivateLimitedCompany
        - PublicLimitedCompany
        - Sole(SoleTrader)
      type: string
      description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - \r\n"
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
        PartyLegalStructureType:
          $ref: '#/components/schemas/partylegalstructuretypevalues'
      description: Reference to the associated party Party|Party (https://www.iso20022.org/standardsrepository/type/Party)|Standard|ISO20022BM ()
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: ''
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: "Reference identifier linking the account to appropriate tax handling ||\r\n|"
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: Identifier within the parent organisation for the product. Must be unique in the organisation. (OB) GenericIdentification|GenericIdentification (https://www.iso20022.org/standardsrepository/type/GenericIdentification)|Standard|ISO20022 BM ()
    currencycode:
      type: object
      properties:
        Currencycode:
          type: string
          description: "A code identifying a currency according to ISO-4217.\nA currency is a system of money in general use in a particular country.\n\nCode allocated to a currency, by a maintenance agency, under an international identification scheme as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\". Valid currency codes are registered with the ISO 4217 Maintenance Agency, and consist of three contiguous letters. (ISO20022)\n\n"
          format: datatype
      description: The currency for the loan account CurrencyCode|CurrencyCode (https://www.iso20022.org/standardsrepository/type/CurrencyCode)|Standard|ISO20022 BM ()
    amounttypevalues:
      enum:
        - Principal
        - Actual
        - Estimated
        - Maximum
        - Default
        - Replacement
        - Incremental
        - Decremental
        - Reserved
        - Available
        - Used
      type: string
      description: ">\r\n* `Principal` - \r\n* `Actual` - Actual amount.\r\n* `Estimated` - Estimated amount (the final amount could be above or below).\r\n* `Maximum` - Maximum amount (the final amount must be less or equal).\r\n* `Default` - Default amount.\r\n* `Replacement` - Replacement amount.\r\n* `Incremental` - Incremental amount for reservation.\r\n* `Decremental` - Decremental amount for reservation.\r\n* `Reserved` - Reserved or updated reserved amount for reservation.\r\n* `Available` - \r\n* `Used` - \r\n"
    amount:
      type: object
      properties:
        AmountValue:
          $ref: '#/components/schemas/value'
        AmountCurrency:
          $ref: '#/components/schemas/currencycode'
        DecimalPointPosition:
          type: string
          description: "Decimal point position starts calulating from the right\n"
          format: string
        AmountType:
          $ref: '#/components/schemas/amounttypevalues'
      description: The amount of the loan CurrencyAndAmount|CurrencyAndAmount (https://www.iso20022.org/standardsrepository/type/CurrencyAndAmount)|Standard|ISO20022  ()
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: 'The status of the amount block. Active, expired, ended'
    AmountBlock:
      type: object
      properties:
        ConsumerLoanIdentifier:
          $ref: '#/components/schemas/identifier'
        ConsumerLoanExternalAccountNumber:
          $ref: '#/components/schemas/identifier'
        CustomerReference:
          $ref: '#/components/schemas/involvedparty'
        AmountBlockIdentifier:
          $ref: '#/components/schemas/identifier'
        AmountBlockType:
          $ref: '#/components/schemas/text'
        AmountBlockPriorityNumber:
          type: string
          description: The number that indicates the priority of the amount block whne used fo authorisattion of transactions
          format: number
        AmountBlockReason:
          $ref: '#/components/schemas/text'
        AmountBlockOriginatorReference:
          $ref: '#/components/schemas/involvedparty'
        AmountBlockAmount:
          $ref: '#/components/schemas/amount'
        AmountBlockStartDate:
          $ref: '#/components/schemas/datetime'
        AmountBlockExpiryDate:
          $ref: '#/components/schemas/datetime'
        AmountBlockStatus:
          $ref: '#/components/schemas/status'
        AmountBlockEndDate:
          $ref: '#/components/schemas/datetime'
      description: ''
    frequencytypevalues:
      enum:
        - Annual
        - Monthly
        - Quarterly
        - Semiannual
        - Weekly
        - Daily
        - Adhoc
        - Intraday
        - Overnight
        - Tendays
        - Fortnightly
        - Triggeredbymovement
        - Never
        - Rate
        - Oncreditevent
        - Upfront
        - Onexpiry
        - Hourly
      type: string
      description: ">\r\n* `Annual` - Event takes place every year or once a year.\r\n* `Monthly` - Event takes place every month or once a month.\r\n* `Quarterly` - Event takes place every three months or four times a year.\r\n* `Semiannual` - Event takes place every six months or two times a year.\r\n* `Weekly` - Event takes place once a week.\r\n* `Daily` - Event takes place every day.\r\n* `Adhoc` - Event takes place on request or as necessary.\r\n* `Intraday` - Event takes place several times a day.\r\n* `Overnight` - Event takes place overnight.\r\n* `Tendays` - Event takes place every ten business days.\r\n* `Fortnightly` - Event takes place every two weeks.\r\n* `Triggeredbymovement` - Event takes place at the end of the day if there was a movement on the account, otherwise nothing is sent that day.\r\n* `Never` - Event does never take place.\r\n* `Rate` - Event takes place based on a change of a rate.\r\n* `Oncreditevent` - Event occurs due to a credit event occurring for an issuer.\r\n* `Upfront` - Event that takes place at the initiation of a trade or agreement.\r\n* `Onexpiry` - Event occurs on expiry of a financial contract.\r\n* `Hourly` - Event takes place every hours.\r\n"
    frequency:
      type: object
      properties:
        FrequencyCode:
          $ref: '#/components/schemas/frequencytypevalues'
        FrequencyName:
          $ref: '#/components/schemas/name'
        FrequencyDefinition:
          $ref: '#/components/schemas/text'
      description: Specifies the frequency of an interest payment.
    rate:
      type: object
      properties:
        RateValue:
          $ref: '#/components/schemas/value'
        RateUnit:
          $ref: '#/components/schemas/text'
        RatePeriod:
          $ref: '#/components/schemas/datetimeperiod'
        RateCapitalUnit:
          $ref: '#/components/schemas/text'
      description: The applicable rate for the loan PercentageRate|PercentageRate (https://www.iso20022.org/standardsrepository/type/PercentageRate)|Standard|ISO20022 BM ()
    feetypevalues:
      enum:
        - Accountingfee
        - Adrfee
        - Advisoryfee
        - Airwaybillfee
        - Backendload
        - Brokeragefee
        - Clearanceandhandlingatdestination
        - Clearanceandhandlingatorigin
        - Collectfreight
        - Commission
        - Contingencydeferredsalescharge
        - Correspondentbankcharge
        - Custodyfee
        - Dangerousgoodsfee
        - Dilutionlevy
        - Discount
        - Equalisation
        - Frontendload
        - Initial
        - Insurancepremium
        - Issuancecancellationfee
        - Issuancefee
        - Managementfee
        - Matchingfees
        - Miscellaneousfee
        - Other
        - Packaging
        - Partacquis
        - Penalty
        - Pickup
        - Postagecharge
        - Premium
        - Publicationfee
        - Regulatoryfee
        - Securitycharge
        - Serviceprovisionfee
        - Shippingcharge
        - Signatureservice
        - Specialconcessions
        - Speciallyagreedfrontendload
        - Storageatdestination
        - Storageatorigin
        - Switch
        - Transferfee
        - Transportcharges
        - Ucitscommission
      type: string
      description: ">\r\n* `Accountingfee` - Fee paid for accounting services rendered.\r\n* `Adrfee` - Charge linked to an ADR (American Depositary Receipt).\r\n* `Advisoryfee` - Fee paid for advisory services rendered.\r\n* `Airwaybillfee` - Charge is an airway bill fee.\r\n* `Backendload` - Sales charge paid by the investor when redeeming an investment such as an investment fund.\r\n* `Brokeragefee` - Fee paid to a broker for services provided.\r\n* `Clearanceandhandlingatdestination` - Charge is for clearance and handling of goods at destination.\r\n* `Clearanceandhandlingatorigin` - Charge is for clearance and handling of goods at origin.\r\n* `Collectfreight` - Charge is for the collection of the freight.\r\n* `Commission` - Fee paid for services provided.\r\n* `Contingencydeferredsalescharge` - Deferred sales charge.\r\n* `Correspondentbankcharge` - In investment funds, the charge of the correspondent bank for transferring money.\r\n* `Custodyfee` - Fee paid to a custodian in respect of custodial services.\r\n* `Dangerousgoodsfee` - Charge is for dangerous goods.\r\n* `Dilutionlevy` - In investment funds, a charge payable by the investor covering bid-offer spreads and dealing charges for the underlying investments. The dilution levy is paid to the fund for the benefit of other unit holders.\r\n* `Discount` - Charge that has been reduced from the standard initial charge levied by a fund, eg, during a launch period or as negotiated by a funds supermarket / discount broker.\r\n* `Equalisation` - The part of an investor's subscription amount that is held by the fund in order to pay incentive or performance fees at the end of the fiscal year.\r\n* `Frontendload` - Sales charge paid immediately by the investor when subscribing to an investment such as an investment fund.\r\n* `Initial` - Charge paid at the time of the first subscription.\r\n* `Insurancepremium` - Charge is a premium for insurance.\r\n* `Issuancecancellationfee` - Fee linked to the cancellation of an issuance.\r\n* `Issuancefee` - Charge linked to the issuance of security.\r\n* `Managementfee` - Fee paid to an investment manager for services. The fee usually includes fund administration costs and investor relationship management. Typically, the amount paid is a percentage of the assets under management.\r\n* `Matchingfees` - Fee charged for matching and/or confirmation.\r\n* `Miscellaneousfee` - Miscellaneous fee.\r\n* `Other` - Another type of charge.\r\n* `Packaging` - Charge is for packaging of goods.\r\n* `Partacquis` - Portion of charge that the fund is entitled to receive, that cannot be reduced by an intermediary.\r\n* `Penalty` - Fee charged to the investor for early redemption of the fund.\r\n* `Pickup` - Charge is for pick-up of goods.\r\n* `Postagecharge` - Charge paid for the postage.\r\n* `Premium` - In investment funds, pre-arranged addition to the trade amount based on the published net asset value.\r\n* `Publicationfee` - Fee paid in respect of publications made.\r\n* `Regulatoryfee` - Fee charged by a regulatory authority, eg, Securities and Exchange fees.\r\n* `Securitycharge` - Charge is for security.\r\n* `Serviceprovisionfee` - Fee paid for the provision of financial services.\r\n* `Shippingcharge` - Charge for shipping, including the insurance of securities.\r\n* `Signatureservice` - Charge is for signature services.\r\n* `Specialconcessions` - Charges, drawdown, or other reduction from or in addition to the deal price.\r\n* `Speciallyagreedfrontendload` - Specially agreed front-end load.\r\n* `Storageatdestination` - Charge is for storage of goods at destination.\r\n* `Storageatorigin` - Charge is for storage of goods at origin.\r\n* `Switch` - In investment funds, charge related to a switch transaction.\r\n* `Transferfee` - In investment funds, a fee charged for the transfer of ownership of an investment fund.\r\n* `Transportcharges` - Charge is for transport.\r\n* `Ucitscommission` - Charges paid by the investor to the Fund Company for subscription and redemption orders.\r\n"
    feeplantypevalues:
      enum:
        - StandardFeePlan
        - FinalFeePlan
      type: string
      description: ">\r\n* `StandardFeePlan` - \r\n* `FinalFeePlan` - \r\n"
    goal:
      type: object
      properties:
        GoalType:
          type: string
          description: The type of goal
          format: string
        GoalDefinition:
          type: string
          description: 'A definition of the goal, including the intended actions required to achieve the goal'
          format: string
        GoalOrganisation:
          type: string
          description: Identifies the interested parties and their roles and responsibilities for the specific actions supporting the achievement of the goal
          format: ''
        GoalResult:
          type: string
          description: 'Assessment of how the work is progressing towards achieving the goal, including projections of likely outcomes'
          format: string
      description: ''
    budgettypevalues:
      enum:
        - OperatingBudget
        - FinancialBudget
        - ResourceBudget
      type: string
      description: ">\r\n* `OperatingBudget` - \r\n* `FinancialBudget` - \r\n* `ResourceBudget` - \r\n"
    budgettype:
      type: object
      properties:
        BudgetTypeName:
          $ref: '#/components/schemas/name'
        BudgetType:
          $ref: '#/components/schemas/budgettypevalues'
      description: A Classification value that specifies the type of Budget
    budgetarrangement:
      type: object
      properties:
        BudgetType:
          $ref: '#/components/schemas/budgettype'
        BudgetAmount:
          $ref: '#/components/schemas/amount'
      description: 'An arrangement which is specifying an estimate of costs, revenues, and resources over a specified period, reflecting a reading of future financial conditions and goals. (adapted from Business Dictionary)'
    plannedaction:
      type: object
      properties:
        PlannedAction:
          type: string
          description: 'An action that is arranged in a plan for doing or achieving something '
          format: class
      description: 'An action that is arranged in a plan for doing or achieving something '
    plantypevalues:
      enum:
        - AdministrativePlan
        - ManagementPlan
        - StratgyPlan
        - FinancialPlan
      type: string
      description: ">\r\n* `AdministrativePlan` - \r\n* `ManagementPlan` - \r\n* `StratgyPlan` - \r\n* `FinancialPlan` - \r\n"
    plantype:
      type: object
      properties:
        PlanTypeName:
          $ref: '#/components/schemas/name'
        PlanType:
          $ref: '#/components/schemas/plantypevalues'
      description: A Classification value that specifies the type of Plan
    plan:
      type: object
      properties:
        PlanGoal:
          $ref: '#/components/schemas/goal'
        PlanBudget:
          $ref: '#/components/schemas/budgetarrangement'
        PlannedAction:
          $ref: '#/components/schemas/plannedaction'
        PlanType:
          $ref: '#/components/schemas/plantype'
        PlanOrganisation:
          type: string
          description: ''
          format: string
        PlanValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PlanDescription:
          $ref: '#/components/schemas/text'
      description: ''
    feeplan:
      type: object
      properties:
        FeePlanName:
          $ref: '#/components/schemas/name'
        FeePlanType:
          $ref: '#/components/schemas/feeplantypevalues'
        FeePlan:
          $ref: '#/components/schemas/plan'
      description: "An arranged FeeRatePlan\n"
    debitcreditindicatortvalues:
      enum:
        - Debit
        - Credit
      type: string
      description: ">\r\n* `Debit` - Transaction is a debt entry\r\n* `Credit` - Transaction is a credit entry\r\n"
    adjustmentdirectiontypevalues:
      enum:
        - Added
        - Substracted
      type: string
      description: ">\r\n* `Added` - Adjustment amount must be added to the total amount.\r\n* `Substracted` - Adjustment amount must be substracted from the total amount.\r\n"
    chargebearertypevalues:
      enum:
        - Bornebydebtor
        - Bornebycreditor
        - Shared
        - Followingservicelevel
      type: string
      description: ">\r\n* `Bornebydebtor` - All transaction charges are to be borne by the debtor.\r\n* `Bornebycreditor` - All transaction charges are to be borne by the creditor.\r\n* `Shared` - In a credit transfer context, means that transaction charges on the sender side are to be borne by the debtor, transaction charges on the receiver side are to be borne by the creditor. In a direct debit context, means that transaction charges on the sender side are to be borne by the creditor, transaction charges on the receiver side are to be borne by the debtor.\r\n* `Followingservicelevel` - Charges are to be applied following the rules agreed in the service level and/or scheme.\r\n"
    feearrangement:
      type: object
      properties:
        FeeType:
          $ref: '#/components/schemas/feetypevalues'
        FeeAmount:
          $ref: '#/components/schemas/amount'
        FeeRate:
          $ref: '#/components/schemas/rate'
        FeeEffectivePeriod:
          $ref: '#/components/schemas/datetimeperiod'
        FeeDueDate:
          $ref: '#/components/schemas/datetime'
        FeePlan:
          $ref: '#/components/schemas/feeplan'
        FeeCreditDebitIndicator:
          $ref: '#/components/schemas/debitcreditindicatortvalues'
        FeeReason:
          $ref: '#/components/schemas/text'
        FeeDirection:
          $ref: '#/components/schemas/adjustmentdirectiontypevalues'
        FeeBearerType:
          $ref: '#/components/schemas/chargebearertypevalues'
      description: Specifies the charges on interest.
    interesttypevalues:
      enum:
        - Fixed
        - Floatingratenote
        - Dualbasis
        - Index
        - Discounted
        - Zerocoupon
        - Exinterest
        - Cuminterest
      type: string
      description: The type of interest to be applied (e.g. prime plus) InterestTypeCode|InterestTypeCode (https://www.iso20022.org/standardsrepository/type/InterestTypeCode)|Standard|ISO20022 BM ()
    interestcalculationmethodtypevalues:
      enum:
        - Simple
        - Compounding
      type: string
      description: ">\r\n* `Simple` - Calculation method by which interest is calculated on the original principal only. Accumulated interest from prior periods is not used in calculations for the following periods. (ISO20022)\n\r\n* `Compounding` - Calculation method by which interest is calculated each period on the original principal and all interest accumulated during past periods. (ISO20022)\r\n"
    interestratetypevalues:
      enum:
        - Fixed
        - Forfeit
        - Variable
        - Scheduled
        - Unscheduled
        - Discount
        - Fixedrateunderlyingexposureforlife
        - Fixedrateunderlyingexposurewithcompulsoryfutureswitchtofloating
        - Fixedwithfutureperiodicresets
        - Floatinglinkedtoindex
        - Floatingrateunderlyingexposureforlife
        - Floatingrateunderlyingexposurewithcap
        - Floatingrateunderlyingexposurewithfloor
        - Floatingrateunderlyingexposurewithfloorandcap
        - Modular
        - Obligorswapped
        - Other
        - Swicthoptionality
      type: string
      description: ">\r\n* `Fixed` - Rate is fixed.\r\n* `Forfeit` - No specific repurchase rate applies to the transaction Repo, only a forfeit.\r\n* `Variable` - Rate is variable.\r\n* `Scheduled` - Rate of the scheduled payment.\r\n* `Unscheduled` - Rate of the unscheduled payment.\r\n* `Discount` - Interest rate type is Discount.\r\n* `Fixedrateunderlyingexposureforlife` - Interest rate type is Fixed rate underlying exposure (for life).\r\n* `Fixedrateunderlyingexposurewithcompulsoryfutureswitchtofloating` - Interest rate type is Fixed rate underlying exposure with compulsory future switch to floating.\r\n* `Fixedwithfutureperiodicresets` - Interest rate type is Fixed with future periodic resets.\r\n* `Floatinglinkedtoindex` - Interest rate type is Floating rate underlying exposure linked to one index that will revert to another index in the future.\r\n* `Floatingrateunderlyingexposureforlife` - Interest rate type is Floating rate underlying exposure (for life).\r\n* `Floatingrateunderlyingexposurewithcap` - Interest rate type is Floating rate underlying exposure with cap.\r\n* `Floatingrateunderlyingexposurewithfloor` - Interest rate type is Floating rate underlying exposure with floor.\r\n* `Floatingrateunderlyingexposurewithfloorandcap` - Interest rate type is Floating rate underlying exposure with both floor and cap.\r\n* `Modular` - Interest rate type is Modular.\r\n* `Obligorswapped` - Interest rate type is Obligor Swapped.\r\n* `Other` - Any other type of interest rate that can be applied.\r\n* `Swicthoptionality` - Interest rate type is Switch Optionality.\r\n"
    interesttransactiontypevalues:
      enum:
        - InterestAllocationTransaction
        - InterestPaymentTransaction
        - InterestAdjustmentTransaction
      type: string
      description: ">\r\n* `InterestAllocationTransaction` - \r\n* `InterestPaymentTransaction` - \r\n* `InterestAdjustmentTransaction` - \r\n"
    interesttransaction:
      type: object
      properties:
        InterestTransactionAmount:
          $ref: '#/components/schemas/amount'
        InterestTransactionDescription:
          $ref: '#/components/schemas/text'
        InterestTransactionType:
          $ref: '#/components/schemas/interesttransactiontypevalues'
        AppliedInterestRate:
          $ref: '#/components/schemas/rate'
        AppliedInteretType:
          $ref: '#/components/schemas/interesttypevalues'
        InterestCreditDebitIndicator:
          $ref: '#/components/schemas/debitcreditindicatortvalues'
      description: A record of applied interest
    schedule:
      type: object
      properties:
        ScheduleType:
          type: string
          description: ''
          format: string
      description: "The schedule for loan repayments ||\r\n|"
    taxtypevalues:
      enum:
        - Valueaddedtaxofzerorate
        - Provincial
        - Nationaltax
        - Statetax
        - Withholdingtax
        - Capitalgaintax
        - Interimprofittax
        - Stampduty
        - Wealthtax
        - Inheritancetax
        - Solidaritysurcharge
        - Taxcredit
        - Equalisation
        - Gifttax
        - Consumptiontax
        - Alternativeminimumtax
        - Localtax
        - Nationalfederaltax
        - Paymentlevytax
        - Stockexchangetax
        - Transactiontax
        - Transfertax
        - Valueaddedtax
        - Localbrokercommission
        - Executingbrokercommission
        - Eutaxretention
        - Aktiengewinn1
        - Aktiengewinn2
        - Zwischengewinn
        - Customstax
        - Other
        - Mietgewinn
        - Germanlocaltax3
        - Germanlocaltax4
        - Germanlocaltax2
        - Withholdingofforeigntax
        - Withholdingoflocaltax
        - Capitallosscredit
      type: string
      description: ">\r\n* `Valueaddedtaxofzerorate` - Tax for which a zero rate applies.\r\n* `Provincial` - Tax is a provincial tax.\r\n* `Nationaltax` - Tax is a national tax.\r\n* `Statetax` - Tax is a state tax.\r\n* `Withholdingtax` - Tax is on income deducted at source, which the paying agent is legally obliged to deduct from its payments of interest on deposits and other proceeds of a financial instrument.\r\n* `Capitalgaintax` - Tax is on a capital gain (realised and unrealised), that is, the profit that is gained from the sale of a financial instrument.\r\n* `Interimprofittax` - Tax is on the sum of all earnings/revenues accrued since the last dividend distribution.\r\n* `Stampduty` - Tax is on certain documents and transactions.\r\n* `Wealthtax` - Tax is a special tax imposed, applicable only when the value of assets or categories of assets owned by an entity are above a given ceiling defined by the tax authority. Wealth tax is not linked to income.\r\n* `Inheritancetax` - Tax that is payable at the time of death on any items (money or otherwise), where ownership changes either upon death or within a legally specified number of years before death.\r\n* `Solidaritysurcharge` - Tax that is levied by legal authorities for solidarity purposes.\r\n* `Taxcredit` - Direct reduction of an individual's tax liability.\r\n* `Equalisation` - The part of an investor's subscription amount that is held by the fund in order to pay incentive / performance fees at the end of the fiscal year.\r\n* `Gifttax` - Tax that is levied on assets given to individuals prior to the death of the donor. Gift tax is designed to ensure the integrity of the inheritance tax, preventing the pre-death transfer of wealth.\r\n* `Consumptiontax` - Tax that is levied on goods and services purchased by customers, and is added to the retail price.\r\n* `Alternativeminimumtax` - Tax is an alternative minimum tax.\r\n* `Localtax` - Tax that is charged by a local settlement system or local jurisdiction.\r\n* `Nationalfederaltax` - Tax is a country, national, or federal tax that is usually charged by the custodian.\r\n* `Paymentlevytax` - Tax levied on a payment.\r\n* `Stockexchangetax` - Tax collected by a stock exchange.\r\n* `Transactiontax` - Tax levied on a transaction.\r\n* `Transfertax` - Tax levied on a transfer.\r\n* `Valueaddedtax` - Tax is a value added tax.\r\n* `Localbrokercommission` - Local broker's commission amount.\r\n* `Executingbrokercommission` - Executing broker's commission amount.\r\n* `Eutaxretention` - Tax withheld at source in the framework of the European Directive on taxation of savings in the form of interest payments.\r\n* `Aktiengewinn1` - Share-related profit. This is a tax specific to the German market. The share-related-profit gives the fund the opportunity to pass on to the institutional investor redeeming fund units certain tax-free income from equity. The calculation method is based on the old Investment Tax Act (Investmentsteuergesetz).\r\n* `Aktiengewinn2` - Share-related profit. This is a tax specific to the German market. The share-related-profit gives the fund the opportunity to pass on to the institutional investor redeeming fund units certain tax-free income from equity. The calculation method is based on the new Investment Tax Act (Investmentsteuergesetz).\r\n* `Zwischengewinn` - Zwischengewinn.\r\n* `Customstax` - Tax is customs and excise.\r\n* `Other` - Another type of tax.\r\n* `Mietgewinn` - Earnings from renting.\r\n* `Germanlocaltax3` - Local tax (Zinstopf) offset interest per unit against tax exempt amount (variation to offset interest per unit in relation to tax exempt amount).\r\n* `Germanlocaltax4` - Local tax (Ertrag Besitzanteilig) yield liable for interest down payment tax.\r\n* `Germanlocaltax2` - Local tax (ZAS pflichtige Zinsen) - interest liable for interest down payment tax (proportion of gross interest per unit/interim profits that is not covered by the credit in the interest pool).\r\n* `Withholdingofforeigntax` - Rate at which the income will be withheld by the jurisdiction in which the income was originally paid, for which relief at source and/or reclaim may be possible.\r\n* `Withholdingoflocaltax` - Rate at which the income will be withheld by the jurisdiction in which the account owner is located, for which relief at source and/or reclaim may be possible.\r\n* `Capitallosscredit` - Tax recovery is due to capital loss.\r\n"
    ratetypevalues:
      enum:
        - Fixed
        - Forfeit
        - Variable
        - Open
        - Unknown
        - Nilpayment
        - Additionaltax
        - Charges
        - Cashinlieuofsecurities
        - Gross
        - Cashincentive
        - Net
        - Sollication
        - Stampduty
        - Stockexchangetax
        - Withholdingtax
        - Transfertax
        - Transactiontax
        - Taxdeferred
        - Taxfeeamount
        - Withholdingofforeigntax
        - Withholdingoflocaltax
        - Imputed
        - Precompte
        - Onetiertax
        - Localtax
        - Scheduled
        - Unscheduled
        - Anyandall
      type: string
      description: The rate type to be applied to the loan RateTypeCode|RateTypeCode (https://www.iso20022.org/standardsrepository/type/RateTypeCode)|Standard|ISO20022 BM ()
    geographicalareatypevalues:
      enum:
        - Continent
        - Country
        - State
        - District
        - Province
        - Town
        - City
        - Region
      type: string
      description: ">\r\n* `Continent` - \r\n* `Country` - \r\n* `State` - \r\n* `District` - \r\n* `Province` - \r\n* `Town` - \r\n* `City` - \r\n* `Region` - \r\n"
    addresstypevalues:
      enum:
        - PostalAddress
        - GeolocationAddress
        - LatitudeAddress
        - LongitudeAddress
        - ElectronicAddress
      type: string
      description: ">\r\n* `PostalAddress` - \r\n* `GeolocationAddress` - \r\n* `LatitudeAddress` - \r\n* `LongitudeAddress` - \r\n* `ElectronicAddress` - \r\n"
    address:
      type: object
      properties:
        AddressType:
          $ref: '#/components/schemas/addresstypevalues'
        LocationReference:
          $ref: '#/components/schemas/location'
      description: ''
    location:
      type: object
      properties:
        LocationDescription:
          $ref: '#/components/schemas/text'
        LocationDateTime:
          $ref: '#/components/schemas/datetime'
        LocationStatus:
          $ref: '#/components/schemas/status'
        LocationType:
          $ref: '#/components/schemas/geographicalareatypevalues'
        LocationZoningType:
          $ref: '#/components/schemas/text'
        LocationNeighborhoodType:
          $ref: '#/components/schemas/text'
        LocationConstructionType:
          $ref: '#/components/schemas/text'
        LocationOccupancyType:
          $ref: '#/components/schemas/text'
        LocationValue:
          $ref: '#/components/schemas/value'
        LocationCapacity:
          $ref: '#/components/schemas/text'
        LocationIdentification:
          $ref: '#/components/schemas/identifier'
        LocationAddress:
          $ref: '#/components/schemas/address'
        LocationName:
          $ref: '#/components/schemas/name'
        LocationTimeZone:
          $ref: '#/components/schemas/text'
      description: 'Place of taxation of an individual person or an organisation, where the tax is due.'
    accountstatustypevalues:
      enum:
        - Enabled
        - Disabled
        - Deleted
        - Proforma
        - Pending
      type: string
      description: ">\r\n* `Enabled` - Account can be used for its intended purpose.\r\n* `Disabled` - Account cannot be used for its intended purpose, either temporarily or permanently.\r\n* `Deleted` - Account cannot be used any longer.\r\n* `Proforma` - Account is temporary and can be partially used for its intended purpose. The account will be fully available for use when the account servicer has received all relevant documents.\r\n* `Pending` - Account change is pending approval.\r\n"
    accountstatus:
      type: object
      properties:
        AccountStatus:
          $ref: '#/components/schemas/status'
        AccountStatusType:
          $ref: '#/components/schemas/accountstatustypevalues'
      description: "A characteristic of account which refers to the LifecycleStatus of account like opened, closed, blocked, etc.\n\nSpecifies the current state of an account. (ISO20022)"
    accountidentificationtypevalues:
      enum:
        - BBAN
        - IBAN
        - UPIC
        - AccountNumber
        - PAN
        - Paym
        - Wallet
      type: string
      description: ">\r\n* `BBAN` - Basic Bank Account Number (BBAN) - identifier used nationally by financial institutions, ie, in individual countries, generally as part of a National Account Numbering Scheme(s), to uniquely identify the account of a customer. (ISO20022)\n\n.\r\n* `IBAN` - International Bank Account Number (IBAN) - identifier used internationally by financial institutions to uniquely identify the account of a customer. Further specifications of the format and content of the IBAN can be found in the standard ISO 13616 \"Banking and related financial services - International Bank Account Number (IBAN)\" version 1997-10-01, or later revisions. (ISO20022)\n\nAn identifier used internationally by financial institutions to uniquely identify the account of a customer at a financial institution, as described in the latest edition of the international standard ISO 13616. \"Banking and related financial services - International Bank Account Number (IBAN)\". (OBExternalAccountIdentification4Code)\r\n* `UPIC` - Universal Payment Identification Code (UPIC) - identifier used by the New York Clearing House to mask confidential data, such as bank accounts and bank routing numbers. UPIC numbers remain with business customers, regardless of banking relationship changes. (ISO20022)\r\n* `AccountNumber` - String of characters (mainly numbers) used to identify an account.(ISO20022)\n\nSort Code and Account Number - identifier scheme used in the UK by financial institutions to identify the account of a customer. The identifier is the concatenation of the 6 digit UK sort code and 8 digit account number. (OBExternalAccountIdentification4Code)\nThe regular expression for this identifier is: ^[0-9]{6}[0-9]{8}$\r\n* `PAN` - Primary Account Number - identifier scheme used to identify a card account. (OBExternalAccountIdentification4Code)\r\n* `Paym` - Paym Scheme to make payments via mobile (OBExternalAccountIdentification4Code)\r\n* `Wallet` - A primary and unique account identifier used to identify a wallet.\nAn ASPSP must document on their developer portal, the payment methods that supports this account identifier.(OBExternalAccountIdentification4Code)\r\n"
    accountidentification:
      type: object
      properties:
        AccountIdentificationType:
          $ref: '#/components/schemas/accountidentificationtypevalues'
        AccountIdentification:
          $ref: '#/components/schemas/identifier'
      description: The associated loan account number in any suitable format AccountIdentification |AccountIdentification  (https://www.iso20022.org/standardsrepository/type/AccountIdentification)|Standard|ISO20022 BM ()
    accountdatetypevalues:
      enum:
        - OpeningDate
        - ClosingDate
        - BlockingDate
        - MaturityDate
        - LiveDate
      type: string
      description: 'Key dates associated with the account (e.g. opening date, closing date) Account/OpeningDate|Account/OpeningDate (https://www.iso20022.org/standardsrepository/type/Account)|Standard|ISO20022 BM ()'
    accountdate:
      type: object
      properties:
        AccountDateType:
          $ref: '#/components/schemas/accountdatetypevalues'
        AccountDate:
          $ref: '#/components/schemas/datetime'
      description: 'A characteristic of account which refers to LifecycleDate of account (e.g., ClosingDate, OpeningDate, LiveDate, etc.) '
    accounttypevalues:
      enum:
        - DebitAccount
        - CreditAccount
        - VostroAcount
        - NostroAccount
        - PaymentAccount
        - SettlementAccount
        - SavingAccount
        - CurrentAccount
        - CashAccount
        - LoanAccount
      type: string
      description: ">\r\n* `DebitAccount` - \r\n* `CreditAccount` - \r\n* `VostroAcount` - In correspondent banking, an account held by one bank on behalf of another bank (the customer bank); the customer bank regards this account as its nostro account. (ECB)\r\n* `NostroAccount` - In correspondent banking, an account held by a customer bank on the books of another bank acting as a service provider. The other bank regards this account as a loro account. (ECB)\r\n* `PaymentAccount` - \r\n* `SettlementAccount` - A specific purpose account used to post debit and credit entries as a result of the transaction. (ISO20022)\n\nAccount which is used for settlement. (ISO20022)\r\n* `SavingAccount` - \r\n* `CurrentAccount` - \r\n* `CashAccount` - \r\n* `LoanAccount` - \r\n"
    accounttype:
      type: object
      properties:
        AccountType:
          $ref: '#/components/schemas/accounttypevalues'
        AccountTypeName:
          $ref: '#/components/schemas/name'
      description: 'Specifies the category of account like payment account, loan account, cash account, securities account, etc. '
    balancetypevalues:
      enum:
        - Openingbalance
        - Closingbalance
        - Currentbalance
        - Availablebalance
        - Ledgerbalance
        - Reservebalance
        - Freebalance
        - Principalbalance
      type: string
      description: ">\r\n* `Openingbalance` - Book balance of the account at the beginning of the account servicer's business day. It always equals the closing book balance from the previous business day. Note: the available balance at the beginning of the account servicer's business day may be different from the closing book balance from the previous business day. (ISO20022)\r\n* `Closingbalance` - Balance of the account at the end of the account servicer's business day. It is the sum of the opening balance at the beginning of the day and all entries booked to the account during the account servicer's business day. (ISO20022)\r\n* `Currentbalance` - Balance of the account at a precise moment in time. (ISO20022)\r\n* `Availablebalance` - Balance of money or securities that is at the disposal of the account owner on the date specified. (ISO20022)\r\n* `Ledgerbalance` - Ledger balance refers to posted transactions (e.g. limit authorisation amount - posted transactions). (ISO20022)\r\n* `Reservebalance` - \r\n* `Freebalance` - \r\n* `Principalbalance` - \r\n"
    accountbalance:
      type: object
      properties:
        BalanceAmount:
          $ref: '#/components/schemas/amount'
        BalanceType:
          $ref: '#/components/schemas/balancetypevalues'
        BalanceDate:
          $ref: '#/components/schemas/datetime'
        BalanceIndicator:
          $ref: '#/components/schemas/debitcreditindicatortvalues'
      description: The outstanding balance Balance|Balance (https://www.iso20022.org/standardsrepository/type/Balance)|Standard|ISO20022 BM ()
    currencytypevalues:
      enum:
        - BaseCurrency
        - ReportingCurrency
        - SecondaryCurrency
        - TransferCurrency
      type: string
      description: ">\r\n* `BaseCurrency` - Base currency of the account. (ISO20022)\n\r\n* `ReportingCurrency` - Currency used to calculate and report the balance and related entries of an account. (ISO20022)\n\r\n* `SecondaryCurrency` - \r\n* `TransferCurrency` - Currency of the amount to be transferred which may be different from the currency of the debtor's account. (ISO20022)\r\n"
    accountcurrency:
      type: object
      properties:
        AccountCurrencyType:
          $ref: '#/components/schemas/currencytypevalues'
        AccountCurrency:
          $ref: '#/components/schemas/currencycode'
      description: ''
    account:
      type: object
      properties:
        AccountStatus:
          $ref: '#/components/schemas/accountstatus'
        AccountIdentification:
          $ref: '#/components/schemas/accountidentification'
        AccountDate:
          $ref: '#/components/schemas/accountdate'
        AccountType:
          $ref: '#/components/schemas/accounttype'
        AccountPurpose:
          $ref: '#/components/schemas/text'
        AccountBalance:
          $ref: '#/components/schemas/accountbalance'
        AccountCurrency:
          $ref: '#/components/schemas/accountcurrency'
        AccountDescription:
          $ref: '#/components/schemas/text'
        AccountName:
          $ref: '#/components/schemas/name'
      description: Account to be used for taxes
    condition:
      type: object
      properties:
        Condition:
          type: string
          description: "Condition is a premise upon which the fulfillment of an agreement depends \n\nGeneral and special arrangements, provisions, requirements, rules, specifications, and standards that form an integral part of an agreement or contract.\n\nRead more: http://www.businessdictionary.com/definition/terms-and-conditions.html\n\n"
          format: class
      description: Specifies taxation conditions.
    taxarrangement:
      type: object
      properties:
        TaxType:
          $ref: '#/components/schemas/taxtypevalues'
        TaxAmount:
          $ref: '#/components/schemas/amount'
        TaxRate:
          $ref: '#/components/schemas/rate'
        TaxRateType:
          $ref: '#/components/schemas/ratetypevalues'
        PlaceOfTaxation:
          $ref: '#/components/schemas/location'
        TaxableParty:
          $ref: '#/components/schemas/involvedparty'
        TaxAccount:
          $ref: '#/components/schemas/account'
        TaxationCondition:
          $ref: '#/components/schemas/condition'
        TaxCurrency:
          $ref: '#/components/schemas/currencycode'
        TaxDueDate:
          $ref: '#/components/schemas/datetime'
        TaxCalculationDate:
          $ref: '#/components/schemas/datetime'
        TaxPayer:
          $ref: '#/components/schemas/involvedparty'
        TaxRecipient:
          $ref: '#/components/schemas/involvedparty'
      description: Specifies the tax on interest
    Interest:
      type: object
      properties:
        InterestPaymentFrequency:
          $ref: '#/components/schemas/frequency'
        InterestAccrualDate:
          $ref: '#/components/schemas/datetime'
        InterestRate:
          $ref: '#/components/schemas/rate'
        InterestCalculationFrequency:
          $ref: '#/components/schemas/frequency'
        InterestFee:
          $ref: '#/components/schemas/feearrangement'
        InterestType:
          $ref: '#/components/schemas/interesttypevalues'
        InterestCalculationMethod:
          $ref: '#/components/schemas/interestcalculationmethodtypevalues'
        InterestCalculationDate:
          $ref: '#/components/schemas/datetime'
        InterestAccrualAmount:
          $ref: '#/components/schemas/amount'
        InterestPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        InterestAmount:
          $ref: '#/components/schemas/amount'
        InterestRateType:
          $ref: '#/components/schemas/interestratetypevalues'
        InterestCreditDebitIndicator:
          $ref: '#/components/schemas/debitcreditindicatortvalues'
        InterestTransaction:
          $ref: '#/components/schemas/interesttransaction'
        InterestAccrualType:
          $ref: '#/components/schemas/interesttypevalues'
        InterestRateApplicationSchedule:
          $ref: '#/components/schemas/schedule'
        InterestTax:
          $ref: '#/components/schemas/taxarrangement'
        InterestDate:
          $ref: '#/components/schemas/datetime'
      description: ''
    withdrawaltypevalues:
      enum:
        - CashWithdrawal
        - SecurityWithdrawal
      type: string
      description: ">\r\n* `CashWithdrawal` - \r\n* `SecurityWithdrawal` - \r\n"
    date:
      type: object
      properties:
        DateContent:
          type: string
          description: ''
          format: string
      description: The planned maturity date of the loan ISODate|ISODate (https://www.iso20022.org/standardsrepository/type/ISODate)|Standard|ISO20022 BM ()
    paymenttypevalues:
      enum:
        - Cashtransaction
        - Domesticpayment
        - Domestichighvaluepayment
        - Domesticprioritypayment
        - Crossborderpayment
        - Crossborderprioritypayment
        - Crossborderhighvaluepayment
        - Thirdcurrencypayment
        - Thirdcurrencyhighvaluepayment
        - Thirdcurrencyprioritypayment
        - Tradesettlementpayment
        - Foreignexchange
        - Equivalentamount
        - Loan
        - Loanrepayment
        - Securities
        - Lockbox
        - Dividend
        - Crossedcheque
        - Opencheque
        - Ordercheque
        - Circularcheque
        - Travellerscheques
        - Bankdraft
        - Cashletter
        - Documentarycredit
        - Billofexchange
        - Collection
        - Cashmanagementtransfer
        - Sweepaccount
        - Topaccount
        - Zerobalanceaccount
        - Standingfacilities
        - Swiftpayservicelevelcredit
        - Priorityservicelevelcredit
        - Standardservicelevelcredit
        - Liquiditytransfer
        - Advancepayment
        - Valuedateadjustment
        - Dvpgross
        - Dvpnet
        - Netting
        - Limitpayment
        - Backup
        - Expresspayment
        - Centralbankoperation
        - Clspayment
        - Eurodomesticpayment
        - Agriculturaltransfer
        - Alimonypayment
        - Balanceretail
        - Bonuspayment.
        - Brokeragefee
        - Capitalbuilding
        - Charitypayment
        - Childbenefit
        - Commercialcredit
        - Commission
        - Commoditytransfer
        - Costs
        - Copyright
        - Governmentpayment
        - Instalmenthirepurchaseagreement
        - Insurancepremium
        - Intracompanypayment
        - Interest
        - Licensefee
        - Metals
        - Pensionpayment
        - Purchasesaleofgoods
        - Refund
        - Rent
        - Royalties
        - Purchasesaleofservices
        - Salarypayment
        - Socialsecuritybenefit
        - Standingorder
        - Subscription
        - Treasurystatepayment
        - Unemploymentdisabilitybenefit
        - Valueaddedtaxpayment
        - Withholdingtax
        - Taxpayment
        - Miscellaneous
        - Overnightdeposit
        - Marginallending
        - Other
        - Upfront
        - Unwind
        - Principalexchange
      type: string
      description: The type of repayment arrangement in place (e.g. structured) PaymentTypeCode|PaymentTypeCode (https://www.iso20022.org/standardsrepository/type/PaymentTypeCode)|Standard|ISO20022 BM ()
    paymentpurposevalues:
      enum:
        - Salarypayment
        - Treasurypayment
        - Advancepayment
        - Agriculturaltransfer
        - Alimonypayment
        - Childbenefit
        - Unemploymentdisabilitybenefit
        - Bonuspayment.
        - Cashmanagementtransfer
        - Capitalbuilding
        - Charitypayment
        - Collectionpayment
        - Commoditytransfer
        - Commercialpayment
        - Commission
        - Costs
        - Copyright
        - Dividend
        - Foreignexchange
        - Purchasesaleofgoods
        - Governmentpayment
        - Instalmenthirepurchaseagreement
        - Intracompanypayment
        - Insurancepremium
        - Interest
        - Licensefee
        - Loan
        - Loanrepayment
        - Netting
        - Payroll
        - Pensionpayment
        - Refund
        - Rent
        - Royalties
        - Purchasesaleofservices
        - Securities
        - Socialsecuritybenefit
        - Subscription
        - Taxpayment
        - Valueaddedtaxpayment
        - Consumerthirdpartyconsolidatedpayment
        - Debitcollectionpayment
        - Supplierpayment
        - Hedging
        - Multipleservicetypes
        - Nototherwisespecified
        - Cardpayment
        - Creditcardbill
        - Ferry
        - Air
        - Bus
        - Railway
        - Convalescentcarefacility
        - Dentalservices
        - Anesthesiaservices
        - Homehealthcare
        - Hospitalcare
        - Intermediatecarefacility
        - Longtermcarefacility
        - Medicalservices
        - Visioncare
        - Durablemedicaleequipment
        - Cabletvbill
        - Electricitybill
        - Gasbill
        - Telephonebill
        - Othertelecomrelatedbill
        - Waterbill
        - Study
        - Pricepayment
        - Installment
        - Recurringinstallmentpayment
        - Openingfee
        - Cancellationfee
        - Governmentinsurance
        - Insurancepremiumcar
        - Laborinsurance
        - Lifeinsurance
        - Propertyinsurance
        - Healthinsurance
        - Carloanprincipalrepayment
        - Housingloanrepayment
        - Companysocialloanpaymenttobank
        - Estatetax
        - Housingtax
        - Incometax
        - Netincometax
        - Businessexpenses
        - Trustfund
        - Networkcharge
        - Networkcommunication
        - Receiptpayment
        - Paymentterms
        - Other
        - Withholding
      type: string
      description: ">\r\n* `Salarypayment` - Transaction is the payment of salaries.\r\n* `Treasurypayment` - Transaction is related to treasury operations.\r\n* `Advancepayment` - Transaction is an advance payment.\r\n* `Agriculturaltransfer` - Transaction is related to the agricultural domain.\r\n* `Alimonypayment` - Transaction is the payment of alimony.\r\n* `Childbenefit` - Transaction is related to a payment made to assist parent/guardian to maintain child.\r\n* `Unemploymentdisabilitybenefit` - Transaction is related to a payment to a person who is unemployed/disabled.\r\n* `Bonuspayment.` - Transaction is related to payment of a bonus.\r\n* `Cashmanagementtransfer` - Transaction is a general cash management instruction.\r\n* `Capitalbuilding` - Transaction is related to capital building fringe fortune, ie capital building for retirement.\r\n* `Charitypayment` - Transaction is a payment for charity reasons.\r\n* `Collectionpayment` - Transaction is a collection of funds initiated via a credit transfer or direct debit.\r\n* `Commoditytransfer` - Transaction is payment of commodities.\r\n* `Commercialpayment` - Transaction is related to a payment of commercial credit or debit. (formerly CommercialCredit).\r\n* `Commission` - Transaction is payment of commission.\r\n* `Costs` - Transaction is related to payment of costs.\r\n* `Copyright` - Transaction is payment of copyright.\r\n* `Dividend` - Transaction is payment of dividends.\r\n* `Foreignexchange` - Transaction is related to a foreign exchange operation.\r\n* `Purchasesaleofgoods` - Transaction is related to purchase and sale of goods.\r\n* `Governmentpayment` - Transaction is a payment to or from a government department.\r\n* `Instalmenthirepurchaseagreement` - Transaction is payment for an installment/hire-purchase agreement.\r\n* `Intracompanypayment` - Transaction is an intra-company payment, ie, a payment between two companies belonging to the same group.\r\n* `Insurancepremium` - Transaction is payment of an insurance premium.\r\n* `Interest` - Transaction is payment of interest.\r\n* `Licensefee` - Transaction is payment of a license fee.\r\n* `Loan` - Transaction is related to transfer of loan to borrower.\r\n* `Loanrepayment` - Transaction is related to repayment of loan to lender.\r\n* `Netting` - Transaction is related to a netting operation.\r\n* `Payroll` - Transaction is related to the payment of payroll.\r\n* `Pensionpayment` - Transaction is the payment of pension.\r\n* `Refund` - Transaction is the payment of a refund.\r\n* `Rent` - Transaction is the payment of rent.\r\n* `Royalties` - Transaction is the payment of royalties.\r\n* `Purchasesaleofservices` - Transaction is related to purchase and sale of services.\r\n* `Securities` - Transaction is the payment of securities.\r\n* `Socialsecuritybenefit` - Transaction is a social security benefit, ie payment made by a government to support individuals.\r\n* `Subscription` - Transaction is related to a payment of information or entertainment services either in printed or electronic form.\r\n* `Taxpayment` - Transaction is the payment of taxes.\r\n* `Valueaddedtaxpayment` - Transaction is the payment of value added tax.\r\n* `Consumerthirdpartyconsolidatedpayment` - Transaction is a payment used by a third party who can collect funds to pay on behalf of consumers, ie credit counseling or bill payment companies.\r\n* `Debitcollectionpayment` - Collection of funds initiated via a debit transfer.\r\n* `Supplierpayment` - Transaction is related to a payment to a supplier.\r\n* `Hedging` - Transaction is related to a hedging operation.\r\n* `Multipleservicetypes` - Transaction is related to a payment for multiple service types.\r\n* `Nototherwisespecified` - Transaction is related to a payment for type of services not specified elsewhere.\r\n* `Cardpayment` - Transaction is related to a payment of credit card account.\r\n* `Creditcardbill` - Transaction is related to a payment of credit card bill.\r\n* `Ferry` - Transaction is a payment for ferry related business.\r\n* `Air` - Transaction is a payment for air transport related business.\r\n* `Bus` - Transaction is a payment for bus transport related business.\r\n* `Railway` - Transaction is a payment for railway transport related business.\r\n* `Convalescentcarefacility` - Transaction is a payment for convalescence care facility services.\r\n* `Dentalservices` - Transaction is a payment for dental services.\r\n* `Anesthesiaservices` - Transaction is a payment for anesthesia services.\r\n* `Homehealthcare` - Transaction is a payment for home health care services.\r\n* `Hospitalcare` - Transaction is a payment for hospital care services.\r\n* `Intermediatecarefacility` - Transaction is a payment for intermediate care facility services.\r\n* `Longtermcarefacility` - Transaction is a payment for long-term care facility services.\r\n* `Medicalservices` - Transaction is a payment for medical care services.\r\n* `Visioncare` - Transaction is a payment for vision care services.\r\n* `Durablemedicaleequipment` - Transaction is a payment is for use of durable medical equipment.\r\n* `Cabletvbill` - Transaction is related to a payment of cable TV bill.\r\n* `Electricitybill` - Transaction is related to a payment of electricity bill.\r\n* `Gasbill` - Transaction is related to a payment of gas bill.\r\n* `Telephonebill` - Transaction is related to a payment of telephone bill.\r\n* `Othertelecomrelatedbill` - Transaction is related to a payment of other telecom related bill.\r\n* `Waterbill` - Transaction is related to a payment of water bill.\r\n* `Study` - Transaction is related to a payment of study/tuition costs.\r\n* `Pricepayment` - Transaction is related to a payment of a price.\r\n* `Installment` - Transaction is related to a payment of an installment.\r\n* `Recurringinstallmentpayment` - Transaction is related to a payment of a recurring installment made at regular intervals.\r\n* `Openingfee` - Transaction is related to a payment of opening fee.\r\n* `Cancellationfee` - Transaction is related to a payment of cancellation fee.\r\n* `Governmentinsurance` - Transaction is related to a payment of government insurance.\r\n* `Insurancepremiumcar` - Transaction is a payment of car insurance premium.\r\n* `Laborinsurance` - Transaction is a payment of labor insurance.\r\n* `Lifeinsurance` - Transaction is a payment of life insurance.\r\n* `Propertyinsurance` - Transaction is a payment of property insurance.\r\n* `Healthinsurance` - Transaction is a payment of health insurance.\r\n* `Carloanprincipalrepayment` - Transaction is a payment of car loan principal payment.\r\n* `Housingloanrepayment` - Transaction is related to a payment of housing loan.\r\n* `Companysocialloanpaymenttobank` - Transaction is a payment by a company to a bank for financing social loans to employees.\r\n* `Estatetax` - Transaction is related to a payment of estate tax.\r\n* `Housingtax` - Transaction is related to a payment of housing tax.\r\n* `Incometax` - Transaction is related to a payment of income tax.\r\n* `Netincometax` - Transaction is related to a payment of net income tax.\r\n* `Businessexpenses` - Transaction is related to a payment of business expenses.\r\n* `Trustfund` - Transaction is related to a payment of a trust fund.\r\n* `Networkcharge` - Transaction is related to a payment of network charges.\r\n* `Networkcommunication` - Transaction is related to a payment of network communication.\r\n* `Receiptpayment` - Transaction is related to a payment of receipt.\r\n* `Paymentterms` - Transaction is related to payment terms specifications.\r\n* `Other` - Other payment purpose.\r\n* `Withholding` - Transaction is related to a payment of withholding tax.\r\n"
    paymenttransactionstatustypevalues:
      enum:
        - Acceptedtechnicalvalidation
        - Received
        - Partiallyaccepted
        - Rejected
        - Pending
        - Acceptedcustomerprofile
        - Acceptedsettlementinprocess
        - Acceptedsettlementcompleted
        - Accepted
        - Acceptedcancellationrequest
        - Rejectedcancellationrequest
        - Acceptedwithchange
        - Partiallyacceptedcancellationrequest
        - Pendingcancellationrequest
        - Acceptedcreditsettlementcompleted
        - Paymentcancelled
        - Nocancellationprocess
      type: string
      description: ">\r\n* `Acceptedtechnicalvalidation` - Authentication and syntactical and semantical validation are successful.\r\n* `Received` - Payment initiation has been received by the receiving agent.\r\n* `Partiallyaccepted` - A number of transactions have been accepted, whereas another number of transactions have not yet achieved 'accepted' status.\r\n* `Rejected` - Payment initiation or individual transaction included in the payment initiation has been rejected.\r\n* `Pending` - Payment initiation or individual transaction included in the payment initiation is pending.  Further checks and status update will be performed.\r\n* `Acceptedcustomerprofile` - Preceding check of technical validation was successful. Customer profile check was also successful.\r\n* `Acceptedsettlementinprocess` - All preceding checks such as technical validation and customer profile were successful and therefore the payment initiation has been accepted for execution.\r\n* `Acceptedsettlementcompleted` - Settlement on the debtor's account has been completed.\r\n* `Accepted` - Request is accepted.\r\n* `Acceptedcancellationrequest` - Cancellation is accepted.\r\n* `Rejectedcancellationrequest` - Cancellation request is rejected\r\n* `Acceptedwithchange` - Instruction is accepted but a change will be made, such as date or remittance not sent.\r\n* `Partiallyacceptedcancellationrequest` - Cancellation is partially accepted.\r\n* `Pendingcancellationrequest` - Cancellation request is pending.\r\n* `Acceptedcreditsettlementcompleted` - Settlement on the creditor's account has been completed.\r\n* `Paymentcancelled` - Payment is cancelled.\r\n* `Nocancellationprocess` - There is no cancellation process ongoing\r\n"
    paymenttransactionstatus:
      type: object
      properties:
        PaymentTransactionStatus:
          $ref: '#/components/schemas/status'
        PaymentTransactionStatusType:
          $ref: '#/components/schemas/paymenttransactionstatustypevalues'
      description: "Specifies the status of a payment transaction at a specified time.\nElements"
    paymenttransactioncurrency:
      type: object
      properties:
        PaymentTransactionCurrency:
          $ref: '#/components/schemas/currencycode'
        PaymentTransactionCurrencyType:
          $ref: '#/components/schemas/currencytypevalues'
      description: ''
    paymentdatetimetypevalues:
      enum:
        - Requestedexecutiondate
        - Acceptancedatetime
        - Creationdate
        - Valuedate
        - Duedate
        - Expirydate
      type: string
      description: ">\r\n* `Requestedexecutiondate` - Date at which the initiating party requests the clearing agent to process the payment. ISO20022\nUsage: This is the date on which the debtor's account is to be debited. If payment by cheque, the date when the cheque must be generated by the bank. \r\n* `Acceptancedatetime` - Date and time at which all processing conditions for execution of the payment are met and adequate financial cover is available at the account servicing agent. ISO20022\r\n* `Creationdate` - Date and time at which the payment execution was created by the instructing agent. ISO20022\r\n* `Valuedate` - Date on which a payment must be executed (ISO20022)\r\n* `Duedate` - Due date for the payment. (ISO20022)\r\n* `Expirydate` - \r\n"
    paymenttransaction:
      type: object
      properties:
        PaymentTransactionType:
          $ref: '#/components/schemas/paymenttypevalues'
        PaymentTransactionAmount:
          $ref: '#/components/schemas/amount'
        PaymentTransactionIdentification:
          $ref: '#/components/schemas/identifier'
        PaymentTransactionUsedMechanism:
          $ref: '#/components/schemas/text'
        PaymentTransactionDatetime:
          $ref: '#/components/schemas/datetime'
        PaymentTransactionPurpose:
          $ref: '#/components/schemas/paymentpurposevalues'
        PaymentTransactionStatus:
          $ref: '#/components/schemas/paymenttransactionstatus'
        PaymentTransactionAppliedFeeAmount:
          $ref: '#/components/schemas/amount'
        PaymentTransactionCurrency:
          $ref: '#/components/schemas/paymenttransactioncurrency'
        PaymentCreditDebitIndicator:
          $ref: '#/components/schemas/debitcreditindicatortvalues'
        PaymentTransactionAmountType:
          $ref: '#/components/schemas/amounttypevalues'
        PaymentTransactionDatetimeType:
          $ref: '#/components/schemas/paymentdatetimetypevalues'
      description: ''
    Withdrawal:
      type: object
      properties:
        WithdrawalTransactionSourceReference:
          type: string
          description: Identifies the target for the withdrawal
          format: object
        WithdrawalTransactionDescription:
          $ref: '#/components/schemas/text'
        WithdrawalTransactionAmount:
          $ref: '#/components/schemas/amount'
        WithdrawalType:
          $ref: '#/components/schemas/withdrawaltypevalues'
        WithdrawalTransactionWithdrawalType:
          $ref: '#/components/schemas/withdrawaltypevalues'
        WithdrawalTransactionDate:
          $ref: '#/components/schemas/date'
        WithdrawalTransaction:
          $ref: '#/components/schemas/paymenttransaction'
      description: ''
    task:
      type: object
      properties:
        Task:
          type: string
          description: ''
          format: datatype
      description: Description of the restructuring required
    assessmenttypevalues:
      enum:
        - AssetValuation
        - ProductMatching
        - Authorization
        - Authentication
        - QualityAssurance
        - Audit
        - ComplianceCheck
        - FundingCheck
        - SuitabilityCheck
        - PerformanceCheck
        - ImpactAssessment
        - RiskAssessment
        - Rating
        - UnderwritingAssessment
        - Qualification
        - Verification
        - KYCAssessment
        - PEPAssessment
        - AMLAssessment
      type: string
      description: ">\r\n* `AssetValuation` - \r\n* `ProductMatching` - \r\n* `Authorization` - An evaluation whether a party or system is allowed to do something.\n\nThe consent given by a participant (or a third party acting on behalf of that participant) in order to transfer funds or securities. (ECB)\n\nAuthorization is a mechanism by which a computer system determines whether to allow or deny specific action to a user. Authorization is often controlled by rather complex rules and algorithms, usually specified as part of an access control model. Authorization often follows (and required) authentication, however, authentication and authorization are two separate mechanisms. In rare cases, \"authorization\" is understood as a process of allowing access, granting permissions or giving approval. Such as \"authorization\" of a request to join a group. (ISO/IEC 24760-1:2019 - IT Security and Privacy)\r\n* `Authentication` - An evaluation whether a party or system is what it claims to be.\n\nA security mechanism for verifying: 1) the identity of an individual or other entity (including verification by means of a computer or computer application); and 2) the level of authority of that person or entity (i.e. the ability of that person or entity to perform specific tasks or activities). (ECB)\n\nAuthentication is a mechanism by which a computer system checks that the user is really the one she or he claims to be. Authentication can be implemented by a broad variety of mechanisms broadly divided into three categories: something you know, something you have, something you are. Traditionally, authentication is done by the means of by username and password. Authentication is often followed by authorization, however, authentication and authorization are two separate mechanisms. (ISO/IEC 24760-1:2019 - IT Security and Privacy)\r\n* `QualityAssurance` - \r\n* `Audit` - \r\n* `ComplianceCheck` - \r\n* `FundingCheck` - \r\n* `SuitabilityCheck` - \r\n* `PerformanceCheck` - \r\n* `ImpactAssessment` - \r\n* `RiskAssessment` - \r\n* `Rating` - \r\n* `UnderwritingAssessment` - \r\n* `Qualification` - \r\n* `Verification` - A process establishing that a particular information is correct, while the meaning of \"information\" and \"correct\" varies from context to context. When dealing with identity information, this usually means formal verification of identity attributes, checking the schema, identifier uniqueness and referential integrity. However, verification may mean deeper verification, such as checking that the information is true and up-to-date.  (ISO/IEC 24760-1:2019 - IT Security and Privacy)\n\r\n* `KYCAssessment` - An assessment conducted by businesses and financial institutions to verify and confirm the identity of their customers or clients. The primary purpose of a KYC check is to prevent illegal activities, such as money laundering, terrorist financing, and fraud, by ensuring that customers are who they claim to be.\r\n* `PEPAssessment` - A PEP check, or \"Politically Exposed Person\" check, is an assessment conducted by used by businesses, financial institutions, and government agencies to identify individuals who hold prominent public positions or have significant political influence. The purpose of a PEP check is to assess and manage the potential risks associated with doing business with these individuals, as they may be more susceptible to corruption, money laundering, or other illicit activities.\r\n* `AMLAssessment` - An AML (Anti-Money Laundering) check is an assessment conducted by businesses, financial institutions, and other organizations to prevent and detect money laundering and the financing of criminal activities. The main purpose of an AML check is to ensure that financial transactions and business relationships are not being used to disguise the illegal origins of funds.\r\n"
    model:
      type: object
      properties:
        ModelType:
          type: string
          description: 'The type or category of model  '
          format: string
        ModelPurpose:
          type: string
          description: A description of the model that clarifies the intended analysis/insights provided
          format: string
        ModelVersion:
          type: string
          description: ''
          format: string
      description: ''
    financialdocumenttypevalues:
      enum:
        - Meteredserviceinvoice
        - Creditnoterelatedtofinancialadjustment
        - Debitnoterelatedtofinancialadjustment
        - Commercialinvoice
        - Creditnote
        - Debitnote
        - Hireinvoice
        - Selfbilledinvoice
        - Remittanceadvicemessage
        - Relatedpaymentinstruction
        - Commercialcontract
        - Foreignexchangedealreference
        - Statementofaccount
        - Dispatchadvice
        - Purchaseorder
        - Structuredcommunicationreference
        - Billoflading
        - Voucher
        - Accountreceivableopenitem
        - Tradeservicesutilitytransaction
        - Cashierreceipt
        - Customerreceipt
        - Journal
        - Salereceipt
      type: string
      description: ">\r\n* `Meteredserviceinvoice` - Document is an invoice claiming payment for the supply of metered services, for example gas or electricity supplied to a fixed meter.\r\n* `Creditnoterelatedtofinancialadjustment` - Document is a credit note for the final amount settled for a commercial transaction.\r\n* `Debitnoterelatedtofinancialadjustment` - Document is a debit note for the final amount settled for a commercial transaction.\r\n* `Commercialinvoice` - Document is an invoice.\r\n* `Creditnote` - Document is a credit note.\r\n* `Debitnote` - Document is a debit note.\r\n* `Hireinvoice` - Document is an invoice for the hiring of human resources or renting goods or equipment.\r\n* `Selfbilledinvoice` - Document is an invoice issued by the debtor.\r\n* `Remittanceadvicemessage` - Document is a remittance advice sent separately from the current transaction.\r\n* `Relatedpaymentinstruction` - Document is a linked payment instruction to which the current payment instruction is related, for example, in a cover scenario.\r\n* `Commercialcontract` - Document is an agreement between the parties, stipulating the terms and conditions of the delivery of goods or services.\r\n* `Foreignexchangedealreference` - Document is a pre-agreed or pre-arranged foreign exchange transaction to which the payment transaction refers.\r\n* `Statementofaccount` - Document is a statement of the transactions posted to the debtor's account at the supplier.\r\n* `Dispatchadvice` - Document is a dispatch advice.\r\n* `Purchaseorder` - Document is a purchase order.\r\n* `Structuredcommunicationreference` - Document is a structured communication reference provided by the creditor to identify the referred transaction.\r\n* `Billoflading` - Document is a shipping notice.\r\n* `Voucher` - Document is an electronic payment document.\r\n* `Accountreceivableopenitem` - Document is a payment that applies to a specific source document.\r\n* `Tradeservicesutilitytransaction` - Document is a transaction identifier as assigned by the Trade Services Utility.\r\n* `Cashierreceipt` - When the Sale system print the Cashier copy of the Payment receipt.\r\n* `Customerreceipt` - When the Sale System requires   the POI system to print the Customer receipt.\r\n* `Journal` - When the POI or the Sale System wants to store a message on the journal printer or electronic journal of the Sale Terminal (it is sometimes a Sale Logging/Journal Printer).\r\n* `Salereceipt` - When the Sale System requires the POI system to print the Sale receipt.\r\n"
    documentdatetimetypevalues:
      enum:
        - CreationDate
        - CapturingDate
        - VersionDate
        - ValueDate
        - IssueDate
      type: string
      description: ">\r\n* `CreationDate` - \r\n* `CapturingDate` - \r\n* `VersionDate` - \r\n* `ValueDate` - \r\n* `IssueDate` - \r\n"
    document:
      type: object
      properties:
        DocumentIdentification:
          $ref: '#/components/schemas/identifier'
        DocumentVersion:
          type: string
          description: ''
          format: number
        DocumentType:
          $ref: '#/components/schemas/financialdocumenttypevalues'
        DocumentStatus:
          $ref: '#/components/schemas/status'
        DocumentDateTime:
          $ref: '#/components/schemas/datetime'
        DocumentName:
          $ref: '#/components/schemas/name'
        DocumentDateTimeType:
          $ref: '#/components/schemas/documentdatetimetypevalues'
        DocumentPurpose:
          $ref: '#/components/schemas/text'
        DocumentFormat:
          $ref: '#/components/schemas/text'
        DocumentSubject:
          $ref: '#/components/schemas/text'
        DocumentDescription:
          $ref: '#/components/schemas/text'
        DocumentValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
      description: Document that provides background or corroborating information regarding an assessment(s).
    requirement:
      type: object
      properties:
        RequirementType:
          type: string
          description: ''
          format: string
      description: ''
    assessment:
      type: object
      properties:
        AssessmentType:
          $ref: '#/components/schemas/assessmenttypevalues'
        AssessmentMethod:
          $ref: '#/components/schemas/text'
        AssessmentSchedule:
          $ref: '#/components/schemas/schedule'
        AssessmentDescription:
          $ref: '#/components/schemas/text'
        AssessmentModel:
          $ref: '#/components/schemas/model'
        AssessmentDateTime:
          $ref: '#/components/schemas/datetime'
        AssessmentResult:
          $ref: '#/components/schemas/text'
        AssessmentSupportingDocument:
          $ref: '#/components/schemas/document'
        AssessmentRepresentingDocument:
          $ref: '#/components/schemas/document'
        AssessmentRequiredAdjustment:
          $ref: '#/components/schemas/text'
        AssessmentRequirement:
          $ref: '#/components/schemas/requirement'
        AssessmentExpiryDate:
          $ref: '#/components/schemas/date'
        AssessmentStatus:
          $ref: '#/components/schemas/status'
      description: Definition of issue to resolve and the restructuring solution with associated changes to loan terms and the assessed impact
    Restructuring:
      type: object
      properties:
        RestructuringTask:
          $ref: '#/components/schemas/task'
        RestructuringEvaluation:
          $ref: '#/components/schemas/assessment'
        RestructuringWriteDown:
          $ref: '#/components/schemas/assessment'
      description: ''
    modalitytypevalues:
      enum:
        - AllocationModality
        - CalculationModality
        - DerivationModality
        - PaymentModality
        - ProcessingModality
        - ApplicationModality
        - DeliveryModality
      type: string
      description: ">\r\n* `AllocationModality` - \r\n* `CalculationModality` - \r\n* `DerivationModality` - \r\n* `PaymentModality` - \r\n* `ProcessingModality` - \r\n* `ApplicationModality` - \r\n* `DeliveryModality` - \r\n"
    servicemodality:
      type: object
      properties:
        ServiceModalityType:
          $ref: '#/components/schemas/modalitytypevalues'
      description: Description of the fee calculation method for this fee type
    feepaymentmethodtypevalues:
      enum:
        - Cash
        - Unit
      type: string
      description: ">\r\n* `Cash` - Payment is with cash.\r\n* `Unit` - Units are redeemed to cover payment.\r\n"
    feecalculationmethodtypevalues:
      enum:
        - Flat
        - Perunit
        - Percentage
        - Rateperbrackets
        - Ratewithminimumamount
        - Ratewithmaximumamount
        - Other
        - Grossamount
        - Netamount
        - Netassetvalueprice
      type: string
      description: ">\r\n* `Flat` - Charge/tax basis is a lump sum.\r\n* `Perunit` - Charges/tax basis is per unit of financial instrument.\r\n* `Percentage` - Charge/tax basis is a percentage.\r\n* `Rateperbrackets` - Charge/tax basis is a percentage which depends on the tax brackets.\r\n* `Ratewithminimumamount` - Rate with a minimum amount.\r\n* `Ratewithmaximumamount` - Rate with a maximum amount.\r\n* `Other` - Another type of taxation basis.\r\n* `Grossamount` - Charge/Commission/tax basis is based on the gross amount.\r\n* `Netamount` - Charge/commission/tax basis is based on the net amount.\r\n* `Netassetvalueprice` - Charge/tax basis is the price.\r\n"
    feecalculationfrequencyvalues:
      enum:
        - Onclosing
        - Onopening
        - Chargingperiod
        - Daily
        - Peritem
        - Monthly
        - Onanniversary
        - Other
        - Perhundredpounds
        - Perhour
        - Peroccurrence
        - Persheet
        - Pertransaction
        - Pertransactionamount
        - Pertransactionpercentage
        - Quarterly
        - Sixmonthly
        - Statementmonthly
        - Weekly
        - Yearly
      type: string
      description: ">\r\n* `Onclosing` - This fee is triggered on closing of a product\r\n* `Onopening` - This fee is triggered on opening of a product\r\n* `Chargingperiod` - This fee is triggered at the end of each charging period\r\n* `Daily` - This fee is triggered every day\r\n* `Peritem` - This fee is triggered by the processing of an item on the product\r\n* `Monthly` - This fee is triggered monthly\r\n* `Onanniversary` - This fee is triggered on the anniversary of opening the product\r\n* `Other` - Other Fee Frequency\r\n* `Perhundredpounds` - This fee is triggered for every hundred pounds withdrawn\r\n* `Perhour` - This fee is triggered every hour\r\n* `Peroccurrence` - This fee is triggered per occurrence of the transaction or service. This differs from PerItem, in that if a batch of items is processed at the same time, a PerOccurrence fee would incur a single charge, whereas a PerItem fee would be charged for each item within the batch.\r\n* `Persheet` - This fee is levied on every statement sheet\r\n* `Pertransaction` - The fee is charged for each transaction\r\n* `Pertransactionamount` - The amount stated is levied for each transaction processed\r\n* `Pertransactionpercentage` - The fee amount is the given percentage of the transaction processed and is levied for each transaction\r\n* `Quarterly` - This fee is triggered at the end of every quarter\r\n* `Sixmonthly` - This fee is triggered at the end of every 6 month period\r\n* `Statementmonthly` - This fee is triggered based on a monthly statement period\r\n* `Weekly` - The fee is triggered weekly\r\n* `Yearly` - This fee is triggered yearly\r\n"
    feeapplicationfrequencyvalues:
      enum:
        - Onclosing
        - Onopening
        - Chargingperiod
        - Daily
        - Peritem
        - Monthly
        - Onanniversary
        - Other
        - Perhundredpounds
        - Perhour
        - Peroccurrence
        - Persheet
        - Pertransaction
        - Pertransactionamount
        - Pertransactionpercentage
        - Quarterly
        - Sixmonthly
        - Statementmonthly
        - Weekly
        - Yearly
      type: string
      description: ">\r\n* `Onclosing` - This fee is triggered on closing of a product\r\n* `Onopening` - This fee is triggered on opening of a product\r\n* `Chargingperiod` - This fee is triggered at the end of each charging period\r\n* `Daily` - This fee is triggered every day\r\n* `Peritem` - This fee is triggered by the processing of an item on the product\r\n* `Monthly` - This fee is triggered monthly\r\n* `Onanniversary` - This fee is triggered on the anniversary of opening the product\r\n* `Other` - Other Fee Frequency\r\n* `Perhundredpounds` - This fee is triggered for every hundred pounds withdrawn\r\n* `Perhour` - This fee is triggered every hour\r\n* `Peroccurrence` - This fee is triggered per occurrence of the transaction or service. This differs from PerItem, in that if a batch of items is processed at the same time, a PerOccurrence fee would incur a single charge, whereas a PerItem fee would be charged for each item within the batch.\r\n* `Persheet` - This fee is levied on every statement sheet\r\n* `Pertransaction` - The fee is charged for each transaction\r\n* `Pertransactionamount` - The amount stated is levied for each transaction processed\r\n* `Pertransactionpercentage` - The fee amount is the given percentage of the transaction processed and is levied for each transaction\r\n* `Quarterly` - This fee is triggered at the end of every quarter\r\n* `Sixmonthly` - This fee is triggered at the end of every 6 month period\r\n* `Statementmonthly` - This fee is triggered based on a monthly statement period\r\n* `Weekly` - The fee is triggered weekly\r\n* `Yearly` - This fee is triggered yearly\r\n"
    ServiceFees:
      type: object
      properties:
        FeeCreditAccount:
          $ref: '#/components/schemas/account'
        FeeRate:
          $ref: '#/components/schemas/rate'
        FeeCalculationMethod:
          $ref: '#/components/schemas/servicemodality'
        FeePaymentMethodType:
          $ref: '#/components/schemas/feepaymentmethodtypevalues'
        ChargeBearerType:
          $ref: '#/components/schemas/chargebearertypevalues'
        FeeCalculationMethodType:
          $ref: '#/components/schemas/feecalculationmethodtypevalues'
        FeeType:
          $ref: '#/components/schemas/feetypevalues'
        ChargeBearerReference:
          $ref: '#/components/schemas/involvedparty'
        FeePaymentMethod:
          $ref: '#/components/schemas/servicemodality'
        FeeApplicationDate:
          $ref: '#/components/schemas/datetime'
        FeeApplicationCreditDebitIndicator:
          $ref: '#/components/schemas/debitcreditindicatortvalues'
        AccruedCreditDebitIndicator:
          $ref: '#/components/schemas/debitcreditindicatortvalues'
        FeeCalculationFrequency:
          $ref: '#/components/schemas/feecalculationfrequencyvalues'
        FeeAmount:
          $ref: '#/components/schemas/amount'
        FeeApplicationFrequency:
          $ref: '#/components/schemas/feeapplicationfrequencyvalues'
        FeeApplicationAmount:
          $ref: '#/components/schemas/amount'
        FeeDebitAccount:
          $ref: '#/components/schemas/account'
        AccrualFeeAmount:
          $ref: '#/components/schemas/amount'
      description: ''
    reporttypevalues:
      enum:
        - FinancialReport
        - BusinessReport
        - ManagementReport
        - Statement
        - MaintenanceReport
        - RegulatoryReport
        - TaxReport
      type: string
      description: ">\r\n* `FinancialReport` - \r\n* `BusinessReport` - \r\n* `ManagementReport` - \r\n* `Statement` - \r\n* `MaintenanceReport` - \r\n* `RegulatoryReport` - \r\n* `TaxReport` - \r\n"
    report:
      type: object
      properties:
        ReportType:
          $ref: '#/components/schemas/reporttypevalues'
        ReportValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        ReportVersion:
          type: string
          description: ''
          format: number
        ReportDateTime:
          $ref: '#/components/schemas/datetime'
        ReportFormat:
          $ref: '#/components/schemas/text'
      description: A report summarizing tax considerations
    feetype:
      type: object
      properties:
        FeeType:
          $ref: '#/components/schemas/feetypevalues'
        FeeTypeName:
          $ref: '#/components/schemas/name'
      description: The type of fee applied
    collateralassetvaluation:
      type: object
      properties:
        CollateralAssetValuationStatus:
          type: string
          description: Valuation status of the collateral asset (ISO20022)
          format: string
        CollateralAssetValuationDate:
          type: string
          description: Valuation date of the collateral asset (ISO20022)
          format: string
        CollateralAssetValuationAmount:
          type: string
          description: The amount of valuation of a collateral asset
          format: string
        CollateralAssetValuationCurrency:
          type: string
          description: Currency used for the valuation of a collateral asset. (ISO20022)
          format: string
      description: A report detailing the current applied collateral valuation (value confirmed as of date)
    Maintenance:
      type: object
      properties:
        MaintenanceReportType:
          $ref: '#/components/schemas/reporttypevalues'
        LoanTaxReport:
          $ref: '#/components/schemas/report'
        LoanFeeType:
          $ref: '#/components/schemas/feetype'
        LoanFees:
          $ref: '#/components/schemas/feearrangement'
        Penalties:
          $ref: '#/components/schemas/feearrangement'
        CollateralValuation:
          $ref: '#/components/schemas/collateralassetvaluation'
      description: ''
    AccountStatement:
      type: object
      description: ''
    devicetypevalues:
      enum:
        - Securecardreader
        - Nonsecurecardreader
        - Mobile
        - Tablet
        - Personalcomputer
        - Othernational
        - Otherprivate
        - Wearable
        - Vehicle
        - Embedded
        - Keyfob
        - Jewellery
        - Sticker
        - Gamingdevice
        - Watch
        - Unknown
        - BiometricDevice
      type: string
      description: ">\r\n* `Securecardreader` - Secure card reader attached to the customer device\r\n* `Nonsecurecardreader` - Non-secure card reader attached to the customer device.\r\n* `Mobile` - Mobile phone\r\n* `Tablet` - Tablet\r\n* `Personalcomputer` - Personal computer\r\n* `Othernational` - Other device defined at national level\r\n* `Otherprivate` - Other device defined in a private way.\r\n* `Wearable` - Wearable device.\r\n* `Vehicle` - Vehicle.\r\n* `Embedded` - Embedded in a device.\r\n* `Keyfob` - Key Fob\r\n* `Jewellery` - Jewellery\r\n* `Sticker` - Sticker\r\n* `Gamingdevice` - Gaming Device\r\n* `Watch` - Watch\r\n* `Unknown` - Device type unknown\r\n* `BiometricDevice` - A biometric device is a security identification and authentication device. Such devices use automated methods of verifying or recognising the identity of a living person based on a physiological or behavioral characteristic.\nhttps://en.wikipedia.org/wiki/Biometric_device\n\r\n"
    branch:
      type: object
      properties:
        BranchIdentification:
          $ref: '#/components/schemas/identifier'
        BranchLegalEntityIdentification:
          $ref: '#/components/schemas/identifier'
        BranchAddress:
          $ref: '#/components/schemas/address'
        BranchName:
          $ref: '#/components/schemas/name'
      description: The name of the branch where the customer will collect the device
    feature:
      type: object
      properties:
        FeatureType:
          $ref: '#/components/schemas/text'
        FeatureIdentification:
          $ref: '#/components/schemas/identifier'
        FeatureName:
          $ref: '#/components/schemas/name'
        FeatureLifecycleStatus:
          $ref: '#/components/schemas/status'
        FeatureDescription:
          $ref: '#/components/schemas/text'
      description: Definition of the processing option and impact (e.g. lost card handling)
    actiontypevalues:
      enum:
        - Initiate
        - Execute
        - Create
        - Transfer
        - Pay
        - Deliver
        - Apply
        - Calculate
      type: string
      description: ">\r\n* `Initiate` - \r\n* `Execute` - \r\n* `Create` - \r\n* `Transfer` - \r\n* `Pay` - \r\n* `Deliver` - \r\n* `Apply` - \r\n* `Calculate` - \r\n"
    action:
      type: object
      properties:
        ActionType:
          $ref: '#/components/schemas/actiontypevalues'
      description: ''
    arrangementlifecyclestatustypevalues:
      enum:
        - Requested
        - Proposed
        - Offered
        - Accepted
        - Cancelled
        - Fulfilled
        - Terminated
      type: string
      description: ">\r\n* `Requested` - \r\n* `Proposed` - \r\n* `Offered` - \r\n* `Accepted` - \r\n* `Cancelled` - \r\n* `Fulfilled` - \r\n* `Terminated` - \r\n"
    arrangementlifecyclestatus:
      type: object
      properties:
        ArrangementLifecycleStatus:
          $ref: '#/components/schemas/status'
        ArrangementLifecycleStatusType:
          $ref: '#/components/schemas/arrangementlifecyclestatustypevalues'
      description: 'A characteristic of arrangement which refers to the LifecycleStatus of arrangement (e.g., requested, proposed, offered, accepted, cancelled, terminated, fulfilled, etc.)'
    subject:
      type: object
      properties:
        Subject:
          type: string
          description: A thing that is discussed or dealt whit in agreement/arrangement about doing or not doing (as action) something.
          format: class
      description: ''
    arrangementtypevalues:
      enum:
        - SweepArrangement
        - WithdrawalArrangement
        - DepositArrangement
        - InterestArrangement
        - FeeArrangement
        - LienArrangement
        - InformationArrangement
        - PaymentArrangement
        - EntitlementArrangement
        - PeriodArrangement
        - CollateralArrangement
        - LimitArrangement
        - AccessArrangement
        - CardPaymentArrangement
        - StandingOrderArrangement
        - OverdraftArrangement
        - RepaymentArrangement
        - StatementArrangement
        - CreditTransferArrangement
        - ProductAndServiceArrangement
        - FactoringArrangement
        - RolloverArrangement
        - RestructuringArrangement
        - InsuranceArrangement
        - CollectionArrangement
        - UnderwritingArrangement
        - TerminationArrangement
        - MaturityArrangement
      type: string
      description: ">\r\n* `SweepArrangement` - An arrangement into which is promised for the set-up and execution of structured sweeps to and from the facility to a linked account.\r\n* `WithdrawalArrangement` - An arrangement into which is promised to deliver Withdraw Service  to take fund out of an account. \r\n* `DepositArrangement` - An arrangement into which is promised to deliver Deposit Service  to place funds into an account for safekeeping. \r\n* `InterestArrangement` - An arrangement into which is promised to apply a pricing element expressed in a percentage  to a principal amount.\r\n* `FeeArrangement` - An arrangement into which is promised to apply a charge for services rendered. \r\n* `LienArrangement` - An arrangement into which is promised for placing a lien or block on the account for a specified purpose, amount, and period. \r\n* `InformationArrangement` - An arrangement concerning the information the bank will provide about the agreement/account\r\n* `PaymentArrangement` - An arrangement into which is promised to deliver a specific payment service including regular payments, standing orders, direct debits and bill pay instructions. \r\n* `EntitlementArrangement` - Right or obligation linked to the involvement of a party in an agreement\r\n* `PeriodArrangement` - \r\n* `CollateralArrangement` - An arrangement into which is promised for handling the oversight of the allocation, valuation and administration of collateral associated with the facility. \r\n* `LimitArrangement` - An arrangement to limit something\ne.g., the number of transaction per week, the amount of money allowed to withdraw per week/day and etc. \r\n* `AccessArrangement` - An arrangement that allows or restricts the access to a service or product, channel or device through a specific access point\r\n* `CardPaymentArrangement` - An arrangement into which is promised to deliver Card payment Service to execute payment transactions through a payment card, including online payments. \r\n* `StandingOrderArrangement` - An arrangement into which is promised to deliver Standing Order Service to make regular transfers on given dates to a named beneﬁciary. \r\n* `OverdraftArrangement` - An arrangement into which is promised to deliver Overdraft Service  that allows fund transfer even if there is no provision on the account. \r\n* `RepaymentArrangement` - An arrangement into which is promised for paying back money previously borrowed from a lender. \r\n* `StatementArrangement` - An arrangement into which is promised to deliver a reporting service on payment transactions registered on an account. \r\n* `CreditTransferArrangement` - An arrangement into which is promised to allow a payer to transfer fund to a beneficiary. \r\n* `ProductAndServiceArrangement` - \r\n* `FactoringArrangement` - \r\n* `RolloverArrangement` - Arrangement stipulating the modalities for an automatic renewal of the agreement\n\ni.e. the replacement of the agreement with a new one without renewed negociation and witout explicit agreement of the customer \r\n* `RestructuringArrangement` - \r\n* `InsuranceArrangement` - \r\n* `CollectionArrangement` - An arrangement into which is promised to collect past-due debts from borrowers\r\n* `UnderwritingArrangement` - A contractual agreement between parties that commits the underwriter to assuming risk.\r\n* `TerminationArrangement` - \r\n* `MaturityArrangement` - \r\n"
    arrangement:
      type: object
      properties:
        ArrangementAction:
          $ref: '#/components/schemas/action'
        ArrangementStartDate:
          $ref: '#/components/schemas/datetime'
        ArrangementEndDate:
          $ref: '#/components/schemas/datetime'
        ArrangementStatus:
          $ref: '#/components/schemas/arrangementlifecyclestatus'
        ArrangementSubjectMatter:
          $ref: '#/components/schemas/subject'
        Arrangementtype:
          $ref: '#/components/schemas/arrangementtypevalues'
      description: 'A permission that is recorded for the device; like use in ATM, use for internet identification, etc.'
    devicecustomizationtypevalues:
      enum:
        - CardDesign
      type: string
      description: ">\r\n* `CardDesign` - \r\n"
    issueddevicestatustypevalues:
      enum:
        - Issued
        - IssuedButNotActivated
        - Activated
        - Suspended
        - Retrieved
      type: string
      description: ">\r\n* `Issued` - \r\n* `IssuedButNotActivated` - \r\n* `Activated` - \r\n* `Suspended` - \r\n* `Retrieved` - \r\n"
    country:
      type: object
      properties:
        NationalRegulatoryAuthority:
          $ref: '#/components/schemas/involvedparty'
      description: Country of the location.
    deviceoperatingsystemtypevalues:
      enum:
        - Android
        - Ios
        - Windows
        - Blackberry
        - Tizen
        - Othernational
        - Otherprivate
      type: string
      description: ">\r\n* `Android` - Android operating system.\r\n* `Ios` - iOS operating system.\r\n* `Windows` - Windows operating system.\r\n* `Blackberry` - Blackberry operating system.\r\n* `Tizen` - Tizen operating system.\r\n* `Othernational` - Other nationally defined code.\r\n* `Otherprivate` - Other privately defined code.\r\n"
    deviceidentificationtypevalues:
      enum:
        - IMEI
        - Serialnumber
        - Secureelementidentification
        - Othernational
        - Otherprivate
      type: string
      description: ">\r\n* `IMEI` - International Mobile Equipment Identity.\r\n* `Serialnumber` - Device serial number.\r\n* `Secureelementidentification` - Secure element ID.\r\n* `Othernational` - Other nationally assigned code.\r\n* `Otherprivate` - Other privately assigned code.\r\n"
    device:
      type: object
      properties:
        DeviceIdentification:
          $ref: '#/components/schemas/identifier'
        DeviceType:
          $ref: '#/components/schemas/devicetypevalues'
        DeviceProperty:
          $ref: '#/components/schemas/text'
        DeviceElement:
          $ref: '#/components/schemas/text'
        DeviceStatus:
          $ref: '#/components/schemas/status'
        DeviceVersion:
          type: string
          description: ''
          format: number
        DeviceDateTime:
          $ref: '#/components/schemas/datetime'
        DeviceDescription:
          $ref: '#/components/schemas/text'
        DeviceName:
          $ref: '#/components/schemas/name'
        DeviceLanguage:
          $ref: '#/components/schemas/text'
        DevicePhoneNumber:
          $ref: '#/components/schemas/text'
        DeviceLocation:
          $ref: '#/components/schemas/location'
        DeviceManufacturer:
          $ref: '#/components/schemas/text'
        DeviceCountry:
          $ref: '#/components/schemas/country'
        DeviceAddress:
          $ref: '#/components/schemas/address'
        DeviceAddressType:
          $ref: '#/components/schemas/addresstypevalues'
        DeviceOperatingSystem:
          $ref: '#/components/schemas/deviceoperatingsystemtypevalues'
        DeviceIdentificationType:
          $ref: '#/components/schemas/deviceidentificationtypevalues'
      description: Reference to the device instance in Issued Device Administration
    rulesettypevalues:
      enum:
        - Policy
        - Regulation
        - Law
        - Guideline
        - Criterion
        - Standard
      type: string
      description: ">\r\n* `Policy` - Rule that governs business execution.\n\nThe set of basic principles and associated guidelines, formulated and enforced by the governing body of an organization, to direct and limit its actions in pursuit of long-term goals. (Business Dictionary)\n\r\n* `Regulation` - A rule used to carry out a law (FIBO)\n\nBusiness Dictionary: a rule (with or without the coercive power of law) employed in controlling, directing, or managing an activity, organization, or system. \n\nThe set of rules and legislation governing certain actions. \nhttps://financial-dictionary.thefreedictionary.com/Regulatory\r\n* `Law` - A binding rule that the courts will enforce.\nA system of rules and guidelines which are enforced through social institutions to govern behavior. (FIBO)\n\r\n* `Guideline` - A recommended practice (adapted from Business Dictionary)\nA general rule, principle, or piece of advice.\r\n* `Criterion` - A principle or standard by which something may be judged or decided.\n\nRead more: http://www.businessdictionary.com/definition/criterion.html\r\n* `Standard` - A rule considered by an authority or by general consent as a basis of comparison\r\n"
    rulesettype:
      type: object
      properties:
        RuleSetTypeName:
          $ref: '#/components/schemas/name'
        RuleSetType:
          $ref: '#/components/schemas/rulesettypevalues'
      description: ''
    ruleset:
      type: object
      properties:
        RuleSetDefinition:
          $ref: '#/components/schemas/text'
        RuleSetInterpretation:
          $ref: '#/components/schemas/text'
        RuleSetType:
          $ref: '#/components/schemas/rulesettype'
        RuleSetName:
          $ref: '#/components/schemas/name'
        RuleSetIdentification:
          $ref: '#/components/schemas/identifier'
        RuleSetLifecycleStatus:
          $ref: '#/components/schemas/status'
      description: The processing and handling guidelines and rules
    IssuedDevice:
      type: object
      properties:
        AccountExternalAccountNumber:
          $ref: '#/components/schemas/identifier'
        DeviceIssueDate:
          $ref: '#/components/schemas/datetime'
        DeviceType:
          $ref: '#/components/schemas/devicetypevalues'
        DeviceValidfromDate:
          $ref: '#/components/schemas/datetime'
        DeviceValidtoDate:
          $ref: '#/components/schemas/datetime'
        DeviceCollectLocation:
          $ref: '#/components/schemas/branch'
        DeviceOptionDefinition:
          $ref: '#/components/schemas/feature'
        CustomerReference:
          $ref: '#/components/schemas/involvedparty'
        DeviceAssociatedPermissions:
          $ref: '#/components/schemas/arrangement'
        DeviceCustomerCustomizationReference:
          $ref: '#/components/schemas/devicecustomizationtypevalues'
        DeviceDeliveryMethod:
          $ref: '#/components/schemas/text'
        DeviceOptionSetting:
          $ref: '#/components/schemas/arrangement'
        DevicePartyReference:
          $ref: '#/components/schemas/involvedparty'
        DevicePropertyType:
          $ref: '#/components/schemas/feature'
        DevicePropertySeting:
          $ref: '#/components/schemas/arrangement'
        DeviceStatus:
          $ref: '#/components/schemas/issueddevicestatustypevalues'
        IssuedDeviceAdministrationReference:
          $ref: '#/components/schemas/device'
        AccountIdentifier:
          $ref: '#/components/schemas/accountidentification'
        DeviceProcessingGuidelinesandRules:
          $ref: '#/components/schemas/ruleset'
      description: ''
    entrydatetypevalues:
      enum:
        - EntryDate
        - ValueDate
      type: string
      description: ">\r\n* `EntryDate` - \r\n* `ValueDate` - \r\n"
    entrytypevalues:
      type: object
      properties:
        Entrytypevalues:
          type: string
          description: ''
          format: enumeration
      description: ''
    accountentry:
      type: object
      properties:
        AccountEntryAmount:
          $ref: '#/components/schemas/amount'
        AccountEntryCurrency:
          $ref: '#/components/schemas/accountcurrency'
        AccountEntryPurpose:
          $ref: '#/components/schemas/text'
        AccountEntryDate:
          $ref: '#/components/schemas/datetime'
        AccountEntryStatus:
          $ref: '#/components/schemas/status'
        AccountEntryDateType:
          $ref: '#/components/schemas/entrydatetypevalues'
        AccountEntryType:
          $ref: '#/components/schemas/entrytypevalues'
      description: Reference to the entry in Position Keeping of the booking to be authorised
    BookingAuthorization:
      type: object
      properties:
        AccountReference:
          $ref: '#/components/schemas/account'
        BookingAmount:
          $ref: '#/components/schemas/amount'
        BookingDate:
          $ref: '#/components/schemas/datetime'
        PositionKeepingReference:
          $ref: '#/components/schemas/accountentry'
        TransactionPriorityNumber:
          type: string
          description: Priority number of the payment transaction for use in determining the available balance
          format: number
        ValueDate:
          $ref: '#/components/schemas/datetime'
        AuthorizationResult:
          $ref: '#/components/schemas/text'
        AuthorizationRejectionReason:
          $ref: '#/components/schemas/text'
      description: ''
    Disbursement:
      type: object
      properties:
        DisbursementPayeeReference:
          $ref: '#/components/schemas/involvedparty'
        DisbursementPayeeProductInstanceReference:
          $ref: '#/components/schemas/account'
        DisbursementPayeeBankReference:
          $ref: '#/components/schemas/involvedparty'
        DisbursementAmount:
          $ref: '#/components/schemas/amount'
        DisbursementCurrency:
          $ref: '#/components/schemas/currencycode'
        DisbursementValueDate:
          $ref: '#/components/schemas/date'
      description: ''
    Repayment:
      type: object
      properties:
        RepaymentTransactionType:
          $ref: '#/components/schemas/paymenttypevalues'
        RepaymentTransactionPayerReference:
          $ref: '#/components/schemas/involvedparty'
        RepaymentTransactionPayerProductInstanceReference:
          $ref: '#/components/schemas/account'
        RepaymentTransactionPayerBankReference:
          $ref: '#/components/schemas/involvedparty'
        RepaymentTransactionAmount:
          $ref: '#/components/schemas/amount'
        RepaymentTransactionCurrency:
          $ref: '#/components/schemas/currencycode'
        RepaymentTransactionValueDate:
          $ref: '#/components/schemas/date'
      description: ''
    loanproducttypevalues:
      enum:
        - ConsumerLoan
        - CorporateLoan
        - MerchandisingLoan
        - MortgageLoan
        - SyndicatedLoan
      type: string
      description: "The specific type of loan (e.g. term, revolving, evergreen) ||\r\n|"
    loanproduct:
      type: object
      properties:
        LoanAmount:
          $ref: '#/components/schemas/amount'
        LoanPurpose:
          $ref: '#/components/schemas/text'
        LoanProductIdentifier:
          $ref: '#/components/schemas/identifier'
        LoanProductType:
          $ref: '#/components/schemas/loanproducttypevalues'
      description: Reference to the loan product instance Loan|Loan (https://www.iso20022.org/standardsrepository/type/Loan)|Standard|ISO20022 BM ()
    customeragreement:
      type: object
      properties:
        CustomerAgreement:
          type: string
          description: 'An agreement between a bank and its customer. '
          format: class
      description: "Reference to the associated customer agreement ||\r\n|"
    customercreditratingassessment:
      type: object
      properties:
        CreditRatingAssessmentType:
          type: string
          description: ''
          format: ''
      description: "Reference to an associated credit assessment ||\r\n|"
    branchlocation:
      type: object
      properties:
        BranchReference:
          $ref: '#/components/schemas/branch'
        LocationReference:
          $ref: '#/components/schemas/location'
      description: "Bank branch associated with the account for booking purposes ||\r\n|"
    interestcalculationarrangementmodality:
      type: object
      properties:
        InterestCalculationMethod:
          $ref: '#/components/schemas/text'
        InterestCalculationFrequency:
          $ref: '#/components/schemas/frequency'
        InterestCalculationDate:
          $ref: '#/components/schemas/datetime'
        InterestCalculationParameter:
          $ref: '#/components/schemas/text'
        InterestCalculationMethodType:
          $ref: '#/components/schemas/interestcalculationmethodtypevalues'
      description: The accrual method applied to interest calculations InterestCalculation|InterestCalculation (https://www.iso20022.org/standardsrepository/type/InterestCalculation)|Standard|ISO20022 BM ()
    collateraltypevalues:
      enum:
        - Letterofcredit
        - Cash
        - Securities
        - Physicalentities
        - Insurance
        - Stockcertificate
        - Bond
        - Bankguarantee
        - Other
        - Commodity
        - Automobile
        - Industrialvehicle
        - Commercialtruck
        - Railvehicle
        - Nauticalcommercialvehicle
        - Nauticalleisurevehicle
        - Aeroplane
        - Machinetool
        - Industrialequipment
        - Officeequipment
        - Itequipment
        - Medicalequipment
        - Energyrelatedequipment
        - Commercialbuilding
      type: string
      description: ">\r\n* `Letterofcredit` - Instrument issued by a bank substituting its name and credit standing for that of its customer. A letter of credit is a written undertaking of the bank, issued for the account of a customer (the applicant), to honour a demand for payment, upon the beneficiary's compliance with the terms and conditions set forth in the undertaking.\r\n* `Cash` - Collateral type is cash.\r\n* `Securities` - Collateral type is securities.\r\n* `Physicalentities` - Collateral type are physical entities, for example, airplanes for debt issued by the airline industry.\r\n* `Insurance` - Collateral type is an insurance contract.\r\n* `Stockcertificate` - Collateral type is stock certificates.\r\n* `Bond` - Collateral type is bonds.\r\n* `Bankguarantee` - Collateral type is a bank guarantee.\r\n* `Other` - Other assets that could be used as collateral.\r\n* `Commodity` - Collateral type is commodities.\r\n* `Automobile` - Collateral type is automobile.\r\n* `Industrialvehicle` - Collateral type is industrial vehicle.\r\n* `Commercialtruck` - Collateral type is commercial track.\r\n* `Railvehicle` - Collateral type is rail vehicle.\r\n* `Nauticalcommercialvehicle` - Collateral type is nautical commercial vehicle.\r\n* `Nauticalleisurevehicle` - Collateral type is nautical leisure vehicle.\r\n* `Aeroplane` - Collateral type is aeroplane.\r\n* `Machinetool` - Collateral type is machine.\r\n* `Industrialequipment` - Collateral type is industrial equipment.\r\n* `Officeequipment` - Collateral type is office equipment.\r\n* `Itequipment` - Collateral type is IT equipment.\r\n* `Medicalequipment` - Collateral type is medical equipment.\r\n* `Energyrelatedequipment` - Collateral type is energy related equipment.\r\n* `Commercialbuilding` - Collateral type is commercial building.\r\n"
    servicetypevalues:
      enum:
        - ITService
        - AdministrativeService
        - SystemService
        - FinancialService
        - InformationService
        - BusinessService
      type: string
      description: ">\r\n* `ITService` - \r\n* `AdministrativeService` - \r\n* `SystemService` - \r\n* `FinancialService` - \r\n* `InformationService` - \r\n* `BusinessService` - \r\n"
    service:
      type: object
      properties:
        ServiceName:
          $ref: '#/components/schemas/name'
        ServiceDescription:
          $ref: '#/components/schemas/text'
        ServiceType:
          $ref: '#/components/schemas/servicetypevalues'
        ServiceIdentification:
          $ref: '#/components/schemas/identifier'
        ServiceLifecycleStatus:
          $ref: '#/components/schemas/status'
        ServiceFeature:
          $ref: '#/components/schemas/feature'
      description: 'External identifier assigned by an asset valuation service provider to refer to an instance of Asset Valuation '
    assetvaluation:
      type: object
      properties:
        AssetValue:
          $ref: '#/components/schemas/value'
        AssetValueType:
          $ref: '#/components/schemas/text'
        AssetValuationType:
          $ref: '#/components/schemas/text'
        AssetValuationDate:
          $ref: '#/components/schemas/datetime'
        AssetValuationServiceReference:
          $ref: '#/components/schemas/service'
        AssetValuationRate:
          $ref: '#/components/schemas/rate'
        AssetValuationStatus:
          $ref: '#/components/schemas/status'
        AssetValuationValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
      description: ''
    collateralassetstatusvalues:
      enum:
        - Offered
        - UnderAssessment
        - Transferred
        - Allocated
        - FreeForAllocation
        - AllocatedToAnotherLoan
        - IssuedForExecution
      type: string
      description: ">\r\n* `Offered` - \r\n* `UnderAssessment` - \r\n* `Transferred` - \r\n* `Allocated` - \r\n* `FreeForAllocation` - \r\n* `AllocatedToAnotherLoan` - \r\n* `IssuedForExecution` - \r\n"
    collateralasset:
      type: object
      properties:
        CollateralAssetIdentification:
          $ref: '#/components/schemas/identifier'
        CollateralAssetType:
          $ref: '#/components/schemas/collateraltypevalues'
        CollateralAssetValuation:
          $ref: '#/components/schemas/assetvaluation'
        CollateralAssetStatus:
          $ref: '#/components/schemas/collateralassetstatusvalues'
      description: Reference to allocated collateral Asset|Asset (https://www.iso20022.org/standardsrepository/type/Asset)|Standard|ISO20022 BM ()
    allocationstatusvalues:
      enum:
        - Fullyallocated
        - Partiallyallocated
        - Earmarked
      type: string
      description: ">\r\n* `Fullyallocated` - \r\n* `Partiallyallocated` - \r\n* `Earmarked` - Not allocated, merely earmarked\r\n"
    collateralassetallocation:
      type: object
      properties:
        CollateralAssetAllocationStatus:
          $ref: '#/components/schemas/allocationstatusvalues'
      description: "The collateral value applied to the loan ||\r\n|"
    pointofaccesstypevalues:
      enum:
        - ChannelAccess
        - ProductAndServiceAccess
        - DeviceAccess
        - APIAccess
      type: string
      description: ">\r\n* `ChannelAccess` - \r\n* `ProductAndServiceAccess` - \r\n* `DeviceAccess` - \r\n* `APIAccess` - \r\n"
    authenticationmethodtypevalues:
      enum:
        - Onlinepin
        - Offlinepin
        - Signaturecapture
        - Password
        - Biometry
        - Cscverification
        - Cryptogramverification
        - Unknownmethod
        - Bypass
        - Papersignature
        - Manualverification
        - Merchantauthentication
        - Securecertificate
        - Securenocertificate
        - Securedchannel
        - Billingaddressverification
        - Cardholderidentificationdata
        - Passiveauthentication
        - Secureelectroniccommerce
        - Shippingaddressverification
        - Tokenauthentication
        - Paymenttoken
        - Authenticationtoken
        - Mobile
        - Other
        - Addressdigits
        - Alienregistrationnumber
        - Arqcverification
        - Birthdate
        - Cardholdername
        - Cityofbirth
        - Customeridentification
        - Driveridentification
        - Driverlicensenumber
        - Email
        - Employeeidentificationnumber
        - Employeridentificationnumber
        - Identitycardnumber
        - Onetimepassword
        - Othercardholderidentification
        - Othercryptogram
        - Passportnumber
        - Postalcode
        - Shippingaddressfrom
        - Shippingaddressto
        - Cardholderaddress
        - Nonvisiblecsc
        - Othernational
        - Otherprivate
        - Placeofbirth
        - Socialsecuritynumber
        - Taxidentificationnumber
        - Accountdigitalsignature
        - Arpcverification
        - ATC
        - Offlinebiographics
        - Offlinebiometrics
        - Offlinedataauthentication
        - Offlinedigitisedsignatureanalysis
        - Offlinepinencrypted
        - Offlinepininclear
        - Onlinebiographics
        - Phonehome
        - Phonework
        - Pkisignature
        - Qualifiedcertificate
        - Threeds
        - Cardholdercertificateserialnumber
        - Acceptorcertificateserialnumber
        - Nationalidentifier
      type: string
      description: ">\r\n* `Onlinepin` - On-line PIN authentication (Personal Identification Number).\r\n* `Offlinepin` - Off-line PIN authentication (Personal Identification Number).\r\n* `Signaturecapture` - Electronic signature capture (handwritten signature).\r\n* `Password` - Authentication by a password.\r\n* `Biometry` - Biometric authentication of the cardholder.\r\n* `Cscverification` - Verification of Card Security Code.\r\n* `Cryptogramverification` - Verification of a cryptogram generated by a chip card or another device, for instance ARQC (Authorisation Request Cryptogram).\r\n* `Unknownmethod` - Authentication method is performed unknown.\r\n* `Bypass` - Authentication bypassed by the merchant.\r\n* `Papersignature` - Handwritten paper signature.\r\n* `Manualverification` - Manual verification, for example passport or drivers license.\r\n* `Merchantauthentication` - Merchant-related authentication.\r\n* `Securecertificate` - Electronic commerce transaction secured with the X.509 certificate of a customer.\r\n* `Securenocertificate` - Secure electronic transaction without cardholder certificate.\r\n* `Securedchannel` - Channel-encrypted transaction.\r\n* `Billingaddressverification` - Cardholder billing address verification.\r\n* `Cardholderidentificationdata` - Cardholder data provided for verification, for instance social security number, driver license number, passport number.\r\n* `Passiveauthentication` - Authentication based on statistical cardholder behaviour.\r\n* `Secureelectroniccommerce` - Authentication performed during a secure electronic commerce transaction.\r\n* `Shippingaddressverification` - Cardholder shipping address verification.\r\n* `Tokenauthentication` - Cryptogram generated by the token requestor or a customer device to validate the authorised use of a token.\r\n* `Paymenttoken` - Verification or authentication related to the use of a payment token, for instance the validation of the authorised use of a token.\r\n* `Authenticationtoken` - A token is used to verify an already performed authentication.\r\n* `Mobile` - Customer mobile device.\r\n* `Other` - Other customer authentication.\r\n* `Addressdigits` - Digits of the address.\r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Arqcverification` - Verification of a cryptogram generated by a chip card, for instance an ARQC (Authorisation Request Cryptogram).\r\n* `Birthdate` - Date of birth of a person.\r\n* `Cardholdername` - Name of cardholder\r\n* `Cityofbirth` - City of birth to authenticate a person.\r\n* `Customeridentification` - Customer number used as a mechanism of authentication.\r\n* `Driveridentification` - Identification of a driver in a fleet of vehicles.\r\n* `Driverlicensenumber` - Number assigned by a driving license authority to a person driving a car.\r\n* `Email` - Electronic mail address\r\n* `Employeeidentificationnumber` - Number assigned to an employee by an employer.\r\n* `Employeridentificationnumber` - Number assigned to an employer by a registration authority.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Onetimepassword` - Verification of a one-time password provided by the issuer.\r\n* `Othercardholderidentification` - Other cardholder data provided for identification.\r\n* `Othercryptogram` - Verification of a cryptogram generated by a non-card form factor.\r\n* `Passportnumber` - Number assigned by a passport authority to a passport.\r\n* `Postalcode` - Verification based on digits of the postal code.\r\n* `Shippingaddressfrom` - Shipping address from verification.\r\n* `Shippingaddressto` - Shipping address to verification\r\n* `Cardholderaddress` - Verification whether the address corresponds to the cardholder's one.\r\n* `Nonvisiblecsc` - Non visible Card Security Code.\r\n* `Othernational` - Other type of verification defined at national level.\r\n* `Otherprivate` - Other type of verification defined at private level\r\n* `Placeofbirth` - Place of birth of a person.\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Accountdigitalsignature` - Account-based digital signature authentication.\r\n* `Arpcverification` - Response Card Cryptogram (ARPC)  verification.\r\n* `ATC` - Application Transaction Counter\r\n* `Offlinebiographics` - Biographics authentication in an offline mode.\r\n* `Offlinebiometrics` - Biometrics authentication in an offline mode\r\n* `Offlinedataauthentication` - Authentication of data in an offline mode\r\n* `Offlinedigitisedsignatureanalysis` - Analysis of signature transmitted offline\r\n* `Offlinepinencrypted` - PIN generated offline and transmitted encrypted\r\n* `Offlinepininclear` - PIN generated offline and transmitted in clear\r\n* `Onlinebiographics` - Biographics authentication in an online mode.\r\n* `Phonehome` - Customer home phone number.\r\n* `Phonework` - Customer work phone number\r\n* `Pkisignature` - PKI (Public Key Infrastructure) based digital signature\r\n* `Qualifiedcertificate` - QualifiedCertificate\r\n* `Threeds` - Authentication performed during a secure electronic commerce transaction.\r\n* `Cardholdercertificateserialnumber` - Serial number of the cardholder's certificate.\r\n* `Acceptorcertificateserialnumber` - Serial number of the acceptor's certificate.\r\n* `Nationalidentifier` - Nationally assigned identifier.\r\n"
    accessarrangement:
      type: object
      properties:
        AssociatedDocument:
          $ref: '#/components/schemas/document'
        PointOfAccessType:
          $ref: '#/components/schemas/pointofaccesstypevalues'
        AccessCredentialMethod:
          $ref: '#/components/schemas/authenticationmethodtypevalues'
      description: "Access terms that apply (e.g. allowed payments/withdrawals) ||\r\n|"
    servicearrangementmodality:
      type: object
      properties:
        ServiceArrangementModalityType:
          $ref: '#/components/schemas/modalitytypevalues'
      description: ''
    partyobligationorentitlement:
      type: object
      properties:
        ObligationOrEntitlementSubject:
          $ref: '#/components/schemas/subject'
        ObligationOrEntitlementType:
          $ref: '#/components/schemas/arrangementtypevalues'
        ObligationOrEntitlementModality:
          $ref: '#/components/schemas/servicearrangementmodality'
        ObligationOrEntitlementDefinition:
          $ref: '#/components/schemas/text'
      description: "Description of the role, obligations or entitlements of the associated party ||\r\n|"
    accountrestrictionstatustypevalues:
      enum:
        - Active
        - Inactive
      type: string
      description: ">\r\n* `Active` - Status of the restriction is active.\r\n* `Inactive` - Status of the restriction is inactive.\r\n"
    accountrestrictionstatus:
      type: object
      properties:
        AccountRestrictionStatus:
          $ref: '#/components/schemas/status'
        AccountRestrictionStatusType:
          $ref: '#/components/schemas/accountrestrictionstatustypevalues'
      description: Status of the restriction.
    accountrestiction:
      type: object
      properties:
        AccountRestrictionIdentifier:
          $ref: '#/components/schemas/identifier'
        AccountRestrictionType:
          $ref: '#/components/schemas/text'
        AccountRestrictionDescription:
          $ref: '#/components/schemas/text'
        AccountRestrictionValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        AccountRestrictionStatus:
          $ref: '#/components/schemas/accountrestrictionstatus'
        AccountRestrictionRegulator:
          $ref: '#/components/schemas/involvedparty'
      description: "The setting for the restriction option AccountRestriction_x000D_\n|AccountRestriction (https://www.iso20022.org/standardsrepository/type/AccountRestriction)|Standard|ISO20022 BM  ()"
    accountinvolvementtypevalues:
      enum:
        - PartyIsOwnerOfAccount
        - PartyIsServicerOfAccount
      type: string
      description: 'The type of association (e.g. guarantor, co-signer) AccountPartyRole |AccountPartyRole  (https://www.iso20022.org/standardsrepository/type/AccountPartyRole)|Standard|ISO20022 BM ()'
    accountinvolvement:
      type: object
      properties:
        AccountInvolvementType:
          $ref: '#/components/schemas/accountinvolvementtypevalues'
        AccountReference:
          $ref: '#/components/schemas/account'
        PartyReference:
          $ref: '#/components/schemas/party'
      description: "Definition of the involved parties or associations to the account Account Party Role_x000D_\n|Account Party Role (https://www.iso20022.org/standardsrepository/type/AccountPartyRole)|Standard|ISO20022 BM ()"
    financialstatementtypevalues:
      enum:
        - IncomeStatement
        - BalanceSheet
        - CashFlowsStatement
        - DebtStatement
        - AssetStatement
        - AssetAndLiabilityStatement
      type: string
      description: ">\r\n* `IncomeStatement` - \r\n* `BalanceSheet` - \r\n* `CashFlowsStatement` - A cash flow statement is a financial statement that shows how cash entered and exited a company during an accounting period.\r\n* `DebtStatement` - \r\n* `AssetStatement` - \r\n* `AssetAndLiabilityStatement` - \r\n"
    statement:
      type: object
      properties:
        StatementType:
          $ref: '#/components/schemas/financialstatementtypevalues'
      description: "A statement maintained tracking repayments ||\r\n|"
    correspondencecommunicationmethodtypevalues:
      enum:
        - Fax
        - Email
        - Proprietary
        - Online
        - Phone
        - Postalservice
        - File
      type: string
      description: ">\r\n* `Fax` - Transmission by fax.\r\n* `Email` - Transmission by e-mail.\r\n* `Proprietary` - Transmission by proprietary method.\r\n* `Online` - Transmission on line, for example, in a web portal.\r\n* `Phone` - Transmission by telephone.\r\n* `Postalservice` - Transmission by postal service.\r\n* `File` - Transmission by file transfer.\r\n"
    correspondencemediumtypevalues:
      enum:
        - Paper
        - Electronic
        - Paperelectronic
        - Biometric
      type: string
      description: ">\r\n* `Paper` - Presentation is made on paper.\r\n* `Electronic` - Presentation is made electronically.\r\n* `Paperelectronic` - Presentation is made on paper and/or electronically.\r\n* `Biometric` - Biometric medium.\r\n"
    correspondence:
      type: object
      properties:
        CorrespondenceType:
          $ref: '#/components/schemas/text'
        CorrespondenceAddress:
          $ref: '#/components/schemas/address'
        CorrespondenceDateTime:
          $ref: '#/components/schemas/datetime'
        CorrespondenceContent:
          $ref: '#/components/schemas/text'
        CorrespondenceTemplate:
          $ref: '#/components/schemas/text'
        CorrespondenceCommunicationMethod:
          $ref: '#/components/schemas/correspondencecommunicationmethodtypevalues'
        CorrespondenceAddressType:
          $ref: '#/components/schemas/addresstypevalues'
        CorrespondenceMedium:
          $ref: '#/components/schemas/correspondencemediumtypevalues'
      description: A record of customer correspondence/feedback Presentation|Presentation (https://www.iso20022.org/standardsrepository/type/Presentation)|Standard|ISO20022 BM ()
    producttypevalues:
      enum:
        - BankingProduct
        - InsuranceProduct
      type: string
      description: "The type of Product ||\r\n|"
    productidentificationtypevalues:
      enum:
        - ISINCode
        - PackageCode
        - Buyersitemnumber
        - Commercialdescriptioncodename
        - EAN
        - Harmonizedtariffcodename
        - Manufacturersitemnumber
        - Modelnumber
        - Partnumber
        - Quotacategory
        - Stylenumber
        - Suppliersitemnumber
        - Universalproductcode
      type: string
      description: The type of Product Identifier ProductIdentifierCode|ProductIdentifierCode (https://www.iso20022.org/standardsrepository/type/ProductIdentifierCode)|Standard|ISO20022 BM ()
    ConsumerLoanFacility:
      type: object
      properties:
        ProductInstanceReference:
          $ref: '#/components/schemas/loanproduct'
        ConsumerLoanNumber:
          $ref: '#/components/schemas/accountidentification'
        CustomerReference:
          $ref: '#/components/schemas/involvedparty'
        PartyReference:
          $ref: '#/components/schemas/involvedparty'
        CustomerAgreementReference:
          $ref: '#/components/schemas/customeragreement'
        CustomerCreditAssessmentReference:
          $ref: '#/components/schemas/customercreditratingassessment'
        InsuranceReference:
          type: string
          description: Reference to applicable insurance arrangements
          format: object
        DelinquencyCollectionReference:
          type: string
          description: Reference to collections/delinquency processing made against the loan
          format: object
        BankBranchLocationReference:
          $ref: '#/components/schemas/branchlocation'
        BankAccountingUnitReference:
          type: string
          description: Bank accounting unit associated with the account for booking purposes
          format: object
        LoanType:
          $ref: '#/components/schemas/loanproducttypevalues'
        LoanAmount:
          $ref: '#/components/schemas/amount'
        LoanCurrency:
          $ref: '#/components/schemas/currencycode'
        LoanRateType:
          $ref: '#/components/schemas/ratetypevalues'
        LoanApplicableRate:
          $ref: '#/components/schemas/rate'
        RepaymentType:
          $ref: '#/components/schemas/paymenttypevalues'
        InterestType:
          $ref: '#/components/schemas/interesttypevalues'
        InterestAccrualMethod:
          $ref: '#/components/schemas/interestcalculationarrangementmodality'
        LoanOriginationDate:
          $ref: '#/components/schemas/date'
        LoanMaturityDate:
          $ref: '#/components/schemas/date'
        CollateralReference:
          $ref: '#/components/schemas/collateralasset'
        CollateralAllocation:
          $ref: '#/components/schemas/collateralassetallocation'
        TaxReference:
          $ref: '#/components/schemas/involvedparty'
        LoanAccessTerms:
          $ref: '#/components/schemas/accessarrangement'
        EntitlementOptionDefinition:
          $ref: '#/components/schemas/partyobligationorentitlement'
        EntitlementOptionSetting:
          $ref: '#/components/schemas/partyobligationorentitlement'
        RestrictionOptionDefinition:
          $ref: '#/components/schemas/accountrestiction'
        RestrictionOptionSetting:
          $ref: '#/components/schemas/accountrestiction'
        Associations:
          $ref: '#/components/schemas/accountinvolvement'
        AssociationType:
          $ref: '#/components/schemas/accountinvolvementtypevalues'
        AssociationObligationEntitlement:
          $ref: '#/components/schemas/partyobligationorentitlement'
        AssociationReference:
          $ref: '#/components/schemas/party'
        LoanRepaymentSchedule:
          $ref: '#/components/schemas/schedule'
        StagedRepaymentStatement:
          $ref: '#/components/schemas/statement'
        CustomerCommentary:
          $ref: '#/components/schemas/correspondence'
        LoanOutstandingBalance:
          $ref: '#/components/schemas/accountbalance'
        AccountDateType:
          $ref: '#/components/schemas/accountdatetypevalues'
        AccountDate:
          $ref: '#/components/schemas/datetime'
        ConsumerLoanProductMarketingStateID:
          $ref: '#/components/schemas/identifier'
        ConsumerLoanProductID:
          $ref: '#/components/schemas/identifier'
        ConsumerLoanProductName:
          $ref: '#/components/schemas/name'
        ConsumerLoanProductType:
          $ref: '#/components/schemas/producttypevalues'
        ConsumerLoanProductIDType:
          $ref: '#/components/schemas/productidentificationtypevalues'
      description: 'Fulfill any scheduled and ad-hoc obligations under a service arrangement, most typically for a financial product or facility within Consumer Loan. '
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ConsumerLoanFacility:
      description: ConsumerLoanFacility
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConsumerLoanFacility'
    Interest:
      description: Interest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Interest'
    ServiceFees:
      description: ServiceFees
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceFees'
    Disbursement:
      description: Disbursement
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Disbursement'
    Maintenance:
      description: Maintenance
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Maintenance'
    Withdrawal:
      description: Withdrawal
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Withdrawal'
    Repayment:
      description: Repayment
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Repayment'
    Restructuring:
      description: Restructuring
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Restructuring'
    AmountBlock:
      description: AmountBlock
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AmountBlock'
    BookingAuthorization:
      description: BookingAuthorization
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BookingAuthorization'
    IssuedDevice:
      description: IssuedDevice
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IssuedDevice'
  parameters:
    consumerloanid:
      name: consumerloanid
      in: path
      required: true
      style: simple
      schema:
        type: string
    interestid:
      name: interestid
      in: path
      required: true
      style: simple
      schema:
        type: string
    servicefeesid:
      name: servicefeesid
      in: path
      required: true
      style: simple
      schema:
        type: string
    disbursementid:
      name: disbursementid
      in: path
      required: true
      style: simple
      schema:
        type: string
    maintenanceid:
      name: maintenanceid
      in: path
      required: true
      style: simple
      schema:
        type: string
    withdrawalid:
      name: withdrawalid
      in: path
      required: true
      style: simple
      schema:
        type: string
    repaymentid:
      name: repaymentid
      in: path
      required: true
      style: simple
      schema:
        type: string
    restructuringid:
      name: restructuringid
      in: path
      required: true
      style: simple
      schema:
        type: string
    amountblockid:
      name: amountblockid
      in: path
      required: true
      style: simple
      schema:
        type: string
    bookingauthorizationid:
      name: bookingauthorizationid
      in: path
      required: true
      style: simple
      schema:
        type: string
    issueddeviceid:
      name: issueddeviceid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    ConsumerLoanFacility:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConsumerLoanFacility'
      required: true
    ServiceFees:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceFees'
      required: true
    Maintenance:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Maintenance'
      required: true
    Withdrawal:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Withdrawal'
      required: true
    Repayment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Repayment'
      required: true
    Restructuring:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Restructuring'
      required: true
    AmountBlock:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AmountBlock'
      required: true
    BookingAuthorization:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BookingAuthorization'
      required: true
    IssuedDevice:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IssuedDevice'
      required: true