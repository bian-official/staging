openapi: 3.0.1
info:
  title: Credit Card
  description: This service domain orchestrates the scheduled maintenance and transactional activities associated with credit card product fulfillment
  contact:
    name: BIAN
    url: https://bian.org
  version: 12.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/CreditCard/12.0.0
paths:
  /CreditCard/Initiate:
    post:
      tags:
        - CR - CreditCardFacility
      summary: InCR Initiate a new card account
      description: InCR Initiate a new card account
      operationId: Initiate
      requestBody:
        $ref: '#/components/requestBodies/CreditCardFacility'
      responses:
        '200':
          $ref: '#/components/responses/CreditCardFacility'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CreditCard/{creditcardid}/Update':
    put:
      tags:
        - CR - CreditCardFacility
      summary: UpCR Update details about a card account
      description: UpCR Update details about a card account
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/creditcardid'
      requestBody:
        $ref: '#/components/requestBodies/CreditCardFacility'
      responses:
        '200':
          $ref: '#/components/responses/CreditCardFacility'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CreditCard/{creditcardid}/Control':
    put:
      tags:
        - CR - CreditCardFacility
      summary: CoCR Control the processing of a card account (e.g. suspend)
      description: CoCR Control the processing of a card account (e.g. suspend)
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/creditcardid'
      requestBody:
        $ref: '#/components/requestBodies/CreditCardFacility'
      responses:
        '200':
          $ref: '#/components/responses/CreditCardFacility'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CreditCard/{creditcardid}/Retrieve':
    get:
      tags:
        - CR - CreditCardFacility
      summary: ReCR Retrieve details about a card account
      description: ReCR Retrieve details about a card account
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/creditcardid'
      responses:
        '200':
          $ref: '#/components/responses/CreditCardFacility'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CreditCard/{creditcardid}/Interest/{interestid}/Retrieve':
    get:
      tags:
        - BQ - Interest
      summary: ReBQ Retrieve details about interest accrued to an account
      description: ReBQ Retrieve details about interest accrued to an account
      operationId: RetrieveInterest
      parameters:
        - $ref: '#/components/parameters/creditcardid'
        - $ref: '#/components/parameters/interestid'
      responses:
        '200':
          $ref: '#/components/responses/Interest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CreditCard/{creditcardid}/Fees/{feesid}/Update':
    put:
      tags:
        - BQ - Fees
      summary: UpBQ Update a fee transaction applied to a card account
      description: UpBQ Update a fee transaction applied to a card account
      operationId: UpdateFees
      parameters:
        - $ref: '#/components/parameters/creditcardid'
        - $ref: '#/components/parameters/feesid'
      requestBody:
        $ref: '#/components/requestBodies/Fees'
      responses:
        '200':
          $ref: '#/components/responses/Fees'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CreditCard/{creditcardid}/Fees/{feesid}/Execute':
    put:
      tags:
        - BQ - Fees
      summary: ExBQ Apply fees to a card account
      description: ExBQ Apply fees to a card account
      operationId: ExecuteFees
      parameters:
        - $ref: '#/components/parameters/creditcardid'
        - $ref: '#/components/parameters/feesid'
      requestBody:
        $ref: '#/components/requestBodies/Fees'
      responses:
        '200':
          $ref: '#/components/responses/Fees'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CreditCard/{creditcardid}/Fees/{feesid}/Retrieve':
    get:
      tags:
        - BQ - Fees
      summary: ReBQ Retrieve details about fees applied to an account
      description: ReBQ Retrieve details about fees applied to an account
      operationId: RetrieveFees
      parameters:
        - $ref: '#/components/parameters/creditcardid'
        - $ref: '#/components/parameters/feesid'
      responses:
        '200':
          $ref: '#/components/responses/Fees'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CreditCard/{creditcardid}/Billing/{billingid}/Update':
    put:
      tags:
        - BQ - Billing
      summary: UpBQ Update details of a billing transaction (invoice)
      description: UpBQ Update details of a billing transaction (invoice)
      operationId: UpdateBilling
      parameters:
        - $ref: '#/components/parameters/creditcardid'
        - $ref: '#/components/parameters/billingid'
      requestBody:
        $ref: '#/components/requestBodies/Billing'
      responses:
        '200':
          $ref: '#/components/responses/Billing'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CreditCard/{creditcardid}/Billing/{billingid}/Execute':
    put:
      tags:
        - BQ - Billing
      summary: ExBQ Execute the billing process for a card account
      description: ExBQ Execute the billing process for a card account
      operationId: ExecuteBilling
      parameters:
        - $ref: '#/components/parameters/creditcardid'
        - $ref: '#/components/parameters/billingid'
      requestBody:
        $ref: '#/components/requestBodies/Billing'
      responses:
        '200':
          $ref: '#/components/responses/Billing'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CreditCard/{creditcardid}/Billing/{billingid}/Retrieve':
    get:
      tags:
        - BQ - Billing
      summary: ReBQ Retrieve details about a billing process for a card account
      description: ReBQ Retrieve details about a billing process for a card account
      operationId: RetrieveBilling
      parameters:
        - $ref: '#/components/parameters/creditcardid'
        - $ref: '#/components/parameters/billingid'
      responses:
        '200':
          $ref: '#/components/responses/Billing'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CreditCard/{creditcardid}/Repayment/{repaymentid}/Update':
    put:
      tags:
        - BQ - Repayment
      summary: UpBQ Update a repayment transaction (bill payment)
      description: UpBQ Update a repayment transaction (bill payment)
      operationId: UpdateRepayment
      parameters:
        - $ref: '#/components/parameters/creditcardid'
        - $ref: '#/components/parameters/repaymentid'
      requestBody:
        $ref: '#/components/requestBodies/Repayment'
      responses:
        '200':
          $ref: '#/components/responses/Repayment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CreditCard/{creditcardid}/Repayment/{repaymentid}/Execute':
    put:
      tags:
        - BQ - Repayment
      summary: ExBQ Execute a repayment transaction against the card account
      description: ExBQ Execute a repayment transaction against the card account
      operationId: ExecuteRepayment
      parameters:
        - $ref: '#/components/parameters/creditcardid'
        - $ref: '#/components/parameters/repaymentid'
      requestBody:
        $ref: '#/components/requestBodies/Repayment'
      responses:
        '200':
          $ref: '#/components/responses/Repayment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CreditCard/{creditcardid}/Repayment/{repaymentid}/Retrieve':
    get:
      tags:
        - BQ - Repayment
      summary: ReBQ Retrieve detail about a repayment transaction
      description: ReBQ Retrieve detail about a repayment transaction
      operationId: RetrieveRepayment
      parameters:
        - $ref: '#/components/parameters/creditcardid'
        - $ref: '#/components/parameters/repaymentid'
      responses:
        '200':
          $ref: '#/components/responses/Repayment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CreditCard/{creditcardid}/CardTransaction/{cardtransactionid}/Update':
    put:
      tags:
        - BQ - CardTransaction
      summary: UpBQ Update a card transaction
      description: UpBQ Update a card transaction
      operationId: UpdateCardTransaction
      parameters:
        - $ref: '#/components/parameters/creditcardid'
        - $ref: '#/components/parameters/cardtransactionid'
      requestBody:
        $ref: '#/components/requestBodies/CardTransaction'
      responses:
        '200':
          $ref: '#/components/responses/CardTransaction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CreditCard/{creditcardid}/CardTransaction/{cardtransactionid}/Exchange':
    put:
      tags:
        - BQ - CardTransaction
      summary: 'EcBQ Verify, accept etc. a card account transaction'
      description: 'EcBQ Verify, accept etc. a card account transaction'
      operationId: ExchangeCardTransaction
      parameters:
        - $ref: '#/components/parameters/creditcardid'
        - $ref: '#/components/parameters/cardtransactionid'
      requestBody:
        $ref: '#/components/requestBodies/CardTransaction'
      responses:
        '200':
          $ref: '#/components/responses/CardTransaction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CreditCard/{creditcardid}/CardTransaction/{cardtransactionid}/Execute':
    put:
      tags:
        - BQ - CardTransaction
      summary: ExBQ Execute a card account transaction
      description: ExBQ Execute a card account transaction
      operationId: ExecuteCardTransaction
      parameters:
        - $ref: '#/components/parameters/creditcardid'
        - $ref: '#/components/parameters/cardtransactionid'
      requestBody:
        $ref: '#/components/requestBodies/CardTransaction'
      responses:
        '200':
          $ref: '#/components/responses/CardTransaction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CreditCard/{creditcardid}/CardTransaction/{cardtransactionid}/Retrieve':
    get:
      tags:
        - BQ - CardTransaction
      summary: ReBQ Retrieve details about a card account transaction
      description: ReBQ Retrieve details about a card account transaction
      operationId: RetrieveCardTransaction
      parameters:
        - $ref: '#/components/parameters/creditcardid'
        - $ref: '#/components/parameters/cardtransactionid'
      responses:
        '200':
          $ref: '#/components/responses/CardTransaction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CreditCard/{creditcardid}/IssuedDevice/Initiate':
    post:
      tags:
        - BQ - IssuedDevice
      summary: InBQ Initiate/enable a type of device for the card account
      description: InBQ Initiate/enable a type of device for the card account
      operationId: InitiateIssuedDevice
      parameters:
        - $ref: '#/components/parameters/creditcardid'
      requestBody:
        $ref: '#/components/requestBodies/IssuedDevice'
      responses:
        '200':
          $ref: '#/components/responses/IssuedDevice'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CreditCard/{creditcardid}/IssuedDevice/{issueddeviceid}/Update':
    put:
      tags:
        - BQ - IssuedDevice
      summary: UpBQ Update details about an issued device
      description: UpBQ Update details about an issued device
      operationId: UpdateIssuedDevice
      parameters:
        - $ref: '#/components/parameters/creditcardid'
        - $ref: '#/components/parameters/issueddeviceid'
      requestBody:
        $ref: '#/components/requestBodies/IssuedDevice'
      responses:
        '200':
          $ref: '#/components/responses/IssuedDevice'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CreditCard/{creditcardid}/IssuedDevice/{issueddeviceid}/Exchange':
    put:
      tags:
        - BQ - IssuedDevice
      summary: 'EcBQ Accept, reject, verify etc. an issued device'
      description: 'EcBQ Accept, reject, verify etc. an issued device'
      operationId: ExchangeIssuedDevice
      parameters:
        - $ref: '#/components/parameters/creditcardid'
        - $ref: '#/components/parameters/issueddeviceid'
      requestBody:
        $ref: '#/components/requestBodies/IssuedDevice'
      responses:
        '200':
          $ref: '#/components/responses/IssuedDevice'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CreditCard/{creditcardid}/IssuedDevice/{issueddeviceid}/Request':
    put:
      tags:
        - BQ - IssuedDevice
      summary: RqBQ Request the issuance of a device (e.g. a new card)
      description: RqBQ Request the issuance of a device (e.g. a new card)
      operationId: RequestIssuedDevice
      parameters:
        - $ref: '#/components/parameters/creditcardid'
        - $ref: '#/components/parameters/issueddeviceid'
      requestBody:
        $ref: '#/components/requestBodies/IssuedDevice'
      responses:
        '200':
          $ref: '#/components/responses/IssuedDevice'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CreditCard/{creditcardid}/IssuedDevice/{issueddeviceid}/Retrieve':
    get:
      tags:
        - BQ - IssuedDevice
      summary: ReBQ Retrieve details about an issued device
      description: ReBQ Retrieve details about an issued device
      operationId: RetrieveIssuedDevice
      parameters:
        - $ref: '#/components/parameters/creditcardid'
        - $ref: '#/components/parameters/issueddeviceid'
      responses:
        '200':
          $ref: '#/components/responses/IssuedDevice'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CreditCard/{creditcardid}/CreditPlan/Initiate':
    post:
      tags:
        - BQ - CreditPlan
      summary: InBQ Initiate a credit plan linked to the card account
      description: InBQ Initiate a credit plan linked to the card account
      operationId: InitiateCreditPlan
      parameters:
        - $ref: '#/components/parameters/creditcardid'
      requestBody:
        $ref: '#/components/requestBodies/CreditPlan'
      responses:
        '200':
          $ref: '#/components/responses/CreditPlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CreditCard/{creditcardid}/CreditPlan/{creditplanid}/Update':
    put:
      tags:
        - BQ - CreditPlan
      summary: UpBQ Update details of the credit plan
      description: UpBQ Update details of the credit plan
      operationId: UpdateCreditPlan
      parameters:
        - $ref: '#/components/parameters/creditcardid'
        - $ref: '#/components/parameters/creditplanid'
      requestBody:
        $ref: '#/components/requestBodies/CreditPlan'
      responses:
        '200':
          $ref: '#/components/responses/CreditPlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CreditCard/{creditcardid}/CreditPlan/{creditplanid}/Request':
    put:
      tags:
        - BQ - CreditPlan
      summary: RqBQ Request manual intervention with a credit plan
      description: RqBQ Request manual intervention with a credit plan
      operationId: RequestCreditPlan
      parameters:
        - $ref: '#/components/parameters/creditcardid'
        - $ref: '#/components/parameters/creditplanid'
      requestBody:
        $ref: '#/components/requestBodies/CreditPlan'
      responses:
        '200':
          $ref: '#/components/responses/CreditPlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CreditCard/{creditcardid}/CreditPlan/{creditplanid}/Retrieve':
    get:
      tags:
        - BQ - CreditPlan
      summary: ReBQ Retrieve details about a linked credit plan
      description: ReBQ Retrieve details about a linked credit plan
      operationId: RetrieveCreditPlan
      parameters:
        - $ref: '#/components/parameters/creditcardid'
        - $ref: '#/components/parameters/creditplanid'
      responses:
        '200':
          $ref: '#/components/responses/CreditPlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    currencycode:
      type: object
      properties:
        Currencycode:
          type: string
          description: "A code identifying a currency according to ISO-4217.\nA currency is a system of money in general use in a particular country.\n\nCode allocated to a currency, by a maintenance agency, under an international identification scheme as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\". Valid currency codes are registered with the ISO 4217 Maintenance Agency, and consist of three contiguous letters. (ISO20022)\n\n"
          format: datatype
      description: Required for dual currency accounts CurrencyCode|CurrencyCode (https://www.iso20022.org/standardsrepository/type/CurrencyCode)|Standard|ISO20022 BM ()
    value:
      type: object
      properties:
        Value:
          type: string
          description: "Data or set of data \n\n- A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)"
          format: datatype
      description: "The calculated position ||\r\n|"
    amounttypevalues:
      enum:
        - Principal
        - Actual
        - Estimated
        - Maximum
        - Default
        - Replacement
        - Incremental
        - Decremental
        - Reserved
        - Available
        - Used
      type: string
      description: ">\r\n* `Principal` - \r\n* `Actual` - Actual amount.\r\n* `Estimated` - Estimated amount (the final amount could be above or below).\r\n* `Maximum` - Maximum amount (the final amount must be less or equal).\r\n* `Default` - Default amount.\r\n* `Replacement` - Replacement amount.\r\n* `Incremental` - Incremental amount for reservation.\r\n* `Decremental` - Decremental amount for reservation.\r\n* `Reserved` - Reserved or updated reserved amount for reservation.\r\n* `Available` - \r\n* `Used` - \r\n"
    amount:
      type: object
      properties:
        AmountValue:
          $ref: '#/components/schemas/value'
        AmountCurrency:
          $ref: '#/components/schemas/currencycode'
        DecimalPointPosition:
          type: string
          description: "Decimal point position starts calulating from the right\n"
          format: string
        AmountType:
          $ref: '#/components/schemas/amounttypevalues'
      description: The amount corresponding to the type
    date:
      type: object
      properties:
        DateContent:
          type: string
          description: ''
          format: string
      description: Significant dates and times associated with the transaction
    CardTransaction:
      type: object
      properties:
        CardTransaction:
          type: string
          description: The card transaction record
          format: string
        CardTransactionProductInstanceReference:
          type: string
          description: The account number associated with the card transaction
          format: object
        CardTransactionNetworkReference:
          type: string
          description: Reference to the network the card transaction is handled by
          format: object
        CardTransactionIssuingBankReference:
          type: string
          description: Refers to the card holder's issuing bank
          format: object
        CardTransactionMerchantAcquiringBankReference:
          type: string
          description: Refers to the merchant's acquiring bank
          format: object
        CardTransactionType:
          type: string
          description: 'The type of transaction (purchase, cash advance, etc.)'
          format: string
        CardTransactionCurrency:
          $ref: '#/components/schemas/currencycode'
        CardTransactionAmountType:
          type: string
          description: 'Type of amount (e.g. original amount, billing currency amount, conversion rate, FX Mark-up)'
          format: string
        CardTransactionAmount:
          $ref: '#/components/schemas/amount'
        CardTransactionMerchantReference:
          type: string
          description: Refers to the merchant initiating settlement
          format: object
        CardTransactionLocationReference:
          type: string
          description: Refers to the point of sale location
          format: object
        CardTransactionProductandServiceReference:
          type: string
          description: 'Details of the transaction (e.g. purchased service/product, purpose)'
          format: object
        CardTransactionDateTime:
          $ref: '#/components/schemas/date'
        CardTransactionFXConversionCharge:
          type: string
          description: The applied currency conversion charge
          format: string
        CardTransactionInterchargeFee:
          type: string
          description: The applied intercharge fee
          format: string
        CardTransactionAuthorizationRecord:
          type: string
          description: 'Details the reference, amount, timestamp of the transaction authorization)'
          format: string
      description: The product features/services available with a financical facility
    billingarrangement:
      type: object
      properties:
        BillingArrangement:
          type: string
          description: ''
          format: class
      description: 'Defines the set-up for the billing processing (e.g. cycle date, type of billing, etc.)'
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: The name of the product used for marketing purposes from a customer perspective. I.e. what the customer would recognise. (OB) Name|Name (https://www.iso20022.org/standardsrepository/type/Name)|Standard|ISO20022 ()
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    datetime:
      type: object
      properties:
        DateTimeContent:
          type: string
          description: ''
          format: string
        TimeZoneCode:
          type: string
          description: ''
          format: string
        DaylightSavingIndicator:
          type: string
          description: ''
          format: string
      description: "Value of the date type ||\r\n|"
    partyidentificationtypevalues:
      enum:
        - Taxidentificationnumber
        - Nationalregistrationnumber
        - Registrationauthorityidentification
        - LEI(LegalEntityIdentifier)
        - Alienregistrationnumber
        - Passportnumber
        - Taxexemptidentificationnumber
        - Corporateidentification
        - Driverlicensenumber
        - Foreigninvestmentidentitynumber
        - Socialsecuritynumber
        - Identitycardnumber
        - Concat
        - Nationalregistrationidentificationnumber
      type: string
      description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC.\r\n"
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    partylegalstructuretypevalues:
      enum:
        - Individual
        - CommunityInterestCompany
        - CharitableIncorporatedOrganisation
        - Co-Operative
        - Charity
        - GeneralPartnership
        - LimitedLiabilityPartnership
        - ScottishLimitedPartnership
        - LimitedPartnership
        - PrivateLimitedCompany
        - PublicLimitedCompany
        - Sole(SoleTrader)
      type: string
      description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - \r\n"
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
        PartyLegalStructureType:
          $ref: '#/components/schemas/partylegalstructuretypevalues'
      description: Reference to the associated party Party|Party (https://www.iso20022.org/standardsrepository/type/Party)|Standard|ISO20022BM ()
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: "Definition of a specific product feature provided as an option ||\r\n|"
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: The reporting period covered by the statement DateTimePeriod|DateTimePeriod (https://www.iso20022.org/standardsrepository/type/DateTimePeriod)|Standard|ISO20022 BM ()
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: "Reference identifier linking the account to appropriate tax handling ||\r\n|"
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: Unique and unambiguous identification of a Product Marketing State. GenericIdentification|GenericIdentification (https://www.iso20022.org/standardsrepository/type/GenericIdentification)|Standard|ISO20022 BM ()
    financialdocumenttypevalues:
      enum:
        - Meteredserviceinvoice
        - Creditnoterelatedtofinancialadjustment
        - Debitnoterelatedtofinancialadjustment
        - Commercialinvoice
        - Creditnote
        - Debitnote
        - Hireinvoice
        - Selfbilledinvoice
        - Remittanceadvicemessage
        - Relatedpaymentinstruction
        - Commercialcontract
        - Foreignexchangedealreference
        - Statementofaccount
        - Dispatchadvice
        - Purchaseorder
        - Structuredcommunicationreference
        - Billoflading
        - Voucher
        - Accountreceivableopenitem
        - Tradeservicesutilitytransaction
        - Cashierreceipt
        - Customerreceipt
        - Journal
        - Salereceipt
      type: string
      description: ">\r\n* `Meteredserviceinvoice` - Document is an invoice claiming payment for the supply of metered services, for example gas or electricity supplied to a fixed meter.\r\n* `Creditnoterelatedtofinancialadjustment` - Document is a credit note for the final amount settled for a commercial transaction.\r\n* `Debitnoterelatedtofinancialadjustment` - Document is a debit note for the final amount settled for a commercial transaction.\r\n* `Commercialinvoice` - Document is an invoice.\r\n* `Creditnote` - Document is a credit note.\r\n* `Debitnote` - Document is a debit note.\r\n* `Hireinvoice` - Document is an invoice for the hiring of human resources or renting goods or equipment.\r\n* `Selfbilledinvoice` - Document is an invoice issued by the debtor.\r\n* `Remittanceadvicemessage` - Document is a remittance advice sent separately from the current transaction.\r\n* `Relatedpaymentinstruction` - Document is a linked payment instruction to which the current payment instruction is related, for example, in a cover scenario.\r\n* `Commercialcontract` - Document is an agreement between the parties, stipulating the terms and conditions of the delivery of goods or services.\r\n* `Foreignexchangedealreference` - Document is a pre-agreed or pre-arranged foreign exchange transaction to which the payment transaction refers.\r\n* `Statementofaccount` - Document is a statement of the transactions posted to the debtor's account at the supplier.\r\n* `Dispatchadvice` - Document is a dispatch advice.\r\n* `Purchaseorder` - Document is a purchase order.\r\n* `Structuredcommunicationreference` - Document is a structured communication reference provided by the creditor to identify the referred transaction.\r\n* `Billoflading` - Document is a shipping notice.\r\n* `Voucher` - Document is an electronic payment document.\r\n* `Accountreceivableopenitem` - Document is a payment that applies to a specific source document.\r\n* `Tradeservicesutilitytransaction` - Document is a transaction identifier as assigned by the Trade Services Utility.\r\n* `Cashierreceipt` - When the Sale system print the Cashier copy of the Payment receipt.\r\n* `Customerreceipt` - When the Sale System requires   the POI system to print the Customer receipt.\r\n* `Journal` - When the POI or the Sale System wants to store a message on the journal printer or electronic journal of the Sale Terminal (it is sometimes a Sale Logging/Journal Printer).\r\n* `Salereceipt` - When the Sale System requires the POI system to print the Sale receipt.\r\n"
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: 'Status of the document (e.g. delivered, paid, etc.). ISO20022'
    documentdatetimetypevalues:
      enum:
        - CreationDate
        - CapturingDate
        - VersionDate
        - ValueDate
        - IssueDate
      type: string
      description: ">\r\n* `CreationDate` - \r\n* `CapturingDate` - \r\n* `VersionDate` - \r\n* `ValueDate` - \r\n* `IssueDate` - \r\n"
    document:
      type: object
      properties:
        DocumentIdentification:
          $ref: '#/components/schemas/identifier'
        DocumentVersion:
          type: string
          description: ''
          format: number
        DocumentType:
          $ref: '#/components/schemas/financialdocumenttypevalues'
        DocumentStatus:
          $ref: '#/components/schemas/status'
        DocumentDateTime:
          $ref: '#/components/schemas/datetime'
        DocumentName:
          $ref: '#/components/schemas/name'
        DocumentDateTimeType:
          $ref: '#/components/schemas/documentdatetimetypevalues'
        DocumentPurpose:
          $ref: '#/components/schemas/text'
        DocumentFormat:
          $ref: '#/components/schemas/text'
        DocumentSubject:
          $ref: '#/components/schemas/text'
        DocumentDescription:
          $ref: '#/components/schemas/text'
        DocumentValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
      description: ''
    addresstypevalues:
      enum:
        - PostalAddress
        - GeolocationAddress
        - LatitudeAddress
        - LongitudeAddress
        - ElectronicAddress
      type: string
      description: ">\r\n* `PostalAddress` - \r\n* `GeolocationAddress` - \r\n* `LatitudeAddress` - \r\n* `LongitudeAddress` - \r\n* `ElectronicAddress` - \r\n"
    geographicalareatypevalues:
      enum:
        - Continent
        - Country
        - State
        - District
        - Province
        - Town
        - City
        - Region
      type: string
      description: ">\r\n* `Continent` - \r\n* `Country` - \r\n* `State` - \r\n* `District` - \r\n* `Province` - \r\n* `Town` - \r\n* `City` - \r\n* `Region` - \r\n"
    location:
      type: object
      properties:
        LocationDescription:
          $ref: '#/components/schemas/text'
        LocationDateTime:
          $ref: '#/components/schemas/datetime'
        LocationStatus:
          $ref: '#/components/schemas/status'
        LocationType:
          $ref: '#/components/schemas/geographicalareatypevalues'
        LocationZoningType:
          $ref: '#/components/schemas/text'
        LocationNeighborhoodType:
          $ref: '#/components/schemas/text'
        LocationConstructionType:
          $ref: '#/components/schemas/text'
        LocationOccupancyType:
          $ref: '#/components/schemas/text'
        LocationValue:
          $ref: '#/components/schemas/value'
        LocationCapacity:
          $ref: '#/components/schemas/text'
        LocationIdentification:
          $ref: '#/components/schemas/identifier'
        LocationAddress:
          $ref: '#/components/schemas/address'
        LocationName:
          $ref: '#/components/schemas/name'
        LocationTimeZone:
          $ref: '#/components/schemas/text'
      description: ''
    address:
      type: object
      properties:
        AddressType:
          $ref: '#/components/schemas/addresstypevalues'
        LocationReference:
          $ref: '#/components/schemas/location'
      description: The address used to send the invoice to.
    debitcreditindicatortvalues:
      enum:
        - Debit
        - Credit
      type: string
      description: ">\r\n* `Debit` - Transaction is a debt entry\r\n* `Credit` - Transaction is a credit entry\r\n"
    invoice:
      type: object
      properties:
        InvoiceIdentification:
          $ref: '#/components/schemas/identifier'
        InvoiceType:
          $ref: '#/components/schemas/text'
        InvoiceDueDate:
          $ref: '#/components/schemas/datetime'
        InvoicePeriod:
          $ref: '#/components/schemas/datetimeperiod'
        InvoiceAssignedDocument:
          $ref: '#/components/schemas/document'
        InvoiceAdress:
          $ref: '#/components/schemas/address'
        InvoiceAmount:
          $ref: '#/components/schemas/amount'
        InvoiceStatus:
          $ref: '#/components/schemas/status'
        CreditDebitNoteAmount:
          $ref: '#/components/schemas/amount'
        TotalTaxAmount:
          $ref: '#/components/schemas/amount'
        TotalInvoiceAmount:
          $ref: '#/components/schemas/amount'
        InvoiceCurrency:
          $ref: '#/components/schemas/currencycode'
        TotalCharge:
          $ref: '#/components/schemas/amount'
        TotalPrepaidAmount:
          $ref: '#/components/schemas/amount'
        TotalNetAmount:
          $ref: '#/components/schemas/amount'
        CreditDebitIndicator:
          $ref: '#/components/schemas/debitcreditindicatortvalues'
        RemittedAmount:
          $ref: '#/components/schemas/amount'
      description: The billing/invoicing transaction details
    invoiceinvolvementtypevaleus:
      enum:
        - InvoiceFactor
        - Invoicee
        - InvoiceIssuer
        - Invoicer
      type: string
      description: ">\r\n* `InvoiceFactor` - \r\n* `Invoicee` - Party who receives the invoice. \n\r\n* `InvoiceIssuer` - Party who creates an invoice and claiming payment for goods or services rendered to the customer.\r\n* `Invoicer` - \r\n"
    invoiceinvolvement:
      type: object
      properties:
        InvoiceInvolvementType:
          $ref: '#/components/schemas/invoiceinvolvementtypevaleus'
        PartyReference:
          $ref: '#/components/schemas/party'
        InvoiceReference:
          $ref: '#/components/schemas/invoice'
      description: 'The target for the invoice, typically the card holder'
    financialstatementtypevalues:
      enum:
        - IncomeStatement
        - BalanceSheet
        - CashFlowsStatement
        - DebtStatement
        - AssetStatement
        - AssetAndLiabilityStatement
      type: string
      description: ">\r\n* `IncomeStatement` - \r\n* `BalanceSheet` - \r\n* `CashFlowsStatement` - A cash flow statement is a financial statement that shows how cash entered and exited a company during an accounting period.\r\n* `DebtStatement` - \r\n* `AssetStatement` - \r\n* `AssetAndLiabilityStatement` - \r\n"
    statement:
      type: object
      properties:
        StatementType:
          $ref: '#/components/schemas/financialstatementtypevalues'
      description: Reference to an associated statement (that is included in the generated invoice)
    Billing:
      type: object
      properties:
        BillingParameters:
          $ref: '#/components/schemas/billingarrangement'
        BillingTransaction:
          $ref: '#/components/schemas/invoice'
        BillingTransactionParty:
          $ref: '#/components/schemas/invoiceinvolvement'
        BillingTransactionAddress:
          $ref: '#/components/schemas/address'
        BillingTransactionPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        BillingTransactionStatementReference:
          $ref: '#/components/schemas/statement'
        BillingTransactionAmount:
          $ref: '#/components/schemas/amount'
        BillingTransactionMinimumRequiredPayment:
          $ref: '#/components/schemas/amount'
        BillingTransactionPaymentDueDate:
          $ref: '#/components/schemas/date'
      description: The product features/services available with a financical facility
    transactiondatetypevalues:
      enum:
        - TransactionExecutedDate
        - TransactionFulfillmentDate
        - TransactionInitiatedDate
        - TransactionCancelledDate
        - TransactionApprovedDate
      type: string
      description: ">\r\n* `TransactionExecutedDate` - \r\n* `TransactionFulfillmentDate` - \r\n* `TransactionInitiatedDate` - \r\n* `TransactionCancelledDate` - \r\n* `TransactionApprovedDate` - \r\n"
    transactiondate:
      type: object
      properties:
        TransactionDate:
          $ref: '#/components/schemas/datetime'
        TransactionDateType:
          $ref: '#/components/schemas/transactiondatetypevalues'
      description: "The Date that the transaction has occurred or is planned to occur.\nA characteristic of transaction which refers to the LifecycleDate of transaction (e.g., initiated date, executed date, fulfillment date). "
    transactiontypevalues:
      enum:
        - FinancialTransaction
        - BusinessTransaction
        - BankingTransaction
        - AccountingTransaction
        - BookingTransaction
        - AllocationTransaction
        - DeliveryTransaction
        - ProductionTransaction
      type: string
      description: "The types of transactions and transaction details to be included ||\r\n|"
    transactionstatustypevalues:
      enum:
        - Initiated
        - Executed
        - Cancelled
        - Confirmed
        - Suspended
        - Pending
        - Completed
        - Notified
        - Booked
        - Rejected
      type: string
      description: ">\r\n* `Initiated` - \r\n* `Executed` - \r\n* `Cancelled` - \r\n* `Confirmed` - \r\n* `Suspended` - \r\n* `Pending` - \r\n* `Completed` - \r\n* `Notified` - \r\n* `Booked` - \r\n* `Rejected` - \r\n"
    transactionlifecyclestatus:
      type: object
      properties:
        TransactionLifecycleStatus:
          $ref: '#/components/schemas/status'
        TransactionLifecycleStatusType:
          $ref: '#/components/schemas/transactionstatustypevalues'
      description: 'A characteristic of transaction which refers to the LifecycleStatus of transaction (e.g., initiated, executed, confirmed, cancelled, etc.) '
    transaction:
      type: object
      properties:
        TransactionIdentification:
          $ref: '#/components/schemas/identifier'
        TransactionDate:
          $ref: '#/components/schemas/transactiondate'
        TransactionType:
          $ref: '#/components/schemas/transactiontypevalues'
        TransactionDescription:
          $ref: '#/components/schemas/text'
        TransactionStatus:
          $ref: '#/components/schemas/transactionlifecyclestatus'
        TransactionName:
          $ref: '#/components/schemas/name'
      description: The billing instance
    productagreementtypevalues:
      enum:
        - CurrentAccountAgreement
        - SavingsAccountAgreement
        - BrokeredProductAgreement
        - ConsumerLoanAgreement
        - MortgageLoanAgreement
        - DirectDebitServiceAgreement
      type: string
      description: ">\r\n* `CurrentAccountAgreement` - \r\n* `SavingsAccountAgreement` - \r\n* `BrokeredProductAgreement` - \r\n* `ConsumerLoanAgreement` - \r\n* `MortgageLoanAgreement` - \r\n* `DirectDebitServiceAgreement` - \r\n"
    productidentificationtypevalues:
      enum:
        - ISINCode
        - PackageCode
        - Buyersitemnumber
        - Commercialdescriptioncodename
        - EAN
        - Harmonizedtariffcodename
        - Manufacturersitemnumber
        - Modelnumber
        - Partnumber
        - Quotacategory
        - Stylenumber
        - Suppliersitemnumber
        - Universalproductcode
      type: string
      description: Identifier within the parent organisation for the product. Must be unique in the organisation. ProductIdentifierCode|ProductIdentifierCode (https://www.iso20022.org/standardsrepository/type/ProductIdentifierCode)|Standard|ISO20022 BM ()
    productidentification:
      type: object
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/identifier'
        ProductIdentificationType:
          $ref: '#/components/schemas/productidentificationtypevalues'
      description: The identifier of product e.g. ISIN Code.
    bankingproducttypevalues:
      enum:
        - LoanProduct
        - CurrentAccountProduct
        - SavingAccountProduct
        - BrokeredProduct
        - TermDepositProduct
      type: string
      description: ">\r\n* `LoanProduct` - \r\n* `CurrentAccountProduct` - \r\n* `SavingAccountProduct` - \r\n* `BrokeredProduct` - \r\n* `TermDepositProduct` - \r\n"
    productlifecyclestatustypevalues:
      enum:
        - Initiated
        - Announced
        - Sold
        - Obsolete
        - Active
      type: string
      description: ">\r\n* `Initiated` - \r\n* `Announced` - \r\n* `Sold` - \r\n* `Obsolete` - \r\n* `Active` - \r\n"
    productlifecyclestatus:
      type: object
      properties:
        ProductLifecycleStatus:
          $ref: '#/components/schemas/status'
        ProductLifecycleStatusType:
          $ref: '#/components/schemas/productlifecyclestatustypevalues'
      description: 'Refers to the lifecycle of a product (e.g., initiated, announced, active, obsolete, withdrawn).'
    bankingproduct:
      type: object
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/productidentification'
        ProductType:
          $ref: '#/components/schemas/bankingproducttypevalues'
        ProductLifecycleStatus:
          $ref: '#/components/schemas/productlifecyclestatus'
        ProductPriority:
          $ref: '#/components/schemas/text'
        ProductDescription:
          $ref: '#/components/schemas/text'
        ProductVersion:
          $ref: '#/components/schemas/text'
        ProductName:
          $ref: '#/components/schemas/name'
      description: ''
    agreementtypevalues:
      enum:
        - CustomerAgreement
        - SupplierAgreement
        - BrokerAgreement
        - SalesAgreement
        - PurchaseAgreement
        - MaintenanceAgreement
        - ProductAgreement
        - ProductSalesAgreement
        - ResourceAgreement
      type: string
      description: ">\r\n* `CustomerAgreement` - \r\n* `SupplierAgreement` - \r\n* `BrokerAgreement` - \r\n* `SalesAgreement` - \r\n* `PurchaseAgreement` - \r\n* `MaintenanceAgreement` - \r\n* `ProductAgreement` - \r\n* `ProductSalesAgreement` - \r\n* `ResourceAgreement` - \r\n"
    agreementlifecyclestatustypevalues:
      enum:
        - Offered
        - Confirmed
        - Completed
        - Signed
        - Terminated
        - Rejected
      type: string
      description: ">\r\n* `Offered` - \r\n* `Confirmed` - \r\n* `Completed` - \r\n* `Signed` - \r\n* `Terminated` - \r\n* `Rejected` - \r\n"
    agreementlifecyclestatus:
      type: object
      properties:
        AgreementLifecycleStatus:
          $ref: '#/components/schemas/status'
        AgreementLifecycleStatusType:
          $ref: '#/components/schemas/agreementlifecyclestatustypevalues'
      description: 'A characteristic of agreement which refers to the LifecycleStatus of agreement (e.g., potential, offered, confirmed, completed, signed, terminated).'
    agreement:
      type: object
      properties:
        AgreementSignedDate:
          $ref: '#/components/schemas/date'
        AgreementType:
          $ref: '#/components/schemas/agreementtypevalues'
        AgreementValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        AgreementVersion:
          $ref: '#/components/schemas/text'
        AgreementStatus:
          $ref: '#/components/schemas/agreementlifecyclestatus'
        AgreementSubjectMatter:
          $ref: '#/components/schemas/text'
        AgreementIdentification:
          $ref: '#/components/schemas/identifier'
        AgreementDate:
          $ref: '#/components/schemas/datetime'
        AgreementDescription:
          $ref: '#/components/schemas/text'
      description: ''
    productagreement:
      type: object
      properties:
        Type:
          $ref: '#/components/schemas/productagreementtypevalues'
        ProductReference:
          $ref: '#/components/schemas/bankingproduct'
        AgreementReference:
          $ref: '#/components/schemas/agreement'
      description: Reference to the account where the payment is made from
    Repayment:
      type: object
      properties:
        RepaymentTransaction:
          $ref: '#/components/schemas/transaction'
        RepaymentTransactionType:
          $ref: '#/components/schemas/transactiontypevalues'
        BillingInstanceReference:
          $ref: '#/components/schemas/invoice'
        RepaymentTransactionPayerReference:
          $ref: '#/components/schemas/involvedparty'
        RepaymentTransactionPayerProductInstanceReference:
          $ref: '#/components/schemas/productagreement'
        RepaymentTransactionPayerBankReference:
          $ref: '#/components/schemas/involvedparty'
        RepaymentTransactionAmount:
          $ref: '#/components/schemas/amount'
        RepaymentTransactionCurrency:
          $ref: '#/components/schemas/currencycode'
        RepaymentTransactionValueDate:
          $ref: '#/components/schemas/date'
      description: The product features/services available with a financical facility
    actiontypevalues:
      enum:
        - Initiate
        - Execute
        - Create
        - Transfer
        - Pay
        - Deliver
        - Apply
        - Calculate
      type: string
      description: ">\r\n* `Initiate` - \r\n* `Execute` - \r\n* `Create` - \r\n* `Transfer` - \r\n* `Pay` - \r\n* `Deliver` - \r\n* `Apply` - \r\n* `Calculate` - \r\n"
    action:
      type: object
      properties:
        ActionType:
          $ref: '#/components/schemas/actiontypevalues'
      description: ''
    arrangementlifecyclestatustypevalues:
      enum:
        - Requested
        - Proposed
        - Offered
        - Accepted
        - Cancelled
        - Fulfilled
        - Terminated
      type: string
      description: ">\r\n* `Requested` - \r\n* `Proposed` - \r\n* `Offered` - \r\n* `Accepted` - \r\n* `Cancelled` - \r\n* `Fulfilled` - \r\n* `Terminated` - \r\n"
    arrangementlifecyclestatus:
      type: object
      properties:
        ArrangementLifecycleStatus:
          $ref: '#/components/schemas/status'
        ArrangementLifecycleStatusType:
          $ref: '#/components/schemas/arrangementlifecyclestatustypevalues'
      description: 'A characteristic of arrangement which refers to the LifecycleStatus of arrangement (e.g., requested, proposed, offered, accepted, cancelled, terminated, fulfilled, etc.)'
    subject:
      type: object
      properties:
        Subject:
          type: string
          description: A thing that is discussed or dealt whit in agreement/arrangement about doing or not doing (as action) something.
          format: class
      description: ''
    arrangementtypevalues:
      enum:
        - SweepArrangement
        - WithdrawalArrangement
        - DepositArrangement
        - InterestArrangement
        - FeeArrangement
        - LienArrangement
        - InformationArrangement
        - PaymentArrangement
        - EntitlementArrangement
        - PeriodArrangement
        - CollateralArrangement
        - LimitArrangement
        - AccessArrangement
        - CardPaymentArrangement
        - StandingOrderArrangement
        - OverdraftArrangement
        - RepaymentArrangement
        - StatementArrangement
        - CreditTransferArrangement
        - ProductAndServiceArrangement
        - FactoringArrangement
        - RolloverArrangement
        - RestructuringArrangement
        - InsuranceArrangement
        - CollectionArrangement
        - UnderwritingArrangement
        - TerminationArrangement
        - MaturityArrangement
      type: string
      description: ">\r\n* `SweepArrangement` - An arrangement into which is promised for the set-up and execution of structured sweeps to and from the facility to a linked account.\r\n* `WithdrawalArrangement` - An arrangement into which is promised to deliver Withdraw Service  to take fund out of an account. \r\n* `DepositArrangement` - An arrangement into which is promised to deliver Deposit Service  to place funds into an account for safekeeping. \r\n* `InterestArrangement` - An arrangement into which is promised to apply a pricing element expressed in a percentage  to a principal amount.\r\n* `FeeArrangement` - An arrangement into which is promised to apply a charge for services rendered. \r\n* `LienArrangement` - An arrangement into which is promised for placing a lien or block on the account for a specified purpose, amount, and period. \r\n* `InformationArrangement` - An arrangement concerning the information the bank will provide about the agreement/account\r\n* `PaymentArrangement` - An arrangement into which is promised to deliver a specific payment service including regular payments, standing orders, direct debits and bill pay instructions. \r\n* `EntitlementArrangement` - Right or obligation linked to the involvement of a party in an agreement\r\n* `PeriodArrangement` - \r\n* `CollateralArrangement` - An arrangement into which is promised for handling the oversight of the allocation, valuation and administration of collateral associated with the facility. \r\n* `LimitArrangement` - An arrangement to limit something\ne.g., the number of transaction per week, the amount of money allowed to withdraw per week/day and etc. \r\n* `AccessArrangement` - An arrangement that allows or restricts the access to a service or product, channel or device through a specific access point\r\n* `CardPaymentArrangement` - An arrangement into which is promised to deliver Card payment Service to execute payment transactions through a payment card, including online payments. \r\n* `StandingOrderArrangement` - An arrangement into which is promised to deliver Standing Order Service to make regular transfers on given dates to a named beneﬁciary. \r\n* `OverdraftArrangement` - An arrangement into which is promised to deliver Overdraft Service  that allows fund transfer even if there is no provision on the account. \r\n* `RepaymentArrangement` - An arrangement into which is promised for paying back money previously borrowed from a lender. \r\n* `StatementArrangement` - An arrangement into which is promised to deliver a reporting service on payment transactions registered on an account. \r\n* `CreditTransferArrangement` - An arrangement into which is promised to allow a payer to transfer fund to a beneficiary. \r\n* `ProductAndServiceArrangement` - \r\n* `FactoringArrangement` - \r\n* `RolloverArrangement` - Arrangement stipulating the modalities for an automatic renewal of the agreement\n\ni.e. the replacement of the agreement with a new one without renewed negociation and witout explicit agreement of the customer \r\n* `RestructuringArrangement` - \r\n* `InsuranceArrangement` - \r\n* `CollectionArrangement` - An arrangement into which is promised to collect past-due debts from borrowers\r\n* `UnderwritingArrangement` - A contractual agreement between parties that commits the underwriter to assuming risk.\r\n* `TerminationArrangement` - \r\n* `MaturityArrangement` - \r\n"
    arrangement:
      type: object
      properties:
        ArrangementAction:
          $ref: '#/components/schemas/action'
        ArrangementStartDate:
          $ref: '#/components/schemas/datetime'
        ArrangementEndDate:
          $ref: '#/components/schemas/datetime'
        ArrangementStatus:
          $ref: '#/components/schemas/arrangementlifecyclestatus'
        ArrangementSubjectMatter:
          $ref: '#/components/schemas/subject'
        Arrangementtype:
          $ref: '#/components/schemas/arrangementtypevalues'
      description: 'The range of terms applied to the pan (e.g. minimum payment, payment grace period, interest rate reference, installment plans, …)'
    accountstatustypevalues:
      enum:
        - Enabled
        - Disabled
        - Deleted
        - Proforma
        - Pending
      type: string
      description: ">\r\n* `Enabled` - Account can be used for its intended purpose.\r\n* `Disabled` - Account cannot be used for its intended purpose, either temporarily or permanently.\r\n* `Deleted` - Account cannot be used any longer.\r\n* `Proforma` - Account is temporary and can be partially used for its intended purpose. The account will be fully available for use when the account servicer has received all relevant documents.\r\n* `Pending` - Account change is pending approval.\r\n"
    accountstatus:
      type: object
      properties:
        AccountStatus:
          $ref: '#/components/schemas/status'
        AccountStatusType:
          $ref: '#/components/schemas/accountstatustypevalues'
      description: "A characteristic of account which refers to the LifecycleStatus of account like opened, closed, blocked, etc.\n\nSpecifies the current state of an account. (ISO20022)"
    accountidentificationtypevalues:
      enum:
        - BBAN
        - IBAN
        - UPIC
        - AccountNumber
        - PAN
        - Paym
        - Wallet
      type: string
      description: ">\r\n* `BBAN` - Basic Bank Account Number (BBAN) - identifier used nationally by financial institutions, ie, in individual countries, generally as part of a National Account Numbering Scheme(s), to uniquely identify the account of a customer. (ISO20022)\n\n.\r\n* `IBAN` - International Bank Account Number (IBAN) - identifier used internationally by financial institutions to uniquely identify the account of a customer. Further specifications of the format and content of the IBAN can be found in the standard ISO 13616 \"Banking and related financial services - International Bank Account Number (IBAN)\" version 1997-10-01, or later revisions. (ISO20022)\n\nAn identifier used internationally by financial institutions to uniquely identify the account of a customer at a financial institution, as described in the latest edition of the international standard ISO 13616. \"Banking and related financial services - International Bank Account Number (IBAN)\". (OBExternalAccountIdentification4Code)\r\n* `UPIC` - Universal Payment Identification Code (UPIC) - identifier used by the New York Clearing House to mask confidential data, such as bank accounts and bank routing numbers. UPIC numbers remain with business customers, regardless of banking relationship changes. (ISO20022)\r\n* `AccountNumber` - String of characters (mainly numbers) used to identify an account.(ISO20022)\n\nSort Code and Account Number - identifier scheme used in the UK by financial institutions to identify the account of a customer. The identifier is the concatenation of the 6 digit UK sort code and 8 digit account number. (OBExternalAccountIdentification4Code)\nThe regular expression for this identifier is: ^[0-9]{6}[0-9]{8}$\r\n* `PAN` - Primary Account Number - identifier scheme used to identify a card account. (OBExternalAccountIdentification4Code)\r\n* `Paym` - Paym Scheme to make payments via mobile (OBExternalAccountIdentification4Code)\r\n* `Wallet` - A primary and unique account identifier used to identify a wallet.\nAn ASPSP must document on their developer portal, the payment methods that supports this account identifier.(OBExternalAccountIdentification4Code)\r\n"
    accountidentification:
      type: object
      properties:
        AccountIdentificationType:
          $ref: '#/components/schemas/accountidentificationtypevalues'
        AccountIdentification:
          $ref: '#/components/schemas/identifier'
      description: The identifier of account like Account Number.
    accountdatetypevalues:
      enum:
        - OpeningDate
        - ClosingDate
        - BlockingDate
        - MaturityDate
        - LiveDate
      type: string
      description: 'Key dates associated with the account (e.g. opening date, closing date) Account/OpeningDate|Account/OpeningDate (https://www.iso20022.org/standardsrepository/type/Account)|Standard|ISO20022 BM ()'
    accountdate:
      type: object
      properties:
        AccountDateType:
          $ref: '#/components/schemas/accountdatetypevalues'
        AccountDate:
          $ref: '#/components/schemas/datetime'
      description: 'A characteristic of account which refers to LifecycleDate of account (e.g., ClosingDate, OpeningDate, LiveDate, etc.) '
    accounttypevalues:
      enum:
        - DebitAccount
        - CreditAccount
        - VostroAcount
        - NostroAccount
        - PaymentAccount
        - SettlementAccount
        - SavingAccount
        - CurrentAccount
        - CashAccount
        - LoanAccount
      type: string
      description: ">\r\n* `DebitAccount` - \r\n* `CreditAccount` - \r\n* `VostroAcount` - In correspondent banking, an account held by one bank on behalf of another bank (the customer bank); the customer bank regards this account as its nostro account. (ECB)\r\n* `NostroAccount` - In correspondent banking, an account held by a customer bank on the books of another bank acting as a service provider. The other bank regards this account as a loro account. (ECB)\r\n* `PaymentAccount` - \r\n* `SettlementAccount` - A specific purpose account used to post debit and credit entries as a result of the transaction. (ISO20022)\n\nAccount which is used for settlement. (ISO20022)\r\n* `SavingAccount` - \r\n* `CurrentAccount` - \r\n* `CashAccount` - \r\n* `LoanAccount` - \r\n"
    accounttype:
      type: object
      properties:
        AccountType:
          $ref: '#/components/schemas/accounttypevalues'
        AccountTypeName:
          $ref: '#/components/schemas/name'
      description: 'Specifies the category of account like payment account, loan account, cash account, securities account, etc. '
    balancetypevalues:
      enum:
        - Openingbalance
        - Closingbalance
        - Currentbalance
        - Availablebalance
        - Ledgerbalance
        - Reservebalance
        - Freebalance
        - Principalbalance
      type: string
      description: ">\r\n* `Openingbalance` - Book balance of the account at the beginning of the account servicer's business day. It always equals the closing book balance from the previous business day. Note: the available balance at the beginning of the account servicer's business day may be different from the closing book balance from the previous business day. (ISO20022)\r\n* `Closingbalance` - Balance of the account at the end of the account servicer's business day. It is the sum of the opening balance at the beginning of the day and all entries booked to the account during the account servicer's business day. (ISO20022)\r\n* `Currentbalance` - Balance of the account at a precise moment in time. (ISO20022)\r\n* `Availablebalance` - Balance of money or securities that is at the disposal of the account owner on the date specified. (ISO20022)\r\n* `Ledgerbalance` - Ledger balance refers to posted transactions (e.g. limit authorisation amount - posted transactions). (ISO20022)\r\n* `Reservebalance` - \r\n* `Freebalance` - \r\n* `Principalbalance` - \r\n"
    accountbalance:
      type: object
      properties:
        BalanceAmount:
          $ref: '#/components/schemas/amount'
        BalanceType:
          $ref: '#/components/schemas/balancetypevalues'
        BalanceDate:
          $ref: '#/components/schemas/datetime'
        BalanceIndicator:
          $ref: '#/components/schemas/debitcreditindicatortvalues'
      description: "The state of the obligations managed on the account, the result of all entries on the account.\n\nNumerical representation of the net increases and decreases in an account at a specific point in time. (ISO20022)\n\nBanking: Amount available in an account for withdrawal or use.\nRead more: http://www.businessdictionary.com/definition/balance.html\n\nBookkeeping: Difference between the debit and credit sides of an account.\nRead more: http://www.businessdictionary.com/definition/balance.html"
    currencytypevalues:
      enum:
        - BaseCurrency
        - ReportingCurrency
        - SecondaryCurrency
        - TransferCurrency
      type: string
      description: ">\r\n* `BaseCurrency` - Base currency of the account. (ISO20022)\n\r\n* `ReportingCurrency` - Currency used to calculate and report the balance and related entries of an account. (ISO20022)\n\r\n* `SecondaryCurrency` - \r\n* `TransferCurrency` - Currency of the amount to be transferred which may be different from the currency of the debtor's account. (ISO20022)\r\n"
    accountcurrency:
      type: object
      properties:
        AccountCurrencyType:
          $ref: '#/components/schemas/currencytypevalues'
        AccountCurrency:
          $ref: '#/components/schemas/currencycode'
      description: ''
    account:
      type: object
      properties:
        AccountStatus:
          $ref: '#/components/schemas/accountstatus'
        AccountIdentification:
          $ref: '#/components/schemas/accountidentification'
        AccountDate:
          $ref: '#/components/schemas/accountdate'
        AccountType:
          $ref: '#/components/schemas/accounttype'
        AccountPurpose:
          $ref: '#/components/schemas/text'
        AccountBalance:
          $ref: '#/components/schemas/accountbalance'
        AccountCurrency:
          $ref: '#/components/schemas/accountcurrency'
        AccountDescription:
          $ref: '#/components/schemas/text'
        AccountName:
          $ref: '#/components/schemas/name'
      description: Details of the linked account Account|Account  (https://www.iso20022.org/standardsrepository/type/Account)|Standard|ISO20022 BM ()
    CreditPlan:
      type: object
      properties:
        CreditPlanType:
          $ref: '#/components/schemas/text'
        CreditPlanTerms:
          $ref: '#/components/schemas/arrangement'
        CreditPlanAccountReference:
          $ref: '#/components/schemas/account'
      description: The product features/services available with a financical facility
    frequencytypevalues:
      enum:
        - Annual
        - Monthly
        - Quarterly
        - Semiannual
        - Weekly
        - Daily
        - Adhoc
        - Intraday
        - Overnight
        - Tendays
        - Fortnightly
        - Triggeredbymovement
        - Never
        - Rate
        - Oncreditevent
        - Upfront
        - Onexpiry
        - Hourly
      type: string
      description: ">\r\n* `Annual` - Event takes place every year or once a year.\r\n* `Monthly` - Event takes place every month or once a month.\r\n* `Quarterly` - Event takes place every three months or four times a year.\r\n* `Semiannual` - Event takes place every six months or two times a year.\r\n* `Weekly` - Event takes place once a week.\r\n* `Daily` - Event takes place every day.\r\n* `Adhoc` - Event takes place on request or as necessary.\r\n* `Intraday` - Event takes place several times a day.\r\n* `Overnight` - Event takes place overnight.\r\n* `Tendays` - Event takes place every ten business days.\r\n* `Fortnightly` - Event takes place every two weeks.\r\n* `Triggeredbymovement` - Event takes place at the end of the day if there was a movement on the account, otherwise nothing is sent that day.\r\n* `Never` - Event does never take place.\r\n* `Rate` - Event takes place based on a change of a rate.\r\n* `Oncreditevent` - Event occurs due to a credit event occurring for an issuer.\r\n* `Upfront` - Event that takes place at the initiation of a trade or agreement.\r\n* `Onexpiry` - Event occurs on expiry of a financial contract.\r\n* `Hourly` - Event takes place every hours.\r\n"
    frequency:
      type: object
      properties:
        FrequencyCode:
          $ref: '#/components/schemas/frequencytypevalues'
        FrequencyName:
          $ref: '#/components/schemas/name'
        FrequencyDefinition:
          $ref: '#/components/schemas/text'
      description: Specifies the periodicity of the calculation of the interest.
    rate:
      type: object
      properties:
        RateValue:
          $ref: '#/components/schemas/value'
        RateUnit:
          $ref: '#/components/schemas/text'
        RatePeriod:
          $ref: '#/components/schemas/datetimeperiod'
        RateCapitalUnit:
          $ref: '#/components/schemas/text'
      description: The rate of interest (to be applied or applied)
    interestratetypevalues:
      enum:
        - Fixed
        - Forfeit
        - Variable
        - Scheduled
        - Unscheduled
        - Discount
        - Fixedrateunderlyingexposureforlife
        - Fixedrateunderlyingexposurewithcompulsoryfutureswitchtofloating
        - Fixedwithfutureperiodicresets
        - Floatinglinkedtoindex
        - Floatingrateunderlyingexposureforlife
        - Floatingrateunderlyingexposurewithcap
        - Floatingrateunderlyingexposurewithfloor
        - Floatingrateunderlyingexposurewithfloorandcap
        - Modular
        - Obligorswapped
        - Other
        - Swicthoptionality
      type: string
      description: ">\r\n* `Fixed` - Rate is fixed.\r\n* `Forfeit` - No specific repurchase rate applies to the transaction Repo, only a forfeit.\r\n* `Variable` - Rate is variable.\r\n* `Scheduled` - Rate of the scheduled payment.\r\n* `Unscheduled` - Rate of the unscheduled payment.\r\n* `Discount` - Interest rate type is Discount.\r\n* `Fixedrateunderlyingexposureforlife` - Interest rate type is Fixed rate underlying exposure (for life).\r\n* `Fixedrateunderlyingexposurewithcompulsoryfutureswitchtofloating` - Interest rate type is Fixed rate underlying exposure with compulsory future switch to floating.\r\n* `Fixedwithfutureperiodicresets` - Interest rate type is Fixed with future periodic resets.\r\n* `Floatinglinkedtoindex` - Interest rate type is Floating rate underlying exposure linked to one index that will revert to another index in the future.\r\n* `Floatingrateunderlyingexposureforlife` - Interest rate type is Floating rate underlying exposure (for life).\r\n* `Floatingrateunderlyingexposurewithcap` - Interest rate type is Floating rate underlying exposure with cap.\r\n* `Floatingrateunderlyingexposurewithfloor` - Interest rate type is Floating rate underlying exposure with floor.\r\n* `Floatingrateunderlyingexposurewithfloorandcap` - Interest rate type is Floating rate underlying exposure with both floor and cap.\r\n* `Modular` - Interest rate type is Modular.\r\n* `Obligorswapped` - Interest rate type is Obligor Swapped.\r\n* `Other` - Any other type of interest rate that can be applied.\r\n* `Swicthoptionality` - Interest rate type is Switch Optionality.\r\n"
    schedule:
      type: object
      properties:
        ScheduleType:
          type: string
          description: ''
          format: string
      description: "The schedule for generating product statements to schedule ||\r\n|"
    interestcalculationmethodtypevalues:
      enum:
        - Simple
        - Compounding
      type: string
      description: ">\r\n* `Simple` - Calculation method by which interest is calculated on the original principal only. Accumulated interest from prior periods is not used in calculations for the following periods. (ISO20022)\n\r\n* `Compounding` - Calculation method by which interest is calculated each period on the original principal and all interest accumulated during past periods. (ISO20022)\r\n"
    interesttypevalues:
      enum:
        - Fixed
        - Floatingratenote
        - Dualbasis
        - Index
        - Discounted
        - Zerocoupon
        - Exinterest
        - Cuminterest
      type: string
      description: ">\r\n* `Fixed` - Indicates that the type of interest is fixed.\r\n* `Floatingratenote` - Indicates that the type of interest is a floating rate note.\r\n* `Dualbasis` - Indicates that the type of interest is a dual basis.\r\n* `Index` - Indicates that the type of interest is index.\r\n* `Discounted` - Indicates that the type of interest is discounted.\r\n* `Zerocoupon` - Indicates that the type of interest is a zero coupon.\r\n* `Exinterest` - Indicates deal price excluding accrued interest.\r\n* `Cuminterest` - Indicates deal price including accrued interest.\r\n"
    taxtypevalues:
      enum:
        - Valueaddedtaxofzerorate
        - Provincial
        - Nationaltax
        - Statetax
        - Withholdingtax
        - Capitalgaintax
        - Interimprofittax
        - Stampduty
        - Wealthtax
        - Inheritancetax
        - Solidaritysurcharge
        - Taxcredit
        - Equalisation
        - Gifttax
        - Consumptiontax
        - Alternativeminimumtax
        - Localtax
        - Nationalfederaltax
        - Paymentlevytax
        - Stockexchangetax
        - Transactiontax
        - Transfertax
        - Valueaddedtax
        - Localbrokercommission
        - Executingbrokercommission
        - Eutaxretention
        - Aktiengewinn1
        - Aktiengewinn2
        - Zwischengewinn
        - Customstax
        - Other
        - Mietgewinn
        - Germanlocaltax3
        - Germanlocaltax4
        - Germanlocaltax2
        - Withholdingofforeigntax
        - Withholdingoflocaltax
        - Capitallosscredit
      type: string
      description: ">\r\n* `Valueaddedtaxofzerorate` - Tax for which a zero rate applies.\r\n* `Provincial` - Tax is a provincial tax.\r\n* `Nationaltax` - Tax is a national tax.\r\n* `Statetax` - Tax is a state tax.\r\n* `Withholdingtax` - Tax is on income deducted at source, which the paying agent is legally obliged to deduct from its payments of interest on deposits and other proceeds of a financial instrument.\r\n* `Capitalgaintax` - Tax is on a capital gain (realised and unrealised), that is, the profit that is gained from the sale of a financial instrument.\r\n* `Interimprofittax` - Tax is on the sum of all earnings/revenues accrued since the last dividend distribution.\r\n* `Stampduty` - Tax is on certain documents and transactions.\r\n* `Wealthtax` - Tax is a special tax imposed, applicable only when the value of assets or categories of assets owned by an entity are above a given ceiling defined by the tax authority. Wealth tax is not linked to income.\r\n* `Inheritancetax` - Tax that is payable at the time of death on any items (money or otherwise), where ownership changes either upon death or within a legally specified number of years before death.\r\n* `Solidaritysurcharge` - Tax that is levied by legal authorities for solidarity purposes.\r\n* `Taxcredit` - Direct reduction of an individual's tax liability.\r\n* `Equalisation` - The part of an investor's subscription amount that is held by the fund in order to pay incentive / performance fees at the end of the fiscal year.\r\n* `Gifttax` - Tax that is levied on assets given to individuals prior to the death of the donor. Gift tax is designed to ensure the integrity of the inheritance tax, preventing the pre-death transfer of wealth.\r\n* `Consumptiontax` - Tax that is levied on goods and services purchased by customers, and is added to the retail price.\r\n* `Alternativeminimumtax` - Tax is an alternative minimum tax.\r\n* `Localtax` - Tax that is charged by a local settlement system or local jurisdiction.\r\n* `Nationalfederaltax` - Tax is a country, national, or federal tax that is usually charged by the custodian.\r\n* `Paymentlevytax` - Tax levied on a payment.\r\n* `Stockexchangetax` - Tax collected by a stock exchange.\r\n* `Transactiontax` - Tax levied on a transaction.\r\n* `Transfertax` - Tax levied on a transfer.\r\n* `Valueaddedtax` - Tax is a value added tax.\r\n* `Localbrokercommission` - Local broker's commission amount.\r\n* `Executingbrokercommission` - Executing broker's commission amount.\r\n* `Eutaxretention` - Tax withheld at source in the framework of the European Directive on taxation of savings in the form of interest payments.\r\n* `Aktiengewinn1` - Share-related profit. This is a tax specific to the German market. The share-related-profit gives the fund the opportunity to pass on to the institutional investor redeeming fund units certain tax-free income from equity. The calculation method is based on the old Investment Tax Act (Investmentsteuergesetz).\r\n* `Aktiengewinn2` - Share-related profit. This is a tax specific to the German market. The share-related-profit gives the fund the opportunity to pass on to the institutional investor redeeming fund units certain tax-free income from equity. The calculation method is based on the new Investment Tax Act (Investmentsteuergesetz).\r\n* `Zwischengewinn` - Zwischengewinn.\r\n* `Customstax` - Tax is customs and excise.\r\n* `Other` - Another type of tax.\r\n* `Mietgewinn` - Earnings from renting.\r\n* `Germanlocaltax3` - Local tax (Zinstopf) offset interest per unit against tax exempt amount (variation to offset interest per unit in relation to tax exempt amount).\r\n* `Germanlocaltax4` - Local tax (Ertrag Besitzanteilig) yield liable for interest down payment tax.\r\n* `Germanlocaltax2` - Local tax (ZAS pflichtige Zinsen) - interest liable for interest down payment tax (proportion of gross interest per unit/interim profits that is not covered by the credit in the interest pool).\r\n* `Withholdingofforeigntax` - Rate at which the income will be withheld by the jurisdiction in which the income was originally paid, for which relief at source and/or reclaim may be possible.\r\n* `Withholdingoflocaltax` - Rate at which the income will be withheld by the jurisdiction in which the account owner is located, for which relief at source and/or reclaim may be possible.\r\n* `Capitallosscredit` - Tax recovery is due to capital loss.\r\n"
    ratetypevalues:
      enum:
        - Fixed
        - Forfeit
        - Variable
        - Open
        - Unknown
        - Nilpayment
        - Additionaltax
        - Charges
        - Cashinlieuofsecurities
        - Gross
        - Cashincentive
        - Net
        - Sollication
        - Stampduty
        - Stockexchangetax
        - Withholdingtax
        - Transfertax
        - Transactiontax
        - Taxdeferred
        - Taxfeeamount
        - Withholdingofforeigntax
        - Withholdingoflocaltax
        - Imputed
        - Precompte
        - Onetiertax
        - Localtax
        - Scheduled
        - Unscheduled
        - Anyandall
      type: string
      description: ">\r\n* `Fixed` - Rate is fixed.\r\n* `Forfeit` - No specific repurchase rate applies to the transaction Repo, only a forfeit.\r\n* `Variable` - Rate is variable.\r\n* `Open` - Rate has not been established.\r\n* `Unknown` - Rate is unknown by the sender or has not been established.\r\n* `Nilpayment` - Rate will not be paid.\r\n* `Additionaltax` - Rate used for additional tax that cannot be categorised.\r\n* `Charges` - Rate used to calculate the amount of the charges/fees that cannot be categorised.\r\n* `Cashinlieuofsecurities` - Rate used to calculate the cash disbursement in lieu of a fractional quantity of, for example, equity.\r\n* `Gross` - Cash dividend per equity before deductions or allowances have been made.\r\n* `Cashincentive` - Rate of the cash premium made available if the securities holder consents or participates to an event, for example, consent fees.\r\n* `Net` - Relates to the netting of settlement instructions.\r\n* `Sollication` - Cash rate made available in an offer in order to encourage participation in the offer.\r\n* `Stampduty` - Financial instrument has not been stamped and/or duly signed.\r\n* `Stockexchangetax` - Rate of stock exchange tax.\r\n* `Withholdingtax` - Relates to a tax refund from the authorities on the associated corporate action event.\r\n* `Transfertax` - Transaction has been generated due to transformation following a corporate action.\r\n* `Transactiontax` - Rate used to calculate the amount of transaction tax.\r\n* `Taxdeferred` - Rate relating to the underlying security for which tax is deferred.\r\n* `Taxfeeamount` - Rate relating to the underlying security which is not taxable.\r\n* `Withholdingofforeigntax` - Rate at which the income will be withheld by the jurisdiction in which the income was originally paid, for which relief at source and/or reclaim may be possible.\r\n* `Withholdingoflocaltax` - Rate at which the income will be withheld by the jurisdiction in which the account owner is located, for which relief at source and/or reclaim may be possible.\r\n* `Imputed` - Imputed tax.\r\n* `Precompte` - Rate is a precompte.\r\n* `Onetiertax` - Rate is a one tier tax.\r\n* `Localtax` - Interest liable for interest down payment tax (proportion of gross interest per unit/interim profits that is not covered by the credit in the interest pool).\r\n* `Scheduled` - Rate of the scheduled payment.\r\n* `Unscheduled` - Rate of the unscheduled payment.\r\n* `Anyandall` - Any and all rate is sought.\r\n"
    condition:
      type: object
      properties:
        Condition:
          type: string
          description: "Condition is a premise upon which the fulfillment of an agreement depends \n\nGeneral and special arrangements, provisions, requirements, rules, specifications, and standards that form an integral part of an agreement or contract.\n\nRead more: http://www.businessdictionary.com/definition/terms-and-conditions.html\n\n"
          format: class
      description: Specifies taxation conditions.
    taxarrangement:
      type: object
      properties:
        TaxType:
          $ref: '#/components/schemas/taxtypevalues'
        TaxAmount:
          $ref: '#/components/schemas/amount'
        TaxRate:
          $ref: '#/components/schemas/rate'
        TaxRateType:
          $ref: '#/components/schemas/ratetypevalues'
        PlaceOfTaxation:
          $ref: '#/components/schemas/location'
        TaxableParty:
          $ref: '#/components/schemas/involvedparty'
        TaxAccount:
          $ref: '#/components/schemas/account'
        TaxationCondition:
          $ref: '#/components/schemas/condition'
        TaxCurrency:
          $ref: '#/components/schemas/currencycode'
        TaxDueDate:
          $ref: '#/components/schemas/datetime'
        TaxCalculationDate:
          $ref: '#/components/schemas/datetime'
        TaxPayer:
          $ref: '#/components/schemas/involvedparty'
        TaxRecipient:
          $ref: '#/components/schemas/involvedparty'
      description: Specifies the tax on interest
    feetypevalues:
      enum:
        - Accountingfee
        - Adrfee
        - Advisoryfee
        - Airwaybillfee
        - Backendload
        - Brokeragefee
        - Clearanceandhandlingatdestination
        - Clearanceandhandlingatorigin
        - Collectfreight
        - Commission
        - Contingencydeferredsalescharge
        - Correspondentbankcharge
        - Custodyfee
        - Dangerousgoodsfee
        - Dilutionlevy
        - Discount
        - Equalisation
        - Frontendload
        - Initial
        - Insurancepremium
        - Issuancecancellationfee
        - Issuancefee
        - Managementfee
        - Matchingfees
        - Miscellaneousfee
        - Other
        - Packaging
        - Partacquis
        - Penalty
        - Pickup
        - Postagecharge
        - Premium
        - Publicationfee
        - Regulatoryfee
        - Securitycharge
        - Serviceprovisionfee
        - Shippingcharge
        - Signatureservice
        - Specialconcessions
        - Speciallyagreedfrontendload
        - Storageatdestination
        - Storageatorigin
        - Switch
        - Transferfee
        - Transportcharges
        - Ucitscommission
      type: string
      description: ">\r\n* `Accountingfee` - Fee paid for accounting services rendered.\r\n* `Adrfee` - Charge linked to an ADR (American Depositary Receipt).\r\n* `Advisoryfee` - Fee paid for advisory services rendered.\r\n* `Airwaybillfee` - Charge is an airway bill fee.\r\n* `Backendload` - Sales charge paid by the investor when redeeming an investment such as an investment fund.\r\n* `Brokeragefee` - Fee paid to a broker for services provided.\r\n* `Clearanceandhandlingatdestination` - Charge is for clearance and handling of goods at destination.\r\n* `Clearanceandhandlingatorigin` - Charge is for clearance and handling of goods at origin.\r\n* `Collectfreight` - Charge is for the collection of the freight.\r\n* `Commission` - Fee paid for services provided.\r\n* `Contingencydeferredsalescharge` - Deferred sales charge.\r\n* `Correspondentbankcharge` - In investment funds, the charge of the correspondent bank for transferring money.\r\n* `Custodyfee` - Fee paid to a custodian in respect of custodial services.\r\n* `Dangerousgoodsfee` - Charge is for dangerous goods.\r\n* `Dilutionlevy` - In investment funds, a charge payable by the investor covering bid-offer spreads and dealing charges for the underlying investments. The dilution levy is paid to the fund for the benefit of other unit holders.\r\n* `Discount` - Charge that has been reduced from the standard initial charge levied by a fund, eg, during a launch period or as negotiated by a funds supermarket / discount broker.\r\n* `Equalisation` - The part of an investor's subscription amount that is held by the fund in order to pay incentive or performance fees at the end of the fiscal year.\r\n* `Frontendload` - Sales charge paid immediately by the investor when subscribing to an investment such as an investment fund.\r\n* `Initial` - Charge paid at the time of the first subscription.\r\n* `Insurancepremium` - Charge is a premium for insurance.\r\n* `Issuancecancellationfee` - Fee linked to the cancellation of an issuance.\r\n* `Issuancefee` - Charge linked to the issuance of security.\r\n* `Managementfee` - Fee paid to an investment manager for services. The fee usually includes fund administration costs and investor relationship management. Typically, the amount paid is a percentage of the assets under management.\r\n* `Matchingfees` - Fee charged for matching and/or confirmation.\r\n* `Miscellaneousfee` - Miscellaneous fee.\r\n* `Other` - Another type of charge.\r\n* `Packaging` - Charge is for packaging of goods.\r\n* `Partacquis` - Portion of charge that the fund is entitled to receive, that cannot be reduced by an intermediary.\r\n* `Penalty` - Fee charged to the investor for early redemption of the fund.\r\n* `Pickup` - Charge is for pick-up of goods.\r\n* `Postagecharge` - Charge paid for the postage.\r\n* `Premium` - In investment funds, pre-arranged addition to the trade amount based on the published net asset value.\r\n* `Publicationfee` - Fee paid in respect of publications made.\r\n* `Regulatoryfee` - Fee charged by a regulatory authority, eg, Securities and Exchange fees.\r\n* `Securitycharge` - Charge is for security.\r\n* `Serviceprovisionfee` - Fee paid for the provision of financial services.\r\n* `Shippingcharge` - Charge for shipping, including the insurance of securities.\r\n* `Signatureservice` - Charge is for signature services.\r\n* `Specialconcessions` - Charges, drawdown, or other reduction from or in addition to the deal price.\r\n* `Speciallyagreedfrontendload` - Specially agreed front-end load.\r\n* `Storageatdestination` - Charge is for storage of goods at destination.\r\n* `Storageatorigin` - Charge is for storage of goods at origin.\r\n* `Switch` - In investment funds, charge related to a switch transaction.\r\n* `Transferfee` - In investment funds, a fee charged for the transfer of ownership of an investment fund.\r\n* `Transportcharges` - Charge is for transport.\r\n* `Ucitscommission` - Charges paid by the investor to the Fund Company for subscription and redemption orders.\r\n"
    feeplantypevalues:
      enum:
        - StandardFeePlan
        - FinalFeePlan
      type: string
      description: ">\r\n* `StandardFeePlan` - \r\n* `FinalFeePlan` - \r\n"
    goal:
      type: object
      properties:
        GoalType:
          type: string
          description: The type of goal
          format: string
        GoalDefinition:
          type: string
          description: 'A definition of the goal, including the intended actions required to achieve the goal'
          format: string
        GoalOrganisation:
          type: string
          description: Identifies the interested parties and their roles and responsibilities for the specific actions supporting the achievement of the goal
          format: ''
        GoalResult:
          type: string
          description: 'Assessment of how the work is progressing towards achieving the goal, including projections of likely outcomes'
          format: string
      description: ''
    budgettypevalues:
      enum:
        - OperatingBudget
        - FinancialBudget
        - ResourceBudget
      type: string
      description: ">\r\n* `OperatingBudget` - \r\n* `FinancialBudget` - \r\n* `ResourceBudget` - \r\n"
    budgettype:
      type: object
      properties:
        BudgetTypeName:
          $ref: '#/components/schemas/name'
        BudgetType:
          $ref: '#/components/schemas/budgettypevalues'
      description: A Classification value that specifies the type of Budget
    budgetarrangement:
      type: object
      properties:
        BudgetType:
          $ref: '#/components/schemas/budgettype'
        BudgetAmount:
          $ref: '#/components/schemas/amount'
      description: 'An arrangement which is specifying an estimate of costs, revenues, and resources over a specified period, reflecting a reading of future financial conditions and goals. (adapted from Business Dictionary)'
    plannedaction:
      type: object
      properties:
        PlannedAction:
          type: string
          description: 'An action that is arranged in a plan for doing or achieving something '
          format: class
      description: 'An action that is arranged in a plan for doing or achieving something '
    plantypevalues:
      enum:
        - AdministrativePlan
        - ManagementPlan
        - StratgyPlan
        - FinancialPlan
      type: string
      description: ">\r\n* `AdministrativePlan` - \r\n* `ManagementPlan` - \r\n* `StratgyPlan` - \r\n* `FinancialPlan` - \r\n"
    plantype:
      type: object
      properties:
        PlanTypeName:
          $ref: '#/components/schemas/name'
        PlanType:
          $ref: '#/components/schemas/plantypevalues'
      description: A Classification value that specifies the type of Plan
    plan:
      type: object
      properties:
        PlanGoal:
          $ref: '#/components/schemas/goal'
        PlanBudget:
          $ref: '#/components/schemas/budgetarrangement'
        PlannedAction:
          $ref: '#/components/schemas/plannedaction'
        PlanType:
          $ref: '#/components/schemas/plantype'
        PlanOrganisation:
          type: string
          description: ''
          format: string
        PlanValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PlanDescription:
          $ref: '#/components/schemas/text'
      description: ''
    feeplan:
      type: object
      properties:
        FeePlanName:
          $ref: '#/components/schemas/name'
        FeePlanType:
          $ref: '#/components/schemas/feeplantypevalues'
        FeePlan:
          $ref: '#/components/schemas/plan'
      description: "An arranged FeeRatePlan\n"
    adjustmentdirectiontypevalues:
      enum:
        - Added
        - Substracted
      type: string
      description: ">\r\n* `Added` - Adjustment amount must be added to the total amount.\r\n* `Substracted` - Adjustment amount must be substracted from the total amount.\r\n"
    chargebearertypevalues:
      enum:
        - Bornebydebtor
        - Bornebycreditor
        - Shared
        - Followingservicelevel
      type: string
      description: ">\r\n* `Bornebydebtor` - All transaction charges are to be borne by the debtor.\r\n* `Bornebycreditor` - All transaction charges are to be borne by the creditor.\r\n* `Shared` - In a credit transfer context, means that transaction charges on the sender side are to be borne by the debtor, transaction charges on the receiver side are to be borne by the creditor. In a direct debit context, means that transaction charges on the sender side are to be borne by the creditor, transaction charges on the receiver side are to be borne by the debtor.\r\n* `Followingservicelevel` - Charges are to be applied following the rules agreed in the service level and/or scheme.\r\n"
    feearrangement:
      type: object
      properties:
        FeeType:
          $ref: '#/components/schemas/feetypevalues'
        FeeAmount:
          $ref: '#/components/schemas/amount'
        FeeRate:
          $ref: '#/components/schemas/rate'
        FeeEffectivePeriod:
          $ref: '#/components/schemas/datetimeperiod'
        FeeDueDate:
          $ref: '#/components/schemas/datetime'
        FeePlan:
          $ref: '#/components/schemas/feeplan'
        FeeCreditDebitIndicator:
          $ref: '#/components/schemas/debitcreditindicatortvalues'
        FeeReason:
          $ref: '#/components/schemas/text'
        FeeDirection:
          $ref: '#/components/schemas/adjustmentdirectiontypevalues'
        FeeBearerType:
          $ref: '#/components/schemas/chargebearertypevalues'
      description: Specifies the charges on interest.
    interesttransactiontypevalues:
      enum:
        - InterestAllocationTransaction
        - InterestPaymentTransaction
        - InterestAdjustmentTransaction
      type: string
      description: ">\r\n* `InterestAllocationTransaction` - \r\n* `InterestPaymentTransaction` - \r\n* `InterestAdjustmentTransaction` - \r\n"
    interesttransaction:
      type: object
      properties:
        InterestTransactionAmount:
          $ref: '#/components/schemas/amount'
        InterestTransactionDescription:
          $ref: '#/components/schemas/text'
        InterestTransactionType:
          $ref: '#/components/schemas/interesttransactiontypevalues'
        AppliedInterestRate:
          $ref: '#/components/schemas/rate'
        AppliedInteretType:
          $ref: '#/components/schemas/interesttypevalues'
        InterestCreditDebitIndicator:
          $ref: '#/components/schemas/debitcreditindicatortvalues'
      description: A record of applied interest
    Interest:
      type: object
      properties:
        InterestPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        InterestCalculationFrequency:
          $ref: '#/components/schemas/frequency'
        InterestAmount:
          $ref: '#/components/schemas/amount'
        InterestRate:
          $ref: '#/components/schemas/rate'
        InterestCreditDebitIndicator:
          $ref: '#/components/schemas/debitcreditindicatortvalues'
        InterestAccrualAmount:
          $ref: '#/components/schemas/amount'
        InterestRateType:
          $ref: '#/components/schemas/interestratetypevalues'
        InterestRateApplicationSchedule:
          $ref: '#/components/schemas/schedule'
        InterestCalculationMethod:
          $ref: '#/components/schemas/interestcalculationmethodtypevalues'
        InterestType:
          $ref: '#/components/schemas/interesttypevalues'
        InterestPaymentFrequency:
          $ref: '#/components/schemas/frequency'
        InterestTax:
          $ref: '#/components/schemas/taxarrangement'
        InterestAccrualType:
          $ref: '#/components/schemas/interesttypevalues'
        InterestDate:
          $ref: '#/components/schemas/datetime'
        InterestCalculationDate:
          $ref: '#/components/schemas/datetime'
        InterestAccrualDate:
          $ref: '#/components/schemas/datetime'
        InterestFee:
          $ref: '#/components/schemas/feearrangement'
        InterestTransaction:
          $ref: '#/components/schemas/interesttransaction'
      description: The product features/services available with a financical facility
    feature:
      type: object
      properties:
        FeatureType:
          $ref: '#/components/schemas/text'
        FeatureIdentification:
          $ref: '#/components/schemas/identifier'
        FeatureName:
          $ref: '#/components/schemas/name'
        FeatureLifecycleStatus:
          $ref: '#/components/schemas/status'
        FeatureDescription:
          $ref: '#/components/schemas/text'
      description: Tracked property of the issued device (e.g. card number)
    devicetypevalues:
      enum:
        - Securecardreader
        - Nonsecurecardreader
        - Mobile
        - Tablet
        - Personalcomputer
        - Othernational
        - Otherprivate
        - Wearable
        - Vehicle
        - Embedded
        - Keyfob
        - Jewellery
        - Sticker
        - Gamingdevice
        - Watch
        - Unknown
        - BiometricDevice
      type: string
      description: ">\r\n* `Securecardreader` - Secure card reader attached to the customer device\r\n* `Nonsecurecardreader` - Non-secure card reader attached to the customer device.\r\n* `Mobile` - Mobile phone\r\n* `Tablet` - Tablet\r\n* `Personalcomputer` - Personal computer\r\n* `Othernational` - Other device defined at national level\r\n* `Otherprivate` - Other device defined in a private way.\r\n* `Wearable` - Wearable device.\r\n* `Vehicle` - Vehicle.\r\n* `Embedded` - Embedded in a device.\r\n* `Keyfob` - Key Fob\r\n* `Jewellery` - Jewellery\r\n* `Sticker` - Sticker\r\n* `Gamingdevice` - Gaming Device\r\n* `Watch` - Watch\r\n* `Unknown` - Device type unknown\r\n* `BiometricDevice` - A biometric device is a security identification and authentication device. Such devices use automated methods of verifying or recognising the identity of a living person based on a physiological or behavioral characteristic.\nhttps://en.wikipedia.org/wiki/Biometric_device\n\r\n"
    country:
      type: object
      properties:
        NationalRegulatoryAuthority:
          $ref: '#/components/schemas/involvedparty'
      description: Country of the location.
    deviceoperatingsystemtypevalues:
      enum:
        - Android
        - Ios
        - Windows
        - Blackberry
        - Tizen
        - Othernational
        - Otherprivate
      type: string
      description: ">\r\n* `Android` - Android operating system.\r\n* `Ios` - iOS operating system.\r\n* `Windows` - Windows operating system.\r\n* `Blackberry` - Blackberry operating system.\r\n* `Tizen` - Tizen operating system.\r\n* `Othernational` - Other nationally defined code.\r\n* `Otherprivate` - Other privately defined code.\r\n"
    deviceidentificationtypevalues:
      enum:
        - IMEI
        - Serialnumber
        - Secureelementidentification
        - Othernational
        - Otherprivate
      type: string
      description: ">\r\n* `IMEI` - International Mobile Equipment Identity.\r\n* `Serialnumber` - Device serial number.\r\n* `Secureelementidentification` - Secure element ID.\r\n* `Othernational` - Other nationally assigned code.\r\n* `Otherprivate` - Other privately assigned code.\r\n"
    device:
      type: object
      properties:
        DeviceIdentification:
          $ref: '#/components/schemas/identifier'
        DeviceType:
          $ref: '#/components/schemas/devicetypevalues'
        DeviceProperty:
          $ref: '#/components/schemas/text'
        DeviceElement:
          $ref: '#/components/schemas/text'
        DeviceStatus:
          $ref: '#/components/schemas/status'
        DeviceVersion:
          type: string
          description: ''
          format: number
        DeviceDateTime:
          $ref: '#/components/schemas/datetime'
        DeviceDescription:
          $ref: '#/components/schemas/text'
        DeviceName:
          $ref: '#/components/schemas/name'
        DeviceLanguage:
          $ref: '#/components/schemas/text'
        DevicePhoneNumber:
          $ref: '#/components/schemas/text'
        DeviceLocation:
          $ref: '#/components/schemas/location'
        DeviceManufacturer:
          $ref: '#/components/schemas/text'
        DeviceCountry:
          $ref: '#/components/schemas/country'
        DeviceAddress:
          $ref: '#/components/schemas/address'
        DeviceAddressType:
          $ref: '#/components/schemas/addresstypevalues'
        DeviceOperatingSystem:
          $ref: '#/components/schemas/deviceoperatingsystemtypevalues'
        DeviceIdentificationType:
          $ref: '#/components/schemas/deviceidentificationtypevalues'
      description: Reference to the device instance in Issued Device Administration
    rulesettypevalues:
      enum:
        - Policy
        - Regulation
        - Law
        - Guideline
        - Criterion
        - Standard
      type: string
      description: ">\r\n* `Policy` - Rule that governs business execution.\n\nThe set of basic principles and associated guidelines, formulated and enforced by the governing body of an organization, to direct and limit its actions in pursuit of long-term goals. (Business Dictionary)\n\r\n* `Regulation` - A rule used to carry out a law (FIBO)\n\nBusiness Dictionary: a rule (with or without the coercive power of law) employed in controlling, directing, or managing an activity, organization, or system. \n\nThe set of rules and legislation governing certain actions. \nhttps://financial-dictionary.thefreedictionary.com/Regulatory\r\n* `Law` - A binding rule that the courts will enforce.\nA system of rules and guidelines which are enforced through social institutions to govern behavior. (FIBO)\n\r\n* `Guideline` - A recommended practice (adapted from Business Dictionary)\nA general rule, principle, or piece of advice.\r\n* `Criterion` - A principle or standard by which something may be judged or decided.\n\nRead more: http://www.businessdictionary.com/definition/criterion.html\r\n* `Standard` - A rule considered by an authority or by general consent as a basis of comparison\r\n"
    rulesettype:
      type: object
      properties:
        RuleSetTypeName:
          $ref: '#/components/schemas/name'
        RuleSetType:
          $ref: '#/components/schemas/rulesettypevalues'
      description: ''
    ruleset:
      type: object
      properties:
        RuleSetDefinition:
          $ref: '#/components/schemas/text'
        RuleSetInterpretation:
          $ref: '#/components/schemas/text'
        RuleSetType:
          $ref: '#/components/schemas/rulesettype'
        RuleSetName:
          $ref: '#/components/schemas/name'
        RuleSetIdentification:
          $ref: '#/components/schemas/identifier'
        RuleSetLifecycleStatus:
          $ref: '#/components/schemas/status'
      description: The processing and handling guidelines and rules
    issueddevicestatustypevalues:
      enum:
        - Issued
        - IssuedButNotActivated
        - Activated
        - Suspended
        - Retrieved
      type: string
      description: ">\r\n* `Issued` - \r\n* `IssuedButNotActivated` - \r\n* `Activated` - \r\n* `Suspended` - \r\n* `Retrieved` - \r\n"
    branch:
      type: object
      properties:
        BranchIdentification:
          $ref: '#/components/schemas/identifier'
        BranchLegalEntityIdentification:
          $ref: '#/components/schemas/identifier'
        BranchAddress:
          $ref: '#/components/schemas/address'
        BranchName:
          $ref: '#/components/schemas/name'
      description: The name of the branch where the customer will collect the device
    devicecustomizationtypevalues:
      enum:
        - CardDesign
      type: string
      description: ">\r\n* `CardDesign` - \r\n"
    IssuedDevice:
      type: object
      properties:
        CustomerReference:
          $ref: '#/components/schemas/involvedparty'
        DevicePropertyType:
          $ref: '#/components/schemas/feature'
        IssuedDeviceAdministrationReference:
          $ref: '#/components/schemas/device'
        DeviceValidfromDate:
          $ref: '#/components/schemas/datetime'
        DeviceType:
          $ref: '#/components/schemas/devicetypevalues'
        DeviceOptionSetting:
          $ref: '#/components/schemas/arrangement'
        DeviceProcessingGuidelinesandRules:
          $ref: '#/components/schemas/ruleset'
        DevicePartyReference:
          $ref: '#/components/schemas/involvedparty'
        DeviceIssueDate:
          $ref: '#/components/schemas/datetime'
        DeviceStatus:
          $ref: '#/components/schemas/issueddevicestatustypevalues'
        AccountExternalAccountNumber:
          $ref: '#/components/schemas/identifier'
        DevicePropertySeting:
          $ref: '#/components/schemas/arrangement'
        AccountIdentifier:
          $ref: '#/components/schemas/accountidentification'
        DeviceDeliveryMethod:
          $ref: '#/components/schemas/text'
        DeviceCollectLocation:
          $ref: '#/components/schemas/branch'
        DeviceOptionDefinition:
          $ref: '#/components/schemas/feature'
        DeviceValidtoDate:
          $ref: '#/components/schemas/datetime'
        DeviceAssociatedPermissions:
          $ref: '#/components/schemas/arrangement'
        DeviceCustomerCustomizationReference:
          $ref: '#/components/schemas/devicecustomizationtypevalues'
      description: The product features/services available with a financical facility
    modalitytypevalues:
      enum:
        - AllocationModality
        - CalculationModality
        - DerivationModality
        - PaymentModality
        - ProcessingModality
        - ApplicationModality
        - DeliveryModality
      type: string
      description: ">\r\n* `AllocationModality` - \r\n* `CalculationModality` - \r\n* `DerivationModality` - \r\n* `PaymentModality` - \r\n* `ProcessingModality` - \r\n* `ApplicationModality` - \r\n* `DeliveryModality` - \r\n"
    servicemodality:
      type: object
      properties:
        ServiceModalityType:
          $ref: '#/components/schemas/modalitytypevalues'
      description: Description of the fee calculation method for this fee type
    feeapplicationfrequencyvalues:
      enum:
        - Onclosing
        - Onopening
        - Chargingperiod
        - Daily
        - Peritem
        - Monthly
        - Onanniversary
        - Other
        - Perhundredpounds
        - Perhour
        - Peroccurrence
        - Persheet
        - Pertransaction
        - Pertransactionamount
        - Pertransactionpercentage
        - Quarterly
        - Sixmonthly
        - Statementmonthly
        - Weekly
        - Yearly
      type: string
      description: ">\r\n* `Onclosing` - This fee is triggered on closing of a product\r\n* `Onopening` - This fee is triggered on opening of a product\r\n* `Chargingperiod` - This fee is triggered at the end of each charging period\r\n* `Daily` - This fee is triggered every day\r\n* `Peritem` - This fee is triggered by the processing of an item on the product\r\n* `Monthly` - This fee is triggered monthly\r\n* `Onanniversary` - This fee is triggered on the anniversary of opening the product\r\n* `Other` - Other Fee Frequency\r\n* `Perhundredpounds` - This fee is triggered for every hundred pounds withdrawn\r\n* `Perhour` - This fee is triggered every hour\r\n* `Peroccurrence` - This fee is triggered per occurrence of the transaction or service. This differs from PerItem, in that if a batch of items is processed at the same time, a PerOccurrence fee would incur a single charge, whereas a PerItem fee would be charged for each item within the batch.\r\n* `Persheet` - This fee is levied on every statement sheet\r\n* `Pertransaction` - The fee is charged for each transaction\r\n* `Pertransactionamount` - The amount stated is levied for each transaction processed\r\n* `Pertransactionpercentage` - The fee amount is the given percentage of the transaction processed and is levied for each transaction\r\n* `Quarterly` - This fee is triggered at the end of every quarter\r\n* `Sixmonthly` - This fee is triggered at the end of every 6 month period\r\n* `Statementmonthly` - This fee is triggered based on a monthly statement period\r\n* `Weekly` - The fee is triggered weekly\r\n* `Yearly` - This fee is triggered yearly\r\n"
    feecalculationmethodtypevalues:
      enum:
        - Flat
        - Perunit
        - Percentage
        - Rateperbrackets
        - Ratewithminimumamount
        - Ratewithmaximumamount
        - Other
        - Grossamount
        - Netamount
        - Netassetvalueprice
      type: string
      description: ">\r\n* `Flat` - Charge/tax basis is a lump sum.\r\n* `Perunit` - Charges/tax basis is per unit of financial instrument.\r\n* `Percentage` - Charge/tax basis is a percentage.\r\n* `Rateperbrackets` - Charge/tax basis is a percentage which depends on the tax brackets.\r\n* `Ratewithminimumamount` - Rate with a minimum amount.\r\n* `Ratewithmaximumamount` - Rate with a maximum amount.\r\n* `Other` - Another type of taxation basis.\r\n* `Grossamount` - Charge/Commission/tax basis is based on the gross amount.\r\n* `Netamount` - Charge/commission/tax basis is based on the net amount.\r\n* `Netassetvalueprice` - Charge/tax basis is the price.\r\n"
    feecalculationfrequencyvalues:
      enum:
        - Onclosing
        - Onopening
        - Chargingperiod
        - Daily
        - Peritem
        - Monthly
        - Onanniversary
        - Other
        - Perhundredpounds
        - Perhour
        - Peroccurrence
        - Persheet
        - Pertransaction
        - Pertransactionamount
        - Pertransactionpercentage
        - Quarterly
        - Sixmonthly
        - Statementmonthly
        - Weekly
        - Yearly
      type: string
      description: ">\r\n* `Onclosing` - This fee is triggered on closing of a product\r\n* `Onopening` - This fee is triggered on opening of a product\r\n* `Chargingperiod` - This fee is triggered at the end of each charging period\r\n* `Daily` - This fee is triggered every day\r\n* `Peritem` - This fee is triggered by the processing of an item on the product\r\n* `Monthly` - This fee is triggered monthly\r\n* `Onanniversary` - This fee is triggered on the anniversary of opening the product\r\n* `Other` - Other Fee Frequency\r\n* `Perhundredpounds` - This fee is triggered for every hundred pounds withdrawn\r\n* `Perhour` - This fee is triggered every hour\r\n* `Peroccurrence` - This fee is triggered per occurrence of the transaction or service. This differs from PerItem, in that if a batch of items is processed at the same time, a PerOccurrence fee would incur a single charge, whereas a PerItem fee would be charged for each item within the batch.\r\n* `Persheet` - This fee is levied on every statement sheet\r\n* `Pertransaction` - The fee is charged for each transaction\r\n* `Pertransactionamount` - The amount stated is levied for each transaction processed\r\n* `Pertransactionpercentage` - The fee amount is the given percentage of the transaction processed and is levied for each transaction\r\n* `Quarterly` - This fee is triggered at the end of every quarter\r\n* `Sixmonthly` - This fee is triggered at the end of every 6 month period\r\n* `Statementmonthly` - This fee is triggered based on a monthly statement period\r\n* `Weekly` - The fee is triggered weekly\r\n* `Yearly` - This fee is triggered yearly\r\n"
    feepaymentmethodtypevalues:
      enum:
        - Cash
        - Unit
      type: string
      description: ">\r\n* `Cash` - Payment is with cash.\r\n* `Unit` - Units are redeemed to cover payment.\r\n"
    Fees:
      type: object
      properties:
        FeeCreditAccount:
          $ref: '#/components/schemas/account'
        FeeCalculationMethod:
          $ref: '#/components/schemas/servicemodality'
        FeeRate:
          $ref: '#/components/schemas/rate'
        FeeType:
          $ref: '#/components/schemas/feetypevalues'
        ChargeBearerType:
          $ref: '#/components/schemas/chargebearertypevalues'
        ChargeBearerReference:
          $ref: '#/components/schemas/involvedparty'
        FeeApplicationFrequency:
          $ref: '#/components/schemas/feeapplicationfrequencyvalues'
        FeeAmount:
          $ref: '#/components/schemas/amount'
        AccrualFeeAmount:
          $ref: '#/components/schemas/amount'
        FeeDebitAccount:
          $ref: '#/components/schemas/account'
        FeePaymentMethod:
          $ref: '#/components/schemas/servicemodality'
        AccruedCreditDebitIndicator:
          $ref: '#/components/schemas/debitcreditindicatortvalues'
        FeeCalculationMethodType:
          $ref: '#/components/schemas/feecalculationmethodtypevalues'
        FeeCalculationFrequency:
          $ref: '#/components/schemas/feecalculationfrequencyvalues'
        FeePaymentMethodType:
          $ref: '#/components/schemas/feepaymentmethodtypevalues'
        FeeApplicationAmount:
          $ref: '#/components/schemas/amount'
        FeeApplicationDate:
          $ref: '#/components/schemas/datetime'
        FeeApplicationCreditDebitIndicator:
          $ref: '#/components/schemas/debitcreditindicatortvalues'
      description: The product features/services available with a financical facility
    AccountStatement:
      type: object
      description: The product features/services available with a financical facility
    cardpaymentagreement:
      type: object
      properties:
        CardPaymentInvolvement:
          $ref: '#/components/schemas/involvedparty'
        CardAmount:
          $ref: '#/components/schemas/amount'
        CardCurrency:
          $ref: '#/components/schemas/currencycode'
        CardLimitTermAndCondition:
          $ref: '#/components/schemas/condition'
        CardTaxTermAndCondition:
          $ref: '#/components/schemas/condition'
      description: Reference to the credit/charge card account product instance CardPayment|CardPayment (https://www.iso20022.org/standardsrepository/type/CardPayment)|Standard|ISO20022 BM ()
    branchlocation:
      type: object
      properties:
        BranchReference:
          $ref: '#/components/schemas/branch'
        LocationReference:
          $ref: '#/components/schemas/location'
      description: "Bank branch associated with the card account for booking purposes ||\r\n|"
    servicearrangementmodality:
      type: object
      properties:
        ServiceArrangementModalityType:
          $ref: '#/components/schemas/modalitytypevalues'
      description: ''
    partyobligationorentitlement:
      type: object
      properties:
        ObligationOrEntitlementSubject:
          $ref: '#/components/schemas/subject'
        ObligationOrEntitlementType:
          $ref: '#/components/schemas/arrangementtypevalues'
        ObligationOrEntitlementModality:
          $ref: '#/components/schemas/servicearrangementmodality'
        ObligationOrEntitlementDefinition:
          $ref: '#/components/schemas/text'
      description: "Description of the role, obligations or entitlements of the associated party ||\r\n|"
    accountrestrictionstatustypevalues:
      enum:
        - Active
        - Inactive
      type: string
      description: ">\r\n* `Active` - Status of the restriction is active.\r\n* `Inactive` - Status of the restriction is inactive.\r\n"
    accountrestrictionstatus:
      type: object
      properties:
        AccountRestrictionStatus:
          $ref: '#/components/schemas/status'
        AccountRestrictionStatusType:
          $ref: '#/components/schemas/accountrestrictionstatustypevalues'
      description: Status of the restriction.
    accountrestiction:
      type: object
      properties:
        AccountRestrictionIdentifier:
          $ref: '#/components/schemas/identifier'
        AccountRestrictionType:
          $ref: '#/components/schemas/text'
        AccountRestrictionDescription:
          $ref: '#/components/schemas/text'
        AccountRestrictionValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        AccountRestrictionStatus:
          $ref: '#/components/schemas/accountrestrictionstatus'
        AccountRestrictionRegulator:
          $ref: '#/components/schemas/involvedparty'
      description: "The setting for the restriction option AccountRestriction_x000D_\n|AccountRestriction (https://www.iso20022.org/standardsrepository/type/AccountRestriction)|Standard|ISO20022 BM  ()"
    pointofaccesstypevalues:
      enum:
        - ChannelAccess
        - ProductAndServiceAccess
        - DeviceAccess
        - APIAccess
      type: string
      description: ">\r\n* `ChannelAccess` - \r\n* `ProductAndServiceAccess` - \r\n* `DeviceAccess` - \r\n* `APIAccess` - \r\n"
    authenticationmethodtypevalues:
      enum:
        - Onlinepin
        - Offlinepin
        - Signaturecapture
        - Password
        - Biometry
        - Cscverification
        - Cryptogramverification
        - Unknownmethod
        - Bypass
        - Papersignature
        - Manualverification
        - Merchantauthentication
        - Securecertificate
        - Securenocertificate
        - Securedchannel
        - Billingaddressverification
        - Cardholderidentificationdata
        - Passiveauthentication
        - Secureelectroniccommerce
        - Shippingaddressverification
        - Tokenauthentication
        - Paymenttoken
        - Authenticationtoken
        - Mobile
        - Other
        - Addressdigits
        - Alienregistrationnumber
        - Arqcverification
        - Birthdate
        - Cardholdername
        - Cityofbirth
        - Customeridentification
        - Driveridentification
        - Driverlicensenumber
        - Email
        - Employeeidentificationnumber
        - Employeridentificationnumber
        - Identitycardnumber
        - Onetimepassword
        - Othercardholderidentification
        - Othercryptogram
        - Passportnumber
        - Postalcode
        - Shippingaddressfrom
        - Shippingaddressto
        - Cardholderaddress
        - Nonvisiblecsc
        - Othernational
        - Otherprivate
        - Placeofbirth
        - Socialsecuritynumber
        - Taxidentificationnumber
        - Accountdigitalsignature
        - Arpcverification
        - ATC
        - Offlinebiographics
        - Offlinebiometrics
        - Offlinedataauthentication
        - Offlinedigitisedsignatureanalysis
        - Offlinepinencrypted
        - Offlinepininclear
        - Onlinebiographics
        - Phonehome
        - Phonework
        - Pkisignature
        - Qualifiedcertificate
        - Threeds
        - Cardholdercertificateserialnumber
        - Acceptorcertificateserialnumber
        - Nationalidentifier
      type: string
      description: ">\r\n* `Onlinepin` - On-line PIN authentication (Personal Identification Number).\r\n* `Offlinepin` - Off-line PIN authentication (Personal Identification Number).\r\n* `Signaturecapture` - Electronic signature capture (handwritten signature).\r\n* `Password` - Authentication by a password.\r\n* `Biometry` - Biometric authentication of the cardholder.\r\n* `Cscverification` - Verification of Card Security Code.\r\n* `Cryptogramverification` - Verification of a cryptogram generated by a chip card or another device, for instance ARQC (Authorisation Request Cryptogram).\r\n* `Unknownmethod` - Authentication method is performed unknown.\r\n* `Bypass` - Authentication bypassed by the merchant.\r\n* `Papersignature` - Handwritten paper signature.\r\n* `Manualverification` - Manual verification, for example passport or drivers license.\r\n* `Merchantauthentication` - Merchant-related authentication.\r\n* `Securecertificate` - Electronic commerce transaction secured with the X.509 certificate of a customer.\r\n* `Securenocertificate` - Secure electronic transaction without cardholder certificate.\r\n* `Securedchannel` - Channel-encrypted transaction.\r\n* `Billingaddressverification` - Cardholder billing address verification.\r\n* `Cardholderidentificationdata` - Cardholder data provided for verification, for instance social security number, driver license number, passport number.\r\n* `Passiveauthentication` - Authentication based on statistical cardholder behaviour.\r\n* `Secureelectroniccommerce` - Authentication performed during a secure electronic commerce transaction.\r\n* `Shippingaddressverification` - Cardholder shipping address verification.\r\n* `Tokenauthentication` - Cryptogram generated by the token requestor or a customer device to validate the authorised use of a token.\r\n* `Paymenttoken` - Verification or authentication related to the use of a payment token, for instance the validation of the authorised use of a token.\r\n* `Authenticationtoken` - A token is used to verify an already performed authentication.\r\n* `Mobile` - Customer mobile device.\r\n* `Other` - Other customer authentication.\r\n* `Addressdigits` - Digits of the address.\r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Arqcverification` - Verification of a cryptogram generated by a chip card, for instance an ARQC (Authorisation Request Cryptogram).\r\n* `Birthdate` - Date of birth of a person.\r\n* `Cardholdername` - Name of cardholder\r\n* `Cityofbirth` - City of birth to authenticate a person.\r\n* `Customeridentification` - Customer number used as a mechanism of authentication.\r\n* `Driveridentification` - Identification of a driver in a fleet of vehicles.\r\n* `Driverlicensenumber` - Number assigned by a driving license authority to a person driving a car.\r\n* `Email` - Electronic mail address\r\n* `Employeeidentificationnumber` - Number assigned to an employee by an employer.\r\n* `Employeridentificationnumber` - Number assigned to an employer by a registration authority.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Onetimepassword` - Verification of a one-time password provided by the issuer.\r\n* `Othercardholderidentification` - Other cardholder data provided for identification.\r\n* `Othercryptogram` - Verification of a cryptogram generated by a non-card form factor.\r\n* `Passportnumber` - Number assigned by a passport authority to a passport.\r\n* `Postalcode` - Verification based on digits of the postal code.\r\n* `Shippingaddressfrom` - Shipping address from verification.\r\n* `Shippingaddressto` - Shipping address to verification\r\n* `Cardholderaddress` - Verification whether the address corresponds to the cardholder's one.\r\n* `Nonvisiblecsc` - Non visible Card Security Code.\r\n* `Othernational` - Other type of verification defined at national level.\r\n* `Otherprivate` - Other type of verification defined at private level\r\n* `Placeofbirth` - Place of birth of a person.\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Accountdigitalsignature` - Account-based digital signature authentication.\r\n* `Arpcverification` - Response Card Cryptogram (ARPC)  verification.\r\n* `ATC` - Application Transaction Counter\r\n* `Offlinebiographics` - Biographics authentication in an offline mode.\r\n* `Offlinebiometrics` - Biometrics authentication in an offline mode\r\n* `Offlinedataauthentication` - Authentication of data in an offline mode\r\n* `Offlinedigitisedsignatureanalysis` - Analysis of signature transmitted offline\r\n* `Offlinepinencrypted` - PIN generated offline and transmitted encrypted\r\n* `Offlinepininclear` - PIN generated offline and transmitted in clear\r\n* `Onlinebiographics` - Biographics authentication in an online mode.\r\n* `Phonehome` - Customer home phone number.\r\n* `Phonework` - Customer work phone number\r\n* `Pkisignature` - PKI (Public Key Infrastructure) based digital signature\r\n* `Qualifiedcertificate` - QualifiedCertificate\r\n* `Threeds` - Authentication performed during a secure electronic commerce transaction.\r\n* `Cardholdercertificateserialnumber` - Serial number of the cardholder's certificate.\r\n* `Acceptorcertificateserialnumber` - Serial number of the acceptor's certificate.\r\n* `Nationalidentifier` - Nationally assigned identifier.\r\n"
    accessarrangement:
      type: object
      properties:
        AssociatedDocument:
          $ref: '#/components/schemas/document'
        PointOfAccessType:
          $ref: '#/components/schemas/pointofaccesstypevalues'
        AccessCredentialMethod:
          $ref: '#/components/schemas/authenticationmethodtypevalues'
      description: "Defines allowed access paths/channels supported (e.g. POS, ATM, Local/International, Merchant Categories) ||\r\n|"
    agreementconfigurationoption:
      type: object
      properties:
        AgreementConfigurationOption:
          type: string
          description: "Options for configuring the agreement or the arrangement of agreement.\n"
          format: class
      description: "Different product features (e.g. Card Scheme, Product Type [credit, charge, debit], Dual currency billing, transaction processing options, billing options, credit plan consolidation options, payment application options etc.) ||\r\n|"
    cardpaymentarrangement:
      type: object
      properties:
        PaymentCardArrangementIdentifier:
          $ref: '#/components/schemas/identifier'
        CardPaymentArrangementType:
          $ref: '#/components/schemas/arrangementtypevalues'
      description: The selected option value for this instance CardPayment|CardPayment (https://www.iso20022.org/standardsrepository/type/CardPayment)|Standard|ISO20022 BM ()
    accountinvolvementtypevalues:
      enum:
        - PartyIsOwnerOfAccount
        - PartyIsServicerOfAccount
      type: string
      description: 'The type of association (e.g. guarantor, co-signer) AccountPartyRole |AccountPartyRole  (https://www.iso20022.org/standardsrepository/type/AccountPartyRole)|Standard|ISO20022 BM ()'
    accountinvolvement:
      type: object
      properties:
        AccountInvolvementType:
          $ref: '#/components/schemas/accountinvolvementtypevalues'
        AccountReference:
          $ref: '#/components/schemas/account'
        PartyReference:
          $ref: '#/components/schemas/party'
      description: "Any involved parties and the nature of their associations to the card account Account Party Role_x000D_\n|Account Party Role (https://www.iso20022.org/standardsrepository/type/AccountPartyRole)|Standard|ISO20022 BM ()"
    account_accountrelationshiptypevalues:
      enum:
        - AccountIsParentAccountForAccount
        - AccountIsSubAccountForAccount
        - AccountIsLinkedToAccount
      type: string
      description: "The type and purpose for the link ||\r\n|"
    limittypevalues:
      enum:
        - Multilateral
        - Bilateral
        - Netbilateral
        - Indirectbilateral
        - Global
        - Mandatorybilateral
        - Discretionarybilateral
        - Directdebit
        - Singlecustomerdirectdebit
        - Singlefinancialinstitutiondirectdebit
        - Totaldailycustomerdirectdebit
        - Totaldailyfinancialinstitutiondirectdebit
        - Autocollateralisation
        - Unsecuredcredit
        - Externalguarantee
      type: string
      description: 'The type of position maintained for the account (e.g. transaction credit/debit, netting, position) LimitTypeCode|LimitTypeCode (https://www.iso20022.org/standardsrepository/type/LimitTypeCode)|Standard|ISO20022 BM ()'
    limitstatustypevalues:
      enum:
        - Enabled
        - Disabled
        - Deleted
        - Requested
      type: string
      description: ">\r\n* `Enabled` - Limit is currently in effect.\r\n* `Disabled` - Limit is not currently in effect.\r\n* `Deleted` - Limit has been deleted or suspended.\r\n* `Requested` - Limit has been asked for and is not yet enabled.\r\n"
    limitstatus:
      type: object
      properties:
        LimitStatus:
          $ref: '#/components/schemas/status'
        LimitStatusType:
          $ref: '#/components/schemas/limitstatustypevalues'
      description: Current status of the limit.
    limitarrangement:
      type: object
      properties:
        LimitType:
          $ref: '#/components/schemas/limittypevalues'
        LimitCurrency:
          $ref: '#/components/schemas/currencycode'
        LimitValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        LimitAmount:
          $ref: '#/components/schemas/amount'
        LimitStatus:
          $ref: '#/components/schemas/limitstatus'
        LimitRate:
          $ref: '#/components/schemas/rate'
        LimitFrequency:
          $ref: '#/components/schemas/frequency'
        LimitIdentification:
          $ref: '#/components/schemas/identifier'
        LimitStartDatetime:
          $ref: '#/components/schemas/datetime'
        LimitCreditDebitIndicator:
          $ref: '#/components/schemas/debitcreditindicatortvalues'
        LimitAmountType:
          $ref: '#/components/schemas/amounttypevalues'
      description: 'The position definition, associated limit settings and rules Limit|Limit (https://www.iso20022.org/standardsrepository/type/Limit)|Standard|ISO20022 (https://www.iso20022.org/)'
    statementtypevalues:
      enum:
        - FinancialStatement
        - AccountStatement
        - CustomerStatement
      type: string
      description: "The types of scheduled statement (e.g. balance/mini-statement/annual) ||\r\n|"
    reporttypevalues:
      enum:
        - FinancialReport
        - BusinessReport
        - ManagementReport
        - Statement
        - MaintenanceReport
        - RegulatoryReport
        - TaxReport
      type: string
      description: ">\r\n* `FinancialReport` - \r\n* `BusinessReport` - \r\n* `ManagementReport` - \r\n* `Statement` - \r\n* `MaintenanceReport` - \r\n* `RegulatoryReport` - \r\n* `TaxReport` - \r\n"
    report:
      type: object
      properties:
        ReportType:
          $ref: '#/components/schemas/reporttypevalues'
        ReportValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        ReportVersion:
          type: string
          description: ''
          format: number
        ReportDateTime:
          $ref: '#/components/schemas/datetime'
        ReportFormat:
          $ref: '#/components/schemas/text'
      description: "The statement content ||\r\n|"
    obproducttypevalues:
      enum:
        - Businesscurrentaccount
        - Commercialcreditcard
        - Other
        - Personalcurrentaccount
        - Smeloan
      type: string
      description: "Descriptive code for the product category. If ProductType - \"Other\" is chosen, the object OtherProductType must be populated with name, and description. ||\r\n|"
    CreditCardFacility:
      type: object
      properties:
        ProductInstanceReference:
          $ref: '#/components/schemas/cardpaymentagreement'
        CustomerReference:
          $ref: '#/components/schemas/involvedparty'
        PartyReference:
          $ref: '#/components/schemas/involvedparty'
        BankBranchLocationReference:
          $ref: '#/components/schemas/branchlocation'
        AccountCurrency:
          $ref: '#/components/schemas/currencycode'
        SecondaryBillingCurrency:
          $ref: '#/components/schemas/currencycode'
        TaxReference:
          $ref: '#/components/schemas/involvedparty'
        EntitlementOptionDefinition:
          $ref: '#/components/schemas/partyobligationorentitlement'
        EntitlementOptionSetting:
          $ref: '#/components/schemas/partyobligationorentitlement'
        RestrictionOptionDefinition:
          $ref: '#/components/schemas/accountrestiction'
        RestrictionOptionSetting:
          $ref: '#/components/schemas/accountrestiction'
        AllowedAccess:
          $ref: '#/components/schemas/accessarrangement'
        ConfigurationOptions:
          $ref: '#/components/schemas/agreementconfigurationoption'
        CreditCardFacilityOptionDefinition:
          $ref: '#/components/schemas/text'
        CreditCardFacilityOptionSetting:
          $ref: '#/components/schemas/cardpaymentarrangement'
        Associations:
          $ref: '#/components/schemas/accountinvolvement'
        AssociationType:
          $ref: '#/components/schemas/accountinvolvementtypevalues'
        AssociationObligationEntitlement:
          $ref: '#/components/schemas/partyobligationorentitlement'
        AssociationReference:
          $ref: '#/components/schemas/party'
        LinkedAccounts:
          $ref: '#/components/schemas/account'
        LinkType:
          $ref: '#/components/schemas/account_accountrelationshiptypevalues'
        AccountDetails:
          $ref: '#/components/schemas/account'
        PositionLimits:
          $ref: '#/components/schemas/limitarrangement'
        PositionLimitType:
          $ref: '#/components/schemas/limittypevalues'
        PositionLimitSettings:
          $ref: '#/components/schemas/limitarrangement'
        PositionLimitValue:
          $ref: '#/components/schemas/value'
        DateType:
          $ref: '#/components/schemas/accountdatetypevalues'
        Date:
          $ref: '#/components/schemas/datetime'
        StatementsSchedule:
          $ref: '#/components/schemas/schedule'
        StatementType:
          $ref: '#/components/schemas/statementtypevalues'
        StatementTransactionType:
          $ref: '#/components/schemas/transactiontypevalues'
        StatementPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatementReport:
          $ref: '#/components/schemas/report'
        CreditCardProductName:
          $ref: '#/components/schemas/name'
        CreditCardProductType:
          $ref: '#/components/schemas/obproducttypevalues'
        CreditCardSecondaryProductID:
          $ref: '#/components/schemas/productidentificationtypevalues'
        CreditCardProductID:
          $ref: '#/components/schemas/identifier'
        CreditCardProductMarketingStateID:
          $ref: '#/components/schemas/identifier'
      description: 'Fulfill any scheduled and ad-hoc obligations under a service arrangement, most typically for a financial product or facility within Credit Card. '
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    CreditCardFacility:
      description: CreditCardFacility
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreditCardFacility'
    Interest:
      description: Interest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Interest'
    Fees:
      description: Fees
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Fees'
    Billing:
      description: Billing
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Billing'
    Repayment:
      description: Repayment
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Repayment'
    CardTransaction:
      description: CardTransaction
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CardTransaction'
    IssuedDevice:
      description: IssuedDevice
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IssuedDevice'
    CreditPlan:
      description: CreditPlan
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreditPlan'
  parameters:
    creditcardid:
      name: creditcardid
      in: path
      required: true
      style: simple
      schema:
        type: string
    interestid:
      name: interestid
      in: path
      required: true
      style: simple
      schema:
        type: string
    feesid:
      name: feesid
      in: path
      required: true
      style: simple
      schema:
        type: string
    billingid:
      name: billingid
      in: path
      required: true
      style: simple
      schema:
        type: string
    repaymentid:
      name: repaymentid
      in: path
      required: true
      style: simple
      schema:
        type: string
    cardtransactionid:
      name: cardtransactionid
      in: path
      required: true
      style: simple
      schema:
        type: string
    issueddeviceid:
      name: issueddeviceid
      in: path
      required: true
      style: simple
      schema:
        type: string
    creditplanid:
      name: creditplanid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    CreditCardFacility:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreditCardFacility'
      required: true
    Fees:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Fees'
      required: true
    Billing:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Billing'
      required: true
    Repayment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Repayment'
      required: true
    CardTransaction:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CardTransaction'
      required: true
    IssuedDevice:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IssuedDevice'
      required: true
    CreditPlan:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreditPlan'
      required: true