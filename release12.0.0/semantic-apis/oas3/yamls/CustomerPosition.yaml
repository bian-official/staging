openapi: 3.0.1
info:
  title: Customer Position
  description: 'This service domain maintains a consolidated financial position for a customer, combining details from all products and services in use. The position can cover available funds, credit, collateral, tax exposure and other financial measures as necessary'
  contact:
    name: BIAN
    url: https://bian.org
  version: 12.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/CustomerPosition/12.0.0
paths:
  /CustomerPosition/Initiate:
    post:
      tags:
        - CR - CustomerPositionState
      summary: InCR Initiation position monitoring for a customer
      description: InCR Initiation position monitoring for a customer
      operationId: Initiate
      requestBody:
        $ref: '#/components/requestBodies/CustomerPositionState'
      responses:
        '200':
          $ref: '#/components/responses/CustomerPositionState'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerPosition/{customerpositionid}/Update':
    put:
      tags:
        - CR - CustomerPositionState
      summary: UpCR Update the settings for customer position tracking
      description: UpCR Update the settings for customer position tracking
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/customerpositionid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerPositionState'
      responses:
        '200':
          $ref: '#/components/responses/CustomerPositionState'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerPosition/{customerpositionid}/Control':
    put:
      tags:
        - CR - CustomerPositionState
      summary: CoCR Control the customer position tracking (e.g. suspend)
      description: CoCR Control the customer position tracking (e.g. suspend)
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/customerpositionid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerPositionState'
      responses:
        '200':
          $ref: '#/components/responses/CustomerPositionState'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerPosition/{customerpositionid}/Execute':
    put:
      tags:
        - CR - CustomerPositionState
      summary: ExCR Execute an automated task for position tracking (e.g. issue an alert)
      description: ExCR Execute an automated task for position tracking (e.g. issue an alert)
      operationId: Execute
      parameters:
        - $ref: '#/components/parameters/customerpositionid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerPositionState'
      responses:
        '200':
          $ref: '#/components/responses/CustomerPositionState'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerPosition/{customerpositionid}/Request':
    put:
      tags:
        - CR - CustomerPositionState
      summary: RqCR Request an action for customer position monitoring (e.g. review and refresh content)
      description: RqCR Request an action for customer position monitoring (e.g. review and refresh content)
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/customerpositionid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerPositionState'
      responses:
        '200':
          $ref: '#/components/responses/CustomerPositionState'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerPosition/{customerpositionid}/Retrieve':
    get:
      tags:
        - CR - CustomerPositionState
      summary: ReCR Retrieve details about a customer position
      description: ReCR Retrieve details about a customer position
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/customerpositionid'
      responses:
        '200':
          $ref: '#/components/responses/CustomerPositionState'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerPosition/{customerpositionid}/Cashflow/{cashflowid}/Exchange':
    put:
      tags:
        - BQ - Cashflow
      summary: EcBQ Accept or verify the presented cash flow position
      description: EcBQ Accept or verify the presented cash flow position
      operationId: ExchangeCashflow
      parameters:
        - $ref: '#/components/parameters/customerpositionid'
        - $ref: '#/components/parameters/cashflowid'
      requestBody:
        $ref: '#/components/requestBodies/Cashflow'
      responses:
        '200':
          $ref: '#/components/responses/Cashflow'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerPosition/{customerpositionid}/Cashflow/{cashflowid}/Capture':
    put:
      tags:
        - BQ - Cashflow
      summary: CaBQ Capture product transaction reports (push from fulfillment)
      description: CaBQ Capture product transaction reports (push from fulfillment)
      operationId: CaptureCashflow
      parameters:
        - $ref: '#/components/parameters/customerpositionid'
        - $ref: '#/components/parameters/cashflowid'
      requestBody:
        $ref: '#/components/requestBodies/Cashflow'
      responses:
        '200':
          $ref: '#/components/responses/Cashflow'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerPosition/{customerpositionid}/Cashflow/{cashflowid}/Retrieve':
    get:
      tags:
        - BQ - Cashflow
      summary: ReBQ retrieve details about a cash flow analysis as part of the customer position
      description: ReBQ retrieve details about a cash flow analysis as part of the customer position
      operationId: RetrieveCashflow
      parameters:
        - $ref: '#/components/parameters/customerpositionid'
        - $ref: '#/components/parameters/cashflowid'
      responses:
        '200':
          $ref: '#/components/responses/Cashflow'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerPosition/{customerpositionid}/Credit/{creditid}/Exchange':
    put:
      tags:
        - BQ - Credit
      summary: EcBQ Accept or verify the presented credit position
      description: EcBQ Accept or verify the presented credit position
      operationId: ExchangeCredit
      parameters:
        - $ref: '#/components/parameters/customerpositionid'
        - $ref: '#/components/parameters/creditid'
      requestBody:
        $ref: '#/components/requestBodies/Credit'
      responses:
        '200':
          $ref: '#/components/responses/Credit'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerPosition/{customerpositionid}/Credit/{creditid}/Capture':
    put:
      tags:
        - BQ - Credit
      summary: CaBQ Capture credit assessment reports (push from credit administration)
      description: CaBQ Capture credit assessment reports (push from credit administration)
      operationId: CaptureCredit
      parameters:
        - $ref: '#/components/parameters/customerpositionid'
        - $ref: '#/components/parameters/creditid'
      requestBody:
        $ref: '#/components/requestBodies/Credit'
      responses:
        '200':
          $ref: '#/components/responses/Credit'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerPosition/{customerpositionid}/Credit/{creditid}/Retrieve':
    get:
      tags:
        - BQ - Credit
      summary: ReBQ retrieve details about a credit analysis as part of the customer position
      description: ReBQ retrieve details about a credit analysis as part of the customer position
      operationId: RetrieveCredit
      parameters:
        - $ref: '#/components/parameters/customerpositionid'
        - $ref: '#/components/parameters/creditid'
      responses:
        '200':
          $ref: '#/components/responses/Credit'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerPosition/{customerpositionid}/Collateral/{collateralid}/Exchange':
    put:
      tags:
        - BQ - Collateral
      summary: EcBQ Accept or verify the presented collateral position
      description: EcBQ Accept or verify the presented collateral position
      operationId: ExchangeCollateral
      parameters:
        - $ref: '#/components/parameters/customerpositionid'
        - $ref: '#/components/parameters/collateralid'
      requestBody:
        $ref: '#/components/requestBodies/Collateral'
      responses:
        '200':
          $ref: '#/components/responses/Collateral'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerPosition/{customerpositionid}/Collateral/{collateralid}/Capture':
    put:
      tags:
        - BQ - Collateral
      summary: CaBQ Capture collateral allocation reports (push from collateral allocation management)
      description: CaBQ Capture collateral allocation reports (push from collateral allocation management)
      operationId: CaptureCollateral
      parameters:
        - $ref: '#/components/parameters/customerpositionid'
        - $ref: '#/components/parameters/collateralid'
      requestBody:
        $ref: '#/components/requestBodies/Collateral'
      responses:
        '200':
          $ref: '#/components/responses/Collateral'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerPosition/{customerpositionid}/Collateral/{collateralid}/Retrieve':
    get:
      tags:
        - BQ - Collateral
      summary: ReBQ retrieve details about a collateral allocation as part of the customer position
      description: ReBQ retrieve details about a collateral allocation as part of the customer position
      operationId: RetrieveCollateral
      parameters:
        - $ref: '#/components/parameters/customerpositionid'
        - $ref: '#/components/parameters/collateralid'
      responses:
        '200':
          $ref: '#/components/responses/Collateral'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerPosition/{customerpositionid}/Cashflow/Evaluate':
    post:
      tags:
        - BQ - Cashflow
      summary: Setup transaction history
      description: Setup transaction history
      operationId: EvaluateCashflow
      parameters:
        - $ref: '#/components/parameters/customerpositionid'
      requestBody:
        $ref: '#/components/requestBodies/Cashflow'
      responses:
        '200':
          $ref: '#/components/responses/Cashflow'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerPosition/{customerpositionid}/Cashflow/{cashflowid}/Notify':
    get:
      tags:
        - BQ - Cashflow
      summary: Notify details about a cash flow analysis as part of the customer position
      description: Notify details about a cash flow analysis as part of the customer position
      operationId: NotifyCashflow
      parameters:
        - $ref: '#/components/parameters/customerpositionid'
        - $ref: '#/components/parameters/cashflowid'
      responses:
        '200':
          $ref: '#/components/responses/Cashflow'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerPosition/{customerpositionid}/Credit/{creditid}/Notify':
    get:
      tags:
        - BQ - Credit
      summary: Notify Credit
      description: Notify Credit
      operationId: NotifyCredit
      parameters:
        - $ref: '#/components/parameters/customerpositionid'
        - $ref: '#/components/parameters/creditid'
      responses:
        '200':
          $ref: '#/components/responses/Credit'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerPosition/{customerpositionid}/Credit/Evaluate':
    post:
      tags:
        - BQ - Credit
      summary: Evaluate Credit
      description: Evaluate Credit
      operationId: EvaluateCredit
      parameters:
        - $ref: '#/components/parameters/customerpositionid'
      requestBody:
        $ref: '#/components/requestBodies/Credit'
      responses:
        '200':
          $ref: '#/components/responses/Credit'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: "Name by which a party is known and which is usually used to identify that party. (ISO20022)\n"
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    datetime:
      type: object
      properties:
        DateTimeContent:
          type: string
          description: ''
          format: string
        TimeZoneCode:
          type: string
          description: ''
          format: string
        DaylightSavingIndicator:
          type: string
          description: ''
          format: string
      description: ''
    partyidentificationtypevalues:
      enum:
        - Taxidentificationnumber
        - Nationalregistrationnumber
        - Registrationauthorityidentification
        - LEI(LegalEntityIdentifier)
        - Alienregistrationnumber
        - Passportnumber
        - Taxexemptidentificationnumber
        - Corporateidentification
        - Driverlicensenumber
        - Foreigninvestmentidentitynumber
        - Socialsecuritynumber
        - Identitycardnumber
        - Concat
        - Nationalregistrationidentificationnumber
      type: string
      description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC.\r\n"
    value:
      type: object
      properties:
        Value:
          type: string
          description: "Data or set of data \n\n- A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)"
          format: datatype
      description: ''
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: "An unique reference to an item or an occurrence of <CR>\n GenericIdentification|GenericIdentification (https://www.iso20022.org/standardsrepository/type/GenericIdentification)|Standard|ISO20022 BM ()"
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    partylegalstructuretypevalues:
      enum:
        - Individual
        - CommunityInterestCompany
        - CharitableIncorporatedOrganisation
        - Co-Operative
        - Charity
        - GeneralPartnership
        - LimitedLiabilityPartnership
        - ScottishLimitedPartnership
        - LimitedPartnership
        - PrivateLimitedCompany
        - PublicLimitedCompany
        - Sole(SoleTrader)
      type: string
      description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - \r\n"
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
        PartyLegalStructureType:
          $ref: '#/components/schemas/partylegalstructuretypevalues'
      description: ''
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: ''
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: "Reference to the customer that the consolidated financial position represents ||\r\n|"
    assettypevalues:
      type: object
      properties:
        Assettypevalues:
          type: string
          description: "A functional Classification Hierarchy that distinguishes between objects of value according to some criteria.\nComment: BIAN Has developed a classification hierarchy, but also other authorities have defined classification hierarchies."
          format: enumeration
      description: 'The type of asset (e.g. building, machinery, inventory, financial instrument, art)'
    collateraltypevalues:
      enum:
        - Letterofcredit
        - Cash
        - Securities
        - Physicalentities
        - Insurance
        - Stockcertificate
        - Bond
        - Bankguarantee
        - Other
        - Commodity
        - Automobile
        - Industrialvehicle
        - Commercialtruck
        - Railvehicle
        - Nauticalcommercialvehicle
        - Nauticalleisurevehicle
        - Aeroplane
        - Machinetool
        - Industrialequipment
        - Officeequipment
        - Itequipment
        - Medicalequipment
        - Energyrelatedequipment
        - Commercialbuilding
      type: string
      description: ">\r\n* `Letterofcredit` - Instrument issued by a bank substituting its name and credit standing for that of its customer. A letter of credit is a written undertaking of the bank, issued for the account of a customer (the applicant), to honour a demand for payment, upon the beneficiary's compliance with the terms and conditions set forth in the undertaking.\r\n* `Cash` - Collateral type is cash.\r\n* `Securities` - Collateral type is securities.\r\n* `Physicalentities` - Collateral type are physical entities, for example, airplanes for debt issued by the airline industry.\r\n* `Insurance` - Collateral type is an insurance contract.\r\n* `Stockcertificate` - Collateral type is stock certificates.\r\n* `Bond` - Collateral type is bonds.\r\n* `Bankguarantee` - Collateral type is a bank guarantee.\r\n* `Other` - Other assets that could be used as collateral.\r\n* `Commodity` - Collateral type is commodities.\r\n* `Automobile` - Collateral type is automobile.\r\n* `Industrialvehicle` - Collateral type is industrial vehicle.\r\n* `Commercialtruck` - Collateral type is commercial track.\r\n* `Railvehicle` - Collateral type is rail vehicle.\r\n* `Nauticalcommercialvehicle` - Collateral type is nautical commercial vehicle.\r\n* `Nauticalleisurevehicle` - Collateral type is nautical leisure vehicle.\r\n* `Aeroplane` - Collateral type is aeroplane.\r\n* `Machinetool` - Collateral type is machine.\r\n* `Industrialequipment` - Collateral type is industrial equipment.\r\n* `Officeequipment` - Collateral type is office equipment.\r\n* `Itequipment` - Collateral type is IT equipment.\r\n* `Medicalequipment` - Collateral type is medical equipment.\r\n* `Energyrelatedequipment` - Collateral type is energy related equipment.\r\n* `Commercialbuilding` - Collateral type is commercial building.\r\n"
    servicetypevalues:
      enum:
        - ITService
        - AdministrativeService
        - SystemService
        - FinancialService
        - InformationService
        - BusinessService
      type: string
      description: ">\r\n* `ITService` - \r\n* `AdministrativeService` - \r\n* `SystemService` - \r\n* `FinancialService` - \r\n* `InformationService` - \r\n* `BusinessService` - \r\n"
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: 'A characteristic of service which refers to the lifecycle of service (e.g., initiated, active, de-active, etc.) '
    feature:
      type: object
      properties:
        FeatureType:
          $ref: '#/components/schemas/text'
        FeatureIdentification:
          $ref: '#/components/schemas/identifier'
        FeatureName:
          $ref: '#/components/schemas/name'
        FeatureLifecycleStatus:
          $ref: '#/components/schemas/status'
        FeatureDescription:
          $ref: '#/components/schemas/text'
      description: A characteristic of service which refers 1) mainly to the function or condition of service. 2) to non-functional features like quality and security
    service:
      type: object
      properties:
        ServiceName:
          $ref: '#/components/schemas/name'
        ServiceDescription:
          $ref: '#/components/schemas/text'
        ServiceType:
          $ref: '#/components/schemas/servicetypevalues'
        ServiceIdentification:
          $ref: '#/components/schemas/identifier'
        ServiceLifecycleStatus:
          $ref: '#/components/schemas/status'
        ServiceFeature:
          $ref: '#/components/schemas/feature'
      description: 'External identifier assigned by an asset valuation service provider to refer to an instance of Asset Valuation '
    rate:
      type: object
      properties:
        RateValue:
          $ref: '#/components/schemas/value'
        RateUnit:
          $ref: '#/components/schemas/text'
        RatePeriod:
          $ref: '#/components/schemas/datetimeperiod'
        RateCapitalUnit:
          $ref: '#/components/schemas/text'
      description: ''
    assetvaluation:
      type: object
      properties:
        AssetValue:
          $ref: '#/components/schemas/value'
        AssetValueType:
          $ref: '#/components/schemas/text'
        AssetValuationType:
          $ref: '#/components/schemas/text'
        AssetValuationDate:
          $ref: '#/components/schemas/datetime'
        AssetValuationServiceReference:
          $ref: '#/components/schemas/service'
        AssetValuationRate:
          $ref: '#/components/schemas/rate'
        AssetValuationStatus:
          $ref: '#/components/schemas/status'
        AssetValuationValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
      description: ''
    collateralassetstatusvalues:
      enum:
        - Offered
        - UnderAssessment
        - Transferred
        - Allocated
        - FreeForAllocation
        - AllocatedToAnotherLoan
        - IssuedForExecution
      type: string
      description: ">\r\n* `Offered` - \r\n* `UnderAssessment` - \r\n* `Transferred` - \r\n* `Allocated` - \r\n* `FreeForAllocation` - \r\n* `AllocatedToAnotherLoan` - \r\n* `IssuedForExecution` - \r\n"
    collateralasset:
      type: object
      properties:
        CollateralAssetIdentification:
          $ref: '#/components/schemas/identifier'
        CollateralAssetType:
          $ref: '#/components/schemas/collateraltypevalues'
        CollateralAssetValuation:
          $ref: '#/components/schemas/assetvaluation'
        CollateralAssetStatus:
          $ref: '#/components/schemas/collateralassetstatusvalues'
      description: 'Reference to the collateral item (e.g. address, account reference)'
    collateralassetadministrativeplan:
      type: object
      properties:
        CollateralAssetAdministrativePlan:
          type: string
          description: An administrative plan derived from the arrangements in one or more collateral agreements.
          format: class
      description: Reference to the administration record of the asset item
    allocationstatusvalues:
      enum:
        - Fullyallocated
        - Partiallyallocated
        - Earmarked
      type: string
      description: ">\r\n* `Fullyallocated` - \r\n* `Partiallyallocated` - \r\n* `Earmarked` - Not allocated, merely earmarked\r\n"
    collateralassetallocation:
      type: object
      properties:
        CollateralAssetAllocationStatus:
          $ref: '#/components/schemas/allocationstatusvalues'
      description: A record of past and current allocations of the collateral asset
    analysistypevalues:
      enum:
        - PerformanceAnalysis
        - ActivityAnalysis
      type: string
      description: ">\r\n* `PerformanceAnalysis` - \r\n* `ActivityAnalysis` - \r\n"
    financialdocumenttypevalues:
      enum:
        - Meteredserviceinvoice
        - Creditnoterelatedtofinancialadjustment
        - Debitnoterelatedtofinancialadjustment
        - Commercialinvoice
        - Creditnote
        - Debitnote
        - Hireinvoice
        - Selfbilledinvoice
        - Remittanceadvicemessage
        - Relatedpaymentinstruction
        - Commercialcontract
        - Foreignexchangedealreference
        - Statementofaccount
        - Dispatchadvice
        - Purchaseorder
        - Structuredcommunicationreference
        - Billoflading
        - Voucher
        - Accountreceivableopenitem
        - Tradeservicesutilitytransaction
        - Cashierreceipt
        - Customerreceipt
        - Journal
        - Salereceipt
      type: string
      description: ">\r\n* `Meteredserviceinvoice` - Document is an invoice claiming payment for the supply of metered services, for example gas or electricity supplied to a fixed meter.\r\n* `Creditnoterelatedtofinancialadjustment` - Document is a credit note for the final amount settled for a commercial transaction.\r\n* `Debitnoterelatedtofinancialadjustment` - Document is a debit note for the final amount settled for a commercial transaction.\r\n* `Commercialinvoice` - Document is an invoice.\r\n* `Creditnote` - Document is a credit note.\r\n* `Debitnote` - Document is a debit note.\r\n* `Hireinvoice` - Document is an invoice for the hiring of human resources or renting goods or equipment.\r\n* `Selfbilledinvoice` - Document is an invoice issued by the debtor.\r\n* `Remittanceadvicemessage` - Document is a remittance advice sent separately from the current transaction.\r\n* `Relatedpaymentinstruction` - Document is a linked payment instruction to which the current payment instruction is related, for example, in a cover scenario.\r\n* `Commercialcontract` - Document is an agreement between the parties, stipulating the terms and conditions of the delivery of goods or services.\r\n* `Foreignexchangedealreference` - Document is a pre-agreed or pre-arranged foreign exchange transaction to which the payment transaction refers.\r\n* `Statementofaccount` - Document is a statement of the transactions posted to the debtor's account at the supplier.\r\n* `Dispatchadvice` - Document is a dispatch advice.\r\n* `Purchaseorder` - Document is a purchase order.\r\n* `Structuredcommunicationreference` - Document is a structured communication reference provided by the creditor to identify the referred transaction.\r\n* `Billoflading` - Document is a shipping notice.\r\n* `Voucher` - Document is an electronic payment document.\r\n* `Accountreceivableopenitem` - Document is a payment that applies to a specific source document.\r\n* `Tradeservicesutilitytransaction` - Document is a transaction identifier as assigned by the Trade Services Utility.\r\n* `Cashierreceipt` - When the Sale system print the Cashier copy of the Payment receipt.\r\n* `Customerreceipt` - When the Sale System requires   the POI system to print the Customer receipt.\r\n* `Journal` - When the POI or the Sale System wants to store a message on the journal printer or electronic journal of the Sale Terminal (it is sometimes a Sale Logging/Journal Printer).\r\n* `Salereceipt` - When the Sale System requires the POI system to print the Sale receipt.\r\n"
    documentdatetimetypevalues:
      enum:
        - CreationDate
        - CapturingDate
        - VersionDate
        - ValueDate
        - IssueDate
      type: string
      description: ">\r\n* `CreationDate` - \r\n* `CapturingDate` - \r\n* `VersionDate` - \r\n* `ValueDate` - \r\n* `IssueDate` - \r\n"
    document:
      type: object
      properties:
        DocumentIdentification:
          $ref: '#/components/schemas/identifier'
        DocumentVersion:
          type: string
          description: ''
          format: number
        DocumentType:
          $ref: '#/components/schemas/financialdocumenttypevalues'
        DocumentStatus:
          $ref: '#/components/schemas/status'
        DocumentDateTime:
          $ref: '#/components/schemas/datetime'
        DocumentName:
          $ref: '#/components/schemas/name'
        DocumentDateTimeType:
          $ref: '#/components/schemas/documentdatetimetypevalues'
        DocumentPurpose:
          $ref: '#/components/schemas/text'
        DocumentFormat:
          $ref: '#/components/schemas/text'
        DocumentSubject:
          $ref: '#/components/schemas/text'
        DocumentDescription:
          $ref: '#/components/schemas/text'
        DocumentValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
      description: ''
    analysis:
      type: object
      properties:
        AnalysisType:
          $ref: '#/components/schemas/analysistypevalues'
        AnalysisResult:
          $ref: '#/components/schemas/text'
        AnalysisPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        AnalysisDocument:
          $ref: '#/components/schemas/document'
        AnalysisDateTime:
          $ref: '#/components/schemas/datetime'
        AnalysisSpecification:
          $ref: '#/components/schemas/text'
      description: 'The customer collateral position analysis - combines collateral valuation, allocation and associated product utilization)'
    Collateral:
      type: object
      properties:
        CustomerReference:
          $ref: '#/components/schemas/involvedparty'
        CollateralAssetType:
          $ref: '#/components/schemas/assettypevalues'
        CollateralAssetReference:
          $ref: '#/components/schemas/collateralasset'
        CollateralAssetDescription:
          $ref: '#/components/schemas/text'
        CollateralAssetAdministrationInstanceReference:
          $ref: '#/components/schemas/collateralassetadministrativeplan'
        CollateralAssetStatus:
          $ref: '#/components/schemas/collateralassetstatusvalues'
        CollateralAssetValuation:
          $ref: '#/components/schemas/assetvaluation'
        CollateralAssetAllocationProfile:
          $ref: '#/components/schemas/collateralassetallocation'
        CollateralAssetValuationDate:
          $ref: '#/components/schemas/datetime'
        CollateralAssetLoantoValueRatio:
          $ref: '#/components/schemas/text'
        CustomerCollateralPositionAnalysisRecord:
          $ref: '#/components/schemas/analysis'
      description: "A collection of information feeds/measures that can be used to track the status of one or more items/entitites\n\nExamples: Composite position, Customer alert"
    productagreementtypevalues:
      enum:
        - CurrentAccountAgreement
        - SavingsAccountAgreement
        - BrokeredProductAgreement
        - ConsumerLoanAgreement
        - MortgageLoanAgreement
        - DirectDebitServiceAgreement
      type: string
      description: ">\r\n* `CurrentAccountAgreement` - \r\n* `SavingsAccountAgreement` - \r\n* `BrokeredProductAgreement` - \r\n* `ConsumerLoanAgreement` - \r\n* `MortgageLoanAgreement` - \r\n* `DirectDebitServiceAgreement` - \r\n"
    productidentificationtypevalues:
      enum:
        - ISINCode
        - PackageCode
        - Buyersitemnumber
        - Commercialdescriptioncodename
        - EAN
        - Harmonizedtariffcodename
        - Manufacturersitemnumber
        - Modelnumber
        - Partnumber
        - Quotacategory
        - Stylenumber
        - Suppliersitemnumber
        - Universalproductcode
      type: string
      description: ">\r\n* `ISINCode` - \r\n* `PackageCode` - \r\n* `Buyersitemnumber` - Product identifier assigned by the buyer.\r\n* `Commercialdescriptioncodename` - A code to identify a product based on applicable commercial conditions.\r\n* `EAN` - The unique EAN (European Article Number) code.\r\n* `Harmonizedtariffcodename` - Classification of goods as developed by the Customs Cooperation council.\r\n* `Manufacturersitemnumber` - Product identifier as assigned by the manufacturer.\r\n* `Modelnumber` - Reference number assigned by the manufacturer to differentiate variations in similar products in a class or group.\r\n* `Partnumber` - Reference assigned by the manufacturer to a product part.\r\n* `Quotacategory` - Product identifier used by the retail industry.\r\n* `Stylenumber` - Identification of the style of a product.\r\n* `Suppliersitemnumber` - Number assigned to an article by the supplier of that article.\r\n* `Universalproductcode` - Number assigned to a manufacturer's product by the Product Code Council.\r\n"
    productidentification:
      type: object
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/identifier'
        ProductIdentificationType:
          $ref: '#/components/schemas/productidentificationtypevalues'
      description: The identifier of product e.g. ISIN Code.
    bankingproducttypevalues:
      enum:
        - LoanProduct
        - CurrentAccountProduct
        - SavingAccountProduct
        - BrokeredProduct
        - TermDepositProduct
      type: string
      description: ">\r\n* `LoanProduct` - \r\n* `CurrentAccountProduct` - \r\n* `SavingAccountProduct` - \r\n* `BrokeredProduct` - \r\n* `TermDepositProduct` - \r\n"
    productlifecyclestatustypevalues:
      enum:
        - Initiated
        - Announced
        - Sold
        - Obsolete
        - Active
      type: string
      description: ">\r\n* `Initiated` - \r\n* `Announced` - \r\n* `Sold` - \r\n* `Obsolete` - \r\n* `Active` - \r\n"
    productlifecyclestatus:
      type: object
      properties:
        ProductLifecycleStatus:
          $ref: '#/components/schemas/status'
        ProductLifecycleStatusType:
          $ref: '#/components/schemas/productlifecyclestatustypevalues'
      description: 'Refers to the lifecycle of a product (e.g., initiated, announced, active, obsolete, withdrawn).'
    bankingproduct:
      type: object
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/productidentification'
        ProductType:
          $ref: '#/components/schemas/bankingproducttypevalues'
        ProductLifecycleStatus:
          $ref: '#/components/schemas/productlifecyclestatus'
        ProductPriority:
          $ref: '#/components/schemas/text'
        ProductDescription:
          $ref: '#/components/schemas/text'
        ProductVersion:
          $ref: '#/components/schemas/text'
        ProductName:
          $ref: '#/components/schemas/name'
      description: ''
    date:
      type: object
      properties:
        DateContent:
          type: string
          description: ''
          format: string
      description: Date on which the agreement was signed by all parties. (ISO20022)
    agreementtypevalues:
      enum:
        - CustomerAgreement
        - SupplierAgreement
        - BrokerAgreement
        - SalesAgreement
        - PurchaseAgreement
        - MaintenanceAgreement
        - ProductAgreement
        - ProductSalesAgreement
        - ResourceAgreement
      type: string
      description: ">\r\n* `CustomerAgreement` - \r\n* `SupplierAgreement` - \r\n* `BrokerAgreement` - \r\n* `SalesAgreement` - \r\n* `PurchaseAgreement` - \r\n* `MaintenanceAgreement` - \r\n* `ProductAgreement` - \r\n* `ProductSalesAgreement` - \r\n* `ResourceAgreement` - \r\n"
    agreementlifecyclestatustypevalues:
      enum:
        - Offered
        - Confirmed
        - Completed
        - Signed
        - Terminated
        - Rejected
      type: string
      description: ">\r\n* `Offered` - \r\n* `Confirmed` - \r\n* `Completed` - \r\n* `Signed` - \r\n* `Terminated` - \r\n* `Rejected` - \r\n"
    agreementlifecyclestatus:
      type: object
      properties:
        AgreementLifecycleStatus:
          $ref: '#/components/schemas/status'
        AgreementLifecycleStatusType:
          $ref: '#/components/schemas/agreementlifecyclestatustypevalues'
      description: 'A characteristic of agreement which refers to the LifecycleStatus of agreement (e.g., potential, offered, confirmed, completed, signed, terminated).'
    agreement:
      type: object
      properties:
        AgreementSignedDate:
          $ref: '#/components/schemas/date'
        AgreementType:
          $ref: '#/components/schemas/agreementtypevalues'
        AgreementValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        AgreementVersion:
          $ref: '#/components/schemas/text'
        AgreementStatus:
          $ref: '#/components/schemas/agreementlifecyclestatus'
        AgreementSubjectMatter:
          $ref: '#/components/schemas/text'
        AgreementIdentification:
          $ref: '#/components/schemas/identifier'
        AgreementDate:
          $ref: '#/components/schemas/datetime'
        AgreementDescription:
          $ref: '#/components/schemas/text'
      description: ''
    productagreement:
      type: object
      properties:
        Type:
          $ref: '#/components/schemas/productagreementtypevalues'
        ProductReference:
          $ref: '#/components/schemas/bankingproduct'
        AgreementReference:
          $ref: '#/components/schemas/agreement'
      description: "Reference to the customer product/account ||\r\n|"
    reporttypevalues:
      enum:
        - FinancialReport
        - BusinessReport
        - ManagementReport
        - Statement
        - MaintenanceReport
        - RegulatoryReport
        - TaxReport
      type: string
      description: ">\r\n* `FinancialReport` - \r\n* `BusinessReport` - \r\n* `ManagementReport` - \r\n* `Statement` - \r\n* `MaintenanceReport` - \r\n* `RegulatoryReport` - \r\n* `TaxReport` - \r\n"
    report:
      type: object
      properties:
        ReportType:
          $ref: '#/components/schemas/reporttypevalues'
        ReportValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        ReportVersion:
          type: string
          description: ''
          format: number
        ReportDateTime:
          $ref: '#/components/schemas/datetime'
        ReportFormat:
          $ref: '#/components/schemas/text'
      description: The product/service activity report - transactional activity used for financial analysis
    channeltypevalues:
      enum:
        - CommunicationChannel
        - AuthenticationChannel
      type: string
      description: ">\r\n* `CommunicationChannel` - \r\n* `AuthenticationChannel` - \r\n"
    channel:
      type: object
      properties:
        ChannelType:
          $ref: '#/components/schemas/channeltypevalues'
      description: Specifies the channel through which the report must be made available to the  information recipient.
    frequencytypevalues:
      enum:
        - Annual
        - Monthly
        - Quarterly
        - Semiannual
        - Weekly
        - Daily
        - Adhoc
        - Intraday
        - Overnight
        - Tendays
        - Fortnightly
        - Triggeredbymovement
        - Never
        - Rate
        - Oncreditevent
        - Upfront
        - Onexpiry
        - Hourly
      type: string
      description: ">\r\n* `Annual` - Event takes place every year or once a year.\r\n* `Monthly` - Event takes place every month or once a month.\r\n* `Quarterly` - Event takes place every three months or four times a year.\r\n* `Semiannual` - Event takes place every six months or two times a year.\r\n* `Weekly` - Event takes place once a week.\r\n* `Daily` - Event takes place every day.\r\n* `Adhoc` - Event takes place on request or as necessary.\r\n* `Intraday` - Event takes place several times a day.\r\n* `Overnight` - Event takes place overnight.\r\n* `Tendays` - Event takes place every ten business days.\r\n* `Fortnightly` - Event takes place every two weeks.\r\n* `Triggeredbymovement` - Event takes place at the end of the day if there was a movement on the account, otherwise nothing is sent that day.\r\n* `Never` - Event does never take place.\r\n* `Rate` - Event takes place based on a change of a rate.\r\n* `Oncreditevent` - Event occurs due to a credit event occurring for an issuer.\r\n* `Upfront` - Event that takes place at the initiation of a trade or agreement.\r\n* `Onexpiry` - Event occurs on expiry of a financial contract.\r\n* `Hourly` - Event takes place every hours.\r\n"
    reportingarrangement:
      type: object
      properties:
        ReportingChannel:
          $ref: '#/components/schemas/channel'
        ReportingFrequency:
          $ref: '#/components/schemas/frequencytypevalues'
      description: Defines content/transaction types to be included in the report extract
    Cashflow:
      type: object
      properties:
        ProductInstanceReference:
          $ref: '#/components/schemas/productagreement'
        ProductArrangementInstanceReportType:
          $ref: '#/components/schemas/reporttypevalues'
        ProductArrangementInstanceReport:
          $ref: '#/components/schemas/report'
        ReportOptionsSelectionCriteria:
          $ref: '#/components/schemas/reportingarrangement'
        ReportPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        ReportFormatTemplate:
          $ref: '#/components/schemas/text'
        Report:
          $ref: '#/components/schemas/report'
        CustomerCashflowPositionAnalysisRecord:
          $ref: '#/components/schemas/analysis'
      description: "A collection of information feeds/measures that can be used to track the status of one or more items/entitites\n\nExamples: Composite position, Customer alert"
    customercreditratingassessment:
      type: object
      properties:
        CreditRatingAssessmentType:
          type: string
          description: ''
          format: ''
      description: The internal bank credit rating/assessment
    creditratingassessmenttype:
      type: object
      properties:
        Creditratingassessmenttype:
          type: string
          description: 'Credit assessment type (e.g. consumer, small business, corporate)'
          format: enumeration
      description: 'Credit assessment type (e.g. consumer, small business, corporate)'
    Credit:
      type: object
      properties:
        CustomerCreditRatingAssessment:
          $ref: '#/components/schemas/customercreditratingassessment'
        CustomerCreditRatingAssessmentType:
          $ref: '#/components/schemas/creditratingassessmenttype'
        CustomerCreditRatingNarrative:
          $ref: '#/components/schemas/text'
        CustomerCreditPositionAnalysisRecord:
          $ref: '#/components/schemas/analysis'
      description: "A collection of information feeds/measures that can be used to track the status of one or more items/entitites\n\nExamples: Composite position, Customer alert"
    positiontypevalues:
      enum:
        - Balance/Cashflow
        - CreditPosition
        - CollateralPosition
        - SecurityPosition
      type: string
      description: ">\r\n* `Balance/Cashflow` - \r\n* `CreditPosition` - \r\n* `CollateralPosition` - \r\n* `SecurityPosition` - \r\n"
    customereventtypevalues:
      enum:
        - Customerrelationshipevent
        - Customersaleevent
        - Customerproductevent
        - Customerfraudevent
        - Customerlifeevent
      type: string
      description: ">\r\n* `Customerrelationshipevent` - A Value of Customer Event Type in which events related to the customer relationship are specified. \r\n* `Customersaleevent` - A Value of Customer Event Type in which events related to the customer sale are specified. \n\r\n* `Customerproductevent` - A Value of Customer Event Type in which events related to the customer product are specified. \n\r\n* `Customerfraudevent` - A Value of Customer Event Type in which events related to the customer fraud are specified. \n\r\n* `Customerlifeevent` - A Value of Customer Event Type in which events related to the customer life are specified. \n\r\n"
    customerrelationship:
      type: object
      properties:
        CustomerRelationship:
          type: string
          description: A specific relationship between a specific Bank (= party acting as a supplier of banking services) and one or more other involved parties acting as (potential) consumers of banking services as agreed in one or more banking product or service offerings and/or agreements.
          format: class
      description: ''
    customerevent:
      type: object
      properties:
        CustomerEventType:
          $ref: '#/components/schemas/customereventtypevalues'
        CustomerReference:
          $ref: '#/components/schemas/customerrelationship'
      description: ''
    customerposition:
      type: object
      properties:
        PositionType:
          $ref: '#/components/schemas/positiontypevalues'
        EventReference:
          $ref: '#/components/schemas/customerevent'
      description: "The consolidated position state that is tracked for the customer - combines analysis from all  measures ||\r\n|"
    CustomerPositionState:
      type: object
      properties:
        CustomerReference:
          $ref: '#/components/schemas/involvedparty'
        CustomerPositioReference:
          $ref: '#/components/schemas/customerposition'
        AccountReference:
          $ref: '#/components/schemas/productagreement'
        CustomerPositionStateReference:
          $ref: '#/components/schemas/identifier'
      description: 'Monitor and define the status/rating of some entity within Customer Position. '
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    CustomerPositionState:
      description: CustomerPositionState
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerPositionState'
    Cashflow:
      description: Cashflow
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Cashflow'
    Credit:
      description: Credit
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Credit'
    Collateral:
      description: Collateral
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Collateral'
  parameters:
    customerpositionid:
      name: customerpositionid
      in: path
      required: true
      style: simple
      schema:
        type: string
    cashflowid:
      name: cashflowid
      in: path
      required: true
      style: simple
      schema:
        type: string
    creditid:
      name: creditid
      in: path
      required: true
      style: simple
      schema:
        type: string
    collateralid:
      name: collateralid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    CustomerPositionState:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerPositionState'
      required: true
    Cashflow:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Cashflow'
      required: true
    Credit:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Credit'
      required: true
    Collateral:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Collateral'
      required: true