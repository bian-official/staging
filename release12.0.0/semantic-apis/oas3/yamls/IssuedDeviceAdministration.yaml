openapi: 3.0.1
info:
  title: Issued Device Administration
  description: 'This service domain administers the issuance of authentication tokens to customers and third party service providers. Tokens here include physical devices such as cards, fobs, readers and intangible ''devices'' such as passwords and secret questions. Administration includes version tracking, replacement and duration/frequency limits. Specific product/service access permissions may be associated with an issued token when appropriate'
  contact:
    name: BIAN
    url: https://bian.org
  version: 12.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/IssuedDeviceAdministration/12.0.0
paths:
  /IssuedDeviceAdministration/Initiate:
    post:
      tags:
        - CR - IssuedDeviceAllocation
      summary: PrCR Allocate an issued device (selected type will internally invoke assignment type)
      description: PrCR Allocate an issued device (selected type will internally invoke assignment type)
      operationId: Initiate
      requestBody:
        $ref: '#/components/requestBodies/IssuedDeviceAllocation'
      responses:
        '200':
          $ref: '#/components/responses/IssuedDeviceAllocation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/IssuedDeviceAdministration/{issueddeviceadministrationid}/Update':
    put:
      tags:
        - CR - IssuedDeviceAllocation
      summary: UpCR Update details of an allocation
      description: UpCR Update details of an allocation
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/issueddeviceadministrationid'
      requestBody:
        $ref: '#/components/requestBodies/IssuedDeviceAllocation'
      responses:
        '200':
          $ref: '#/components/responses/IssuedDeviceAllocation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/IssuedDeviceAdministration/{issueddeviceadministrationid}/Control':
    put:
      tags:
        - CR - IssuedDeviceAllocation
      summary: CoCR Control an issued device allocation (e.g. suspend)
      description: CoCR Control an issued device allocation (e.g. suspend)
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/issueddeviceadministrationid'
      requestBody:
        $ref: '#/components/requestBodies/IssuedDeviceAllocation'
      responses:
        '200':
          $ref: '#/components/responses/IssuedDeviceAllocation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/IssuedDeviceAdministration/{issueddeviceadministrationid}/Exchange':
    put:
      tags:
        - CR - IssuedDeviceAllocation
      summary: 'EcCR Accept, verify, etc aspects of an allocation'
      description: 'EcCR Accept, verify, etc aspects of an allocation'
      operationId: Exchange
      parameters:
        - $ref: '#/components/parameters/issueddeviceadministrationid'
      requestBody:
        $ref: '#/components/requestBodies/IssuedDeviceAllocation'
      responses:
        '200':
          $ref: '#/components/responses/IssuedDeviceAllocation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/IssuedDeviceAdministration/{issueddeviceadministrationid}/Retrieve':
    get:
      tags:
        - CR - IssuedDeviceAllocation
      summary: ReCR Retrieve details about an allocation
      description: ReCR Retrieve details about an allocation
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/issueddeviceadministrationid'
      responses:
        '200':
          $ref: '#/components/responses/IssuedDeviceAllocation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/IssuedDeviceAdministration/{issueddeviceadministrationid}/PasswordAssignment/Initiate':
    post:
      tags:
        - BQ - PasswordAssignment
      summary: PrBQ Provide a password assignment
      description: PrBQ Provide a password assignment
      operationId: InitiatePasswordAssignment
      parameters:
        - $ref: '#/components/parameters/issueddeviceadministrationid'
      requestBody:
        $ref: '#/components/requestBodies/PasswordAssignment'
      responses:
        '200':
          $ref: '#/components/responses/PasswordAssignment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/IssuedDeviceAdministration/{issueddeviceadministrationid}/PasswordAssignment/{passwordassignmentid}/Update':
    put:
      tags:
        - BQ - PasswordAssignment
      summary: UpBQ Update details of an assigned password
      description: UpBQ Update details of an assigned password
      operationId: UpdatePasswordAssignment
      parameters:
        - $ref: '#/components/parameters/issueddeviceadministrationid'
        - $ref: '#/components/parameters/passwordassignmentid'
      requestBody:
        $ref: '#/components/requestBodies/PasswordAssignment'
      responses:
        '200':
          $ref: '#/components/responses/PasswordAssignment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/IssuedDeviceAdministration/{issueddeviceadministrationid}/PasswordAssignment/{passwordassignmentid}/Control':
    put:
      tags:
        - BQ - PasswordAssignment
      summary: CoBQ Control an assigned password (e.g. suspend)
      description: CoBQ Control an assigned password (e.g. suspend)
      operationId: ControlPasswordAssignment
      parameters:
        - $ref: '#/components/parameters/issueddeviceadministrationid'
        - $ref: '#/components/parameters/passwordassignmentid'
      requestBody:
        $ref: '#/components/requestBodies/PasswordAssignment'
      responses:
        '200':
          $ref: '#/components/responses/PasswordAssignment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/IssuedDeviceAdministration/{issueddeviceadministrationid}/PasswordAssignment/{passwordassignmentid}/Exchange':
    put:
      tags:
        - BQ - PasswordAssignment
      summary: 'EcBQ Accept, verify, reject etc. an assigned password'
      description: 'EcBQ Accept, verify, reject etc. an assigned password'
      operationId: ExchangePasswordAssignment
      parameters:
        - $ref: '#/components/parameters/issueddeviceadministrationid'
        - $ref: '#/components/parameters/passwordassignmentid'
      requestBody:
        $ref: '#/components/requestBodies/PasswordAssignment'
      responses:
        '200':
          $ref: '#/components/responses/PasswordAssignment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/IssuedDeviceAdministration/{issueddeviceadministrationid}/PasswordAssignment/{passwordassignmentid}/Capture':
    put:
      tags:
        - BQ - PasswordAssignment
      summary: CaBQ Capture usage details of an assigned password
      description: CaBQ Capture usage details of an assigned password
      operationId: CapturePasswordAssignment
      parameters:
        - $ref: '#/components/parameters/issueddeviceadministrationid'
        - $ref: '#/components/parameters/passwordassignmentid'
      requestBody:
        $ref: '#/components/requestBodies/PasswordAssignment'
      responses:
        '200':
          $ref: '#/components/responses/PasswordAssignment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/IssuedDeviceAdministration/{issueddeviceadministrationid}/PasswordAssignment/{passwordassignmentid}/Retrieve':
    get:
      tags:
        - BQ - PasswordAssignment
      summary: ReBQ Retrieve details about an assigned password
      description: ReBQ Retrieve details about an assigned password
      operationId: RetrievePasswordAssignment
      parameters:
        - $ref: '#/components/parameters/issueddeviceadministrationid'
        - $ref: '#/components/parameters/passwordassignmentid'
      responses:
        '200':
          $ref: '#/components/responses/PasswordAssignment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/IssuedDeviceAdministration/{issueddeviceadministrationid}/QuestionAssignment/Initiate':
    post:
      tags:
        - BQ - QuestionAssignment
      summary: PrBQ Provide a secret question assignment
      description: PrBQ Provide a secret question assignment
      operationId: InitiateQuestionAssignment
      parameters:
        - $ref: '#/components/parameters/issueddeviceadministrationid'
      requestBody:
        $ref: '#/components/requestBodies/QuestionAssignment'
      responses:
        '200':
          $ref: '#/components/responses/QuestionAssignment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/IssuedDeviceAdministration/{issueddeviceadministrationid}/QuestionAssignment/{questionassignmentid}/Update':
    put:
      tags:
        - BQ - QuestionAssignment
      summary: UpBQ Update details of an assigned secret question
      description: UpBQ Update details of an assigned secret question
      operationId: UpdateQuestionAssignment
      parameters:
        - $ref: '#/components/parameters/issueddeviceadministrationid'
        - $ref: '#/components/parameters/questionassignmentid'
      requestBody:
        $ref: '#/components/requestBodies/QuestionAssignment'
      responses:
        '200':
          $ref: '#/components/responses/QuestionAssignment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/IssuedDeviceAdministration/{issueddeviceadministrationid}/QuestionAssignment/{questionassignmentid}/Control':
    put:
      tags:
        - BQ - QuestionAssignment
      summary: CoBQ Control an assigned secret question (e.g. suspend)
      description: CoBQ Control an assigned secret question (e.g. suspend)
      operationId: ControlQuestionAssignment
      parameters:
        - $ref: '#/components/parameters/issueddeviceadministrationid'
        - $ref: '#/components/parameters/questionassignmentid'
      requestBody:
        $ref: '#/components/requestBodies/QuestionAssignment'
      responses:
        '200':
          $ref: '#/components/responses/QuestionAssignment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/IssuedDeviceAdministration/{issueddeviceadministrationid}/QuestionAssignment/{questionassignmentid}/Exchange':
    put:
      tags:
        - BQ - QuestionAssignment
      summary: 'EcBQ Accept, verify, reject etc. an assigned secret question'
      description: 'EcBQ Accept, verify, reject etc. an assigned secret question'
      operationId: ExchangeQuestionAssignment
      parameters:
        - $ref: '#/components/parameters/issueddeviceadministrationid'
        - $ref: '#/components/parameters/questionassignmentid'
      requestBody:
        $ref: '#/components/requestBodies/QuestionAssignment'
      responses:
        '200':
          $ref: '#/components/responses/QuestionAssignment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/IssuedDeviceAdministration/{issueddeviceadministrationid}/QuestionAssignment/{questionassignmentid}/Capture':
    put:
      tags:
        - BQ - QuestionAssignment
      summary: CaBQ Capture usage details of an assigned secret question
      description: CaBQ Capture usage details of an assigned secret question
      operationId: CaptureQuestionAssignment
      parameters:
        - $ref: '#/components/parameters/issueddeviceadministrationid'
        - $ref: '#/components/parameters/questionassignmentid'
      requestBody:
        $ref: '#/components/requestBodies/QuestionAssignment'
      responses:
        '200':
          $ref: '#/components/responses/QuestionAssignment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/IssuedDeviceAdministration/{issueddeviceadministrationid}/QuestionAssignment/{questionassignmentid}/Retrieve':
    get:
      tags:
        - BQ - QuestionAssignment
      summary: ReBQ Retrieve details about an assigned ser=AndAnd password
      description: ReBQ Retrieve details about an assigned ser=AndAnd password
      operationId: RetrieveQuestionAssignment
      parameters:
        - $ref: '#/components/parameters/issueddeviceadministrationid'
        - $ref: '#/components/parameters/questionassignmentid'
      responses:
        '200':
          $ref: '#/components/responses/QuestionAssignment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/IssuedDeviceAdministration/{issueddeviceadministrationid}/DeviceAssignment/{deviceassignmentid}/Update':
    put:
      tags:
        - BQ - DeviceAssignment
      summary: UpBQ Update details of an assigned device
      description: UpBQ Update details of an assigned device
      operationId: UpdateDeviceAssignment
      parameters:
        - $ref: '#/components/parameters/issueddeviceadministrationid'
        - $ref: '#/components/parameters/deviceassignmentid'
      requestBody:
        $ref: '#/components/requestBodies/DeviceAssignment'
      responses:
        '200':
          $ref: '#/components/responses/DeviceAssignment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/IssuedDeviceAdministration/{issueddeviceadministrationid}/DeviceAssignment/{deviceassignmentid}/Control':
    put:
      tags:
        - BQ - DeviceAssignment
      summary: CoBQ Control an assigned device (e.g. out of service)
      description: CoBQ Control an assigned device (e.g. out of service)
      operationId: ControlDeviceAssignment
      parameters:
        - $ref: '#/components/parameters/issueddeviceadministrationid'
        - $ref: '#/components/parameters/deviceassignmentid'
      requestBody:
        $ref: '#/components/requestBodies/DeviceAssignment'
      responses:
        '200':
          $ref: '#/components/responses/DeviceAssignment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/IssuedDeviceAdministration/{issueddeviceadministrationid}/DeviceAssignment/{deviceassignmentid}/Capture':
    put:
      tags:
        - BQ - DeviceAssignment
      summary: CaBQ Capture usage details of an assigned device
      description: CaBQ Capture usage details of an assigned device
      operationId: CaptureDeviceAssignment
      parameters:
        - $ref: '#/components/parameters/issueddeviceadministrationid'
        - $ref: '#/components/parameters/deviceassignmentid'
      requestBody:
        $ref: '#/components/requestBodies/DeviceAssignment'
      responses:
        '200':
          $ref: '#/components/responses/DeviceAssignment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/IssuedDeviceAdministration/{issueddeviceadministrationid}/DeviceAssignment/{deviceassignmentid}/Retrieve':
    get:
      tags:
        - BQ - DeviceAssignment
      summary: ReBQ Retrieve details about an assigned device
      description: ReBQ Retrieve details about an assigned device
      operationId: RetrieveDeviceAssignment
      parameters:
        - $ref: '#/components/parameters/issueddeviceadministrationid'
        - $ref: '#/components/parameters/deviceassignmentid'
      responses:
        '200':
          $ref: '#/components/responses/DeviceAssignment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/IssuedDeviceAdministration/{issueddeviceadministrationid}/BiometricAssignment/Initiate':
    post:
      tags:
        - BQ - BiometricAssignment
      summary: PrBQ Provide a biometric assignment
      description: PrBQ Provide a biometric assignment
      operationId: InitiateBiometricAssignment
      parameters:
        - $ref: '#/components/parameters/issueddeviceadministrationid'
      requestBody:
        $ref: '#/components/requestBodies/BiometricAssignment'
      responses:
        '200':
          $ref: '#/components/responses/BiometricAssignment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/IssuedDeviceAdministration/{issueddeviceadministrationid}/BiometricAssignment/{biometricassignmentid}/Update':
    put:
      tags:
        - BQ - BiometricAssignment
      summary: UpBQ Update details of an assigned biometric
      description: UpBQ Update details of an assigned biometric
      operationId: UpdateBiometricAssignment
      parameters:
        - $ref: '#/components/parameters/issueddeviceadministrationid'
        - $ref: '#/components/parameters/biometricassignmentid'
      requestBody:
        $ref: '#/components/requestBodies/BiometricAssignment'
      responses:
        '200':
          $ref: '#/components/responses/BiometricAssignment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/IssuedDeviceAdministration/{issueddeviceadministrationid}/BiometricAssignment/{biometricassignmentid}/Control':
    put:
      tags:
        - BQ - BiometricAssignment
      summary: CoBQ Control an assigned biometric (e.g. suspend)
      description: CoBQ Control an assigned biometric (e.g. suspend)
      operationId: ControlBiometricAssignment
      parameters:
        - $ref: '#/components/parameters/issueddeviceadministrationid'
        - $ref: '#/components/parameters/biometricassignmentid'
      requestBody:
        $ref: '#/components/requestBodies/BiometricAssignment'
      responses:
        '200':
          $ref: '#/components/responses/BiometricAssignment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/IssuedDeviceAdministration/{issueddeviceadministrationid}/BiometricAssignment/{biometricassignmentid}/Exchange':
    put:
      tags:
        - BQ - BiometricAssignment
      summary: 'EcBQ Accept, verify, reject etc. an assigned biometric'
      description: 'EcBQ Accept, verify, reject etc. an assigned biometric'
      operationId: ExchangeBiometricAssignment
      parameters:
        - $ref: '#/components/parameters/issueddeviceadministrationid'
        - $ref: '#/components/parameters/biometricassignmentid'
      requestBody:
        $ref: '#/components/requestBodies/BiometricAssignment'
      responses:
        '200':
          $ref: '#/components/responses/BiometricAssignment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/IssuedDeviceAdministration/{issueddeviceadministrationid}/BiometricAssignment/{biometricassignmentid}/Retrieve':
    get:
      tags:
        - BQ - BiometricAssignment
      summary: ReBQ Retrieve details about an assigned biometric
      description: ReBQ Retrieve details about an assigned biometric
      operationId: RetrieveBiometricAssignment
      parameters:
        - $ref: '#/components/parameters/issueddeviceadministrationid'
        - $ref: '#/components/parameters/biometricassignmentid'
      responses:
        '200':
          $ref: '#/components/responses/BiometricAssignment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/IssuedDeviceAdministration/{issueddeviceadministrationid}/ReaderAssignment/{readerassignmentid}/Update':
    put:
      tags:
        - BQ - ReaderAssignment
      summary: UpBQ Update details of an assigned reader device
      description: UpBQ Update details of an assigned reader device
      operationId: UpdateReaderAssignment
      parameters:
        - $ref: '#/components/parameters/issueddeviceadministrationid'
        - $ref: '#/components/parameters/readerassignmentid'
      requestBody:
        $ref: '#/components/requestBodies/ReaderAssignment'
      responses:
        '200':
          $ref: '#/components/responses/ReaderAssignment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/IssuedDeviceAdministration/{issueddeviceadministrationid}/ReaderAssignment/{readerassignmentid}/Control':
    put:
      tags:
        - BQ - ReaderAssignment
      summary: CoBQ Control an assigned reader (e.g. out of service)
      description: CoBQ Control an assigned reader (e.g. out of service)
      operationId: ControlReaderAssignment
      parameters:
        - $ref: '#/components/parameters/issueddeviceadministrationid'
        - $ref: '#/components/parameters/readerassignmentid'
      requestBody:
        $ref: '#/components/requestBodies/ReaderAssignment'
      responses:
        '200':
          $ref: '#/components/responses/ReaderAssignment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/IssuedDeviceAdministration/{issueddeviceadministrationid}/ReaderAssignment/{readerassignmentid}/Capture':
    put:
      tags:
        - BQ - ReaderAssignment
      summary: CaBQ Capture usage details of an assigned reader
      description: CaBQ Capture usage details of an assigned reader
      operationId: CaptureReaderAssignment
      parameters:
        - $ref: '#/components/parameters/issueddeviceadministrationid'
        - $ref: '#/components/parameters/readerassignmentid'
      requestBody:
        $ref: '#/components/requestBodies/ReaderAssignment'
      responses:
        '200':
          $ref: '#/components/responses/ReaderAssignment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/IssuedDeviceAdministration/{issueddeviceadministrationid}/ReaderAssignment/{readerassignmentid}/Retrieve':
    get:
      tags:
        - BQ - ReaderAssignment
      summary: ReBQ Retrieve details about an assigned reader
      description: ReBQ Retrieve details about an assigned reader
      operationId: RetrieveReaderAssignment
      parameters:
        - $ref: '#/components/parameters/issueddeviceadministrationid'
        - $ref: '#/components/parameters/readerassignmentid'
      responses:
        '200':
          $ref: '#/components/responses/ReaderAssignment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/IssuedDeviceAdministration/{issueddeviceadministrationid}/ChequesAssignment/Initiate':
    post:
      tags:
        - BQ - ChequesAssignment
      summary: PrBQ Provide cheques
      description: PrBQ Provide cheques
      operationId: InitiateChequesAssignment
      parameters:
        - $ref: '#/components/parameters/issueddeviceadministrationid'
      requestBody:
        $ref: '#/components/requestBodies/ChequesAssignment'
      responses:
        '200':
          $ref: '#/components/responses/ChequesAssignment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/IssuedDeviceAdministration/{issueddeviceadministrationid}/ChequesAssignment/{chequesassignmentid}/Control':
    put:
      tags:
        - BQ - ChequesAssignment
      summary: CoBQ Control issued cheques (e.g. cancel)
      description: CoBQ Control issued cheques (e.g. cancel)
      operationId: ControlChequesAssignment
      parameters:
        - $ref: '#/components/parameters/issueddeviceadministrationid'
        - $ref: '#/components/parameters/chequesassignmentid'
      requestBody:
        $ref: '#/components/requestBodies/ChequesAssignment'
      responses:
        '200':
          $ref: '#/components/responses/ChequesAssignment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/IssuedDeviceAdministration/{issueddeviceadministrationid}/ChequesAssignment/{chequesassignmentid}/Exchange':
    put:
      tags:
        - BQ - ChequesAssignment
      summary: 'EcBQ Accept, verify receipt etc. of issued cheques'
      description: 'EcBQ Accept, verify receipt etc. of issued cheques'
      operationId: ExchangeChequesAssignment
      parameters:
        - $ref: '#/components/parameters/issueddeviceadministrationid'
        - $ref: '#/components/parameters/chequesassignmentid'
      requestBody:
        $ref: '#/components/requestBodies/ChequesAssignment'
      responses:
        '200':
          $ref: '#/components/responses/ChequesAssignment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/IssuedDeviceAdministration/{issueddeviceadministrationid}/ChequesAssignment/{chequesassignmentid}/Retrieve':
    get:
      tags:
        - BQ - ChequesAssignment
      summary: ReBQ Retrieve details about issued cheques
      description: ReBQ Retrieve details about issued cheques
      operationId: RetrieveChequesAssignment
      parameters:
        - $ref: '#/components/parameters/issueddeviceadministrationid'
        - $ref: '#/components/parameters/chequesassignmentid'
      responses:
        '200':
          $ref: '#/components/responses/ChequesAssignment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/IssuedDeviceAdministration/{issueddeviceadministrationid}/TokenAssignment/{tokenassignmentid}/Capture':
    put:
      tags:
        - BQ - TokenAssignment
      summary: Capture Assigned Token
      description: Capture Assigned Token
      operationId: CaptureTokenAssignment
      parameters:
        - $ref: '#/components/parameters/issueddeviceadministrationid'
        - $ref: '#/components/parameters/tokenassignmentid'
      requestBody:
        $ref: '#/components/requestBodies/TokenAssignment'
      responses:
        '200':
          $ref: '#/components/responses/TokenAssignment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/IssuedDeviceAdministration/{issueddeviceadministrationid}/TokenAssignment/{tokenassignmentid}/Retrieve':
    get:
      tags:
        - BQ - TokenAssignment
      summary: Retrieve Details about Assigned Token
      description: Retrieve Details about Assigned Token
      operationId: RetrieveTokenAssignment
      parameters:
        - $ref: '#/components/parameters/issueddeviceadministrationid'
        - $ref: '#/components/parameters/tokenassignmentid'
      responses:
        '200':
          $ref: '#/components/responses/TokenAssignment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/IssuedDeviceAdministration/{issueddeviceadministrationid}/TokenAssignment/{tokenassignmentid}/Update':
    put:
      tags:
        - BQ - TokenAssignment
      summary: Update Details of Assigned Token
      description: Update Details of Assigned Token
      operationId: UpdateTokenAssignment
      parameters:
        - $ref: '#/components/parameters/issueddeviceadministrationid'
        - $ref: '#/components/parameters/tokenassignmentid'
      requestBody:
        $ref: '#/components/requestBodies/TokenAssignment'
      responses:
        '200':
          $ref: '#/components/responses/TokenAssignment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/IssuedDeviceAdministration/{issueddeviceadministrationid}/TokenAssignment/Provide':
    post:
      tags:
        - BQ - TokenAssignment
      summary: Provide Details about Assigned Token
      description: Provide Details about Assigned Token
      operationId: ProvideTokenAssignment
      parameters:
        - $ref: '#/components/parameters/issueddeviceadministrationid'
      requestBody:
        $ref: '#/components/requestBodies/TokenAssignment'
      responses:
        '200':
          $ref: '#/components/responses/TokenAssignment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/IssuedDeviceAdministration/{issueddeviceadministrationid}/TokenAssignment/{tokenassignmentid}/Execute':
    put:
      tags:
        - BQ - TokenAssignment
      summary: Execute token assignment amend permission
      description: Execute token assignment amend permission
      operationId: ExecuteTokenAssignment
      parameters:
        - $ref: '#/components/parameters/issueddeviceadministrationid'
        - $ref: '#/components/parameters/tokenassignmentid'
      requestBody:
        $ref: '#/components/requestBodies/TokenAssignment'
      responses:
        '200':
          $ref: '#/components/responses/TokenAssignment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    value:
      type: object
      properties:
        Value:
          type: string
          description: "Data or set of data \n\n- A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)"
          format: datatype
      description: ''
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: "Name by which a party is known and which is usually used to identify that party. (ISO20022)\n"
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    datetime:
      type: object
      properties:
        DateTimeContent:
          type: string
          description: ''
          format: string
        TimeZoneCode:
          type: string
          description: ''
          format: string
        DaylightSavingIndicator:
          type: string
          description: ''
          format: string
      description: The date the issued device is registered ISODateTime|ISODateTime (https://www.iso20022.org/standardsrepository/type/ISODateTime)|Standard|ISO20022 BM ()
    partyidentificationtypevalues:
      enum:
        - Taxidentificationnumber
        - Nationalregistrationnumber
        - Registrationauthorityidentification
        - LEI(LegalEntityIdentifier)
        - Alienregistrationnumber
        - Passportnumber
        - Taxexemptidentificationnumber
        - Corporateidentification
        - Driverlicensenumber
        - Foreigninvestmentidentitynumber
        - Socialsecuritynumber
        - Identitycardnumber
        - Concat
        - Nationalregistrationidentificationnumber
      type: string
      description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC.\r\n"
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    partylegalstructuretypevalues:
      enum:
        - Individual
        - CommunityInterestCompany
        - CharitableIncorporatedOrganisation
        - Co-Operative
        - Charity
        - GeneralPartnership
        - LimitedLiabilityPartnership
        - ScottishLimitedPartnership
        - LimitedPartnership
        - PrivateLimitedCompany
        - PublicLimitedCompany
        - Sole(SoleTrader)
      type: string
      description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - \r\n"
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
        PartyLegalStructureType:
          $ref: '#/components/schemas/partylegalstructuretypevalues'
      description: ''
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: ''
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: The refresh period for the issued device DateTimePeriod|DateTimePeriod (https://www.iso20022.org/standardsrepository/type/DateTimePeriod)|Standard|ISO20022 BM ()
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: "Reference to the holder of the issued device ||\r\n|"
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: ''
    tokenrequest:
      type: object
      properties:
        TokenRequestIdentification:
          $ref: '#/components/schemas/identifier'
        TokenRequestReason:
          $ref: '#/components/schemas/text'
      description: ''
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: ''
    accountstatustypevalues:
      enum:
        - Enabled
        - Disabled
        - Deleted
        - Proforma
        - Pending
      type: string
      description: ">\r\n* `Enabled` - Account can be used for its intended purpose.\r\n* `Disabled` - Account cannot be used for its intended purpose, either temporarily or permanently.\r\n* `Deleted` - Account cannot be used any longer.\r\n* `Proforma` - Account is temporary and can be partially used for its intended purpose. The account will be fully available for use when the account servicer has received all relevant documents.\r\n* `Pending` - Account change is pending approval.\r\n"
    accountstatus:
      type: object
      properties:
        AccountStatus:
          $ref: '#/components/schemas/status'
        AccountStatusType:
          $ref: '#/components/schemas/accountstatustypevalues'
      description: "A characteristic of account which refers to the LifecycleStatus of account like opened, closed, blocked, etc.\n\nSpecifies the current state of an account. (ISO20022)"
    accountidentificationtypevalues:
      enum:
        - BBAN
        - IBAN
        - UPIC
        - AccountNumber
        - PAN
        - Paym
        - Wallet
      type: string
      description: ">\r\n* `BBAN` - Basic Bank Account Number (BBAN) - identifier used nationally by financial institutions, ie, in individual countries, generally as part of a National Account Numbering Scheme(s), to uniquely identify the account of a customer. (ISO20022)\n\n.\r\n* `IBAN` - International Bank Account Number (IBAN) - identifier used internationally by financial institutions to uniquely identify the account of a customer. Further specifications of the format and content of the IBAN can be found in the standard ISO 13616 \"Banking and related financial services - International Bank Account Number (IBAN)\" version 1997-10-01, or later revisions. (ISO20022)\n\nAn identifier used internationally by financial institutions to uniquely identify the account of a customer at a financial institution, as described in the latest edition of the international standard ISO 13616. \"Banking and related financial services - International Bank Account Number (IBAN)\". (OBExternalAccountIdentification4Code)\r\n* `UPIC` - Universal Payment Identification Code (UPIC) - identifier used by the New York Clearing House to mask confidential data, such as bank accounts and bank routing numbers. UPIC numbers remain with business customers, regardless of banking relationship changes. (ISO20022)\r\n* `AccountNumber` - String of characters (mainly numbers) used to identify an account.(ISO20022)\n\nSort Code and Account Number - identifier scheme used in the UK by financial institutions to identify the account of a customer. The identifier is the concatenation of the 6 digit UK sort code and 8 digit account number. (OBExternalAccountIdentification4Code)\nThe regular expression for this identifier is: ^[0-9]{6}[0-9]{8}$\r\n* `PAN` - Primary Account Number - identifier scheme used to identify a card account. (OBExternalAccountIdentification4Code)\r\n* `Paym` - Paym Scheme to make payments via mobile (OBExternalAccountIdentification4Code)\r\n* `Wallet` - A primary and unique account identifier used to identify a wallet.\nAn ASPSP must document on their developer portal, the payment methods that supports this account identifier.(OBExternalAccountIdentification4Code)\r\n"
    accountidentification:
      type: object
      properties:
        AccountIdentificationType:
          $ref: '#/components/schemas/accountidentificationtypevalues'
        AccountIdentification:
          $ref: '#/components/schemas/identifier'
      description: The identifier of account like Account Number.
    accountdatetypevalues:
      enum:
        - OpeningDate
        - ClosingDate
        - BlockingDate
        - MaturityDate
        - LiveDate
      type: string
      description: ">\r\n* `OpeningDate` - Date on which the account and related basic services are effectively operational for the account owner. (ISO20022)\r\n* `ClosingDate` - Date on which the account and related services cease effectively to be operational for the account owner. (ISO20022)\r\n* `BlockingDate` - \r\n* `MaturityDate` - Maturity date for the account.\r\n* `LiveDate` - \r\n"
    accountdate:
      type: object
      properties:
        AccountDateType:
          $ref: '#/components/schemas/accountdatetypevalues'
        AccountDate:
          $ref: '#/components/schemas/datetime'
      description: 'A characteristic of account which refers to LifecycleDate of account (e.g., ClosingDate, OpeningDate, LiveDate, etc.) '
    accounttypevalues:
      enum:
        - DebitAccount
        - CreditAccount
        - VostroAcount
        - NostroAccount
        - PaymentAccount
        - SettlementAccount
        - SavingAccount
        - CurrentAccount
        - CashAccount
        - LoanAccount
      type: string
      description: ">\r\n* `DebitAccount` - \r\n* `CreditAccount` - \r\n* `VostroAcount` - In correspondent banking, an account held by one bank on behalf of another bank (the customer bank); the customer bank regards this account as its nostro account. (ECB)\r\n* `NostroAccount` - In correspondent banking, an account held by a customer bank on the books of another bank acting as a service provider. The other bank regards this account as a loro account. (ECB)\r\n* `PaymentAccount` - \r\n* `SettlementAccount` - A specific purpose account used to post debit and credit entries as a result of the transaction. (ISO20022)\n\nAccount which is used for settlement. (ISO20022)\r\n* `SavingAccount` - \r\n* `CurrentAccount` - \r\n* `CashAccount` - \r\n* `LoanAccount` - \r\n"
    accounttype:
      type: object
      properties:
        AccountType:
          $ref: '#/components/schemas/accounttypevalues'
        AccountTypeName:
          $ref: '#/components/schemas/name'
      description: 'Specifies the category of account like payment account, loan account, cash account, securities account, etc. '
    currencycode:
      type: object
      properties:
        Currencycode:
          type: string
          description: "A code identifying a currency according to ISO-4217.\nA currency is a system of money in general use in a particular country.\n\nCode allocated to a currency, by a maintenance agency, under an international identification scheme as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\". Valid currency codes are registered with the ISO 4217 Maintenance Agency, and consist of three contiguous letters. (ISO20022)\n\n"
          format: datatype
      description: ''
    amounttypevalues:
      enum:
        - Principal
        - Actual
        - Estimated
        - Maximum
        - Default
        - Replacement
        - Incremental
        - Decremental
        - Reserved
        - Available
        - Used
      type: string
      description: ">\r\n* `Principal` - \r\n* `Actual` - Actual amount.\r\n* `Estimated` - Estimated amount (the final amount could be above or below).\r\n* `Maximum` - Maximum amount (the final amount must be less or equal).\r\n* `Default` - Default amount.\r\n* `Replacement` - Replacement amount.\r\n* `Incremental` - Incremental amount for reservation.\r\n* `Decremental` - Decremental amount for reservation.\r\n* `Reserved` - Reserved or updated reserved amount for reservation.\r\n* `Available` - \r\n* `Used` - \r\n"
    amount:
      type: object
      properties:
        AmountValue:
          $ref: '#/components/schemas/value'
        AmountCurrency:
          $ref: '#/components/schemas/currencycode'
        DecimalPointPosition:
          type: string
          description: "Decimal point position starts calulating from the right\n"
          format: string
        AmountType:
          $ref: '#/components/schemas/amounttypevalues'
      description: ''
    balancetypevalues:
      enum:
        - Openingbalance
        - Closingbalance
        - Currentbalance
        - Availablebalance
        - Ledgerbalance
        - Reservebalance
        - Freebalance
        - Principalbalance
      type: string
      description: ">\r\n* `Openingbalance` - Book balance of the account at the beginning of the account servicer's business day. It always equals the closing book balance from the previous business day. Note: the available balance at the beginning of the account servicer's business day may be different from the closing book balance from the previous business day. (ISO20022)\r\n* `Closingbalance` - Balance of the account at the end of the account servicer's business day. It is the sum of the opening balance at the beginning of the day and all entries booked to the account during the account servicer's business day. (ISO20022)\r\n* `Currentbalance` - Balance of the account at a precise moment in time. (ISO20022)\r\n* `Availablebalance` - Balance of money or securities that is at the disposal of the account owner on the date specified. (ISO20022)\r\n* `Ledgerbalance` - Ledger balance refers to posted transactions (e.g. limit authorisation amount - posted transactions). (ISO20022)\r\n* `Reservebalance` - \r\n* `Freebalance` - \r\n* `Principalbalance` - \r\n"
    debitcreditindicatortvalues:
      enum:
        - Debit
        - Credit
      type: string
      description: ">\r\n* `Debit` - Transaction is a debt entry\r\n* `Credit` - Transaction is a credit entry\r\n"
    accountbalance:
      type: object
      properties:
        BalanceAmount:
          $ref: '#/components/schemas/amount'
        BalanceType:
          $ref: '#/components/schemas/balancetypevalues'
        BalanceDate:
          $ref: '#/components/schemas/datetime'
        BalanceIndicator:
          $ref: '#/components/schemas/debitcreditindicatortvalues'
      description: "The state of the obligations managed on the account, the result of all entries on the account.\n\nNumerical representation of the net increases and decreases in an account at a specific point in time. (ISO20022)\n\nBanking: Amount available in an account for withdrawal or use.\nRead more: http://www.businessdictionary.com/definition/balance.html\n\nBookkeeping: Difference between the debit and credit sides of an account.\nRead more: http://www.businessdictionary.com/definition/balance.html"
    currencytypevalues:
      enum:
        - BaseCurrency
        - ReportingCurrency
        - SecondaryCurrency
        - TransferCurrency
      type: string
      description: ">\r\n* `BaseCurrency` - Base currency of the account. (ISO20022)\n\r\n* `ReportingCurrency` - Currency used to calculate and report the balance and related entries of an account. (ISO20022)\n\r\n* `SecondaryCurrency` - \r\n* `TransferCurrency` - Currency of the amount to be transferred which may be different from the currency of the debtor's account. (ISO20022)\r\n"
    accountcurrency:
      type: object
      properties:
        AccountCurrencyType:
          $ref: '#/components/schemas/currencytypevalues'
        AccountCurrency:
          $ref: '#/components/schemas/currencycode'
      description: ''
    account:
      type: object
      properties:
        AccountStatus:
          $ref: '#/components/schemas/accountstatus'
        AccountIdentification:
          $ref: '#/components/schemas/accountidentification'
        AccountDate:
          $ref: '#/components/schemas/accountdate'
        AccountType:
          $ref: '#/components/schemas/accounttype'
        AccountPurpose:
          $ref: '#/components/schemas/text'
        AccountBalance:
          $ref: '#/components/schemas/accountbalance'
        AccountCurrency:
          $ref: '#/components/schemas/accountcurrency'
        AccountDescription:
          $ref: '#/components/schemas/text'
        AccountName:
          $ref: '#/components/schemas/name'
      description: ''
    paymentcardtypevalues:
      enum:
        - Creditcard
        - Debitcard
      type: string
      description: ">\r\n* `Creditcard` - \r\n* `Debitcard` - \r\n"
    paymentcard:
      type: object
      properties:
        CardType:
          $ref: '#/components/schemas/paymentcardtypevalues'
        CardNumber:
          type: string
          description: Number embossed on a card that links the card to the account owner and account servicer (sometimes called personal account number or PAN). (ISO20022)
          format: number
        CardStartDate:
          $ref: '#/components/schemas/datetime'
        CardExpiryDate:
          $ref: '#/components/schemas/datetime'
        CardSecurityCode:
          type: string
          description: 'Security code written on the card, sometimes called card security code (CSC). (ISO20022)'
          format: number
        CardVerificationValue:
          type: string
          description: ''
          format: number
        BankIdentificationNumber:
          $ref: '#/components/schemas/identifier'
      description: ''
    tokenidentificationandverificationmethodtypevalues:
      enum:
        - AssertedAuthentication
        - RiskBasedNoninteractiveAuthentication
        - InteractiveAuthentication
      type: string
      description: ">\r\n* `AssertedAuthentication` - \r\n* `RiskBasedNoninteractiveAuthentication` - \r\n* `InteractiveAuthentication` - \r\n"
    tokenstatustypevalues:
      enum:
        - Active
        - Expired
        - Cancelled
        - Generated
        - Stored
        - Mapped
        - Routed
        - Suspension
        - Updated
      type: string
      description: ">\r\n* `Active` - \r\n* `Expired` - \r\n* `Cancelled` - \r\n* `Generated` - \r\n* `Stored` - \r\n* `Mapped` - \r\n* `Routed` - \r\n* `Suspension` - \r\n* `Updated` - \r\n"
    devicetypevalues:
      enum:
        - Securecardreader
        - Nonsecurecardreader
        - Mobile
        - Tablet
        - Personalcomputer
        - Othernational
        - Otherprivate
        - Wearable
        - Vehicle
        - Embedded
        - Keyfob
        - Jewellery
        - Sticker
        - Gamingdevice
        - Watch
        - Unknown
        - BiometricDevice
      type: string
      description: The type of device allocated (used to reference assignment type) CustomerDeviceTypeCode|CustomerDeviceTypeCode (https://www.iso20022.org/standardsrepository/type/CustomerDeviceTypeCode)|Standard|ISO20022 BM ()
    geographicalareatypevalues:
      enum:
        - Continent
        - Country
        - State
        - District
        - Province
        - Town
        - City
        - Region
      type: string
      description: ">\r\n* `Continent` - \r\n* `Country` - \r\n* `State` - \r\n* `District` - \r\n* `Province` - \r\n* `Town` - \r\n* `City` - \r\n* `Region` - \r\n"
    addresstypevalues:
      enum:
        - PostalAddress
        - GeolocationAddress
        - LatitudeAddress
        - LongitudeAddress
        - ElectronicAddress
      type: string
      description: ">\r\n* `PostalAddress` - \r\n* `GeolocationAddress` - \r\n* `LatitudeAddress` - \r\n* `LongitudeAddress` - \r\n* `ElectronicAddress` - \r\n"
    address:
      type: object
      properties:
        AddressType:
          $ref: '#/components/schemas/addresstypevalues'
        LocationReference:
          $ref: '#/components/schemas/location'
      description: ''
    location:
      type: object
      properties:
        LocationDescription:
          $ref: '#/components/schemas/text'
        LocationDateTime:
          $ref: '#/components/schemas/datetime'
        LocationStatus:
          $ref: '#/components/schemas/status'
        LocationType:
          $ref: '#/components/schemas/geographicalareatypevalues'
        LocationZoningType:
          $ref: '#/components/schemas/text'
        LocationNeighborhoodType:
          $ref: '#/components/schemas/text'
        LocationConstructionType:
          $ref: '#/components/schemas/text'
        LocationOccupancyType:
          $ref: '#/components/schemas/text'
        LocationValue:
          $ref: '#/components/schemas/value'
        LocationCapacity:
          $ref: '#/components/schemas/text'
        LocationIdentification:
          $ref: '#/components/schemas/identifier'
        LocationAddress:
          $ref: '#/components/schemas/address'
        LocationName:
          $ref: '#/components/schemas/name'
        LocationTimeZone:
          $ref: '#/components/schemas/text'
      description: Geographical location of the device.
    country:
      type: object
      properties:
        NationalRegulatoryAuthority:
          $ref: '#/components/schemas/involvedparty'
      description: Country of the location.
    deviceoperatingsystemtypevalues:
      enum:
        - Android
        - Ios
        - Windows
        - Blackberry
        - Tizen
        - Othernational
        - Otherprivate
      type: string
      description: ">\r\n* `Android` - Android operating system.\r\n* `Ios` - iOS operating system.\r\n* `Windows` - Windows operating system.\r\n* `Blackberry` - Blackberry operating system.\r\n* `Tizen` - Tizen operating system.\r\n* `Othernational` - Other nationally defined code.\r\n* `Otherprivate` - Other privately defined code.\r\n"
    deviceidentificationtypevalues:
      enum:
        - IMEI
        - Serialnumber
        - Secureelementidentification
        - Othernational
        - Otherprivate
      type: string
      description: ">\r\n* `IMEI` - International Mobile Equipment Identity.\r\n* `Serialnumber` - Device serial number.\r\n* `Secureelementidentification` - Secure element ID.\r\n* `Othernational` - Other nationally assigned code.\r\n* `Otherprivate` - Other privately assigned code.\r\n"
    device:
      type: object
      properties:
        DeviceIdentification:
          $ref: '#/components/schemas/identifier'
        DeviceType:
          $ref: '#/components/schemas/devicetypevalues'
        DeviceProperty:
          $ref: '#/components/schemas/text'
        DeviceElement:
          $ref: '#/components/schemas/text'
        DeviceStatus:
          $ref: '#/components/schemas/status'
        DeviceVersion:
          type: string
          description: ''
          format: number
        DeviceDateTime:
          $ref: '#/components/schemas/datetime'
        DeviceDescription:
          $ref: '#/components/schemas/text'
        DeviceName:
          $ref: '#/components/schemas/name'
        DeviceLanguage:
          $ref: '#/components/schemas/text'
        DevicePhoneNumber:
          $ref: '#/components/schemas/text'
        DeviceLocation:
          $ref: '#/components/schemas/location'
        DeviceManufacturer:
          $ref: '#/components/schemas/text'
        DeviceCountry:
          $ref: '#/components/schemas/country'
        DeviceAddress:
          $ref: '#/components/schemas/address'
        DeviceAddressType:
          $ref: '#/components/schemas/addresstypevalues'
        DeviceOperatingSystem:
          $ref: '#/components/schemas/deviceoperatingsystemtypevalues'
        DeviceIdentificationType:
          $ref: '#/components/schemas/deviceidentificationtypevalues'
      description: ''
    TokenAssignment:
      type: object
      properties:
        TokenIdentificationCode:
          $ref: '#/components/schemas/identifier'
        TokenServiceProviderReference:
          $ref: '#/components/schemas/involvedparty'
        RequestorReference:
          $ref: '#/components/schemas/involvedparty'
        RequestReference:
          $ref: '#/components/schemas/tokenrequest'
        RequestReasonDescription:
          $ref: '#/components/schemas/text'
        PaymentAccountReference:
          $ref: '#/components/schemas/account'
        CardReference:
          $ref: '#/components/schemas/paymentcard'
        IdentificationandVerificationMethodType:
          $ref: '#/components/schemas/tokenidentificationandverificationmethodtypevalues'
        TokenStatus:
          $ref: '#/components/schemas/tokenstatustypevalues'
        TokenStatusDate:
          $ref: '#/components/schemas/datetime'
        TokenDeviceReference:
          $ref: '#/components/schemas/device'
      description: ''
    log:
      type: object
      properties:
        LogType:
          type: string
          description: ''
          format: string
        LogPeriod:
          type: string
          description: ''
          format: string
        LogDate:
          type: string
          description: Key dates associated with the log (e.g. start time).
          format: string
        LogIdentification:
          type: string
          description: ''
          format: string
      description: The timing and frequency of access/use - includes errors for fraud detection
    QuestionAssignment:
      type: object
      properties:
        FormatRules:
          $ref: '#/components/schemas/text'
        RecentValues:
          $ref: '#/components/schemas/value'
        RequestText:
          $ref: '#/components/schemas/text'
        ResponseText:
          $ref: '#/components/schemas/text'
        UsageLog:
          $ref: '#/components/schemas/log'
      description: ''
    PasswordAssignment:
      type: object
      properties:
        FormatRules:
          $ref: '#/components/schemas/text'
        RecentValues:
          $ref: '#/components/schemas/value'
        PasswordValue:
          $ref: '#/components/schemas/value'
        UsageLog:
          $ref: '#/components/schemas/log'
      description: ''
    feature:
      type: object
      properties:
        FeatureType:
          $ref: '#/components/schemas/text'
        FeatureIdentification:
          $ref: '#/components/schemas/identifier'
        FeatureName:
          $ref: '#/components/schemas/name'
        FeatureLifecycleStatus:
          $ref: '#/components/schemas/status'
        FeatureDescription:
          $ref: '#/components/schemas/text'
      description: The reader configuration or set-up details as appropriate
    ReaderAssignment:
      type: object
      properties:
        IssuedReaderDeviceSerialNumber:
          $ref: '#/components/schemas/identifier'
        VersionNumber:
          type: string
          description: Operating system version for smart devices
          format: number
        IssueLocation:
          $ref: '#/components/schemas/location'
        IssuedDeviceConfiguration:
          $ref: '#/components/schemas/feature'
        UsageLog:
          $ref: '#/components/schemas/log'
      description: ''
    ChequesAssignment:
      type: object
      properties:
        IssuedDeviceTemplateValues:
          $ref: '#/components/schemas/text'
        IssueLocation:
          $ref: '#/components/schemas/location'
        SequenceNumber:
          $ref: '#/components/schemas/identifier'
      description: ''
    BiometricAssignment:
      type: object
      properties:
        BiometricType:
          $ref: '#/components/schemas/text'
        BiometricRegisteredDetail:
          $ref: '#/components/schemas/text'
      description: ''
    devicecustomizationtypevalues:
      enum:
        - CardDesign
      type: string
      description: ">\r\n* `CardDesign` - \r\n"
    DeviceAssignment:
      type: object
      properties:
        IssuedDeviceSerialNumber:
          $ref: '#/components/schemas/deviceidentificationtypevalues'
        VersionNumber:
          type: string
          description: Operating system version for smart devices
          format: number
        CustomerCustomizationReference:
          $ref: '#/components/schemas/devicecustomizationtypevalues'
        Deliverymethod:
          $ref: '#/components/schemas/text'
        IssueLocation:
          $ref: '#/components/schemas/text'
        IssuedDeviceConfiguration:
          $ref: '#/components/schemas/feature'
        UsageLog:
          $ref: '#/components/schemas/log'
      description: ''
    productagreementtypevalues:
      enum:
        - CurrentAccountAgreement
        - SavingsAccountAgreement
        - BrokeredProductAgreement
        - ConsumerLoanAgreement
        - MortgageLoanAgreement
        - DirectDebitServiceAgreement
      type: string
      description: ">\r\n* `CurrentAccountAgreement` - \r\n* `SavingsAccountAgreement` - \r\n* `BrokeredProductAgreement` - \r\n* `ConsumerLoanAgreement` - \r\n* `MortgageLoanAgreement` - \r\n* `DirectDebitServiceAgreement` - \r\n"
    productidentificationtypevalues:
      enum:
        - ISINCode
        - PackageCode
        - Buyersitemnumber
        - Commercialdescriptioncodename
        - EAN
        - Harmonizedtariffcodename
        - Manufacturersitemnumber
        - Modelnumber
        - Partnumber
        - Quotacategory
        - Stylenumber
        - Suppliersitemnumber
        - Universalproductcode
      type: string
      description: ">\r\n* `ISINCode` - \r\n* `PackageCode` - \r\n* `Buyersitemnumber` - Product identifier assigned by the buyer.\r\n* `Commercialdescriptioncodename` - A code to identify a product based on applicable commercial conditions.\r\n* `EAN` - The unique EAN (European Article Number) code.\r\n* `Harmonizedtariffcodename` - Classification of goods as developed by the Customs Cooperation council.\r\n* `Manufacturersitemnumber` - Product identifier as assigned by the manufacturer.\r\n* `Modelnumber` - Reference number assigned by the manufacturer to differentiate variations in similar products in a class or group.\r\n* `Partnumber` - Reference assigned by the manufacturer to a product part.\r\n* `Quotacategory` - Product identifier used by the retail industry.\r\n* `Stylenumber` - Identification of the style of a product.\r\n* `Suppliersitemnumber` - Number assigned to an article by the supplier of that article.\r\n* `Universalproductcode` - Number assigned to a manufacturer's product by the Product Code Council.\r\n"
    productidentification:
      type: object
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/identifier'
        ProductIdentificationType:
          $ref: '#/components/schemas/productidentificationtypevalues'
      description: The identifier of product e.g. ISIN Code.
    bankingproducttypevalues:
      enum:
        - LoanProduct
        - CurrentAccountProduct
        - SavingAccountProduct
        - BrokeredProduct
        - TermDepositProduct
      type: string
      description: ">\r\n* `LoanProduct` - \r\n* `CurrentAccountProduct` - \r\n* `SavingAccountProduct` - \r\n* `BrokeredProduct` - \r\n* `TermDepositProduct` - \r\n"
    productlifecyclestatustypevalues:
      enum:
        - Initiated
        - Announced
        - Sold
        - Obsolete
        - Active
      type: string
      description: ">\r\n* `Initiated` - \r\n* `Announced` - \r\n* `Sold` - \r\n* `Obsolete` - \r\n* `Active` - \r\n"
    productlifecyclestatus:
      type: object
      properties:
        ProductLifecycleStatus:
          $ref: '#/components/schemas/status'
        ProductLifecycleStatusType:
          $ref: '#/components/schemas/productlifecyclestatustypevalues'
      description: 'Refers to the lifecycle of a product (e.g., initiated, announced, active, obsolete, withdrawn).'
    bankingproduct:
      type: object
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/productidentification'
        ProductType:
          $ref: '#/components/schemas/bankingproducttypevalues'
        ProductLifecycleStatus:
          $ref: '#/components/schemas/productlifecyclestatus'
        ProductPriority:
          $ref: '#/components/schemas/text'
        ProductDescription:
          $ref: '#/components/schemas/text'
        ProductVersion:
          $ref: '#/components/schemas/text'
        ProductName:
          $ref: '#/components/schemas/name'
      description: ''
    date:
      type: object
      properties:
        DateContent:
          type: string
          description: ''
          format: string
      description: Date on which the agreement was signed by all parties. (ISO20022)
    agreementtypevalues:
      enum:
        - CustomerAgreement
        - SupplierAgreement
        - BrokerAgreement
        - SalesAgreement
        - PurchaseAgreement
        - MaintenanceAgreement
        - ProductAgreement
        - ProductSalesAgreement
        - ResourceAgreement
      type: string
      description: ">\r\n* `CustomerAgreement` - \r\n* `SupplierAgreement` - \r\n* `BrokerAgreement` - \r\n* `SalesAgreement` - \r\n* `PurchaseAgreement` - \r\n* `MaintenanceAgreement` - \r\n* `ProductAgreement` - \r\n* `ProductSalesAgreement` - \r\n* `ResourceAgreement` - \r\n"
    agreementlifecyclestatustypevalues:
      enum:
        - Offered
        - Confirmed
        - Completed
        - Signed
        - Terminated
        - Rejected
      type: string
      description: ">\r\n* `Offered` - \r\n* `Confirmed` - \r\n* `Completed` - \r\n* `Signed` - \r\n* `Terminated` - \r\n* `Rejected` - \r\n"
    agreementlifecyclestatus:
      type: object
      properties:
        AgreementLifecycleStatus:
          $ref: '#/components/schemas/status'
        AgreementLifecycleStatusType:
          $ref: '#/components/schemas/agreementlifecyclestatustypevalues'
      description: 'A characteristic of agreement which refers to the LifecycleStatus of agreement (e.g., potential, offered, confirmed, completed, signed, terminated).'
    agreement:
      type: object
      properties:
        AgreementSignedDate:
          $ref: '#/components/schemas/date'
        AgreementType:
          $ref: '#/components/schemas/agreementtypevalues'
        AgreementValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        AgreementVersion:
          $ref: '#/components/schemas/text'
        AgreementStatus:
          $ref: '#/components/schemas/agreementlifecyclestatus'
        AgreementSubjectMatter:
          $ref: '#/components/schemas/text'
        AgreementIdentification:
          $ref: '#/components/schemas/identifier'
        AgreementDate:
          $ref: '#/components/schemas/datetime'
        AgreementDescription:
          $ref: '#/components/schemas/text'
      description: ''
    productagreement:
      type: object
      properties:
        Type:
          $ref: '#/components/schemas/productagreementtypevalues'
        ProductReference:
          $ref: '#/components/schemas/bankingproduct'
        AgreementReference:
          $ref: '#/components/schemas/agreement'
      description: "Linked products and services, there can be many ||\r\n|"
    deviceaccessarrangement:
      type: object
      properties:
        DeviceAccessArrangement:
          type: string
          description: An arrangement that allows or restricts the access to a device through a specific access point
          format: class
      description: "Access/usage entitlements, can be by product instance (e.g. value, location, frequency and duration access constraints) ||\r\n|"
    IssuedDeviceAllocation:
      type: object
      properties:
        CustomerReference:
          $ref: '#/components/schemas/involvedparty'
        ProductInstanceReference:
          $ref: '#/components/schemas/productagreement'
        IssuedDeviceType:
          $ref: '#/components/schemas/devicetypevalues'
        AssociatedPermissions:
          $ref: '#/components/schemas/deviceaccessarrangement'
        IssueDate:
          $ref: '#/components/schemas/datetime'
        ValidFrom-ToDate:
          $ref: '#/components/schemas/datetimeperiod'
      description: "Maintain an inventory or holding of some resource and make assignments/allocations as requested  within Issued Device Administration. \nExample: Track the inventory and administer the distribution of central cash holdings throughout the branch & ATM network."
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    IssuedDeviceAllocation:
      description: IssuedDeviceAllocation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IssuedDeviceAllocation'
    PasswordAssignment:
      description: PasswordAssignment
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PasswordAssignment'
    QuestionAssignment:
      description: QuestionAssignment
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/QuestionAssignment'
    DeviceAssignment:
      description: DeviceAssignment
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeviceAssignment'
    BiometricAssignment:
      description: BiometricAssignment
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BiometricAssignment'
    ReaderAssignment:
      description: ReaderAssignment
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ReaderAssignment'
    ChequesAssignment:
      description: ChequesAssignment
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ChequesAssignment'
    TokenAssignment:
      description: TokenAssignment
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TokenAssignment'
  parameters:
    issueddeviceadministrationid:
      name: issueddeviceadministrationid
      in: path
      required: true
      style: simple
      schema:
        type: string
    passwordassignmentid:
      name: passwordassignmentid
      in: path
      required: true
      style: simple
      schema:
        type: string
    questionassignmentid:
      name: questionassignmentid
      in: path
      required: true
      style: simple
      schema:
        type: string
    deviceassignmentid:
      name: deviceassignmentid
      in: path
      required: true
      style: simple
      schema:
        type: string
    biometricassignmentid:
      name: biometricassignmentid
      in: path
      required: true
      style: simple
      schema:
        type: string
    readerassignmentid:
      name: readerassignmentid
      in: path
      required: true
      style: simple
      schema:
        type: string
    chequesassignmentid:
      name: chequesassignmentid
      in: path
      required: true
      style: simple
      schema:
        type: string
    tokenassignmentid:
      name: tokenassignmentid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    IssuedDeviceAllocation:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IssuedDeviceAllocation'
      required: true
    PasswordAssignment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PasswordAssignment'
      required: true
    QuestionAssignment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/QuestionAssignment'
      required: true
    DeviceAssignment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeviceAssignment'
      required: true
    BiometricAssignment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BiometricAssignment'
      required: true
    ReaderAssignment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ReaderAssignment'
      required: true
    ChequesAssignment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ChequesAssignment'
      required: true
    TokenAssignment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TokenAssignment'
      required: true