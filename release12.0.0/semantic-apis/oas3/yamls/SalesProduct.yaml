openapi: 3.0.1
info:
  title: Sales Product
  description: 'A representation of a product as sold to a customer, covering the operational fulfillment requirements'
  contact:
    name: BIAN
    url: https://bian.org
  version: 12.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/SalesProduct/12.0.0
paths:
  /SalesProduct/Evaluate:
    post:
      tags:
        - CR - ProductandServiceAgreement
      summary: EvCR Set-up the operational terms agreement for a sales product instance
      description: EvCR Set-up the operational terms agreement for a sales product instance
      operationId: Evaluate
      requestBody:
        $ref: '#/components/requestBodies/ProductandServiceAgreement'
      responses:
        '200':
          $ref: '#/components/responses/ProductandServiceAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SalesProduct/{salesproductid}/Update':
    put:
      tags:
        - CR - ProductandServiceAgreement
      summary: UpCR Update sales product operational terms agreement
      description: UpCR Update sales product operational terms agreement
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/salesproductid'
      requestBody:
        $ref: '#/components/requestBodies/ProductandServiceAgreement'
      responses:
        '200':
          $ref: '#/components/responses/ProductandServiceAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SalesProduct/{salesproductid}/Control':
    put:
      tags:
        - CR - ProductandServiceAgreement
      summary: CoCR Control the execution/application of the operational terms
      description: CoCR Control the execution/application of the operational terms
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/salesproductid'
      requestBody:
        $ref: '#/components/requestBodies/ProductandServiceAgreement'
      responses:
        '200':
          $ref: '#/components/responses/ProductandServiceAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SalesProduct/{salesproductid}/Retrieve':
    get:
      tags:
        - CR - ProductandServiceAgreement
      summary: ReCR Retrieve details about the sales product operational terms agreement
      description: ReCR Retrieve details about the sales product operational terms agreement
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/salesproductid'
      responses:
        '200':
          $ref: '#/components/responses/ProductandServiceAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SalesProduct/{salesproductid}/OperationalTerm/Evaluate':
    post:
      tags:
        - BQ - OperationalTerm
      summary: EvBQ Set up specific operational arrangements under the agreement
      description: EvBQ Set up specific operational arrangements under the agreement
      operationId: EvaluateOperationalTerm
      parameters:
        - $ref: '#/components/parameters/salesproductid'
      requestBody:
        $ref: '#/components/requestBodies/OperationalTerm'
      responses:
        '200':
          $ref: '#/components/responses/OperationalTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SalesProduct/{salesproductid}/OperationalTerm/{operationaltermid}/Update':
    put:
      tags:
        - BQ - OperationalTerm
      summary: UpBQ Update details of an operational term arrangement
      description: UpBQ Update details of an operational term arrangement
      operationId: UpdateOperationalTerm
      parameters:
        - $ref: '#/components/parameters/salesproductid'
        - $ref: '#/components/parameters/operationaltermid'
      requestBody:
        $ref: '#/components/requestBodies/OperationalTerm'
      responses:
        '200':
          $ref: '#/components/responses/OperationalTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SalesProduct/{salesproductid}/OperationalTerm/{operationaltermid}/Exchange':
    put:
      tags:
        - BQ - OperationalTerm
      summary: 'EcBQ Accept, reject etc an operational term arrangement'
      description: 'EcBQ Accept, reject etc an operational term arrangement'
      operationId: ExchangeOperationalTerm
      parameters:
        - $ref: '#/components/parameters/salesproductid'
        - $ref: '#/components/parameters/operationaltermid'
      requestBody:
        $ref: '#/components/requestBodies/OperationalTerm'
      responses:
        '200':
          $ref: '#/components/responses/OperationalTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SalesProduct/{salesproductid}/OperationalTerm/{operationaltermid}/Grant':
    put:
      tags:
        - BQ - OperationalTerm
      summary: GrBQ Provide a permission grant associated with an operational term arrangement
      description: GrBQ Provide a permission grant associated with an operational term arrangement
      operationId: GrantOperationalTerm
      parameters:
        - $ref: '#/components/parameters/salesproductid'
        - $ref: '#/components/parameters/operationaltermid'
      requestBody:
        $ref: '#/components/requestBodies/OperationalTerm'
      responses:
        '200':
          $ref: '#/components/responses/OperationalTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SalesProduct/{salesproductid}/OperationalTerm/{operationaltermid}/Retrieve':
    get:
      tags:
        - BQ - OperationalTerm
      summary: ReBQ Retrieve details about an individual arrangement
      description: ReBQ Retrieve details about an individual arrangement
      operationId: RetrieveOperationalTerm
      parameters:
        - $ref: '#/components/parameters/salesproductid'
        - $ref: '#/components/parameters/operationaltermid'
      responses:
        '200':
          $ref: '#/components/responses/OperationalTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    arrangementtypevalues:
      enum:
        - SweepArrangement
        - WithdrawalArrangement
        - DepositArrangement
        - InterestArrangement
        - FeeArrangement
        - LienArrangement
        - InformationArrangement
        - PaymentArrangement
        - EntitlementArrangement
        - PeriodArrangement
        - CollateralArrangement
        - LimitArrangement
        - AccessArrangement
        - CardPaymentArrangement
        - StandingOrderArrangement
        - OverdraftArrangement
        - RepaymentArrangement
        - StatementArrangement
        - CreditTransferArrangement
        - ProductAndServiceArrangement
        - FactoringArrangement
        - RolloverArrangement
        - RestructuringArrangement
        - InsuranceArrangement
        - CollectionArrangement
        - UnderwritingArrangement
        - TerminationArrangement
        - MaturityArrangement
      type: string
      description: ">\r\n* `SweepArrangement` - An arrangement into which is promised for the set-up and execution of structured sweeps to and from the facility to a linked account.\r\n* `WithdrawalArrangement` - An arrangement into which is promised to deliver Withdraw Service  to take fund out of an account. \r\n* `DepositArrangement` - An arrangement into which is promised to deliver Deposit Service  to place funds into an account for safekeeping. \r\n* `InterestArrangement` - An arrangement into which is promised to apply a pricing element expressed in a percentage  to a principal amount.\r\n* `FeeArrangement` - An arrangement into which is promised to apply a charge for services rendered. \r\n* `LienArrangement` - An arrangement into which is promised for placing a lien or block on the account for a specified purpose, amount, and period. \r\n* `InformationArrangement` - An arrangement concerning the information the bank will provide about the agreement/account\r\n* `PaymentArrangement` - An arrangement into which is promised to deliver a specific payment service including regular payments, standing orders, direct debits and bill pay instructions. \r\n* `EntitlementArrangement` - Right or obligation linked to the involvement of a party in an agreement\r\n* `PeriodArrangement` - \r\n* `CollateralArrangement` - An arrangement into which is promised for handling the oversight of the allocation, valuation and administration of collateral associated with the facility. \r\n* `LimitArrangement` - An arrangement to limit something\ne.g., the number of transaction per week, the amount of money allowed to withdraw per week/day and etc. \r\n* `AccessArrangement` - An arrangement that allows or restricts the access to a service or product, channel or device through a specific access point\r\n* `CardPaymentArrangement` - An arrangement into which is promised to deliver Card payment Service to execute payment transactions through a payment card, including online payments. \r\n* `StandingOrderArrangement` - An arrangement into which is promised to deliver Standing Order Service to make regular transfers on given dates to a named beneﬁciary. \r\n* `OverdraftArrangement` - An arrangement into which is promised to deliver Overdraft Service  that allows fund transfer even if there is no provision on the account. \r\n* `RepaymentArrangement` - An arrangement into which is promised for paying back money previously borrowed from a lender. \r\n* `StatementArrangement` - An arrangement into which is promised to deliver a reporting service on payment transactions registered on an account. \r\n* `CreditTransferArrangement` - An arrangement into which is promised to allow a payer to transfer fund to a beneficiary. \r\n* `ProductAndServiceArrangement` - \r\n* `FactoringArrangement` - \r\n* `RolloverArrangement` - Arrangement stipulating the modalities for an automatic renewal of the agreement\n\ni.e. the replacement of the agreement with a new one without renewed negociation and witout explicit agreement of the customer \r\n* `RestructuringArrangement` - \r\n* `InsuranceArrangement` - \r\n* `CollectionArrangement` - An arrangement into which is promised to collect past-due debts from borrowers\r\n* `UnderwritingArrangement` - A contractual agreement between parties that commits the underwriter to assuming risk.\r\n* `TerminationArrangement` - \r\n* `MaturityArrangement` - \r\n"
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: 'Description of the term, including servicing and fulfillment details'
    productarrangement:
      type: object
      properties:
        ArrangementType:
          $ref: '#/components/schemas/arrangementtypevalues'
      description: The value of the parameter for this instance
    value:
      type: object
      properties:
        Value:
          type: string
          description: "Data or set of data \n\n- A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)"
          format: datatype
      description: ''
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: "Name by which a party is known and which is usually used to identify that party. (ISO20022)\n"
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    datetime:
      type: object
      properties:
        DateTimeContent:
          type: string
          description: ''
          format: string
        TimeZoneCode:
          type: string
          description: ''
          format: string
        DaylightSavingIndicator:
          type: string
          description: ''
          format: string
      description: Value of the date type ISODateTime|ISODateTime (https://www.iso20022.org/standardsrepository/type/ISODateTime)|Standard|ISO20022 BM ()
    partyidentificationtypevalues:
      enum:
        - Taxidentificationnumber
        - Nationalregistrationnumber
        - Registrationauthorityidentification
        - LEI(LegalEntityIdentifier)
        - Alienregistrationnumber
        - Passportnumber
        - Taxexemptidentificationnumber
        - Corporateidentification
        - Driverlicensenumber
        - Foreigninvestmentidentitynumber
        - Socialsecuritynumber
        - Identitycardnumber
        - Concat
        - Nationalregistrationidentificationnumber
      type: string
      description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC.\r\n"
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    partylegalstructuretypevalues:
      enum:
        - Individual
        - CommunityInterestCompany
        - CharitableIncorporatedOrganisation
        - Co-Operative
        - Charity
        - GeneralPartnership
        - LimitedLiabilityPartnership
        - ScottishLimitedPartnership
        - LimitedPartnership
        - PrivateLimitedCompany
        - PublicLimitedCompany
        - Sole(SoleTrader)
      type: string
      description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - \r\n"
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
        PartyLegalStructureType:
          $ref: '#/components/schemas/partylegalstructuretypevalues'
      description: ''
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: Entity that assigns and manages the identification.
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: Reference identifier linking the investment account to appropriate tax handling GenericIdentification|GenericIdentification (https://www.iso20022.org/standardsrepository/type/GenericIdentification)|Standard|ISO20022 BM ()
    transactiondatetypevalues:
      enum:
        - TransactionExecutedDate
        - TransactionFulfillmentDate
        - TransactionInitiatedDate
        - TransactionCancelledDate
        - TransactionApprovedDate
      type: string
      description: ">\r\n* `TransactionExecutedDate` - \r\n* `TransactionFulfillmentDate` - \r\n* `TransactionInitiatedDate` - \r\n* `TransactionCancelledDate` - \r\n* `TransactionApprovedDate` - \r\n"
    transactiondate:
      type: object
      properties:
        TransactionDate:
          $ref: '#/components/schemas/datetime'
        TransactionDateType:
          $ref: '#/components/schemas/transactiondatetypevalues'
      description: "The Date that the transaction has occurred or is planned to occur.\nA characteristic of transaction which refers to the LifecycleDate of transaction (e.g., initiated date, executed date, fulfillment date). "
    transactiontypevalues:
      enum:
        - FinancialTransaction
        - BusinessTransaction
        - BankingTransaction
        - AccountingTransaction
        - BookingTransaction
        - AllocationTransaction
        - DeliveryTransaction
        - ProductionTransaction
      type: string
      description: ">\r\n* `FinancialTransaction` - \r\n* `BusinessTransaction` - \r\n* `BankingTransaction` - \r\n* `AccountingTransaction` - \r\n* `BookingTransaction` - \r\n* `AllocationTransaction` - \r\n* `DeliveryTransaction` - \r\n* `ProductionTransaction` - \r\n"
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: ''
    transactionstatustypevalues:
      enum:
        - Initiated
        - Executed
        - Cancelled
        - Confirmed
        - Suspended
        - Pending
        - Completed
        - Notified
        - Booked
        - Rejected
      type: string
      description: ">\r\n* `Initiated` - \r\n* `Executed` - \r\n* `Cancelled` - \r\n* `Confirmed` - \r\n* `Suspended` - \r\n* `Pending` - \r\n* `Completed` - \r\n* `Notified` - \r\n* `Booked` - \r\n* `Rejected` - \r\n"
    transactionlifecyclestatus:
      type: object
      properties:
        TransactionLifecycleStatus:
          $ref: '#/components/schemas/status'
        TransactionLifecycleStatusType:
          $ref: '#/components/schemas/transactionstatustypevalues'
      description: 'A characteristic of transaction which refers to the LifecycleStatus of transaction (e.g., initiated, executed, confirmed, cancelled, etc.) '
    transaction:
      type: object
      properties:
        TransactionIdentification:
          $ref: '#/components/schemas/identifier'
        TransactionDate:
          $ref: '#/components/schemas/transactiondate'
        TransactionType:
          $ref: '#/components/schemas/transactiontypevalues'
        TransactionDescription:
          $ref: '#/components/schemas/text'
        TransactionStatus:
          $ref: '#/components/schemas/transactionlifecyclestatus'
        TransactionName:
          $ref: '#/components/schemas/name'
      description: Details of cash flows associated with fulfillment instances of the term (can be charges made to the customer or compensating transfers to the base product profit center)
    paymenttypevalues:
      enum:
        - Cashtransaction
        - Domesticpayment
        - Domestichighvaluepayment
        - Domesticprioritypayment
        - Crossborderpayment
        - Crossborderprioritypayment
        - Crossborderhighvaluepayment
        - Thirdcurrencypayment
        - Thirdcurrencyhighvaluepayment
        - Thirdcurrencyprioritypayment
        - Tradesettlementpayment
        - Foreignexchange
        - Equivalentamount
        - Loan
        - Loanrepayment
        - Securities
        - Lockbox
        - Dividend
        - Crossedcheque
        - Opencheque
        - Ordercheque
        - Circularcheque
        - Travellerscheques
        - Bankdraft
        - Cashletter
        - Documentarycredit
        - Billofexchange
        - Collection
        - Cashmanagementtransfer
        - Sweepaccount
        - Topaccount
        - Zerobalanceaccount
        - Standingfacilities
        - Swiftpayservicelevelcredit
        - Priorityservicelevelcredit
        - Standardservicelevelcredit
        - Liquiditytransfer
        - Advancepayment
        - Valuedateadjustment
        - Dvpgross
        - Dvpnet
        - Netting
        - Limitpayment
        - Backup
        - Expresspayment
        - Centralbankoperation
        - Clspayment
        - Eurodomesticpayment
        - Agriculturaltransfer
        - Alimonypayment
        - Balanceretail
        - Bonuspayment.
        - Brokeragefee
        - Capitalbuilding
        - Charitypayment
        - Childbenefit
        - Commercialcredit
        - Commission
        - Commoditytransfer
        - Costs
        - Copyright
        - Governmentpayment
        - Instalmenthirepurchaseagreement
        - Insurancepremium
        - Intracompanypayment
        - Interest
        - Licensefee
        - Metals
        - Pensionpayment
        - Purchasesaleofgoods
        - Refund
        - Rent
        - Royalties
        - Purchasesaleofservices
        - Salarypayment
        - Socialsecuritybenefit
        - Standingorder
        - Subscription
        - Treasurystatepayment
        - Unemploymentdisabilitybenefit
        - Valueaddedtaxpayment
        - Withholdingtax
        - Taxpayment
        - Miscellaneous
        - Overnightdeposit
        - Marginallending
        - Other
        - Upfront
        - Unwind
        - Principalexchange
      type: string
      description: ">\r\n* `Cashtransaction` - Transaction is a withdrawal/deposit of cash.\r\n* `Domesticpayment` - Payment has an origin and a destination in the same country, and is made in the currency of that country.\r\n* `Domestichighvaluepayment` - Transaction is a high value payment that has an origin and a destination in the same country and is made in the currency of that country.\r\n* `Domesticprioritypayment` - Transaction is a priority payment that has an origin and a destination in the same country and is made in the currency of that country.\r\n* `Crossborderpayment` - Payment has an origin in one country, a destination in another, and is made in the currency of either the origin or destination country.\r\n* `Crossborderprioritypayment` - Transaction is a priority payment that has an origin in one country and a destination in another and is made in the currency of either the origin or destination country.\r\n* `Crossborderhighvaluepayment` - Transaction is a high value payment that has an origin in one country and a destination in another country and is made in the currency of either the origin or destination country.\r\n* `Thirdcurrencypayment` - Transaction is a payment that is made in a third currency to the origin and destination countries. The origin and destination countries may be one and the same country.\r\n* `Thirdcurrencyhighvaluepayment` - Transaction is a high value payment that is made in a third currency to the origin and destination countries. The origin and destination countries may be one and the same country.\r\n* `Thirdcurrencyprioritypayment` - Payment is made in a third currency to the origin and destination countries. The origin and destination countries may be the same country.\r\n* `Tradesettlementpayment` - Transaction is the settlement of a trade, eg, a securities transaction.\r\n* `Foreignexchange` - Transaction isthe settlement of a foreign exchange deal.\r\n* `Equivalentamount` - Transaction is an equivalent amount relative to a currency conversion.\r\n* `Loan` - Transaction is the payment of a specific amount of money lent by a creditor/lender.\r\n* `Loanrepayment` - Transaction is an amount of money transferred in repayment of loan.\r\n* `Securities` - Transaction is a payment of securities.\r\n* `Lockbox` - Transaction is a payment(s) resulting from a lock box service.\r\n* `Dividend` - Transaction is a payment of dividends.\r\n* `Crossedcheque` - Transaction is a crossed cheque. A crossed check has two parallel lines across its face, indicating that the cheque must be paid into an account and not cashed over the counter.\r\n* `Opencheque` - Transaction is an uncrossed cheque that can be cashed at the bank of origin.\r\n* `Ordercheque` - Transaction is a cheque made payable to a named recipient 'or order' enabling the creditor to either deposit it in an account or endorse it to a third party, ie, transfer the rights to the cheque by signing it on the reverse.\r\n* `Circularcheque` - Transaction is an instruction from a bank to its correspondent bank to pay the creditor a stated sum of money on presentation of a means of identification.\r\n* `Travellerscheques` - Transaction is a payment resulting from travellers cheques.\r\n* `Bankdraft` - Transaction is a cheque drawn by a bank on itself or its agent. A person who owes money to another buys the draft from a bank for cash and hands it to the creditor who need have no fear that it might be dishonoured.\r\n* `Cashletter` - Transaction is a cash letter. A cash letter is a payment instrument in the form of a covering letter, whereby a financial institution, ie, the remitting bank, requests credit for one or more financial documents under usual reserve, ie, subject to final payment.\r\n* `Documentarycredit` - Transaction is a documentary credit from one banker to another, authorising the payment of a specified sum of money to the person named in the document, based on specified conditions.\r\n* `Billofexchange` - Transaction is a written order from a drawer to a drawee to pay a specified sum of money upon demand, or on a specified date, to the drawer or to a third party specified by the drawer. A bill of exchange is also called a draft.\r\n* `Collection` - Transaction is a collection. A collection is the act of sending a cheque, bill of exchange or another financial instrument to the prospective financial institution for payment.\r\n* `Cashmanagementtransfer` - Transaction is a general cash management instruction.\r\n* `Sweepaccount` - Transaction relates to a cash management instruction, requesting a sweep of the account of the debtor.\r\n* `Topaccount` - Transaction is a cash management instruction, requesting to top the account of the debtor above a certain floor amount. The floor amount, if not pre-agreed by the parties involved, may be specified.\r\n* `Zerobalanceaccount` - Transaction is a cash management instruction, requesting to zero balance the account of the debtor.\r\n* `Standingfacilities` - Payment is linked to overnight deposits and the marginal lending facility.\r\n* `Swiftpayservicelevelcredit` - Transaction is a credit transfer to be processed according to the SWIFTPay Service Level.\r\n* `Priorityservicelevelcredit` - Transaction is a credit transfer to be processed according to the Priority Service Level.\r\n* `Standardservicelevelcredit` - Transaction is a credit transfer to be processed according to the Standard Service Level.\r\n* `Liquiditytransfer` - Payment is made to transfer liquidity to/from the settlement account of a member, to/from the current account held at the central institution or any other institution.\r\n* `Advancepayment` - Transaction is a payment made in advance or as an advance.\r\n* `Valuedateadjustment` - Transaction reverses a previously incorrectly value dated entry.\r\n* `Dvpgross` - Gross cash payment offsetting the amount owed/due for a securities transaction settlement.\r\n* `Dvpnet` - Net payment offsetting the cash balance due/owed for a series of securities transactions settlement.\r\n* `Netting` - Transaction is a netting operation.\r\n* `Limitpayment` - Transaction is a payment that is processed when the pool of liquidity exceeds the minimum value reserved for an express payment in the RTGSPlus system.\r\n* `Backup` - Payment is made under the recovery procedure to move liquidity to/from the settlement account of a member according to the specifications of the system.\r\n* `Expresspayment` - Transaction is a payment that is processed whenever liquidity is available on the settlement account of a member of the RTGSPlus system.\r\n* `Centralbankoperation` - Payment is made to settle an operation made with the central bank.\r\n* `Clspayment` - Payment is linked to CLS activities.\r\n* `Eurodomesticpayment` - Transaction is a credit transfer in Euro with its country of origin and country of destination within the European Union. The origin and destination countries may be one and the same country.\r\n* `Agriculturaltransfer` - Transaction is related to the agricultural domain.\r\n* `Alimonypayment` - Transaction is a payment(s) made by one spouse to the other after a separation or divorce. An alimony payment may be applied to other family relationships.\r\n* `Balanceretail` - Transaction is a payment offsetting the net cash balance owed/due in a retail payment system.\r\n* `Bonuspayment.` - Net cash payment offsetting the balance due/owed in a retail payment system.\r\n* `Brokeragefee` - Transaction is charges levied by a broker.\r\n* `Capitalbuilding` - Transaction is payment into a personal pension scheme for retirement.\r\n* `Charitypayment` - Transaction is a payment for charity reasons.\r\n* `Childbenefit` - Transaction is a payment made to a parent/guardian to help maintain a child.\r\n* `Commercialcredit` - Transaction is settlement of a commercial credit.\r\n* `Commission` - Transaction is payment of a fee for executing a transaction.\r\n* `Commoditytransfer` - Transaction is a payment of products traded on a commodity exchange.\r\n* `Costs` - Transaction is apayment of costs.\r\n* `Copyright` - Transaction is a payment of copyright.\r\n* `Governmentpayment` - Transaction is apayment to or from a government department.\r\n* `Instalmenthirepurchaseagreement` - Transaction is a payment of an instalment or to the settlement of a hire-purchase agreement.\r\n* `Insurancepremium` - Transaction is a payment of an insurance premium.\r\n* `Intracompanypayment` - Transaction is an intra-company payment, ie, a payment between two companies belonging to the same group.\r\n* `Interest` - Transaction is a payment of interest.\r\n* `Licensefee` - Transaction is a payment of a license fee.\r\n* `Metals` - Transaction is a purchase or sale of metals.\r\n* `Pensionpayment` - Transaction is a payment of a pension allowance.\r\n* `Purchasesaleofgoods` - Transaction is a payment for the purchase and sale of goods.\r\n* `Refund` - Transaction is a repayment of funds.\r\n* `Rent` - Transaction is a payment of rent.\r\n* `Royalties` - Transaction is a payment of royalties.\r\n* `Purchasesaleofservices` - Transaction is a payment for the purchase and sale of services.\r\n* `Salarypayment` - Transaction is a payment of salaries.\r\n* `Socialsecuritybenefit` - Transaction is a social security benefit, a payment made by a government to support individuals.\r\n* `Standingorder` - Transaction is a standing order. A standing order is an instruction given by a party having explicit authority on the account to debit, ie, either debit account owner or originating party, to a first agent to process cash transfers at specified intervals during an implicit or explicit period of time. It is given once, and is valid for an open or closed period of time.\r\n* `Subscription` - Transaction is a payment of a subscription.\r\n* `Treasurystatepayment` - Payment is linked to the Treasury State.\r\n* `Unemploymentdisabilitybenefit` - Transaction is a payment made to an unemployed/disabled person.\r\n* `Valueaddedtaxpayment` - Transaction is apayment of value added tax.\r\n* `Withholdingtax` - Transaction is a payment of withholding tax.\r\n* `Taxpayment` - Transaction is a payment of taxes.\r\n* `Miscellaneous` - Transaction is for an unspecified reason. Miscellaneous is to be used only when no explicit code is available.\r\n* `Overnightdeposit` - Transaction is linked to an overnight deposit.\r\n* `Marginallending` - Transaction is linked to the marginal lending facility.\r\n* `Other` - Specifies that a proprietary code must be indicated.\r\n* `Upfront` - Transaction is an initial payment made by one of the counterparties  either to bring a transaction to fair value or for any other reason that may be the cause of an off-market transaction.\r\n* `Unwind` - Transaction is the final settlement payment made when a transaction is unwound prior to its end date or a payment that may result due to the full termination of derivative transaction(s).\r\n* `Principalexchange` - Transaction is an exchange of notional values for cross-currency swaps.\r\n"
    currencycode:
      type: object
      properties:
        Currencycode:
          type: string
          description: "A code identifying a currency according to ISO-4217.\nA currency is a system of money in general use in a particular country.\n\nCode allocated to a currency, by a maintenance agency, under an international identification scheme as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\". Valid currency codes are registered with the ISO 4217 Maintenance Agency, and consist of three contiguous letters. (ISO20022)\n\n"
          format: datatype
      description: ''
    amounttypevalues:
      enum:
        - Principal
        - Actual
        - Estimated
        - Maximum
        - Default
        - Replacement
        - Incremental
        - Decremental
        - Reserved
        - Available
        - Used
      type: string
      description: ">\r\n* `Principal` - \r\n* `Actual` - Actual amount.\r\n* `Estimated` - Estimated amount (the final amount could be above or below).\r\n* `Maximum` - Maximum amount (the final amount must be less or equal).\r\n* `Default` - Default amount.\r\n* `Replacement` - Replacement amount.\r\n* `Incremental` - Incremental amount for reservation.\r\n* `Decremental` - Decremental amount for reservation.\r\n* `Reserved` - Reserved or updated reserved amount for reservation.\r\n* `Available` - \r\n* `Used` - \r\n"
    amount:
      type: object
      properties:
        AmountValue:
          $ref: '#/components/schemas/value'
        AmountCurrency:
          $ref: '#/components/schemas/currencycode'
        DecimalPointPosition:
          type: string
          description: "Decimal point position starts calulating from the right\n"
          format: string
        AmountType:
          $ref: '#/components/schemas/amounttypevalues'
      description: Paid amount
    paymentpurposevalues:
      enum:
        - Salarypayment
        - Treasurypayment
        - Advancepayment
        - Agriculturaltransfer
        - Alimonypayment
        - Childbenefit
        - Unemploymentdisabilitybenefit
        - Bonuspayment.
        - Cashmanagementtransfer
        - Capitalbuilding
        - Charitypayment
        - Collectionpayment
        - Commoditytransfer
        - Commercialpayment
        - Commission
        - Costs
        - Copyright
        - Dividend
        - Foreignexchange
        - Purchasesaleofgoods
        - Governmentpayment
        - Instalmenthirepurchaseagreement
        - Intracompanypayment
        - Insurancepremium
        - Interest
        - Licensefee
        - Loan
        - Loanrepayment
        - Netting
        - Payroll
        - Pensionpayment
        - Refund
        - Rent
        - Royalties
        - Purchasesaleofservices
        - Securities
        - Socialsecuritybenefit
        - Subscription
        - Taxpayment
        - Valueaddedtaxpayment
        - Consumerthirdpartyconsolidatedpayment
        - Debitcollectionpayment
        - Supplierpayment
        - Hedging
        - Multipleservicetypes
        - Nototherwisespecified
        - Cardpayment
        - Creditcardbill
        - Ferry
        - Air
        - Bus
        - Railway
        - Convalescentcarefacility
        - Dentalservices
        - Anesthesiaservices
        - Homehealthcare
        - Hospitalcare
        - Intermediatecarefacility
        - Longtermcarefacility
        - Medicalservices
        - Visioncare
        - Durablemedicaleequipment
        - Cabletvbill
        - Electricitybill
        - Gasbill
        - Telephonebill
        - Othertelecomrelatedbill
        - Waterbill
        - Study
        - Pricepayment
        - Installment
        - Recurringinstallmentpayment
        - Openingfee
        - Cancellationfee
        - Governmentinsurance
        - Insurancepremiumcar
        - Laborinsurance
        - Lifeinsurance
        - Propertyinsurance
        - Healthinsurance
        - Carloanprincipalrepayment
        - Housingloanrepayment
        - Companysocialloanpaymenttobank
        - Estatetax
        - Housingtax
        - Incometax
        - Netincometax
        - Businessexpenses
        - Trustfund
        - Networkcharge
        - Networkcommunication
        - Receiptpayment
        - Paymentterms
        - Other
        - Withholding
      type: string
      description: ">\r\n* `Salarypayment` - Transaction is the payment of salaries.\r\n* `Treasurypayment` - Transaction is related to treasury operations.\r\n* `Advancepayment` - Transaction is an advance payment.\r\n* `Agriculturaltransfer` - Transaction is related to the agricultural domain.\r\n* `Alimonypayment` - Transaction is the payment of alimony.\r\n* `Childbenefit` - Transaction is related to a payment made to assist parent/guardian to maintain child.\r\n* `Unemploymentdisabilitybenefit` - Transaction is related to a payment to a person who is unemployed/disabled.\r\n* `Bonuspayment.` - Transaction is related to payment of a bonus.\r\n* `Cashmanagementtransfer` - Transaction is a general cash management instruction.\r\n* `Capitalbuilding` - Transaction is related to capital building fringe fortune, ie capital building for retirement.\r\n* `Charitypayment` - Transaction is a payment for charity reasons.\r\n* `Collectionpayment` - Transaction is a collection of funds initiated via a credit transfer or direct debit.\r\n* `Commoditytransfer` - Transaction is payment of commodities.\r\n* `Commercialpayment` - Transaction is related to a payment of commercial credit or debit. (formerly CommercialCredit).\r\n* `Commission` - Transaction is payment of commission.\r\n* `Costs` - Transaction is related to payment of costs.\r\n* `Copyright` - Transaction is payment of copyright.\r\n* `Dividend` - Transaction is payment of dividends.\r\n* `Foreignexchange` - Transaction is related to a foreign exchange operation.\r\n* `Purchasesaleofgoods` - Transaction is related to purchase and sale of goods.\r\n* `Governmentpayment` - Transaction is a payment to or from a government department.\r\n* `Instalmenthirepurchaseagreement` - Transaction is payment for an installment/hire-purchase agreement.\r\n* `Intracompanypayment` - Transaction is an intra-company payment, ie, a payment between two companies belonging to the same group.\r\n* `Insurancepremium` - Transaction is payment of an insurance premium.\r\n* `Interest` - Transaction is payment of interest.\r\n* `Licensefee` - Transaction is payment of a license fee.\r\n* `Loan` - Transaction is related to transfer of loan to borrower.\r\n* `Loanrepayment` - Transaction is related to repayment of loan to lender.\r\n* `Netting` - Transaction is related to a netting operation.\r\n* `Payroll` - Transaction is related to the payment of payroll.\r\n* `Pensionpayment` - Transaction is the payment of pension.\r\n* `Refund` - Transaction is the payment of a refund.\r\n* `Rent` - Transaction is the payment of rent.\r\n* `Royalties` - Transaction is the payment of royalties.\r\n* `Purchasesaleofservices` - Transaction is related to purchase and sale of services.\r\n* `Securities` - Transaction is the payment of securities.\r\n* `Socialsecuritybenefit` - Transaction is a social security benefit, ie payment made by a government to support individuals.\r\n* `Subscription` - Transaction is related to a payment of information or entertainment services either in printed or electronic form.\r\n* `Taxpayment` - Transaction is the payment of taxes.\r\n* `Valueaddedtaxpayment` - Transaction is the payment of value added tax.\r\n* `Consumerthirdpartyconsolidatedpayment` - Transaction is a payment used by a third party who can collect funds to pay on behalf of consumers, ie credit counseling or bill payment companies.\r\n* `Debitcollectionpayment` - Collection of funds initiated via a debit transfer.\r\n* `Supplierpayment` - Transaction is related to a payment to a supplier.\r\n* `Hedging` - Transaction is related to a hedging operation.\r\n* `Multipleservicetypes` - Transaction is related to a payment for multiple service types.\r\n* `Nototherwisespecified` - Transaction is related to a payment for type of services not specified elsewhere.\r\n* `Cardpayment` - Transaction is related to a payment of credit card account.\r\n* `Creditcardbill` - Transaction is related to a payment of credit card bill.\r\n* `Ferry` - Transaction is a payment for ferry related business.\r\n* `Air` - Transaction is a payment for air transport related business.\r\n* `Bus` - Transaction is a payment for bus transport related business.\r\n* `Railway` - Transaction is a payment for railway transport related business.\r\n* `Convalescentcarefacility` - Transaction is a payment for convalescence care facility services.\r\n* `Dentalservices` - Transaction is a payment for dental services.\r\n* `Anesthesiaservices` - Transaction is a payment for anesthesia services.\r\n* `Homehealthcare` - Transaction is a payment for home health care services.\r\n* `Hospitalcare` - Transaction is a payment for hospital care services.\r\n* `Intermediatecarefacility` - Transaction is a payment for intermediate care facility services.\r\n* `Longtermcarefacility` - Transaction is a payment for long-term care facility services.\r\n* `Medicalservices` - Transaction is a payment for medical care services.\r\n* `Visioncare` - Transaction is a payment for vision care services.\r\n* `Durablemedicaleequipment` - Transaction is a payment is for use of durable medical equipment.\r\n* `Cabletvbill` - Transaction is related to a payment of cable TV bill.\r\n* `Electricitybill` - Transaction is related to a payment of electricity bill.\r\n* `Gasbill` - Transaction is related to a payment of gas bill.\r\n* `Telephonebill` - Transaction is related to a payment of telephone bill.\r\n* `Othertelecomrelatedbill` - Transaction is related to a payment of other telecom related bill.\r\n* `Waterbill` - Transaction is related to a payment of water bill.\r\n* `Study` - Transaction is related to a payment of study/tuition costs.\r\n* `Pricepayment` - Transaction is related to a payment of a price.\r\n* `Installment` - Transaction is related to a payment of an installment.\r\n* `Recurringinstallmentpayment` - Transaction is related to a payment of a recurring installment made at regular intervals.\r\n* `Openingfee` - Transaction is related to a payment of opening fee.\r\n* `Cancellationfee` - Transaction is related to a payment of cancellation fee.\r\n* `Governmentinsurance` - Transaction is related to a payment of government insurance.\r\n* `Insurancepremiumcar` - Transaction is a payment of car insurance premium.\r\n* `Laborinsurance` - Transaction is a payment of labor insurance.\r\n* `Lifeinsurance` - Transaction is a payment of life insurance.\r\n* `Propertyinsurance` - Transaction is a payment of property insurance.\r\n* `Healthinsurance` - Transaction is a payment of health insurance.\r\n* `Carloanprincipalrepayment` - Transaction is a payment of car loan principal payment.\r\n* `Housingloanrepayment` - Transaction is related to a payment of housing loan.\r\n* `Companysocialloanpaymenttobank` - Transaction is a payment by a company to a bank for financing social loans to employees.\r\n* `Estatetax` - Transaction is related to a payment of estate tax.\r\n* `Housingtax` - Transaction is related to a payment of housing tax.\r\n* `Incometax` - Transaction is related to a payment of income tax.\r\n* `Netincometax` - Transaction is related to a payment of net income tax.\r\n* `Businessexpenses` - Transaction is related to a payment of business expenses.\r\n* `Trustfund` - Transaction is related to a payment of a trust fund.\r\n* `Networkcharge` - Transaction is related to a payment of network charges.\r\n* `Networkcommunication` - Transaction is related to a payment of network communication.\r\n* `Receiptpayment` - Transaction is related to a payment of receipt.\r\n* `Paymentterms` - Transaction is related to payment terms specifications.\r\n* `Other` - Other payment purpose.\r\n* `Withholding` - Transaction is related to a payment of withholding tax.\r\n"
    paymenttransactionstatustypevalues:
      enum:
        - Acceptedtechnicalvalidation
        - Received
        - Partiallyaccepted
        - Rejected
        - Pending
        - Acceptedcustomerprofile
        - Acceptedsettlementinprocess
        - Acceptedsettlementcompleted
        - Accepted
        - Acceptedcancellationrequest
        - Rejectedcancellationrequest
        - Acceptedwithchange
        - Partiallyacceptedcancellationrequest
        - Pendingcancellationrequest
        - Acceptedcreditsettlementcompleted
        - Paymentcancelled
        - Nocancellationprocess
      type: string
      description: ">\r\n* `Acceptedtechnicalvalidation` - Authentication and syntactical and semantical validation are successful.\r\n* `Received` - Payment initiation has been received by the receiving agent.\r\n* `Partiallyaccepted` - A number of transactions have been accepted, whereas another number of transactions have not yet achieved 'accepted' status.\r\n* `Rejected` - Payment initiation or individual transaction included in the payment initiation has been rejected.\r\n* `Pending` - Payment initiation or individual transaction included in the payment initiation is pending.  Further checks and status update will be performed.\r\n* `Acceptedcustomerprofile` - Preceding check of technical validation was successful. Customer profile check was also successful.\r\n* `Acceptedsettlementinprocess` - All preceding checks such as technical validation and customer profile were successful and therefore the payment initiation has been accepted for execution.\r\n* `Acceptedsettlementcompleted` - Settlement on the debtor's account has been completed.\r\n* `Accepted` - Request is accepted.\r\n* `Acceptedcancellationrequest` - Cancellation is accepted.\r\n* `Rejectedcancellationrequest` - Cancellation request is rejected\r\n* `Acceptedwithchange` - Instruction is accepted but a change will be made, such as date or remittance not sent.\r\n* `Partiallyacceptedcancellationrequest` - Cancellation is partially accepted.\r\n* `Pendingcancellationrequest` - Cancellation request is pending.\r\n* `Acceptedcreditsettlementcompleted` - Settlement on the creditor's account has been completed.\r\n* `Paymentcancelled` - Payment is cancelled.\r\n* `Nocancellationprocess` - There is no cancellation process ongoing\r\n"
    paymenttransactionstatus:
      type: object
      properties:
        PaymentTransactionStatus:
          $ref: '#/components/schemas/status'
        PaymentTransactionStatusType:
          $ref: '#/components/schemas/paymenttransactionstatustypevalues'
      description: "Specifies the status of a payment transaction at a specified time.\nElements"
    currencytypevalues:
      enum:
        - BaseCurrency
        - ReportingCurrency
        - SecondaryCurrency
        - TransferCurrency
      type: string
      description: ">\r\n* `BaseCurrency` - Base currency of the account. (ISO20022)\n\r\n* `ReportingCurrency` - Currency used to calculate and report the balance and related entries of an account. (ISO20022)\n\r\n* `SecondaryCurrency` - \r\n* `TransferCurrency` - Currency of the amount to be transferred which may be different from the currency of the debtor's account. (ISO20022)\r\n"
    paymenttransactioncurrency:
      type: object
      properties:
        PaymentTransactionCurrency:
          $ref: '#/components/schemas/currencycode'
        PaymentTransactionCurrencyType:
          $ref: '#/components/schemas/currencytypevalues'
      description: ''
    debitcreditindicatortvalues:
      enum:
        - Debit
        - Credit
      type: string
      description: ">\r\n* `Debit` - Transaction is a debt entry\r\n* `Credit` - Transaction is a credit entry\r\n"
    paymentdatetimetypevalues:
      enum:
        - Requestedexecutiondate
        - Acceptancedatetime
        - Creationdate
        - Valuedate
        - Duedate
        - Expirydate
      type: string
      description: ">\r\n* `Requestedexecutiondate` - Date at which the initiating party requests the clearing agent to process the payment. ISO20022\nUsage: This is the date on which the debtor's account is to be debited. If payment by cheque, the date when the cheque must be generated by the bank. \r\n* `Acceptancedatetime` - Date and time at which all processing conditions for execution of the payment are met and adequate financial cover is available at the account servicing agent. ISO20022\r\n* `Creationdate` - Date and time at which the payment execution was created by the instructing agent. ISO20022\r\n* `Valuedate` - Date on which a payment must be executed (ISO20022)\r\n* `Duedate` - Due date for the payment. (ISO20022)\r\n* `Expirydate` - \r\n"
    paymenttransaction:
      type: object
      properties:
        PaymentTransactionType:
          $ref: '#/components/schemas/paymenttypevalues'
        PaymentTransactionAmount:
          $ref: '#/components/schemas/amount'
        PaymentTransactionIdentification:
          $ref: '#/components/schemas/identifier'
        PaymentTransactionUsedMechanism:
          $ref: '#/components/schemas/text'
        PaymentTransactionDatetime:
          $ref: '#/components/schemas/datetime'
        PaymentTransactionPurpose:
          $ref: '#/components/schemas/paymentpurposevalues'
        PaymentTransactionStatus:
          $ref: '#/components/schemas/paymenttransactionstatus'
        PaymentTransactionAppliedFeeAmount:
          $ref: '#/components/schemas/amount'
        PaymentTransactionCurrency:
          $ref: '#/components/schemas/paymenttransactioncurrency'
        PaymentCreditDebitIndicator:
          $ref: '#/components/schemas/debitcreditindicatortvalues'
        PaymentTransactionAmountType:
          $ref: '#/components/schemas/amounttypevalues'
        PaymentTransactionDatetimeType:
          $ref: '#/components/schemas/paymentdatetimetypevalues'
      description: Reference to the underlying funds transfer transaction
    OperationalTerm:
      type: object
      properties:
        OperationalTermType:
          $ref: '#/components/schemas/arrangementtypevalues'
        OperationalTermDescription:
          $ref: '#/components/schemas/text'
        OperationalTermParameterType:
          $ref: '#/components/schemas/text'
        OperationalTermParameterSetting:
          $ref: '#/components/schemas/productarrangement'
        OperationalTermTransactionRecord:
          $ref: '#/components/schemas/transaction'
        OperationalTermTransactionType:
          $ref: '#/components/schemas/transactiontypevalues'
        OperationalTermTransactionDescription:
          $ref: '#/components/schemas/text'
        OperationalTermAugmentedCashFlows:
          $ref: '#/components/schemas/text'
        PaymentInitiationTransactionInstanceReference:
          $ref: '#/components/schemas/paymenttransaction'
      description: "A collection of terms (within some jurisdiction) that can be selected and configured to define a contract /agreement\n\nExamples: Required disclosures"
    productagreementtypevalues:
      enum:
        - CurrentAccountAgreement
        - SavingsAccountAgreement
        - BrokeredProductAgreement
        - ConsumerLoanAgreement
        - MortgageLoanAgreement
        - DirectDebitServiceAgreement
      type: string
      description: ">\r\n* `CurrentAccountAgreement` - \r\n* `SavingsAccountAgreement` - \r\n* `BrokeredProductAgreement` - \r\n* `ConsumerLoanAgreement` - \r\n* `MortgageLoanAgreement` - \r\n* `DirectDebitServiceAgreement` - \r\n"
    productidentificationtypevalues:
      enum:
        - ISINCode
        - PackageCode
        - Buyersitemnumber
        - Commercialdescriptioncodename
        - EAN
        - Harmonizedtariffcodename
        - Manufacturersitemnumber
        - Modelnumber
        - Partnumber
        - Quotacategory
        - Stylenumber
        - Suppliersitemnumber
        - Universalproductcode
      type: string
      description: ">\r\n* `ISINCode` - \r\n* `PackageCode` - \r\n* `Buyersitemnumber` - Product identifier assigned by the buyer.\r\n* `Commercialdescriptioncodename` - A code to identify a product based on applicable commercial conditions.\r\n* `EAN` - The unique EAN (European Article Number) code.\r\n* `Harmonizedtariffcodename` - Classification of goods as developed by the Customs Cooperation council.\r\n* `Manufacturersitemnumber` - Product identifier as assigned by the manufacturer.\r\n* `Modelnumber` - Reference number assigned by the manufacturer to differentiate variations in similar products in a class or group.\r\n* `Partnumber` - Reference assigned by the manufacturer to a product part.\r\n* `Quotacategory` - Product identifier used by the retail industry.\r\n* `Stylenumber` - Identification of the style of a product.\r\n* `Suppliersitemnumber` - Number assigned to an article by the supplier of that article.\r\n* `Universalproductcode` - Number assigned to a manufacturer's product by the Product Code Council.\r\n"
    productidentification:
      type: object
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/identifier'
        ProductIdentificationType:
          $ref: '#/components/schemas/productidentificationtypevalues'
      description: The identifier of product e.g. ISIN Code.
    bankingproducttypevalues:
      enum:
        - LoanProduct
        - CurrentAccountProduct
        - SavingAccountProduct
        - BrokeredProduct
        - TermDepositProduct
      type: string
      description: ">\r\n* `LoanProduct` - \r\n* `CurrentAccountProduct` - \r\n* `SavingAccountProduct` - \r\n* `BrokeredProduct` - \r\n* `TermDepositProduct` - \r\n"
    productlifecyclestatustypevalues:
      enum:
        - Initiated
        - Announced
        - Sold
        - Obsolete
        - Active
      type: string
      description: ">\r\n* `Initiated` - \r\n* `Announced` - \r\n* `Sold` - \r\n* `Obsolete` - \r\n* `Active` - \r\n"
    productlifecyclestatus:
      type: object
      properties:
        ProductLifecycleStatus:
          $ref: '#/components/schemas/status'
        ProductLifecycleStatusType:
          $ref: '#/components/schemas/productlifecyclestatustypevalues'
      description: 'Refers to the lifecycle of a product (e.g., initiated, announced, active, obsolete, withdrawn).'
    bankingproduct:
      type: object
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/productidentification'
        ProductType:
          $ref: '#/components/schemas/bankingproducttypevalues'
        ProductLifecycleStatus:
          $ref: '#/components/schemas/productlifecyclestatus'
        ProductPriority:
          $ref: '#/components/schemas/text'
        ProductDescription:
          $ref: '#/components/schemas/text'
        ProductVersion:
          $ref: '#/components/schemas/text'
        ProductName:
          $ref: '#/components/schemas/name'
      description: ''
    date:
      type: object
      properties:
        DateContent:
          type: string
          description: ''
          format: string
      description: Date on which the agreement was signed by all parties. (ISO20022)
    agreementtypevalues:
      enum:
        - CustomerAgreement
        - SupplierAgreement
        - BrokerAgreement
        - SalesAgreement
        - PurchaseAgreement
        - MaintenanceAgreement
        - ProductAgreement
        - ProductSalesAgreement
        - ResourceAgreement
      type: string
      description: ">\r\n* `CustomerAgreement` - \r\n* `SupplierAgreement` - \r\n* `BrokerAgreement` - \r\n* `SalesAgreement` - \r\n* `PurchaseAgreement` - \r\n* `MaintenanceAgreement` - \r\n* `ProductAgreement` - \r\n* `ProductSalesAgreement` - \r\n* `ResourceAgreement` - \r\n"
    agreementlifecyclestatustypevalues:
      enum:
        - Offered
        - Confirmed
        - Completed
        - Signed
        - Terminated
        - Rejected
      type: string
      description: ">\r\n* `Offered` - \r\n* `Confirmed` - \r\n* `Completed` - \r\n* `Signed` - \r\n* `Terminated` - \r\n* `Rejected` - \r\n"
    agreementlifecyclestatus:
      type: object
      properties:
        AgreementLifecycleStatus:
          $ref: '#/components/schemas/status'
        AgreementLifecycleStatusType:
          $ref: '#/components/schemas/agreementlifecyclestatustypevalues'
      description: 'A characteristic of agreement which refers to the LifecycleStatus of agreement (e.g., potential, offered, confirmed, completed, signed, terminated).'
    agreement:
      type: object
      properties:
        AgreementSignedDate:
          $ref: '#/components/schemas/date'
        AgreementType:
          $ref: '#/components/schemas/agreementtypevalues'
        AgreementValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        AgreementVersion:
          $ref: '#/components/schemas/text'
        AgreementStatus:
          $ref: '#/components/schemas/agreementlifecyclestatus'
        AgreementSubjectMatter:
          $ref: '#/components/schemas/text'
        AgreementIdentification:
          $ref: '#/components/schemas/identifier'
        AgreementDate:
          $ref: '#/components/schemas/datetime'
        AgreementDescription:
          $ref: '#/components/schemas/text'
      description: ''
    productagreement:
      type: object
      properties:
        Type:
          $ref: '#/components/schemas/productagreementtypevalues'
        ProductReference:
          $ref: '#/components/schemas/bankingproduct'
        AgreementReference:
          $ref: '#/components/schemas/agreement'
      description: "Reference to the underlying product instance - this is the fulfillment vehicle that has amended/augmented features to 'create' the sold product ||\r\n|"
    customerrelationship:
      type: object
      properties:
        CustomerRelationship:
          type: string
          description: A specific relationship between a specific Bank (= party acting as a supplier of banking services) and one or more other involved parties acting as (potential) consumers of banking services as agreed in one or more banking product or service offerings and/or agreements.
          format: class
      description: "Reference to the product primary party/owner ||\r\n|"
    addresstypevalues:
      enum:
        - PostalAddress
        - GeolocationAddress
        - LatitudeAddress
        - LongitudeAddress
        - ElectronicAddress
      type: string
      description: ">\r\n* `PostalAddress` - \r\n* `GeolocationAddress` - \r\n* `LatitudeAddress` - \r\n* `LongitudeAddress` - \r\n* `ElectronicAddress` - \r\n"
    geographicalareatypevalues:
      enum:
        - Continent
        - Country
        - State
        - District
        - Province
        - Town
        - City
        - Region
      type: string
      description: ">\r\n* `Continent` - \r\n* `Country` - \r\n* `State` - \r\n* `District` - \r\n* `Province` - \r\n* `Town` - \r\n* `City` - \r\n* `Region` - \r\n"
    location:
      type: object
      properties:
        LocationDescription:
          $ref: '#/components/schemas/text'
        LocationDateTime:
          $ref: '#/components/schemas/datetime'
        LocationStatus:
          $ref: '#/components/schemas/status'
        LocationType:
          $ref: '#/components/schemas/geographicalareatypevalues'
        LocationZoningType:
          $ref: '#/components/schemas/text'
        LocationNeighborhoodType:
          $ref: '#/components/schemas/text'
        LocationConstructionType:
          $ref: '#/components/schemas/text'
        LocationOccupancyType:
          $ref: '#/components/schemas/text'
        LocationValue:
          $ref: '#/components/schemas/value'
        LocationCapacity:
          $ref: '#/components/schemas/text'
        LocationIdentification:
          $ref: '#/components/schemas/identifier'
        LocationAddress:
          $ref: '#/components/schemas/address'
        LocationName:
          $ref: '#/components/schemas/name'
        LocationTimeZone:
          $ref: '#/components/schemas/text'
      description: ''
    address:
      type: object
      properties:
        AddressType:
          $ref: '#/components/schemas/addresstypevalues'
        LocationReference:
          $ref: '#/components/schemas/location'
      description: ''
    branch:
      type: object
      properties:
        BranchIdentification:
          $ref: '#/components/schemas/identifier'
        BranchLegalEntityIdentification:
          $ref: '#/components/schemas/identifier'
        BranchAddress:
          $ref: '#/components/schemas/address'
        BranchName:
          $ref: '#/components/schemas/name'
      description: "Bank branch associated with the product for booking purposes ||\r\n|"
    subject:
      type: object
      properties:
        Subject:
          type: string
          description: A thing that is discussed or dealt whit in agreement/arrangement about doing or not doing (as action) something.
          format: class
      description: ''
    modalitytypevalues:
      enum:
        - AllocationModality
        - CalculationModality
        - DerivationModality
        - PaymentModality
        - ProcessingModality
        - ApplicationModality
        - DeliveryModality
      type: string
      description: ">\r\n* `AllocationModality` - \r\n* `CalculationModality` - \r\n* `DerivationModality` - \r\n* `PaymentModality` - \r\n* `ProcessingModality` - \r\n* `ApplicationModality` - \r\n* `DeliveryModality` - \r\n"
    servicearrangementmodality:
      type: object
      properties:
        ServiceArrangementModalityType:
          $ref: '#/components/schemas/modalitytypevalues'
      description: ''
    partyobligationorentitlement:
      type: object
      properties:
        ObligationOrEntitlementSubject:
          $ref: '#/components/schemas/subject'
        ObligationOrEntitlementType:
          $ref: '#/components/schemas/arrangementtypevalues'
        ObligationOrEntitlementModality:
          $ref: '#/components/schemas/servicearrangementmodality'
        ObligationOrEntitlementDefinition:
          $ref: '#/components/schemas/text'
      description: "The setting for the entitlement option ||\r\n|"
    accountrestrictionstatustypevalues:
      enum:
        - Active
        - Inactive
      type: string
      description: ">\r\n* `Active` - Status of the restriction is active.\r\n* `Inactive` - Status of the restriction is inactive.\r\n"
    accountrestrictionstatus:
      type: object
      properties:
        AccountRestrictionStatus:
          $ref: '#/components/schemas/status'
        AccountRestrictionStatusType:
          $ref: '#/components/schemas/accountrestrictionstatustypevalues'
      description: Status of the restriction.
    accountrestiction:
      type: object
      properties:
        AccountRestrictionIdentifier:
          $ref: '#/components/schemas/identifier'
        AccountRestrictionType:
          $ref: '#/components/schemas/text'
        AccountRestrictionDescription:
          $ref: '#/components/schemas/text'
        AccountRestrictionValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        AccountRestrictionStatus:
          $ref: '#/components/schemas/accountrestrictionstatus'
        AccountRestrictionRegulator:
          $ref: '#/components/schemas/involvedparty'
      description: "The setting for the restriction option AccountRestriction_x000D_\n|AccountRestriction (https://www.iso20022.org/standardsrepository/type/AccountRestriction)|Standard|ISO20022 BM  ()"
    accountstatustypevalues:
      enum:
        - Enabled
        - Disabled
        - Deleted
        - Proforma
        - Pending
      type: string
      description: ">\r\n* `Enabled` - Account can be used for its intended purpose.\r\n* `Disabled` - Account cannot be used for its intended purpose, either temporarily or permanently.\r\n* `Deleted` - Account cannot be used any longer.\r\n* `Proforma` - Account is temporary and can be partially used for its intended purpose. The account will be fully available for use when the account servicer has received all relevant documents.\r\n* `Pending` - Account change is pending approval.\r\n"
    accountstatus:
      type: object
      properties:
        AccountStatus:
          $ref: '#/components/schemas/status'
        AccountStatusType:
          $ref: '#/components/schemas/accountstatustypevalues'
      description: "A characteristic of account which refers to the LifecycleStatus of account like opened, closed, blocked, etc.\n\nSpecifies the current state of an account. (ISO20022)"
    accountidentificationtypevalues:
      enum:
        - BBAN
        - IBAN
        - UPIC
        - AccountNumber
        - PAN
        - Paym
        - Wallet
      type: string
      description: ">\r\n* `BBAN` - Basic Bank Account Number (BBAN) - identifier used nationally by financial institutions, ie, in individual countries, generally as part of a National Account Numbering Scheme(s), to uniquely identify the account of a customer. (ISO20022)\n\n.\r\n* `IBAN` - International Bank Account Number (IBAN) - identifier used internationally by financial institutions to uniquely identify the account of a customer. Further specifications of the format and content of the IBAN can be found in the standard ISO 13616 \"Banking and related financial services - International Bank Account Number (IBAN)\" version 1997-10-01, or later revisions. (ISO20022)\n\nAn identifier used internationally by financial institutions to uniquely identify the account of a customer at a financial institution, as described in the latest edition of the international standard ISO 13616. \"Banking and related financial services - International Bank Account Number (IBAN)\". (OBExternalAccountIdentification4Code)\r\n* `UPIC` - Universal Payment Identification Code (UPIC) - identifier used by the New York Clearing House to mask confidential data, such as bank accounts and bank routing numbers. UPIC numbers remain with business customers, regardless of banking relationship changes. (ISO20022)\r\n* `AccountNumber` - String of characters (mainly numbers) used to identify an account.(ISO20022)\n\nSort Code and Account Number - identifier scheme used in the UK by financial institutions to identify the account of a customer. The identifier is the concatenation of the 6 digit UK sort code and 8 digit account number. (OBExternalAccountIdentification4Code)\nThe regular expression for this identifier is: ^[0-9]{6}[0-9]{8}$\r\n* `PAN` - Primary Account Number - identifier scheme used to identify a card account. (OBExternalAccountIdentification4Code)\r\n* `Paym` - Paym Scheme to make payments via mobile (OBExternalAccountIdentification4Code)\r\n* `Wallet` - A primary and unique account identifier used to identify a wallet.\nAn ASPSP must document on their developer portal, the payment methods that supports this account identifier.(OBExternalAccountIdentification4Code)\r\n"
    accountidentification:
      type: object
      properties:
        AccountIdentificationType:
          $ref: '#/components/schemas/accountidentificationtypevalues'
        AccountIdentification:
          $ref: '#/components/schemas/identifier'
      description: The identifier of account like Account Number.
    accountdatetypevalues:
      enum:
        - OpeningDate
        - ClosingDate
        - BlockingDate
        - MaturityDate
        - LiveDate
      type: string
      description: 'Key dates associated with the sales product (e.g. opening date, closing date) Account/OpeningDate|Account/OpeningDate (https://www.iso20022.org/standardsrepository/type/Account)|Standard|ISO20022 BM ()'
    accountdate:
      type: object
      properties:
        AccountDateType:
          $ref: '#/components/schemas/accountdatetypevalues'
        AccountDate:
          $ref: '#/components/schemas/datetime'
      description: 'A characteristic of account which refers to LifecycleDate of account (e.g., ClosingDate, OpeningDate, LiveDate, etc.) '
    accounttypevalues:
      enum:
        - DebitAccount
        - CreditAccount
        - VostroAcount
        - NostroAccount
        - PaymentAccount
        - SettlementAccount
        - SavingAccount
        - CurrentAccount
        - CashAccount
        - LoanAccount
      type: string
      description: ">\r\n* `DebitAccount` - \r\n* `CreditAccount` - \r\n* `VostroAcount` - In correspondent banking, an account held by one bank on behalf of another bank (the customer bank); the customer bank regards this account as its nostro account. (ECB)\r\n* `NostroAccount` - In correspondent banking, an account held by a customer bank on the books of another bank acting as a service provider. The other bank regards this account as a loro account. (ECB)\r\n* `PaymentAccount` - \r\n* `SettlementAccount` - A specific purpose account used to post debit and credit entries as a result of the transaction. (ISO20022)\n\nAccount which is used for settlement. (ISO20022)\r\n* `SavingAccount` - \r\n* `CurrentAccount` - \r\n* `CashAccount` - \r\n* `LoanAccount` - \r\n"
    accounttype:
      type: object
      properties:
        AccountType:
          $ref: '#/components/schemas/accounttypevalues'
        AccountTypeName:
          $ref: '#/components/schemas/name'
      description: 'Specifies the category of account like payment account, loan account, cash account, securities account, etc. '
    balancetypevalues:
      enum:
        - Openingbalance
        - Closingbalance
        - Currentbalance
        - Availablebalance
        - Ledgerbalance
        - Reservebalance
        - Freebalance
        - Principalbalance
      type: string
      description: ">\r\n* `Openingbalance` - Book balance of the account at the beginning of the account servicer's business day. It always equals the closing book balance from the previous business day. Note: the available balance at the beginning of the account servicer's business day may be different from the closing book balance from the previous business day. (ISO20022)\r\n* `Closingbalance` - Balance of the account at the end of the account servicer's business day. It is the sum of the opening balance at the beginning of the day and all entries booked to the account during the account servicer's business day. (ISO20022)\r\n* `Currentbalance` - Balance of the account at a precise moment in time. (ISO20022)\r\n* `Availablebalance` - Balance of money or securities that is at the disposal of the account owner on the date specified. (ISO20022)\r\n* `Ledgerbalance` - Ledger balance refers to posted transactions (e.g. limit authorisation amount - posted transactions). (ISO20022)\r\n* `Reservebalance` - \r\n* `Freebalance` - \r\n* `Principalbalance` - \r\n"
    accountbalance:
      type: object
      properties:
        BalanceAmount:
          $ref: '#/components/schemas/amount'
        BalanceType:
          $ref: '#/components/schemas/balancetypevalues'
        BalanceDate:
          $ref: '#/components/schemas/datetime'
        BalanceIndicator:
          $ref: '#/components/schemas/debitcreditindicatortvalues'
      description: "The state of the obligations managed on the account, the result of all entries on the account.\n\nNumerical representation of the net increases and decreases in an account at a specific point in time. (ISO20022)\n\nBanking: Amount available in an account for withdrawal or use.\nRead more: http://www.businessdictionary.com/definition/balance.html\n\nBookkeeping: Difference between the debit and credit sides of an account.\nRead more: http://www.businessdictionary.com/definition/balance.html"
    accountcurrency:
      type: object
      properties:
        AccountCurrencyType:
          $ref: '#/components/schemas/currencytypevalues'
        AccountCurrency:
          $ref: '#/components/schemas/currencycode'
      description: ''
    account:
      type: object
      properties:
        AccountStatus:
          $ref: '#/components/schemas/accountstatus'
        AccountIdentification:
          $ref: '#/components/schemas/accountidentification'
        AccountDate:
          $ref: '#/components/schemas/accountdate'
        AccountType:
          $ref: '#/components/schemas/accounttype'
        AccountPurpose:
          $ref: '#/components/schemas/text'
        AccountBalance:
          $ref: '#/components/schemas/accountbalance'
        AccountCurrency:
          $ref: '#/components/schemas/accountcurrency'
        AccountDescription:
          $ref: '#/components/schemas/text'
        AccountName:
          $ref: '#/components/schemas/name'
      description: Details of the linked account Account|Account  (https://www.iso20022.org/standardsrepository/type/Account)|Standard|ISO20022 BM ()
    account_accountrelationshiptypevalues:
      enum:
        - AccountIsParentAccountForAccount
        - AccountIsSubAccountForAccount
        - AccountIsLinkedToAccount
      type: string
      description: "The type and purpose for the link (e.g. guarantor, sweep) ||\r\n|"
    ProductandServiceAgreement:
      type: object
      properties:
        ProductInstanceReference:
          $ref: '#/components/schemas/productagreement'
        UnderlyingProductInstanceReference:
          $ref: '#/components/schemas/productagreement'
        CustomerReference:
          $ref: '#/components/schemas/customerrelationship'
        BankBranchLocationReference:
          $ref: '#/components/schemas/branch'
        TaxReference:
          $ref: '#/components/schemas/identifier'
        EntitlementOptionDefinition:
          $ref: '#/components/schemas/partyobligationorentitlement'
        EntitlementOptionSetting:
          $ref: '#/components/schemas/partyobligationorentitlement'
        RestrictionOptionDefinition:
          $ref: '#/components/schemas/accountrestiction'
        RestrictionOptionSetting:
          $ref: '#/components/schemas/accountrestiction'
        LinkedAccounts:
          $ref: '#/components/schemas/account'
        LinkType:
          $ref: '#/components/schemas/account_accountrelationshiptypevalues'
        AccountDetails:
          $ref: '#/components/schemas/account'
        PositionLimits:
          type: string
          description: Position limits that are maintained for the sales product as an aspect of the operational terms
          format: string
        PositionLimitType:
          type: string
          description: 'The type of position maintained for the sales product (e.g. transaction credit/debit, netting, position)'
          format: string
        PositionLimitSettings:
          type: string
          description: 'The position definition, associated limit settings and rules'
          format: string
        PositionLimitValue:
          type: string
          description: The current calculated position
          format: string
        DateType:
          $ref: '#/components/schemas/accountdatetypevalues'
        Date:
          $ref: '#/components/schemas/datetime'
      description: "Maintain the terms and conditions that apply to a commercial relationship within Sales Product.\n\n\n"
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ProductandServiceAgreement:
      description: ProductandServiceAgreement
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProductandServiceAgreement'
    OperationalTerm:
      description: OperationalTerm
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OperationalTerm'
  parameters:
    salesproductid:
      name: salesproductid
      in: path
      required: true
      style: simple
      schema:
        type: string
    operationaltermid:
      name: operationaltermid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    ProductandServiceAgreement:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProductandServiceAgreement'
      required: true
    OperationalTerm:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OperationalTerm'
      required: true