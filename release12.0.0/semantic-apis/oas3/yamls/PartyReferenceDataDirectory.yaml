openapi: 3.0.1
info:
  title: Party Reference Data Directory
  description: 'This service domain maintains a range of party reference information covering aspects including general reference details, contacts and associations and demographic information'
  contact:
    name: BIAN
    url: https://bian.org
  version: 12.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/PartyReferenceDataDirectory/12.0.0
paths:
  /PartyReferenceDataDirectory/Register:
    post:
      tags:
        - CR - PartyReferenceDataDirectoryEntry
      summary: InCR Register a customer entity in the catalog
      description: InCR Register a customer entity in the catalog
      operationId: Register
      requestBody:
        $ref: '#/components/requestBodies/PartyReferenceDataDirectoryEntry'
      responses:
        '200':
          $ref: '#/components/responses/PartyReferenceDataDirectoryEntry'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyReferenceDataDirectory/{partyreferencedatadirectoryid}/Update':
    put:
      tags:
        - CR - PartyReferenceDataDirectoryEntry
      summary: UpCR Update details about the customer's directory entry
      description: UpCR Update details about the customer's directory entry
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/partyreferencedatadirectoryid'
      requestBody:
        $ref: '#/components/requestBodies/PartyReferenceDataDirectoryEntry'
      responses:
        '200':
          $ref: '#/components/responses/PartyReferenceDataDirectoryEntry'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyReferenceDataDirectory/{partyreferencedatadirectoryid}/Control':
    put:
      tags:
        - CR - PartyReferenceDataDirectoryEntry
      summary: CoCR Control the handling of a customer entry (e.g. terminate)
      description: CoCR Control the handling of a customer entry (e.g. terminate)
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/partyreferencedatadirectoryid'
      requestBody:
        $ref: '#/components/requestBodies/PartyReferenceDataDirectoryEntry'
      responses:
        '200':
          $ref: '#/components/responses/PartyReferenceDataDirectoryEntry'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyReferenceDataDirectory/{partyreferencedatadirectoryid}/Request':
    put:
      tags:
        - CR - PartyReferenceDataDirectoryEntry
      summary: RqCR Request manual intervention with an entry (e.g. refresh content)
      description: RqCR Request manual intervention with an entry (e.g. refresh content)
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/partyreferencedatadirectoryid'
      requestBody:
        $ref: '#/components/requestBodies/PartyReferenceDataDirectoryEntry'
      responses:
        '200':
          $ref: '#/components/responses/PartyReferenceDataDirectoryEntry'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyReferenceDataDirectory/{partyreferencedatadirectoryid}/Retrieve':
    get:
      tags:
        - CR - PartyReferenceDataDirectoryEntry
      summary: ReCR Retrieve details about a customer directory entry
      description: ReCR Retrieve details about a customer directory entry
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/partyreferencedatadirectoryid'
      responses:
        '200':
          $ref: '#/components/responses/PartyReferenceDataDirectoryEntry'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyReferenceDataDirectory/{partyreferencedatadirectoryid}/Exchange':
    put:
      tags:
        - CR - PartyReferenceDataDirectoryEntry
      summary: 'EcCR Accept, verify, reject a directory entry'
      description: 'EcCR Accept, verify, reject a directory entry'
      operationId: Exchange
      parameters:
        - $ref: '#/components/parameters/partyreferencedatadirectoryid'
      requestBody:
        $ref: '#/components/requestBodies/PartyReferenceDataDirectoryEntry'
      responses:
        '200':
          $ref: '#/components/responses/PartyReferenceDataDirectoryEntry'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyReferenceDataDirectory/{partyreferencedatadirectoryid}/Execute':
    put:
      tags:
        - CR - PartyReferenceDataDirectoryEntry
      summary: ExCR Execute an automated action against an entry
      description: ExCR Execute an automated action against an entry
      operationId: Execute
      parameters:
        - $ref: '#/components/parameters/partyreferencedatadirectoryid'
      requestBody:
        $ref: '#/components/requestBodies/PartyReferenceDataDirectoryEntry'
      responses:
        '200':
          $ref: '#/components/responses/PartyReferenceDataDirectoryEntry'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyReferenceDataDirectory/{partyreferencedatadirectoryid}/Demographics/{demographicsid}/Exchange':
    put:
      tags:
        - BQ - Demographics
      summary: 'EcBQ Accept, verify, reject etc. details of a customer directory entry'
      description: 'EcBQ Accept, verify, reject etc. details of a customer directory entry'
      operationId: ExchangeDemographics
      parameters:
        - $ref: '#/components/parameters/partyreferencedatadirectoryid'
        - $ref: '#/components/parameters/demographicsid'
      requestBody:
        $ref: '#/components/requestBodies/Demographics'
      responses:
        '200':
          $ref: '#/components/responses/Demographics'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyReferenceDataDirectory/{partyreferencedatadirectoryid}/Reference/{referenceid}/Update':
    put:
      tags:
        - BQ - Reference
      summary: UpBQ Update details about a reference entry for the customer
      description: UpBQ Update details about a reference entry for the customer
      operationId: UpdateReference
      parameters:
        - $ref: '#/components/parameters/partyreferencedatadirectoryid'
        - $ref: '#/components/parameters/referenceid'
      requestBody:
        $ref: '#/components/requestBodies/Reference'
      responses:
        '200':
          $ref: '#/components/responses/Reference'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyReferenceDataDirectory/{partyreferencedatadirectoryid}/Reference/{referenceid}/Retrieve':
    get:
      tags:
        - BQ - Reference
      summary: ReBQ Retrieve details about reference entries in the directory
      description: ReBQ Retrieve details about reference entries in the directory
      operationId: RetrieveReference
      parameters:
        - $ref: '#/components/parameters/partyreferencedatadirectoryid'
        - $ref: '#/components/parameters/referenceid'
      responses:
        '200':
          $ref: '#/components/responses/Reference'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyReferenceDataDirectory/{partyreferencedatadirectoryid}/Associations/{associationsid}/Update':
    put:
      tags:
        - BQ - Associations
      summary: UpBQ Update details about an association entry for the customer
      description: UpBQ Update details about an association entry for the customer
      operationId: UpdateAssociations
      parameters:
        - $ref: '#/components/parameters/partyreferencedatadirectoryid'
        - $ref: '#/components/parameters/associationsid'
      requestBody:
        $ref: '#/components/requestBodies/Associations'
      responses:
        '200':
          $ref: '#/components/responses/Associations'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyReferenceDataDirectory/{partyreferencedatadirectoryid}/Associations/{associationsid}/Retrieve':
    get:
      tags:
        - BQ - Associations
      summary: ReBQ Retrieve details about association entries in the directory record
      description: ReBQ Retrieve details about association entries in the directory record
      operationId: RetrieveAssociations
      parameters:
        - $ref: '#/components/parameters/partyreferencedatadirectoryid'
        - $ref: '#/components/parameters/associationsid'
      responses:
        '200':
          $ref: '#/components/responses/Associations'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyReferenceDataDirectory/{partyreferencedatadirectoryid}/Demographics/{demographicsid}/Update':
    put:
      tags:
        - BQ - Demographics
      summary: UpBQ Update details about a customer's demographic entry
      description: UpBQ Update details about a customer's demographic entry
      operationId: UpdateDemographics
      parameters:
        - $ref: '#/components/parameters/partyreferencedatadirectoryid'
        - $ref: '#/components/parameters/demographicsid'
      requestBody:
        $ref: '#/components/requestBodies/Demographics'
      responses:
        '200':
          $ref: '#/components/responses/Demographics'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyReferenceDataDirectory/{partyreferencedatadirectoryid}/Demographics/{demographicsid}/Retrieve':
    get:
      tags:
        - BQ - Demographics
      summary: ReBQ Retrieve details about customer demographics entries in the directory
      description: ReBQ Retrieve details about customer demographics entries in the directory
      operationId: RetrieveDemographics
      parameters:
        - $ref: '#/components/parameters/partyreferencedatadirectoryid'
        - $ref: '#/components/parameters/demographicsid'
      responses:
        '200':
          $ref: '#/components/responses/Demographics'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyReferenceDataDirectory/{partyreferencedatadirectoryid}/BankRelations/{bankrelationsid}/Update':
    put:
      tags:
        - BQ - BankRelations
      summary: UpBQ Update details about a customer's bank relations entry for the customer
      description: UpBQ Update details about a customer's bank relations entry for the customer
      operationId: UpdateBankRelations
      parameters:
        - $ref: '#/components/parameters/partyreferencedatadirectoryid'
        - $ref: '#/components/parameters/bankrelationsid'
      requestBody:
        $ref: '#/components/requestBodies/BankRelations'
      responses:
        '200':
          $ref: '#/components/responses/BankRelations'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyReferenceDataDirectory/{partyreferencedatadirectoryid}/BankRelations/{bankrelationsid}/Retrieve':
    get:
      tags:
        - BQ - BankRelations
      summary: ReBQ Retrieve details about customer bank relations entries in the directory
      description: ReBQ Retrieve details about customer bank relations entries in the directory
      operationId: RetrieveBankRelations
      parameters:
        - $ref: '#/components/parameters/partyreferencedatadirectoryid'
        - $ref: '#/components/parameters/bankrelationsid'
      responses:
        '200':
          $ref: '#/components/responses/BankRelations'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyReferenceDataDirectory/{partyreferencedatadirectoryid}/Associations/Register':
    post:
      tags:
        - BQ - Associations
      summary: Capture Association Details
      description: Capture Association Details
      operationId: RegisterAssociations
      parameters:
        - $ref: '#/components/parameters/partyreferencedatadirectoryid'
      requestBody:
        $ref: '#/components/requestBodies/Associations'
      responses:
        '200':
          $ref: '#/components/responses/Associations'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: The type of relationship (e.g. relationship manager)
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: "Name by which a party is known and which is usually used to identify that party. (ISO20022)\n"
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ' OBExternalPartyType1Code| ()|Standard|UK Open Banking ()'
    datetime:
      type: object
      properties:
        DateTimeContent:
          type: string
          description: ''
          format: string
        TimeZoneCode:
          type: string
          description: ''
          format: string
        DaylightSavingIndicator:
          type: string
          description: ''
          format: string
      description: Value of the date type ISODateTime|ISODateTime (https://www.iso20022.org/standardsrepository/type/ISODateTime)|Standard|ISO20022 BM ()
    partyidentificationtypevalues:
      enum:
        - Taxidentificationnumber
        - Nationalregistrationnumber
        - Registrationauthorityidentification
        - LEI(LegalEntityIdentifier)
        - Alienregistrationnumber
        - Passportnumber
        - Taxexemptidentificationnumber
        - Corporateidentification
        - Driverlicensenumber
        - Foreigninvestmentidentitynumber
        - Socialsecuritynumber
        - Identitycardnumber
        - Concat
        - Nationalregistrationidentificationnumber
      type: string
      description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC.\r\n"
    value:
      type: object
      properties:
        Value:
          type: string
          description: "Data or set of data \n\n- A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)"
          format: datatype
      description: ''
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    partylegalstructuretypevalues:
      enum:
        - Individual
        - CommunityInterestCompany
        - CharitableIncorporatedOrganisation
        - Co-Operative
        - Charity
        - GeneralPartnership
        - LimitedLiabilityPartnership
        - ScottishLimitedPartnership
        - LimitedPartnership
        - PrivateLimitedCompany
        - PublicLimitedCompany
        - Sole(SoleTrader)
      type: string
      description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - \r\n"
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
        PartyLegalStructureType:
          $ref: '#/components/schemas/partylegalstructuretypevalues'
      description: Reference to the associated customer (can currently be a person or a company) Party|Party (https://www.iso20022.org/standardsrepository/type/Party)|Standard|ISO20022BM ()
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: Reference to the associated employee or unit
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: ''
    partyrelationship:
      type: object
      properties:
        RelationshipType:
          $ref: '#/components/schemas/text'
        RelationshipValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        RelationshipStartDate:
          $ref: '#/components/schemas/datetime'
        RelationshipEndDate:
          $ref: '#/components/schemas/datetime'
        RelationshipLifecycleStatus:
          $ref: '#/components/schemas/status'
      description: ''
    BankRelations:
      type: object
      properties:
        BankRelationType:
          $ref: '#/components/schemas/text'
        BusinessUnitEmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        BankRelationReference:
          $ref: '#/components/schemas/partyrelationship'
      description: "\"An assertion or statement with regard to a concept, a characteristic.\n\nExamples: Product pricing rules, Customer reference details\n\nA descriptor can be atomic or composed.\"\nProspect Management"
    Demographics:
      type: object
      properties:
        Socio-EconomicClassification:
          $ref: '#/components/schemas/text'
        EthnicityReligion:
          $ref: '#/components/schemas/text'
        Employment:
          $ref: '#/components/schemas/involvedparty'
        EmploymentHistory:
          $ref: '#/components/schemas/text'
        EducationHistory:
          $ref: '#/components/schemas/text'
        ServicingConstraints:
          $ref: '#/components/schemas/text'
      description: "\"An assertion or statement with regard to a concept, a characteristic.\n\nExamples: Product pricing rules, Customer reference details\n\nA descriptor can be atomic or composed.\"\nProspect Management"
    financialdocumenttypevalues:
      enum:
        - Meteredserviceinvoice
        - Creditnoterelatedtofinancialadjustment
        - Debitnoterelatedtofinancialadjustment
        - Commercialinvoice
        - Creditnote
        - Debitnote
        - Hireinvoice
        - Selfbilledinvoice
        - Remittanceadvicemessage
        - Relatedpaymentinstruction
        - Commercialcontract
        - Foreignexchangedealreference
        - Statementofaccount
        - Dispatchadvice
        - Purchaseorder
        - Structuredcommunicationreference
        - Billoflading
        - Voucher
        - Accountreceivableopenitem
        - Tradeservicesutilitytransaction
        - Cashierreceipt
        - Customerreceipt
        - Journal
        - Salereceipt
      type: string
      description: ">\r\n* `Meteredserviceinvoice` - Document is an invoice claiming payment for the supply of metered services, for example gas or electricity supplied to a fixed meter.\r\n* `Creditnoterelatedtofinancialadjustment` - Document is a credit note for the final amount settled for a commercial transaction.\r\n* `Debitnoterelatedtofinancialadjustment` - Document is a debit note for the final amount settled for a commercial transaction.\r\n* `Commercialinvoice` - Document is an invoice.\r\n* `Creditnote` - Document is a credit note.\r\n* `Debitnote` - Document is a debit note.\r\n* `Hireinvoice` - Document is an invoice for the hiring of human resources or renting goods or equipment.\r\n* `Selfbilledinvoice` - Document is an invoice issued by the debtor.\r\n* `Remittanceadvicemessage` - Document is a remittance advice sent separately from the current transaction.\r\n* `Relatedpaymentinstruction` - Document is a linked payment instruction to which the current payment instruction is related, for example, in a cover scenario.\r\n* `Commercialcontract` - Document is an agreement between the parties, stipulating the terms and conditions of the delivery of goods or services.\r\n* `Foreignexchangedealreference` - Document is a pre-agreed or pre-arranged foreign exchange transaction to which the payment transaction refers.\r\n* `Statementofaccount` - Document is a statement of the transactions posted to the debtor's account at the supplier.\r\n* `Dispatchadvice` - Document is a dispatch advice.\r\n* `Purchaseorder` - Document is a purchase order.\r\n* `Structuredcommunicationreference` - Document is a structured communication reference provided by the creditor to identify the referred transaction.\r\n* `Billoflading` - Document is a shipping notice.\r\n* `Voucher` - Document is an electronic payment document.\r\n* `Accountreceivableopenitem` - Document is a payment that applies to a specific source document.\r\n* `Tradeservicesutilitytransaction` - Document is a transaction identifier as assigned by the Trade Services Utility.\r\n* `Cashierreceipt` - When the Sale system print the Cashier copy of the Payment receipt.\r\n* `Customerreceipt` - When the Sale System requires   the POI system to print the Customer receipt.\r\n* `Journal` - When the POI or the Sale System wants to store a message on the journal printer or electronic journal of the Sale Terminal (it is sometimes a Sale Logging/Journal Printer).\r\n* `Salereceipt` - When the Sale System requires the POI system to print the Sale receipt.\r\n"
    documentdatetimetypevalues:
      enum:
        - CreationDate
        - CapturingDate
        - VersionDate
        - ValueDate
        - IssueDate
      type: string
      description: ">\r\n* `CreationDate` - \r\n* `CapturingDate` - \r\n* `VersionDate` - \r\n* `ValueDate` - \r\n* `IssueDate` - \r\n"
    document:
      type: object
      properties:
        DocumentIdentification:
          $ref: '#/components/schemas/identifier'
        DocumentVersion:
          type: string
          description: ''
          format: number
        DocumentType:
          $ref: '#/components/schemas/financialdocumenttypevalues'
        DocumentStatus:
          $ref: '#/components/schemas/status'
        DocumentDateTime:
          $ref: '#/components/schemas/datetime'
        DocumentName:
          $ref: '#/components/schemas/name'
        DocumentDateTimeType:
          $ref: '#/components/schemas/documentdatetimetypevalues'
        DocumentPurpose:
          $ref: '#/components/schemas/text'
        DocumentFormat:
          $ref: '#/components/schemas/text'
        DocumentSubject:
          $ref: '#/components/schemas/text'
        DocumentDescription:
          $ref: '#/components/schemas/text'
        DocumentValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
      description: ''
    partydocumenttypevalues:
      enum:
        - WorkDocument
        - CertificationDocument
        - PersonalDocument
      type: string
      description: ">\r\n* `WorkDocument` - \r\n* `CertificationDocument` - \r\n* `PersonalDocument` - \r\n"
    partydocument:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        DocumentReference:
          $ref: '#/components/schemas/document'
        PartyDocumentType:
          $ref: '#/components/schemas/partydocumenttypevalues'
      description: Details about and extracted from government issued documents (e.g. driving license/passport details)
    documentdirectoryentry:
      type: object
      properties:
        DocumentDirectoryEntryIdentification:
          type: string
          description: Identification allowing the retrieval of a document from a Document Directory
          format: string
      description: The document reference for associated documents
    country:
      type: object
      properties:
        NationalRegulatoryAuthority:
          $ref: '#/components/schemas/involvedparty'
      description: The customer nationality and history as appropriate
    postaladdresstypevalues:
      enum:
        - Business
        - Correspondence
        - Deliveryto
        - Mailto
        - Pobox
        - Postal
        - Residential
        - Statement
      type: string
      description: ">\r\n* `Business` - \r\n* `Correspondence` - \r\n* `Deliveryto` - \r\n* `Mailto` - \r\n* `Pobox` - \r\n* `Postal` - \r\n* `Residential` - \r\n* `Statement` - \r\n"
    geographicalareatypevalues:
      enum:
        - Continent
        - Country
        - State
        - District
        - Province
        - Town
        - City
        - Region
      type: string
      description: ">\r\n* `Continent` - \r\n* `Country` - \r\n* `State` - \r\n* `District` - \r\n* `Province` - \r\n* `Town` - \r\n* `City` - \r\n* `Region` - \r\n"
    postaladdress:
      type: object
      properties:
        AddressType:
          $ref: '#/components/schemas/postaladdresstypevalues'
        AddressLine:
          $ref: '#/components/schemas/text'
        StreetName:
          $ref: '#/components/schemas/name'
        BuildingNumber:
          type: string
          description: Number that identifies the position of a building on a street.
          format: number
        PostCode:
          $ref: '#/components/schemas/identifier'
        TownName:
          $ref: '#/components/schemas/name'
        CountrySubDivision:
          $ref: '#/components/schemas/geographicalareatypevalues'
        Country:
          $ref: '#/components/schemas/country'
        Department:
          $ref: '#/components/schemas/text'
        SubDepartment:
          $ref: '#/components/schemas/text'
      description: Their given residential address
    contactpointtypevalues:
      enum:
        - ElectronicAddress
        - PostalAddress
        - PhoneNumber
        - Socialnetworkaddress
      type: string
      description: ">\r\n* `ElectronicAddress` - Address which is accessed by electronic means. ISO20022\r\n* `PostalAddress` - Information that locates and identifies a specific address. ISO20022\r\n* `PhoneNumber` - Collection of information that identifies a phone address. ISO20022\r\n* `Socialnetworkaddress` - A social network such as Facebook, Twitter, etc.\r\n"
    contactpoint:
      type: object
      properties:
        ContactPointType:
          $ref: '#/components/schemas/contactpointtypevalues'
      description: The given email address
    politicalexposuretypevalues:
      enum:
        - Politicalexposureforeign
        - Politicalexposuredomestic
        - Nopoliticalexposure
      type: string
      description: ">\r\n* `Politicalexposureforeign` - \r\n* `Politicalexposuredomestic` - \r\n* `Nopoliticalexposure` - \r\n"
    Reference:
      type: object
      properties:
        PartyLegalEntityReference:
          $ref: '#/components/schemas/party'
        PartyNameSalutation:
          $ref: '#/components/schemas/name'
        GovernmentIssuedIdentityReference:
          $ref: '#/components/schemas/partyidentification'
        GovernmentIssuedDocumentDetails:
          $ref: '#/components/schemas/partydocument'
        DocumentDirectoryEntryInstanceReference:
          $ref: '#/components/schemas/documentdirectoryentry'
        ResidencyStatus:
          $ref: '#/components/schemas/status'
        DateofBirth:
          $ref: '#/components/schemas/datetime'
        Nationality:
          $ref: '#/components/schemas/country'
        ResidentialAddress:
          $ref: '#/components/schemas/postaladdress'
        eMailAddress:
          $ref: '#/components/schemas/contactpoint'
        CellPhoneNumber:
          $ref: '#/components/schemas/contactpoint'
        SocialNetworkContacts:
          $ref: '#/components/schemas/contactpoint'
        PoliticalExposureType:
          $ref: '#/components/schemas/politicalexposuretypevalues'
        PoliticalExposureDescriptionRecord:
          $ref: '#/components/schemas/text'
        CorporateCustomerReference:
          $ref: '#/components/schemas/involvedparty'
        CorporateCustomerLegalEntityReference:
          $ref: '#/components/schemas/involvedparty'
        CorporateAddress:
          $ref: '#/components/schemas/postaladdress'
        CompanyOfficerReference:
          $ref: '#/components/schemas/involvedparty'
        CompanyOfficerRole:
          $ref: '#/components/schemas/partyrole'
        CustomerSinceDate:
          $ref: '#/components/schemas/datetime'
        PartyFullLegalName:
          $ref: '#/components/schemas/name'
        PartyLegalStructure:
          $ref: '#/components/schemas/partylegalstructuretypevalues'
        PartyAddress:
          $ref: '#/components/schemas/postaladdress'
        PartyCountryOfResidence:
          $ref: '#/components/schemas/country'
      description: "\"An assertion or statement with regard to a concept, a characteristic.\n\nExamples: Product pricing rules, Customer reference details\n\nA descriptor can be atomic or composed.\"\nProspect Management"
    party_partyrelationshiptypevalues:
      enum:
        - PartyIsParentOfParty
        - PartyIsSubsidiaryOfParty
        - PartyIsCertifiedByParty
        - PartyIsMarriedToParty
        - PartyActsOnBehalfOfParty
        - PartyIsContactPointForParty
        - PartyIsTrustedByParty
        - PartyIsThePowerOfAttorneyForParty
      type: string
      description: ">\r\n* `PartyIsParentOfParty` - \r\n* `PartyIsSubsidiaryOfParty` - \r\n* `PartyIsCertifiedByParty` - \r\n* `PartyIsMarriedToParty` - \r\n* `PartyActsOnBehalfOfParty` - \r\n* `PartyIsContactPointForParty` - \r\n* `PartyIsTrustedByParty` - \r\n* `PartyIsThePowerOfAttorneyForParty` - \r\n"
    subject:
      type: object
      properties:
        Subject:
          type: string
          description: A thing that is discussed or dealt whit in agreement/arrangement about doing or not doing (as action) something.
          format: class
      description: ''
    arrangementtypevalues:
      enum:
        - SweepArrangement
        - WithdrawalArrangement
        - DepositArrangement
        - InterestArrangement
        - FeeArrangement
        - LienArrangement
        - InformationArrangement
        - PaymentArrangement
        - EntitlementArrangement
        - PeriodArrangement
        - CollateralArrangement
        - LimitArrangement
        - AccessArrangement
        - CardPaymentArrangement
        - StandingOrderArrangement
        - OverdraftArrangement
        - RepaymentArrangement
        - StatementArrangement
        - CreditTransferArrangement
        - ProductAndServiceArrangement
        - FactoringArrangement
        - RolloverArrangement
        - RestructuringArrangement
        - InsuranceArrangement
        - CollectionArrangement
        - UnderwritingArrangement
        - TerminationArrangement
        - MaturityArrangement
      type: string
      description: ">\r\n* `SweepArrangement` - An arrangement into which is promised for the set-up and execution of structured sweeps to and from the facility to a linked account.\r\n* `WithdrawalArrangement` - An arrangement into which is promised to deliver Withdraw Service  to take fund out of an account. \r\n* `DepositArrangement` - An arrangement into which is promised to deliver Deposit Service  to place funds into an account for safekeeping. \r\n* `InterestArrangement` - An arrangement into which is promised to apply a pricing element expressed in a percentage  to a principal amount.\r\n* `FeeArrangement` - An arrangement into which is promised to apply a charge for services rendered. \r\n* `LienArrangement` - An arrangement into which is promised for placing a lien or block on the account for a specified purpose, amount, and period. \r\n* `InformationArrangement` - An arrangement concerning the information the bank will provide about the agreement/account\r\n* `PaymentArrangement` - An arrangement into which is promised to deliver a specific payment service including regular payments, standing orders, direct debits and bill pay instructions. \r\n* `EntitlementArrangement` - Right or obligation linked to the involvement of a party in an agreement\r\n* `PeriodArrangement` - \r\n* `CollateralArrangement` - An arrangement into which is promised for handling the oversight of the allocation, valuation and administration of collateral associated with the facility. \r\n* `LimitArrangement` - An arrangement to limit something\ne.g., the number of transaction per week, the amount of money allowed to withdraw per week/day and etc. \r\n* `AccessArrangement` - An arrangement that allows or restricts the access to a service or product, channel or device through a specific access point\r\n* `CardPaymentArrangement` - An arrangement into which is promised to deliver Card payment Service to execute payment transactions through a payment card, including online payments. \r\n* `StandingOrderArrangement` - An arrangement into which is promised to deliver Standing Order Service to make regular transfers on given dates to a named beneﬁciary. \r\n* `OverdraftArrangement` - An arrangement into which is promised to deliver Overdraft Service  that allows fund transfer even if there is no provision on the account. \r\n* `RepaymentArrangement` - An arrangement into which is promised for paying back money previously borrowed from a lender. \r\n* `StatementArrangement` - An arrangement into which is promised to deliver a reporting service on payment transactions registered on an account. \r\n* `CreditTransferArrangement` - An arrangement into which is promised to allow a payer to transfer fund to a beneficiary. \r\n* `ProductAndServiceArrangement` - \r\n* `FactoringArrangement` - \r\n* `RolloverArrangement` - Arrangement stipulating the modalities for an automatic renewal of the agreement\n\ni.e. the replacement of the agreement with a new one without renewed negociation and witout explicit agreement of the customer \r\n* `RestructuringArrangement` - \r\n* `InsuranceArrangement` - \r\n* `CollectionArrangement` - An arrangement into which is promised to collect past-due debts from borrowers\r\n* `UnderwritingArrangement` - A contractual agreement between parties that commits the underwriter to assuming risk.\r\n* `TerminationArrangement` - \r\n* `MaturityArrangement` - \r\n"
    modalitytypevalues:
      enum:
        - AllocationModality
        - CalculationModality
        - DerivationModality
        - PaymentModality
        - ProcessingModality
        - ApplicationModality
        - DeliveryModality
      type: string
      description: ">\r\n* `AllocationModality` - \r\n* `CalculationModality` - \r\n* `DerivationModality` - \r\n* `PaymentModality` - \r\n* `ProcessingModality` - \r\n* `ApplicationModality` - \r\n* `DeliveryModality` - \r\n"
    servicearrangementmodality:
      type: object
      properties:
        ServiceArrangementModalityType:
          $ref: '#/components/schemas/modalitytypevalues'
      description: ''
    partyobligationorentitlement:
      type: object
      properties:
        ObligationOrEntitlementSubject:
          $ref: '#/components/schemas/subject'
        ObligationOrEntitlementType:
          $ref: '#/components/schemas/arrangementtypevalues'
        ObligationOrEntitlementModality:
          $ref: '#/components/schemas/servicearrangementmodality'
        ObligationOrEntitlementDefinition:
          $ref: '#/components/schemas/text'
      description: Description of the rights or obligations granted to the associate
    productagreementtypevalues:
      enum:
        - CurrentAccountAgreement
        - SavingsAccountAgreement
        - BrokeredProductAgreement
        - ConsumerLoanAgreement
        - MortgageLoanAgreement
        - DirectDebitServiceAgreement
      type: string
      description: ">\r\n* `CurrentAccountAgreement` - \r\n* `SavingsAccountAgreement` - \r\n* `BrokeredProductAgreement` - \r\n* `ConsumerLoanAgreement` - \r\n* `MortgageLoanAgreement` - \r\n* `DirectDebitServiceAgreement` - \r\n"
    productidentificationtypevalues:
      enum:
        - ISINCode
        - PackageCode
        - Buyersitemnumber
        - Commercialdescriptioncodename
        - EAN
        - Harmonizedtariffcodename
        - Manufacturersitemnumber
        - Modelnumber
        - Partnumber
        - Quotacategory
        - Stylenumber
        - Suppliersitemnumber
        - Universalproductcode
      type: string
      description: ">\r\n* `ISINCode` - \r\n* `PackageCode` - \r\n* `Buyersitemnumber` - Product identifier assigned by the buyer.\r\n* `Commercialdescriptioncodename` - A code to identify a product based on applicable commercial conditions.\r\n* `EAN` - The unique EAN (European Article Number) code.\r\n* `Harmonizedtariffcodename` - Classification of goods as developed by the Customs Cooperation council.\r\n* `Manufacturersitemnumber` - Product identifier as assigned by the manufacturer.\r\n* `Modelnumber` - Reference number assigned by the manufacturer to differentiate variations in similar products in a class or group.\r\n* `Partnumber` - Reference assigned by the manufacturer to a product part.\r\n* `Quotacategory` - Product identifier used by the retail industry.\r\n* `Stylenumber` - Identification of the style of a product.\r\n* `Suppliersitemnumber` - Number assigned to an article by the supplier of that article.\r\n* `Universalproductcode` - Number assigned to a manufacturer's product by the Product Code Council.\r\n"
    productidentification:
      type: object
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/identifier'
        ProductIdentificationType:
          $ref: '#/components/schemas/productidentificationtypevalues'
      description: The identifier of product e.g. ISIN Code.
    bankingproducttypevalues:
      enum:
        - LoanProduct
        - CurrentAccountProduct
        - SavingAccountProduct
        - BrokeredProduct
        - TermDepositProduct
      type: string
      description: ">\r\n* `LoanProduct` - \r\n* `CurrentAccountProduct` - \r\n* `SavingAccountProduct` - \r\n* `BrokeredProduct` - \r\n* `TermDepositProduct` - \r\n"
    productlifecyclestatustypevalues:
      enum:
        - Initiated
        - Announced
        - Sold
        - Obsolete
        - Active
      type: string
      description: ">\r\n* `Initiated` - \r\n* `Announced` - \r\n* `Sold` - \r\n* `Obsolete` - \r\n* `Active` - \r\n"
    productlifecyclestatus:
      type: object
      properties:
        ProductLifecycleStatus:
          $ref: '#/components/schemas/status'
        ProductLifecycleStatusType:
          $ref: '#/components/schemas/productlifecyclestatustypevalues'
      description: 'Refers to the lifecycle of a product (e.g., initiated, announced, active, obsolete, withdrawn).'
    bankingproduct:
      type: object
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/productidentification'
        ProductType:
          $ref: '#/components/schemas/bankingproducttypevalues'
        ProductLifecycleStatus:
          $ref: '#/components/schemas/productlifecyclestatus'
        ProductPriority:
          $ref: '#/components/schemas/text'
        ProductDescription:
          $ref: '#/components/schemas/text'
        ProductVersion:
          $ref: '#/components/schemas/text'
        ProductName:
          $ref: '#/components/schemas/name'
      description: ''
    date:
      type: object
      properties:
        DateContent:
          type: string
          description: ''
          format: string
      description: Date on which the agreement was signed by all parties. (ISO20022)
    agreementtypevalues:
      enum:
        - CustomerAgreement
        - SupplierAgreement
        - BrokerAgreement
        - SalesAgreement
        - PurchaseAgreement
        - MaintenanceAgreement
        - ProductAgreement
        - ProductSalesAgreement
        - ResourceAgreement
      type: string
      description: ">\r\n* `CustomerAgreement` - \r\n* `SupplierAgreement` - \r\n* `BrokerAgreement` - \r\n* `SalesAgreement` - \r\n* `PurchaseAgreement` - \r\n* `MaintenanceAgreement` - \r\n* `ProductAgreement` - \r\n* `ProductSalesAgreement` - \r\n* `ResourceAgreement` - \r\n"
    agreementlifecyclestatustypevalues:
      enum:
        - Offered
        - Confirmed
        - Completed
        - Signed
        - Terminated
        - Rejected
      type: string
      description: ">\r\n* `Offered` - \r\n* `Confirmed` - \r\n* `Completed` - \r\n* `Signed` - \r\n* `Terminated` - \r\n* `Rejected` - \r\n"
    agreementlifecyclestatus:
      type: object
      properties:
        AgreementLifecycleStatus:
          $ref: '#/components/schemas/status'
        AgreementLifecycleStatusType:
          $ref: '#/components/schemas/agreementlifecyclestatustypevalues'
      description: 'A characteristic of agreement which refers to the LifecycleStatus of agreement (e.g., potential, offered, confirmed, completed, signed, terminated).'
    agreement:
      type: object
      properties:
        AgreementSignedDate:
          $ref: '#/components/schemas/date'
        AgreementType:
          $ref: '#/components/schemas/agreementtypevalues'
        AgreementValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        AgreementVersion:
          $ref: '#/components/schemas/text'
        AgreementStatus:
          $ref: '#/components/schemas/agreementlifecyclestatus'
        AgreementSubjectMatter:
          $ref: '#/components/schemas/text'
        AgreementIdentification:
          $ref: '#/components/schemas/identifier'
        AgreementDate:
          $ref: '#/components/schemas/datetime'
        AgreementDescription:
          $ref: '#/components/schemas/text'
      description: ''
    productagreement:
      type: object
      properties:
        Type:
          $ref: '#/components/schemas/productagreementtypevalues'
        ProductReference:
          $ref: '#/components/schemas/bankingproduct'
        AgreementReference:
          $ref: '#/components/schemas/agreement'
      description: Reference to a product or service where the association is linked in some manner (e.g. guarantor)
    party_partyrelationship:
      type: object
      properties:
        RelationshipType:
          $ref: '#/components/schemas/party_partyrelationshiptypevalues'
        FromParty:
          $ref: '#/components/schemas/party'
        ToParty:
          $ref: '#/components/schemas/party'
      description: Reference to individuals with specific representation rights (e.g. a lawyer with power of attorney)
    productagreementinvolvement:
      type: object
      properties:
        InvolvementType:
          type: string
          description: 69e31683-4d3c-ee11-8440-06fceca49739
          format: 4b6dbb39-4c1a-ee11-8b2e-a402b9460f22
        PartyReference:
          type: string
          description: 6f53fd37-8257-e911-8237-0645314e65ac
          format: 4b6dbb39-4c1a-ee11-8b2e-a402b9460f22
        AgreementReference:
          type: string
          description: a05fc8be-24fd-ec11-83ad-0635e6952d6f
          format: 4b6dbb39-4c1a-ee11-8b2e-a402b9460f22
      description: ''
    Associations:
      type: object
      properties:
        EmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        AssociateReference:
          $ref: '#/components/schemas/involvedparty'
        AssociateType:
          $ref: '#/components/schemas/party_partyrelationshiptypevalues'
        AssociateObligationorDependencyDescription:
          $ref: '#/components/schemas/partyobligationorentitlement'
        AssociationValidFromToDate:
          $ref: '#/components/schemas/datetimeperiod'
        ProductInstanceReference:
          $ref: '#/components/schemas/productagreement'
        PreferredBeneficiary:
          $ref: '#/components/schemas/involvedparty'
        ProxyRepresentativePowerofAttorneyReference:
          $ref: '#/components/schemas/party_partyrelationship'
        ProductInstanseInvolvementReference:
          $ref: '#/components/schemas/productagreementinvolvement'
      description: "\"An assertion or statement with regard to a concept, a characteristic.\n\nExamples: Product pricing rules, Customer reference details\n\nA descriptor can be atomic or composed.\"\nProspect Management"
    directoryentrydatetypevalues:
      enum:
        - OpenDate
        - RefreshDate
      type: string
      description: "Key dates associated with the directory entry (e.g. open date, refresh date) ||\r\n|"
    PartyReferenceDataDirectoryEntry:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        DirectoryEntryDateType:
          $ref: '#/components/schemas/directoryentrydatetypevalues'
        DirectoryEntryDate:
          $ref: '#/components/schemas/datetime'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
      description: Capture and maintain reference information about some type of entitity within Party Reference Data Directory.
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    PartyReferenceDataDirectoryEntry:
      description: PartyReferenceDataDirectoryEntry
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PartyReferenceDataDirectoryEntry'
    Demographics:
      description: Demographics
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Demographics'
    Reference:
      description: Reference
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Reference'
    Associations:
      description: Associations
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Associations'
    BankRelations:
      description: BankRelations
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BankRelations'
  parameters:
    partyreferencedatadirectoryid:
      name: partyreferencedatadirectoryid
      in: path
      required: true
      style: simple
      schema:
        type: string
    demographicsid:
      name: demographicsid
      in: path
      required: true
      style: simple
      schema:
        type: string
    referenceid:
      name: referenceid
      in: path
      required: true
      style: simple
      schema:
        type: string
    associationsid:
      name: associationsid
      in: path
      required: true
      style: simple
      schema:
        type: string
    bankrelationsid:
      name: bankrelationsid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    PartyReferenceDataDirectoryEntry:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PartyReferenceDataDirectoryEntry'
      required: true
    Demographics:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Demographics'
      required: true
    Reference:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Reference'
      required: true
    Associations:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Associations'
      required: true
    BankRelations:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BankRelations'
      required: true