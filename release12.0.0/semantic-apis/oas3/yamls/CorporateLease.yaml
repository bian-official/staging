openapi: 3.0.1
info:
  title: Corporate Lease
  description: The Corporate Lease product provides corporate customers with loans to support leasing activity for property and equipment under an umbrella leasing arrangement
  contact:
    name: BIAN
    url: https://bian.org
  version: 12.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/CorporateLease/12.0.0
paths:
  '/CorporateLease/{corporateleaseid}/Control':
    put:
      tags:
        - CR - CorporateLeaseFacility
      summary: CoCR Control the processing of Corporate Lease Facility
      description: CoCR Control the processing of Corporate Lease Facility
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/corporateleaseid'
      requestBody:
        $ref: '#/components/requestBodies/CorporateLeaseFacility'
      responses:
        '200':
          $ref: '#/components/responses/CorporateLeaseFacility'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorporateLease/{corporateleaseid}/Exchange':
    put:
      tags:
        - CR - CorporateLeaseFacility
      summary: 'EcCR Accept, verify, etc. aspects of Corporate Lease Facility processing'
      description: 'EcCR Accept, verify, etc. aspects of Corporate Lease Facility processing'
      operationId: Exchange
      parameters:
        - $ref: '#/components/parameters/corporateleaseid'
      requestBody:
        $ref: '#/components/requestBodies/CorporateLeaseFacility'
      responses:
        '200':
          $ref: '#/components/responses/CorporateLeaseFacility'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorporateLease/{corporateleaseid}/Execute':
    put:
      tags:
        - CR - CorporateLeaseFacility
      summary: ExCR Execute an available automated action for Corporate Lease Facility
      description: ExCR Execute an available automated action for Corporate Lease Facility
      operationId: Execute
      parameters:
        - $ref: '#/components/parameters/corporateleaseid'
      requestBody:
        $ref: '#/components/requestBodies/CorporateLeaseFacility'
      responses:
        '200':
          $ref: '#/components/responses/CorporateLeaseFacility'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /CorporateLease/Initiate:
    post:
      tags:
        - CR - CorporateLeaseFacility
      summary: InCR Instantiate a new Corporate Lease Facility
      description: InCR Instantiate a new Corporate Lease Facility
      operationId: Initiate
      requestBody:
        $ref: '#/components/requestBodies/CorporateLeaseFacility'
      responses:
        '200':
          $ref: '#/components/responses/CorporateLeaseFacility'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorporateLease/{corporateleaseid}/Retrieve':
    get:
      tags:
        - CR - CorporateLeaseFacility
      summary: ReCR Retrieve details about any aspect of Corporate Lease Facility
      description: ReCR Retrieve details about any aspect of Corporate Lease Facility
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/corporateleaseid'
      responses:
        '200':
          $ref: '#/components/responses/CorporateLeaseFacility'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorporateLease/{corporateleaseid}/Request':
    put:
      tags:
        - CR - CorporateLeaseFacility
      summary: RqCR Request manual intervention or a decision with respect to Corporate Lease Facility
      description: RqCR Request manual intervention or a decision with respect to Corporate Lease Facility
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/corporateleaseid'
      requestBody:
        $ref: '#/components/requestBodies/CorporateLeaseFacility'
      responses:
        '200':
          $ref: '#/components/responses/CorporateLeaseFacility'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorporateLease/{corporateleaseid}/Update':
    put:
      tags:
        - CR - CorporateLeaseFacility
      summary: UpCR Update details relating to Corporate Lease Facility
      description: UpCR Update details relating to Corporate Lease Facility
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/corporateleaseid'
      requestBody:
        $ref: '#/components/requestBodies/CorporateLeaseFacility'
      responses:
        '200':
          $ref: '#/components/responses/CorporateLeaseFacility'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorporateLease/{corporateleaseid}/Administer/{administerid}/Control':
    put:
      tags:
        - BQ - Administer
      summary: CoBQ Control the processing of Administer
      description: CoBQ Control the processing of Administer
      operationId: ControlAdminister
      parameters:
        - $ref: '#/components/parameters/corporateleaseid'
        - $ref: '#/components/parameters/administerid'
      requestBody:
        $ref: '#/components/requestBodies/Administer'
      responses:
        '200':
          $ref: '#/components/responses/Administer'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorporateLease/{corporateleaseid}/Administer/{administerid}/Exchange':
    put:
      tags:
        - BQ - Administer
      summary: 'EcBQ Accept, verify, etc. aspects of Administer processing'
      description: 'EcBQ Accept, verify, etc. aspects of Administer processing'
      operationId: ExchangeAdminister
      parameters:
        - $ref: '#/components/parameters/corporateleaseid'
        - $ref: '#/components/parameters/administerid'
      requestBody:
        $ref: '#/components/requestBodies/Administer'
      responses:
        '200':
          $ref: '#/components/responses/Administer'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorporateLease/{corporateleaseid}/Fulfill/{fulfillid}/Exchange':
    put:
      tags:
        - BQ - Fulfill
      summary: 'EcBQ Accept, verify, etc. aspects of Fulfill processing'
      description: 'EcBQ Accept, verify, etc. aspects of Fulfill processing'
      operationId: ExchangeFulfill
      parameters:
        - $ref: '#/components/parameters/corporateleaseid'
        - $ref: '#/components/parameters/fulfillid'
      requestBody:
        $ref: '#/components/requestBodies/Fulfill'
      responses:
        '200':
          $ref: '#/components/responses/Fulfill'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorporateLease/{corporateleaseid}/Fulfill/{fulfillid}/Execute':
    put:
      tags:
        - BQ - Fulfill
      summary: ExBQ Execute an available automated action for Fulfill
      description: ExBQ Execute an available automated action for Fulfill
      operationId: ExecuteFulfill
      parameters:
        - $ref: '#/components/parameters/corporateleaseid'
        - $ref: '#/components/parameters/fulfillid'
      requestBody:
        $ref: '#/components/requestBodies/Fulfill'
      responses:
        '200':
          $ref: '#/components/responses/Fulfill'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorporateLease/{corporateleaseid}/Fulfill/Initiate':
    post:
      tags:
        - BQ - Fulfill
      summary: InBQ Instantiate a new Fulfill
      description: InBQ Instantiate a new Fulfill
      operationId: InitiateFulfill
      parameters:
        - $ref: '#/components/parameters/corporateleaseid'
      requestBody:
        $ref: '#/components/requestBodies/Fulfill'
      responses:
        '200':
          $ref: '#/components/responses/Fulfill'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorporateLease/{corporateleaseid}/Administer/{administerid}/Retrieve':
    get:
      tags:
        - BQ - Administer
      summary: ReBQ Retrieve details about any aspect of Administer
      description: ReBQ Retrieve details about any aspect of Administer
      operationId: RetrieveAdminister
      parameters:
        - $ref: '#/components/parameters/corporateleaseid'
        - $ref: '#/components/parameters/administerid'
      responses:
        '200':
          $ref: '#/components/responses/Administer'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorporateLease/{corporateleaseid}/Fulfill/{fulfillid}/Retrieve':
    get:
      tags:
        - BQ - Fulfill
      summary: ReBQ Retrieve details about any aspect of Fulfill
      description: ReBQ Retrieve details about any aspect of Fulfill
      operationId: RetrieveFulfill
      parameters:
        - $ref: '#/components/parameters/corporateleaseid'
        - $ref: '#/components/parameters/fulfillid'
      responses:
        '200':
          $ref: '#/components/responses/Fulfill'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorporateLease/{corporateleaseid}/Administer/{administerid}/Request':
    put:
      tags:
        - BQ - Administer
      summary: RqBQ Request manual intervention or a decision with respect to Administer
      description: RqBQ Request manual intervention or a decision with respect to Administer
      operationId: RequestAdminister
      parameters:
        - $ref: '#/components/parameters/corporateleaseid'
        - $ref: '#/components/parameters/administerid'
      requestBody:
        $ref: '#/components/requestBodies/Administer'
      responses:
        '200':
          $ref: '#/components/responses/Administer'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorporateLease/{corporateleaseid}/Fulfill/{fulfillid}/Request':
    put:
      tags:
        - BQ - Fulfill
      summary: RqBQ Request manual intervention or a decision with respect to Fulfill
      description: RqBQ Request manual intervention or a decision with respect to Fulfill
      operationId: RequestFulfill
      parameters:
        - $ref: '#/components/parameters/corporateleaseid'
        - $ref: '#/components/parameters/fulfillid'
      requestBody:
        $ref: '#/components/requestBodies/Fulfill'
      responses:
        '200':
          $ref: '#/components/responses/Fulfill'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorporateLease/{corporateleaseid}/Administer/{administerid}/Update':
    put:
      tags:
        - BQ - Administer
      summary: UpBQ Update details relating to Administer
      description: UpBQ Update details relating to Administer
      operationId: UpdateAdminister
      parameters:
        - $ref: '#/components/parameters/corporateleaseid'
        - $ref: '#/components/parameters/administerid'
      requestBody:
        $ref: '#/components/requestBodies/Administer'
      responses:
        '200':
          $ref: '#/components/responses/Administer'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorporateLease/{corporateleaseid}/Fulfill/{fulfillid}/Update':
    put:
      tags:
        - BQ - Fulfill
      summary: UpBQ Update details relating to Fulfill
      description: UpBQ Update details relating to Fulfill
      operationId: UpdateFulfill
      parameters:
        - $ref: '#/components/parameters/corporateleaseid'
        - $ref: '#/components/parameters/fulfillid'
      requestBody:
        $ref: '#/components/requestBodies/Fulfill'
      responses:
        '200':
          $ref: '#/components/responses/Fulfill'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    condition:
      type: object
      properties:
        Condition:
          type: string
          description: "Condition is a premise upon which the fulfillment of an agreement depends \n\nGeneral and special arrangements, provisions, requirements, rules, specifications, and standards that form an integral part of an agreement or contract.\n\nRead more: http://www.businessdictionary.com/definition/terms-and-conditions.html\n\n"
          format: class
      description: The required status/situation prior to the implementation of the feature
    schedule:
      type: object
      properties:
        ScheduleType:
          type: string
          description: ''
          format: string
      description: "Timetable to fulfill Corporate Lease Arrangement ||\r\n|"
    businessservicetypevalues:
      type: object
      properties:
        Businessservicetypevalues:
          type: string
          description: ''
          format: enumeration
      description: ''
    businessservice:
      type: object
      properties:
        BusinessServiceType:
          $ref: '#/components/schemas/businessservicetypevalues'
      description: The Corporate Lease Arrangement specific Business Service
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: "The financial accounting unit into which the financial events, with regard to the origination and fulfillment of the agreement in the context of Corporate Lease Arrangement, are entered. ||\r\n|"
    workproducttypevalues:
      enum:
        - Document
        - WorkingPaper
        - ActivityLog
        - Form
        - File
        - MeetingSchedule
        - MeetingMinute
      type: string
      description: ">\r\n* `Document` - \r\n* `WorkingPaper` - \r\n* `ActivityLog` - \r\n* `Form` - \r\n* `File` - File of consolidated notes, evaluations and recommendations for the work task\r\n* `MeetingSchedule` - \r\n* `MeetingMinute` - \r\n"
    workproduct:
      type: object
      properties:
        WorkProductType:
          $ref: '#/components/schemas/workproducttypevalues'
        WorkProductIdentifoication:
          type: string
          description: ''
          format: string
      description: 'Documentation, meeting schedules, notes, reasearch. calculations and any other work products produced by the business service'
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: The name of the product used for marketing purposes from a customer perspective. I.e. what the customer would recognise. (OB) Name|Name (https://www.iso20022.org/standardsrepository/type/Name)|Standard|ISO20022 ()
    Administer:
      type: object
      properties:
        AdministerPreconditions:
          $ref: '#/components/schemas/condition'
        AdministerFeatureSchedule:
          $ref: '#/components/schemas/schedule'
        CorporateLeaseAdministration:
          $ref: '#/components/schemas/businessservice'
        AdministerPostconditions:
          $ref: '#/components/schemas/condition'
        CorporateLeaseAdministrationServiceType:
          $ref: '#/components/schemas/text'
        CorporateLeaseAdministrationServiceDescription:
          $ref: '#/components/schemas/text'
        CorporateLeaseAdministrationServiceInputsandOuputs:
          $ref: '#/components/schemas/text'
        CorporateLeaseAdministrationServiceWorkProduct:
          $ref: '#/components/schemas/workproduct'
        CorporateLeaseAdministrationServiceName:
          $ref: '#/components/schemas/name'
      description: "Fulfill any scheduled and ad-hoc obligations under a service arrangement, most typically for a financial product or facility  within Corporate Lease. \nExample: Perform the scheduled (e.g. statements, standing orders) and ad-hoc/requested (e.g. balance inquiries, fund transfers) fulfillment tasks for a customer current account facility."
    Fulfill:
      type: object
      properties:
        FulfillPreconditions:
          $ref: '#/components/schemas/condition'
        FulfillFeatureSchedule:
          $ref: '#/components/schemas/schedule'
        CorporateLeaseFulfillment:
          $ref: '#/components/schemas/businessservice'
        FulfillPostconditions:
          $ref: '#/components/schemas/condition'
        FulfillCorporateLeaseFulfillmentServiceType:
          $ref: '#/components/schemas/text'
        CorporateLeaseFulfillmentServiceDescription:
          $ref: '#/components/schemas/text'
        CorporateLeaseFulfillmentServiceInputsandOuputs:
          $ref: '#/components/schemas/text'
        CorporateLeaseFulfillmentServiceWorkProduct:
          $ref: '#/components/schemas/workproduct'
        CorporateLeaseFulfillmentServiceName:
          $ref: '#/components/schemas/name'
      description: "Fulfill any scheduled and ad-hoc obligations under a service arrangement, most typically for a financial product or facility  within Corporate Lease. \nExample: Perform the scheduled (e.g. statements, standing orders) and ad-hoc/requested (e.g. balance inquiries, fund transfers) fulfillment tasks for a customer current account facility."
    loanagreement:
      type: object
      properties:
        LoanTermAndCondition:
          $ref: '#/components/schemas/condition'
      description: ''
    CorporateLeaseOutcome:
      type: object
      properties:
        CorporateLeaseFinancialFacility:
          $ref: '#/components/schemas/loanagreement'
        CorporateLeaseWorkProduct:
          $ref: '#/components/schemas/workproduct'
      description: "Fulfill any scheduled and ad-hoc obligations under a service arrangement, most typically for a financial product or facility  within Corporate Lease. \nExample: Perform the scheduled (e.g. statements, standing orders) and ad-hoc/requested (e.g. balance inquiries, fund transfers) fulfillment tasks for a customer current account facility."
    featuretypevalues:
      enum:
        - Fee
        - Interest
        - Withdrawal
        - Deposit
        - Sweep
        - Lien
        - Payment
        - Repayment
        - Limit
        - Overdraft
        - Statement
        - CurrencyExchange
      type: string
      description: "A Classification value that distinguishes between arrangements according to the type of business services within Corporate Lease Arrangement ||\r\n|"
    value:
      type: object
      properties:
        Value:
          type: string
          description: "Data or set of data \n\n- A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)"
          format: datatype
      description: ''
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    datetime:
      type: object
      properties:
        DateTimeContent:
          type: string
          description: ''
          format: string
        TimeZoneCode:
          type: string
          description: ''
          format: string
        DaylightSavingIndicator:
          type: string
          description: ''
          format: string
      description: ''
    partyidentificationtypevalues:
      enum:
        - Taxidentificationnumber
        - Nationalregistrationnumber
        - Registrationauthorityidentification
        - LEI(LegalEntityIdentifier)
        - Alienregistrationnumber
        - Passportnumber
        - Taxexemptidentificationnumber
        - Corporateidentification
        - Driverlicensenumber
        - Foreigninvestmentidentitynumber
        - Socialsecuritynumber
        - Identitycardnumber
        - Concat
        - Nationalregistrationidentificationnumber
      type: string
      description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC.\r\n"
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    partylegalstructuretypevalues:
      enum:
        - Individual
        - CommunityInterestCompany
        - CharitableIncorporatedOrganisation
        - Co-Operative
        - Charity
        - GeneralPartnership
        - LimitedLiabilityPartnership
        - ScottishLimitedPartnership
        - LimitedPartnership
        - PrivateLimitedCompany
        - PublicLimitedCompany
        - Sole(SoleTrader)
      type: string
      description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - \r\n"
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
        PartyLegalStructureType:
          $ref: '#/components/schemas/partylegalstructuretypevalues'
      description: ''
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: Entity that assigns and manages the identification.
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: Identifier within the parent organisation for the product. Must be unique in the organisation.  GenericIdentification|GenericIdentification (https://www.iso20022.org/standardsrepository/type/GenericIdentification)|Standard|ISO20022 BM ()
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: The status of Corporate Lease Arrangement Status |Status  (https://www.iso20022.org/standardsrepository/type/Status)|Standard|ISO20022 BM ()
    feature:
      type: object
      properties:
        FeatureType:
          $ref: '#/components/schemas/text'
        FeatureIdentification:
          $ref: '#/components/schemas/identifier'
        FeatureName:
          $ref: '#/components/schemas/name'
        FeatureLifecycleStatus:
          $ref: '#/components/schemas/status'
        FeatureDescription:
          $ref: '#/components/schemas/text'
      description: "A selected optional business service as subject matter of Corporate Lease Arrangement ||\r\n|"
    loanproducttypevalues:
      enum:
        - ConsumerLoan
        - CorporateLoan
        - MerchandisingLoan
        - MortgageLoan
        - SyndicatedLoan
      type: string
      description: "The type of Corporate Lease Arrangement ||\r\n|"
    leaseagreement:
      type: object
      properties:
        LeaseAgreementType:
          type: string
          description: ff41a9fa-6b5a-eb11-82e3-0696e5690f15
          format: 235adec0-d53a-eb11-82e3-06a412e5ead5
      description: "Reference to the party who is involved in Corporate Lease Arrangement ||\r\n|"
    currencycode:
      type: object
      properties:
        Currencycode:
          type: string
          description: "A code identifying a currency according to ISO-4217.\nA currency is a system of money in general use in a particular country.\n\nCode allocated to a currency, by a maintenance agency, under an international identification scheme as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\". Valid currency codes are registered with the ISO 4217 Maintenance Agency, and consist of three contiguous letters. (ISO20022)\n\n"
          format: datatype
      description: The curreny which is arranged in Corporate Lease Arrangement CurrencyCode|CurrencyCode (https://www.iso20022.org/standardsrepository/type/CurrencyCode)|Standard|ISO20022 BM ()
    regulation:
      type: object
      properties:
        RegulationDefinition:
          type: string
          description: ''
          format: string
      description: "Reference to the regulation which is defined in Corporate Lease Arrangement ||\r\n|"
    rulesettypevalues:
      enum:
        - Policy
        - Regulation
        - Law
        - Guideline
        - Criterion
        - Standard
      type: string
      description: "A Classification that distinguishes between the regularity domains of Corporate Lease Arrangement ||\r\n|"
    jurisdiction:
      type: object
      properties:
        Jurisdiction:
          type: string
          description: Jurisdiction that will be assigned in case of legal dispute.
          format: class
      description: Reference to the jurisdiction that is assigned to Corporate Lease Arrangement in case of legal dispute. Jurisdiction|Jurisdiction (https://www.iso20022.org/standardsrepository/type/Jurisdiction)|Standard|ISO20022 BM ()
    accounttypevalues:
      enum:
        - DebitAccount
        - CreditAccount
        - VostroAcount
        - NostroAccount
        - PaymentAccount
        - SettlementAccount
        - SavingAccount
        - CurrentAccount
        - CashAccount
        - LoanAccount
      type: string
      description: The type of account which is linked to Corporate Lease Arrangement OBExternalAccountSubType1Code| ()|Standard|UK Open Banking ()
    accountstatustypevalues:
      enum:
        - Enabled
        - Disabled
        - Deleted
        - Proforma
        - Pending
      type: string
      description: ">\r\n* `Enabled` - Account can be used for its intended purpose.\r\n* `Disabled` - Account cannot be used for its intended purpose, either temporarily or permanently.\r\n* `Deleted` - Account cannot be used any longer.\r\n* `Proforma` - Account is temporary and can be partially used for its intended purpose. The account will be fully available for use when the account servicer has received all relevant documents.\r\n* `Pending` - Account change is pending approval.\r\n"
    accountstatus:
      type: object
      properties:
        AccountStatus:
          $ref: '#/components/schemas/status'
        AccountStatusType:
          $ref: '#/components/schemas/accountstatustypevalues'
      description: "A characteristic of account which refers to the LifecycleStatus of account like opened, closed, blocked, etc.\n\nSpecifies the current state of an account. (ISO20022)"
    accountidentificationtypevalues:
      enum:
        - BBAN
        - IBAN
        - UPIC
        - AccountNumber
        - PAN
        - Paym
        - Wallet
      type: string
      description: ">\r\n* `BBAN` - Basic Bank Account Number (BBAN) - identifier used nationally by financial institutions, ie, in individual countries, generally as part of a National Account Numbering Scheme(s), to uniquely identify the account of a customer. (ISO20022)\n\n.\r\n* `IBAN` - International Bank Account Number (IBAN) - identifier used internationally by financial institutions to uniquely identify the account of a customer. Further specifications of the format and content of the IBAN can be found in the standard ISO 13616 \"Banking and related financial services - International Bank Account Number (IBAN)\" version 1997-10-01, or later revisions. (ISO20022)\n\nAn identifier used internationally by financial institutions to uniquely identify the account of a customer at a financial institution, as described in the latest edition of the international standard ISO 13616. \"Banking and related financial services - International Bank Account Number (IBAN)\". (OBExternalAccountIdentification4Code)\r\n* `UPIC` - Universal Payment Identification Code (UPIC) - identifier used by the New York Clearing House to mask confidential data, such as bank accounts and bank routing numbers. UPIC numbers remain with business customers, regardless of banking relationship changes. (ISO20022)\r\n* `AccountNumber` - String of characters (mainly numbers) used to identify an account.(ISO20022)\n\nSort Code and Account Number - identifier scheme used in the UK by financial institutions to identify the account of a customer. The identifier is the concatenation of the 6 digit UK sort code and 8 digit account number. (OBExternalAccountIdentification4Code)\nThe regular expression for this identifier is: ^[0-9]{6}[0-9]{8}$\r\n* `PAN` - Primary Account Number - identifier scheme used to identify a card account. (OBExternalAccountIdentification4Code)\r\n* `Paym` - Paym Scheme to make payments via mobile (OBExternalAccountIdentification4Code)\r\n* `Wallet` - A primary and unique account identifier used to identify a wallet.\nAn ASPSP must document on their developer portal, the payment methods that supports this account identifier.(OBExternalAccountIdentification4Code)\r\n"
    accountidentification:
      type: object
      properties:
        AccountIdentificationType:
          $ref: '#/components/schemas/accountidentificationtypevalues'
        AccountIdentification:
          $ref: '#/components/schemas/identifier'
      description: The identifier of account like Account Number.
    accountdatetypevalues:
      enum:
        - OpeningDate
        - ClosingDate
        - BlockingDate
        - MaturityDate
        - LiveDate
      type: string
      description: ">\r\n* `OpeningDate` - Date on which the account and related basic services are effectively operational for the account owner. (ISO20022)\r\n* `ClosingDate` - Date on which the account and related services cease effectively to be operational for the account owner. (ISO20022)\r\n* `BlockingDate` - \r\n* `MaturityDate` - Maturity date for the account.\r\n* `LiveDate` - \r\n"
    accountdate:
      type: object
      properties:
        AccountDateType:
          $ref: '#/components/schemas/accountdatetypevalues'
        AccountDate:
          $ref: '#/components/schemas/datetime'
      description: 'A characteristic of account which refers to LifecycleDate of account (e.g., ClosingDate, OpeningDate, LiveDate, etc.) '
    accounttype:
      type: object
      properties:
        AccountType:
          $ref: '#/components/schemas/accounttypevalues'
        AccountTypeName:
          $ref: '#/components/schemas/name'
      description: 'Specifies the category of account like payment account, loan account, cash account, securities account, etc. '
    amounttypevalues:
      enum:
        - Principal
        - Actual
        - Estimated
        - Maximum
        - Default
        - Replacement
        - Incremental
        - Decremental
        - Reserved
        - Available
        - Used
      type: string
      description: ">\r\n* `Principal` - \r\n* `Actual` - Actual amount.\r\n* `Estimated` - Estimated amount (the final amount could be above or below).\r\n* `Maximum` - Maximum amount (the final amount must be less or equal).\r\n* `Default` - Default amount.\r\n* `Replacement` - Replacement amount.\r\n* `Incremental` - Incremental amount for reservation.\r\n* `Decremental` - Decremental amount for reservation.\r\n* `Reserved` - Reserved or updated reserved amount for reservation.\r\n* `Available` - \r\n* `Used` - \r\n"
    amount:
      type: object
      properties:
        AmountValue:
          $ref: '#/components/schemas/value'
        AmountCurrency:
          $ref: '#/components/schemas/currencycode'
        DecimalPointPosition:
          type: string
          description: "Decimal point position starts calulating from the right\n"
          format: string
        AmountType:
          $ref: '#/components/schemas/amounttypevalues'
      description: ''
    balancetypevalues:
      enum:
        - Openingbalance
        - Closingbalance
        - Currentbalance
        - Availablebalance
        - Ledgerbalance
        - Reservebalance
        - Freebalance
        - Principalbalance
      type: string
      description: ">\r\n* `Openingbalance` - Book balance of the account at the beginning of the account servicer's business day. It always equals the closing book balance from the previous business day. Note: the available balance at the beginning of the account servicer's business day may be different from the closing book balance from the previous business day. (ISO20022)\r\n* `Closingbalance` - Balance of the account at the end of the account servicer's business day. It is the sum of the opening balance at the beginning of the day and all entries booked to the account during the account servicer's business day. (ISO20022)\r\n* `Currentbalance` - Balance of the account at a precise moment in time. (ISO20022)\r\n* `Availablebalance` - Balance of money or securities that is at the disposal of the account owner on the date specified. (ISO20022)\r\n* `Ledgerbalance` - Ledger balance refers to posted transactions (e.g. limit authorisation amount - posted transactions). (ISO20022)\r\n* `Reservebalance` - \r\n* `Freebalance` - \r\n* `Principalbalance` - \r\n"
    debitcreditindicatortvalues:
      enum:
        - Debit
        - Credit
      type: string
      description: ">\r\n* `Debit` - Transaction is a debt entry\r\n* `Credit` - Transaction is a credit entry\r\n"
    accountbalance:
      type: object
      properties:
        BalanceAmount:
          $ref: '#/components/schemas/amount'
        BalanceType:
          $ref: '#/components/schemas/balancetypevalues'
        BalanceDate:
          $ref: '#/components/schemas/datetime'
        BalanceIndicator:
          $ref: '#/components/schemas/debitcreditindicatortvalues'
      description: "The state of the obligations managed on the account, the result of all entries on the account.\n\nNumerical representation of the net increases and decreases in an account at a specific point in time. (ISO20022)\n\nBanking: Amount available in an account for withdrawal or use.\nRead more: http://www.businessdictionary.com/definition/balance.html\n\nBookkeeping: Difference between the debit and credit sides of an account.\nRead more: http://www.businessdictionary.com/definition/balance.html"
    currencytypevalues:
      enum:
        - BaseCurrency
        - ReportingCurrency
        - SecondaryCurrency
        - TransferCurrency
      type: string
      description: ">\r\n* `BaseCurrency` - Base currency of the account. (ISO20022)\n\r\n* `ReportingCurrency` - Currency used to calculate and report the balance and related entries of an account. (ISO20022)\n\r\n* `SecondaryCurrency` - \r\n* `TransferCurrency` - Currency of the amount to be transferred which may be different from the currency of the debtor's account. (ISO20022)\r\n"
    accountcurrency:
      type: object
      properties:
        AccountCurrencyType:
          $ref: '#/components/schemas/currencytypevalues'
        AccountCurrency:
          $ref: '#/components/schemas/currencycode'
      description: ''
    account:
      type: object
      properties:
        AccountStatus:
          $ref: '#/components/schemas/accountstatus'
        AccountIdentification:
          $ref: '#/components/schemas/accountidentification'
        AccountDate:
          $ref: '#/components/schemas/accountdate'
        AccountType:
          $ref: '#/components/schemas/accounttype'
        AccountPurpose:
          $ref: '#/components/schemas/text'
        AccountBalance:
          $ref: '#/components/schemas/accountbalance'
        AccountCurrency:
          $ref: '#/components/schemas/accountcurrency'
        AccountDescription:
          $ref: '#/components/schemas/text'
        AccountName:
          $ref: '#/components/schemas/name'
      description: Reference to the account which is linked to Corporate Lease Arrangement Account|Account  (https://www.iso20022.org/standardsrepository/type/Account)|Standard|ISO20022 BM ()
    obproducttypevalues:
      enum:
        - Businesscurrentaccount
        - Commercialcreditcard
        - Other
        - Personalcurrentaccount
        - Smeloan
      type: string
      description: "Descriptive code for the product category. If ProductType - \"Other\" is chosen, the object OtherProductType must be populated with name, and description. ||\r\n|"
    productidentificationtypevalues:
      enum:
        - ISINCode
        - PackageCode
        - Buyersitemnumber
        - Commercialdescriptioncodename
        - EAN
        - Harmonizedtariffcodename
        - Manufacturersitemnumber
        - Modelnumber
        - Partnumber
        - Quotacategory
        - Stylenumber
        - Suppliersitemnumber
        - Universalproductcode
      type: string
      description: Identifier within the parent organisation for the product. Must be unique in the organisation. ProductIdentifierCode|ProductIdentifierCode (https://www.iso20022.org/standardsrepository/type/ProductIdentifierCode)|Standard|ISO20022 BM ()
    CorporateLeaseFacility:
      type: object
      properties:
        CorporateLeaseFacilityParameterType:
          $ref: '#/components/schemas/featuretypevalues'
        CorporateLeaseFacilitySelectedOption:
          $ref: '#/components/schemas/feature'
        CorporateLeaseFacilityType:
          $ref: '#/components/schemas/loanproducttypevalues'
        CorporateLeaseFacilitySchedule:
          $ref: '#/components/schemas/schedule'
        CorporateLeaseFacilityStatus:
          $ref: '#/components/schemas/status'
        CorporateLeaseFacilityReference:
          $ref: '#/components/schemas/leaseagreement'
        CorporateLeaseFacilityCurrency:
          $ref: '#/components/schemas/currencycode'
        CorporateLeaseFacilityRegulationReference:
          $ref: '#/components/schemas/regulation'
        CorporateLeaseFacilityRegulationType:
          $ref: '#/components/schemas/rulesettypevalues'
        CorporateLeaseFacilityJurisdiction:
          $ref: '#/components/schemas/jurisdiction'
        CorporateLeaseFacilityBookingLocation:
          $ref: '#/components/schemas/text'
        CorporateLeaseFacilityAccountType:
          $ref: '#/components/schemas/accounttypevalues'
        CorporateLeaseFacilityAccountReference:
          $ref: '#/components/schemas/account'
        CorporateLeaseProductName:
          $ref: '#/components/schemas/name'
        CorporateLeaseProductMarketingStateID:
          $ref: '#/components/schemas/identifier'
        CorporateLeaseProductID:
          $ref: '#/components/schemas/identifier'
        CorporateLeaseProductType:
          $ref: '#/components/schemas/obproducttypevalues'
        CorporateLeaseSecondaryProductID:
          $ref: '#/components/schemas/productidentificationtypevalues'
      description: "Fulfill any scheduled and ad-hoc obligations under a service arrangement, most typically for a financial product or facility  within Corporate Lease. \nExample: Perform the scheduled (e.g. statements, standing orders) and ad-hoc/requested (e.g. balance inquiries, fund transfers) fulfillment tasks for a customer current account facility."
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    CorporateLeaseFacility:
      description: CorporateLeaseFacility
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CorporateLeaseFacility'
    Administer:
      description: Administer
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Administer'
    Fulfill:
      description: Fulfill
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Fulfill'
  parameters:
    corporateleaseid:
      name: corporateleaseid
      in: path
      required: true
      style: simple
      schema:
        type: string
    administerid:
      name: administerid
      in: path
      required: true
      style: simple
      schema:
        type: string
    fulfillid:
      name: fulfillid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    CorporateLeaseFacility:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CorporateLeaseFacility'
      required: true
    Administer:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Administer'
      required: true
    Fulfill:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Fulfill'
      required: true