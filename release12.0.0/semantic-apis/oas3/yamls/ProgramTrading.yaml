openapi: 3.0.1
info:
  title: Program Trading
  description: This Service Domain supports a program trading capability where the trading decisions are made based on predefined/programmed rules and policies. Manual oversight and monitoring capabilities are supported as appropriate
  contact:
    name: BIAN
    url: https://bian.org
  version: 12.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/ProgramTrading/12.0.0
paths:
  '/ProgramTrading/{programtradingid}/Control':
    put:
      tags:
        - CR - ProgramTradingOperatingSession
      summary: Control Program Trading Operating Session
      description: Control Program Trading Operating Session
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/programtradingid'
      requestBody:
        $ref: '#/components/requestBodies/ProgramTradingOperatingSession'
      responses:
        '200':
          $ref: '#/components/responses/ProgramTradingOperatingSession'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProgramTrading/{programtradingid}/Exchange':
    put:
      tags:
        - CR - ProgramTradingOperatingSession
      summary: Exchange Program Trading Operating Session
      description: Exchange Program Trading Operating Session
      operationId: Exchange
      parameters:
        - $ref: '#/components/parameters/programtradingid'
      requestBody:
        $ref: '#/components/requestBodies/ProgramTradingOperatingSession'
      responses:
        '200':
          $ref: '#/components/responses/ProgramTradingOperatingSession'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProgramTrading/{programtradingid}/Execute':
    put:
      tags:
        - CR - ProgramTradingOperatingSession
      summary: Execute Program Trading Operating Session
      description: Execute Program Trading Operating Session
      operationId: Execute
      parameters:
        - $ref: '#/components/parameters/programtradingid'
      requestBody:
        $ref: '#/components/requestBodies/ProgramTradingOperatingSession'
      responses:
        '200':
          $ref: '#/components/responses/ProgramTradingOperatingSession'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /ProgramTrading/Initiate:
    post:
      tags:
        - CR - ProgramTradingOperatingSession
      summary: Initiate Program Trading Operating Session
      description: Initiate Program Trading Operating Session
      operationId: Initiate
      requestBody:
        $ref: '#/components/requestBodies/ProgramTradingOperatingSession'
      responses:
        '200':
          $ref: '#/components/responses/ProgramTradingOperatingSession'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProgramTrading/{programtradingid}/Notify':
    get:
      tags:
        - CR - ProgramTradingOperatingSession
      summary: Notify Program Trading Operating Session
      description: Notify Program Trading Operating Session
      operationId: Notify
      parameters:
        - $ref: '#/components/parameters/programtradingid'
      responses:
        '200':
          $ref: '#/components/responses/ProgramTradingOperatingSession'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProgramTrading/{programtradingid}/Request':
    put:
      tags:
        - CR - ProgramTradingOperatingSession
      summary: Request Program Trading Operating Session
      description: Request Program Trading Operating Session
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/programtradingid'
      requestBody:
        $ref: '#/components/requestBodies/ProgramTradingOperatingSession'
      responses:
        '200':
          $ref: '#/components/responses/ProgramTradingOperatingSession'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProgramTrading/{programtradingid}/Retrieve':
    get:
      tags:
        - CR - ProgramTradingOperatingSession
      summary: Retrieve Program Trading Operating Session
      description: Retrieve Program Trading Operating Session
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/programtradingid'
      responses:
        '200':
          $ref: '#/components/responses/ProgramTradingOperatingSession'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProgramTrading/{programtradingid}/Update':
    put:
      tags:
        - CR - ProgramTradingOperatingSession
      summary: Update Program Trading Operating Session
      description: Update Program Trading Operating Session
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/programtradingid'
      requestBody:
        $ref: '#/components/requestBodies/ProgramTradingOperatingSession'
      responses:
        '200':
          $ref: '#/components/responses/ProgramTradingOperatingSession'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProgramTrading/{programtradingid}/ProgramTradeExecution/{programtradeexecutionid}/Exchange':
    put:
      tags:
        - BQ - ProgramTradeExecution
      summary: Exchange Program Trade Execution Function
      description: Exchange Program Trade Execution Function
      operationId: ExchangeProgramTradeExecution
      parameters:
        - $ref: '#/components/parameters/programtradingid'
        - $ref: '#/components/parameters/programtradeexecutionid'
      requestBody:
        $ref: '#/components/requestBodies/ProgramTradeExecution'
      responses:
        '200':
          $ref: '#/components/responses/ProgramTradeExecution'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProgramTrading/{programtradingid}/ProgramTradedPortfolioAlgorithm/{programtradedportfolioalgorithmid}/Exchange':
    put:
      tags:
        - BQ - ProgramTradedPortfolioAlgorithm
      summary: Exchange Program Traded Portfolio Algorithm Function
      description: Exchange Program Traded Portfolio Algorithm Function
      operationId: ExchangeProgramTradedPortfolioAlgorithm
      parameters:
        - $ref: '#/components/parameters/programtradingid'
        - $ref: '#/components/parameters/programtradedportfolioalgorithmid'
      requestBody:
        $ref: '#/components/requestBodies/ProgramTradedPortfolioAlgorithm'
      responses:
        '200':
          $ref: '#/components/responses/ProgramTradedPortfolioAlgorithm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProgramTrading/{programtradingid}/ProgramTradedPortfolioMaintenance/{programtradedportfoliomaintenanceid}/Exchange':
    put:
      tags:
        - BQ - ProgramTradedPortfolioMaintenance
      summary: Exchange Program Traded Portfolio Maintenance Function
      description: Exchange Program Traded Portfolio Maintenance Function
      operationId: ExchangeProgramTradedPortfolioMaintenance
      parameters:
        - $ref: '#/components/parameters/programtradingid'
        - $ref: '#/components/parameters/programtradedportfoliomaintenanceid'
      requestBody:
        $ref: '#/components/requestBodies/ProgramTradedPortfolioMaintenance'
      responses:
        '200':
          $ref: '#/components/responses/ProgramTradedPortfolioMaintenance'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProgramTrading/{programtradingid}/ProgramTradeExecution/{programtradeexecutionid}/Execute':
    put:
      tags:
        - BQ - ProgramTradeExecution
      summary: Execute Program Trade Execution Function
      description: Execute Program Trade Execution Function
      operationId: ExecuteProgramTradeExecution
      parameters:
        - $ref: '#/components/parameters/programtradingid'
        - $ref: '#/components/parameters/programtradeexecutionid'
      requestBody:
        $ref: '#/components/requestBodies/ProgramTradeExecution'
      responses:
        '200':
          $ref: '#/components/responses/ProgramTradeExecution'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProgramTrading/{programtradingid}/ProgramTradedPortfolioAlgorithm/{programtradedportfolioalgorithmid}/Execute':
    put:
      tags:
        - BQ - ProgramTradedPortfolioAlgorithm
      summary: Execute Program Traded Portfolio Algorithm Function
      description: Execute Program Traded Portfolio Algorithm Function
      operationId: ExecuteProgramTradedPortfolioAlgorithm
      parameters:
        - $ref: '#/components/parameters/programtradingid'
        - $ref: '#/components/parameters/programtradedportfolioalgorithmid'
      requestBody:
        $ref: '#/components/requestBodies/ProgramTradedPortfolioAlgorithm'
      responses:
        '200':
          $ref: '#/components/responses/ProgramTradedPortfolioAlgorithm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProgramTrading/{programtradingid}/ProgramTradedPortfolioMaintenance/{programtradedportfoliomaintenanceid}/Execute':
    put:
      tags:
        - BQ - ProgramTradedPortfolioMaintenance
      summary: Execute Program Traded Portfolio Maintenance Function
      description: Execute Program Traded Portfolio Maintenance Function
      operationId: ExecuteProgramTradedPortfolioMaintenance
      parameters:
        - $ref: '#/components/parameters/programtradingid'
        - $ref: '#/components/parameters/programtradedportfoliomaintenanceid'
      requestBody:
        $ref: '#/components/requestBodies/ProgramTradedPortfolioMaintenance'
      responses:
        '200':
          $ref: '#/components/responses/ProgramTradedPortfolioMaintenance'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProgramTrading/{programtradingid}/ProgramTradeExecution/Initiate':
    post:
      tags:
        - BQ - ProgramTradeExecution
      summary: Initiate Program Trade Execution Function
      description: Initiate Program Trade Execution Function
      operationId: InitiateProgramTradeExecution
      parameters:
        - $ref: '#/components/parameters/programtradingid'
      requestBody:
        $ref: '#/components/requestBodies/ProgramTradeExecution'
      responses:
        '200':
          $ref: '#/components/responses/ProgramTradeExecution'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProgramTrading/{programtradingid}/ProgramTradedPortfolioAlgorithm/Initiate':
    post:
      tags:
        - BQ - ProgramTradedPortfolioAlgorithm
      summary: Initiate Program Traded Portfolio Algorithm Function
      description: Initiate Program Traded Portfolio Algorithm Function
      operationId: InitiateProgramTradedPortfolioAlgorithm
      parameters:
        - $ref: '#/components/parameters/programtradingid'
      requestBody:
        $ref: '#/components/requestBodies/ProgramTradedPortfolioAlgorithm'
      responses:
        '200':
          $ref: '#/components/responses/ProgramTradedPortfolioAlgorithm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProgramTrading/{programtradingid}/ProgramTradedPortfolioMaintenance/Initiate':
    post:
      tags:
        - BQ - ProgramTradedPortfolioMaintenance
      summary: Initiate Program Traded Portfolio Maintenance Function
      description: Initiate Program Traded Portfolio Maintenance Function
      operationId: InitiateProgramTradedPortfolioMaintenance
      parameters:
        - $ref: '#/components/parameters/programtradingid'
      requestBody:
        $ref: '#/components/requestBodies/ProgramTradedPortfolioMaintenance'
      responses:
        '200':
          $ref: '#/components/responses/ProgramTradedPortfolioMaintenance'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProgramTrading/{programtradingid}/ProgramTradeExecution/{programtradeexecutionid}/Notify':
    get:
      tags:
        - BQ - ProgramTradeExecution
      summary: Notify Program Trade Execution Function
      description: Notify Program Trade Execution Function
      operationId: NotifyProgramTradeExecution
      parameters:
        - $ref: '#/components/parameters/programtradingid'
        - $ref: '#/components/parameters/programtradeexecutionid'
      responses:
        '200':
          $ref: '#/components/responses/ProgramTradeExecution'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProgramTrading/{programtradingid}/ProgramTradedPortfolioAlgorithm/{programtradedportfolioalgorithmid}/Notify':
    get:
      tags:
        - BQ - ProgramTradedPortfolioAlgorithm
      summary: Notify Program Traded Portfolio Algorithm Function
      description: Notify Program Traded Portfolio Algorithm Function
      operationId: NotifyProgramTradedPortfolioAlgorithm
      parameters:
        - $ref: '#/components/parameters/programtradingid'
        - $ref: '#/components/parameters/programtradedportfolioalgorithmid'
      responses:
        '200':
          $ref: '#/components/responses/ProgramTradedPortfolioAlgorithm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProgramTrading/{programtradingid}/ProgramTradedPortfolioMaintenance/{programtradedportfoliomaintenanceid}/Notify':
    get:
      tags:
        - BQ - ProgramTradedPortfolioMaintenance
      summary: Notify Program Traded Portfolio Maintenance Function
      description: Notify Program Traded Portfolio Maintenance Function
      operationId: NotifyProgramTradedPortfolioMaintenance
      parameters:
        - $ref: '#/components/parameters/programtradingid'
        - $ref: '#/components/parameters/programtradedportfoliomaintenanceid'
      responses:
        '200':
          $ref: '#/components/responses/ProgramTradedPortfolioMaintenance'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProgramTrading/{programtradingid}/ProgramTradeExecution/{programtradeexecutionid}/Request':
    put:
      tags:
        - BQ - ProgramTradeExecution
      summary: Request Program Trade Execution Function
      description: Request Program Trade Execution Function
      operationId: RequestProgramTradeExecution
      parameters:
        - $ref: '#/components/parameters/programtradingid'
        - $ref: '#/components/parameters/programtradeexecutionid'
      requestBody:
        $ref: '#/components/requestBodies/ProgramTradeExecution'
      responses:
        '200':
          $ref: '#/components/responses/ProgramTradeExecution'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProgramTrading/{programtradingid}/ProgramTradedPortfolioAlgorithm/{programtradedportfolioalgorithmid}/Request':
    put:
      tags:
        - BQ - ProgramTradedPortfolioAlgorithm
      summary: Request Program Traded Portfolio Algorithm Function
      description: Request Program Traded Portfolio Algorithm Function
      operationId: RequestProgramTradedPortfolioAlgorithm
      parameters:
        - $ref: '#/components/parameters/programtradingid'
        - $ref: '#/components/parameters/programtradedportfolioalgorithmid'
      requestBody:
        $ref: '#/components/requestBodies/ProgramTradedPortfolioAlgorithm'
      responses:
        '200':
          $ref: '#/components/responses/ProgramTradedPortfolioAlgorithm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProgramTrading/{programtradingid}/ProgramTradedPortfolioMaintenance/{programtradedportfoliomaintenanceid}/Request':
    put:
      tags:
        - BQ - ProgramTradedPortfolioMaintenance
      summary: Request Program Traded Portfolio Maintenance Function
      description: Request Program Traded Portfolio Maintenance Function
      operationId: RequestProgramTradedPortfolioMaintenance
      parameters:
        - $ref: '#/components/parameters/programtradingid'
        - $ref: '#/components/parameters/programtradedportfoliomaintenanceid'
      requestBody:
        $ref: '#/components/requestBodies/ProgramTradedPortfolioMaintenance'
      responses:
        '200':
          $ref: '#/components/responses/ProgramTradedPortfolioMaintenance'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProgramTrading/{programtradingid}/ProgramTradeExecution/{programtradeexecutionid}/Retrieve':
    get:
      tags:
        - BQ - ProgramTradeExecution
      summary: Retrieve Program Trade Execution Function
      description: Retrieve Program Trade Execution Function
      operationId: RetrieveProgramTradeExecution
      parameters:
        - $ref: '#/components/parameters/programtradingid'
        - $ref: '#/components/parameters/programtradeexecutionid'
      responses:
        '200':
          $ref: '#/components/responses/ProgramTradeExecution'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProgramTrading/{programtradingid}/ProgramTradedPortfolioAlgorithm/{programtradedportfolioalgorithmid}/Retrieve':
    get:
      tags:
        - BQ - ProgramTradedPortfolioAlgorithm
      summary: Retrieve Program Traded Portfolio Algorithm Function
      description: Retrieve Program Traded Portfolio Algorithm Function
      operationId: RetrieveProgramTradedPortfolioAlgorithm
      parameters:
        - $ref: '#/components/parameters/programtradingid'
        - $ref: '#/components/parameters/programtradedportfolioalgorithmid'
      responses:
        '200':
          $ref: '#/components/responses/ProgramTradedPortfolioAlgorithm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProgramTrading/{programtradingid}/ProgramTradedPortfolioMaintenance/{programtradedportfoliomaintenanceid}/Retrieve':
    get:
      tags:
        - BQ - ProgramTradedPortfolioMaintenance
      summary: Retrieve Program Traded Portfolio Maintenance Function
      description: Retrieve Program Traded Portfolio Maintenance Function
      operationId: RetrieveProgramTradedPortfolioMaintenance
      parameters:
        - $ref: '#/components/parameters/programtradingid'
        - $ref: '#/components/parameters/programtradedportfoliomaintenanceid'
      responses:
        '200':
          $ref: '#/components/responses/ProgramTradedPortfolioMaintenance'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProgramTrading/{programtradingid}/ProgramTradeExecution/{programtradeexecutionid}/Update':
    put:
      tags:
        - BQ - ProgramTradeExecution
      summary: Update Program Trade Execution Function
      description: Update Program Trade Execution Function
      operationId: UpdateProgramTradeExecution
      parameters:
        - $ref: '#/components/parameters/programtradingid'
        - $ref: '#/components/parameters/programtradeexecutionid'
      requestBody:
        $ref: '#/components/requestBodies/ProgramTradeExecution'
      responses:
        '200':
          $ref: '#/components/responses/ProgramTradeExecution'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProgramTrading/{programtradingid}/ProgramTradedPortfolioAlgorithm/{programtradedportfolioalgorithmid}/Update':
    put:
      tags:
        - BQ - ProgramTradedPortfolioAlgorithm
      summary: Update Program Traded Portfolio Algorithm Function
      description: Update Program Traded Portfolio Algorithm Function
      operationId: UpdateProgramTradedPortfolioAlgorithm
      parameters:
        - $ref: '#/components/parameters/programtradingid'
        - $ref: '#/components/parameters/programtradedportfolioalgorithmid'
      requestBody:
        $ref: '#/components/requestBodies/ProgramTradedPortfolioAlgorithm'
      responses:
        '200':
          $ref: '#/components/responses/ProgramTradedPortfolioAlgorithm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProgramTrading/{programtradingid}/ProgramTradedPortfolioMaintenance/{programtradedportfoliomaintenanceid}/Update':
    put:
      tags:
        - BQ - ProgramTradedPortfolioMaintenance
      summary: Update Program Traded Portfolio Maintenance Function
      description: Update Program Traded Portfolio Maintenance Function
      operationId: UpdateProgramTradedPortfolioMaintenance
      parameters:
        - $ref: '#/components/parameters/programtradingid'
        - $ref: '#/components/parameters/programtradedportfoliomaintenanceid'
      requestBody:
        $ref: '#/components/requestBodies/ProgramTradedPortfolioMaintenance'
      responses:
        '200':
          $ref: '#/components/responses/ProgramTradedPortfolioMaintenance'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    condition:
      type: object
      properties:
        Condition:
          type: string
          description: "Condition is a premise upon which the fulfillment of an agreement depends \n\nGeneral and special arrangements, provisions, requirements, rules, specifications, and standards that form an integral part of an agreement or contract.\n\nRead more: http://www.businessdictionary.com/definition/terms-and-conditions.html\n\n"
          format: class
      description: The required status/situation and or tasks that need to be completed prior to the invocation of the feature
    schedule:
      type: object
      properties:
        ScheduleType:
          type: string
          description: ''
          format: string
      description: "The schedule according to which the service provider will operate the Program Trading Operating Session ||\r\n|"
    businessservicetypevalues:
      type: object
      properties:
        Businessservicetypevalues:
          type: string
          description: ''
          format: enumeration
      description: ''
    businessservice:
      type: object
      properties:
        BusinessServiceType:
          $ref: '#/components/schemas/businessservicetypevalues'
      description: The Program Traded Portfolio Maintenance Function specific Business Service
    duration:
      type: object
      properties:
        Duration:
          type: string
          description: 'A duration is the specification of a length of time without a fixed start or end time, expressed in Gregorian calendar time units (Year, Month, Week, Day) and Hours, Minutes or Seconds. (UN/CEFACT)'
          format: datatype
      description: The time the session was active
    datetime:
      type: object
      properties:
        DateTimeContent:
          type: string
          description: ''
          format: string
        TimeZoneCode:
          type: string
          description: ''
          format: string
        DaylightSavingIndicator:
          type: string
          description: ''
          format: string
      description: Key dates and times for the session
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: Specifies the reasons for the status.
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: Period of time during which the status is valid.
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: "Name by which a party is known and which is usually used to identify that party. (ISO20022)\n"
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    partyidentificationtypevalues:
      enum:
        - Taxidentificationnumber
        - Nationalregistrationnumber
        - Registrationauthorityidentification
        - LEI(LegalEntityIdentifier)
        - Alienregistrationnumber
        - Passportnumber
        - Taxexemptidentificationnumber
        - Corporateidentification
        - Driverlicensenumber
        - Foreigninvestmentidentitynumber
        - Socialsecuritynumber
        - Identitycardnumber
        - Concat
        - Nationalregistrationidentificationnumber
      type: string
      description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC.\r\n"
    value:
      type: object
      properties:
        Value:
          type: string
          description: "Data or set of data \n\n- A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)"
          format: datatype
      description: ''
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    partylegalstructuretypevalues:
      enum:
        - Individual
        - CommunityInterestCompany
        - CharitableIncorporatedOrganisation
        - Co-Operative
        - Charity
        - GeneralPartnership
        - LimitedLiabilityPartnership
        - ScottishLimitedPartnership
        - LimitedPartnership
        - PrivateLimitedCompany
        - PublicLimitedCompany
        - Sole(SoleTrader)
      type: string
      description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - \r\n"
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
        PartyLegalStructureType:
          $ref: '#/components/schemas/partylegalstructuretypevalues'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: "Reference to the party who provides the services of Program Trading Operating Session ||\r\n|"
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: The status of Program Trading Operating Session Status |Status  (https://www.iso20022.org/standardsrepository/type/Status)|Standard|ISO20022 BM ()
    sessiontypevalues:
      enum:
        - ContactHandlingSession
        - CustomerDialogueSession
        - ChannelOperatingSession
        - GatewayOperatingSession
        - SwitchOperatingSession
        - DeviceOperatingSession
        - InterbankTransactionOperatingSession
        - CorrespondenceOperatingSession
        - InteractiveHelpOperatingSession
        - ACHOperatingSession
      type: string
      description: ">\r\n* `ContactHandlingSession` - \r\n* `CustomerDialogueSession` - \r\n* `ChannelOperatingSession` - \r\n* `GatewayOperatingSession` - \r\n* `SwitchOperatingSession` - \r\n* `DeviceOperatingSession` - \r\n* `InterbankTransactionOperatingSession` - \r\n* `CorrespondenceOperatingSession` - \r\n* `InteractiveHelpOperatingSession` - \r\n* `ACHOperatingSession` - \r\n"
    sessiontype:
      type: object
      properties:
        SessionTypeName:
          $ref: '#/components/schemas/name'
        SessionType:
          $ref: '#/components/schemas/sessiontypevalues'
      description: "A Classification value that distinguishes between the type of operations within Program Trading Operating Session ||\r\n|"
    session:
      type: object
      properties:
        SessionDuration:
          $ref: '#/components/schemas/duration'
        SessionDateTime:
          $ref: '#/components/schemas/datetime'
        SessionStatus:
          $ref: '#/components/schemas/status'
        SessionType:
          $ref: '#/components/schemas/sessiontype'
        SessionScheduel:
          $ref: '#/components/schemas/schedule'
      description: "An unique reference to an item or an occurrence of Program Trading Operating Session ||\r\n|"
    function:
      type: object
      properties:
        Function:
          type: string
          description: "A kind of action.\n\nFunctions as Behaviour Qualifier: The collection of operational services/functions offered by the operational facility."
          format: class
      description: Reference to Program Traded Portfolio Maintenance Function
    ProgramTradedPortfolioMaintenance:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        ProgramTradingOperatingSessionReference:
          $ref: '#/components/schemas/session'
        ProgramTradedPortfolioMaintenanceFunctionReference:
          $ref: '#/components/schemas/function'
        ProgramTradedPortfolioMaintenanceFunctionType:
          $ref: '#/components/schemas/text'
      description: An operational service or function supported within the Program Traded Portfolio Maintenance Function for doing Program Traded Portfolio Maintenance Function
    ProgramTradedPortfolioAlgorithm:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        ProgramTradingOperatingSessionReference:
          $ref: '#/components/schemas/session'
        ProgramTradedPortfolioAlgorithmFunctionReference:
          $ref: '#/components/schemas/function'
        ProgramTradedPortfolioAlgorithmFunctionType:
          $ref: '#/components/schemas/text'
      description: An operational service or function supported within the Program Traded Portfolio Maintenance Function for doing Program Traded Portfolio Maintenance Function
    ProgramTradeExecution:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        ProgramTradingOperatingSessionReference:
          $ref: '#/components/schemas/session'
        ProgramTradeExecutionFunctionReference:
          $ref: '#/components/schemas/function'
        ProgramTradeExecutionFunctionType:
          $ref: '#/components/schemas/text'
      description: An operational service or function supported within the Program Traded Portfolio Maintenance Function for doing Program Traded Portfolio Maintenance Function
    event:
      type: object
      properties:
        EventType:
          type: string
          description: ''
          format: string
        EventDateTime:
          type: string
          description: ''
          format: string
        EventDescription:
          type: string
          description: ''
          format: string
        EventSource:
          type: string
          description: ''
          format: string
        EventLocation:
          type: string
          description: ''
          format: string
        EventAction:
          type: string
          description: ''
          format: string
        EventStatus:
          type: string
          description: ''
          format: string
        EventValue:
          type: string
          description: ''
          format: string
        EventValidityPeriod:
          type: string
          description: ''
          format: string
        EventIdentification:
          type: string
          description: ''
          format: string
      description: ''
    ProgramTradingOutcome:
      type: object
      properties:
        ProgramTradingIncident:
          $ref: '#/components/schemas/event'
        ProgramTradingProvision:
          $ref: '#/components/schemas/text'
      description: An operational service or function supported within the Program Traded Portfolio Maintenance Function for doing Program Traded Portfolio Maintenance Function
    log:
      type: object
      properties:
        LogType:
          type: string
          description: ''
          format: string
        LogPeriod:
          type: string
          description: ''
          format: string
        LogDate:
          type: string
          description: Key dates associated with the log (e.g. start time).
          format: string
        LogIdentification:
          type: string
          description: ''
          format: string
      description: "Reference to the log of (usage) ativities/events  of Program Trading Operating Session ||\r\n|"
    servicetypevalues:
      enum:
        - ITService
        - AdministrativeService
        - SystemService
        - FinancialService
        - InformationService
        - BusinessService
      type: string
      description: ">\r\n* `ITService` - \r\n* `AdministrativeService` - \r\n* `SystemService` - \r\n* `FinancialService` - \r\n* `InformationService` - \r\n* `BusinessService` - \r\n"
    servicetype:
      type: object
      properties:
        ServiceTypeName:
          $ref: '#/components/schemas/name'
        ServiceType:
          $ref: '#/components/schemas/servicetypevalues'
      description: "A Classification value that distinguishes between the type of services within Program Trading Operating Session ||\r\n|"
    systemconfigurationoption:
      type: object
      properties:
        SystemConfigurationOption:
          type: string
          description: "Options for configuring the system or the function/feature of system.\n"
          format: class
      description: "The configuration of Program Trading Operating Session ||\r\n|"
    ProgramTradingOperatingSession:
      type: object
      properties:
        ProgramTradingOperatingSessionSchedule:
          $ref: '#/components/schemas/schedule'
        ProgramTradingOperatingSessionStatus:
          $ref: '#/components/schemas/status'
        ProgramTradingOperatingSessionUsageLog:
          $ref: '#/components/schemas/log'
        ProgramTradingOperatingSessionAssociatedPartyReference:
          $ref: '#/components/schemas/involvedparty'
        ProgramTradingOperatingSessionServiceProviderReference:
          $ref: '#/components/schemas/involvedparty'
        ProgramTradingOperatingSessionType:
          $ref: '#/components/schemas/sessiontype'
        ProgramTradingOperatingSessionServiceProviderSchedule:
          $ref: '#/components/schemas/schedule'
        ProgramTradingOperatingSessionServiceType:
          $ref: '#/components/schemas/servicetype'
        ProgramTradingOperatingSessionServiceConfiguration:
          $ref: '#/components/schemas/systemconfigurationoption'
        ProgramTradingOperatingSessionReference:
          $ref: '#/components/schemas/session'
      description: 'Operate equipment and/or a largely automated facility within Program Trading. '
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ProgramTradingOperatingSession:
      description: ProgramTradingOperatingSession
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProgramTradingOperatingSession'
    ProgramTradeExecution:
      description: ProgramTradeExecution
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProgramTradeExecution'
    ProgramTradedPortfolioAlgorithm:
      description: ProgramTradedPortfolioAlgorithm
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProgramTradedPortfolioAlgorithm'
    ProgramTradedPortfolioMaintenance:
      description: ProgramTradedPortfolioMaintenance
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProgramTradedPortfolioMaintenance'
  parameters:
    programtradingid:
      name: programtradingid
      in: path
      required: true
      style: simple
      schema:
        type: string
    programtradeexecutionid:
      name: programtradeexecutionid
      in: path
      required: true
      style: simple
      schema:
        type: string
    programtradedportfolioalgorithmid:
      name: programtradedportfolioalgorithmid
      in: path
      required: true
      style: simple
      schema:
        type: string
    programtradedportfoliomaintenanceid:
      name: programtradedportfoliomaintenanceid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    ProgramTradingOperatingSession:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProgramTradingOperatingSession'
      required: true
    ProgramTradeExecution:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProgramTradeExecution'
      required: true
    ProgramTradedPortfolioAlgorithm:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProgramTradedPortfolioAlgorithm'
      required: true
    ProgramTradedPortfolioMaintenance:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProgramTradedPortfolioMaintenance'
      required: true