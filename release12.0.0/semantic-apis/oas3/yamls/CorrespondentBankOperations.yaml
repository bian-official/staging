openapi: 3.0.1
info:
  title: Correspondent Bank Operations
  description: 'This service domain fulfils correspondent banking arrangements between the bank and its correspondent banking partners.  This includes handling the clearing and settlement of payments to/from the correspondent banks, typically using the SWIFT payment network.'
  contact:
    name: BIAN
    url: https://bian.org
  version: 12.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/CorrespondentBankOperations/12.0.0
paths:
  /CorrespondentBankOperations/Initiate:
    post:
      tags:
        - CR - CorrespondentBankOperatingSession
      summary: Initiate a correspondent fulfillment arrangement
      description: Initiate a correspondent fulfillment arrangement
      operationId: Initiate
      requestBody:
        $ref: '#/components/requestBodies/InitiateCorrespondentBankOperatingSessionRequest'
      responses:
        '200':
          $ref: '#/components/responses/InitiateCorrespondentBankOperatingSessionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankOperations/{correspondentbankoperationsid}/Update':
    put:
      tags:
        - CR - CorrespondentBankOperatingSession
      summary: Update correspondent fulfillment arrangement
      description: Update correspondent fulfillment arrangement
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/correspondentbankoperationsid'
      requestBody:
        $ref: '#/components/requestBodies/UpdateCorrespondentBankOperatingSessionRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateCorrespondentBankOperatingSessionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankOperations/{correspondentbankoperationsid}/Control':
    put:
      tags:
        - CR - CorrespondentBankOperatingSession
      summary: Control the handling of an arrangement
      description: Control the handling of an arrangement
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/correspondentbankoperationsid'
      requestBody:
        $ref: '#/components/requestBodies/ControlCorrespondentBankOperatingSessionRequest'
      responses:
        '200':
          $ref: '#/components/responses/ControlCorrespondentBankOperatingSessionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankOperations/{correspondentbankoperationsid}/Retrieve':
    get:
      tags:
        - CR - CorrespondentBankOperatingSession
      summary: Retrieve a correspondent fulfillment arrangement
      description: Retrieve a correspondent fulfillment arrangement
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/correspondentbankoperationsid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveCorrespondentBankOperatingSessionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankOperations/{correspondentbankoperationsid}/Exchange':
    put:
      tags:
        - CR - CorrespondentBankOperatingSession
      summary: Exchange Correspondent Bank Operating Session
      description: Exchange Correspondent Bank Operating Session
      operationId: Exchange
      parameters:
        - $ref: '#/components/parameters/correspondentbankoperationsid'
      requestBody:
        $ref: '#/components/requestBodies/ExchangeCorrespondentBankOperatingSessionRequest'
      responses:
        '200':
          $ref: '#/components/responses/ExchangeCorrespondentBankOperatingSessionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankOperations/{correspondentbankoperationsid}/Execute':
    put:
      tags:
        - CR - CorrespondentBankOperatingSession
      summary: Execute Correspondent Bank Operating Session
      description: Execute Correspondent Bank Operating Session
      operationId: Execute
      parameters:
        - $ref: '#/components/parameters/correspondentbankoperationsid'
      requestBody:
        $ref: '#/components/requestBodies/ExecuteCorrespondentBankOperatingSessionRequest'
      responses:
        '200':
          $ref: '#/components/responses/ExecuteCorrespondentBankOperatingSessionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankOperations/{correspondentbankoperationsid}/Notify':
    get:
      tags:
        - CR - CorrespondentBankOperatingSession
      summary: Notify Correspondent Bank Operating Session
      description: Notify Correspondent Bank Operating Session
      operationId: Notify
      parameters:
        - $ref: '#/components/parameters/correspondentbankoperationsid'
      responses:
        '200':
          $ref: '#/components/responses/NotifyCorrespondentBankOperatingSessionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankOperations/{correspondentbankoperationsid}/Request':
    put:
      tags:
        - CR - CorrespondentBankOperatingSession
      summary: Request Correspondent Bank Operating Session
      description: Request Correspondent Bank Operating Session
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/correspondentbankoperationsid'
      requestBody:
        $ref: '#/components/requestBodies/RequestCorrespondentBankOperatingSessionRequest'
      responses:
        '200':
          $ref: '#/components/responses/RequestCorrespondentBankOperatingSessionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankOperations/{correspondentbankoperationsid}/InboundPayments/{inboundpaymentsid}/Update':
    put:
      tags:
        - BQ - InboundPayments
      summary: Update inbound payment transactions
      description: Update inbound payment transactions
      operationId: UpdateInboundPayments
      parameters:
        - $ref: '#/components/parameters/correspondentbankoperationsid'
        - $ref: '#/components/parameters/inboundpaymentsid'
      requestBody:
        $ref: '#/components/requestBodies/InboundPayments'
      responses:
        '200':
          $ref: '#/components/responses/InboundPayments'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankOperations/{correspondentbankoperationsid}/InboundPayments/{inboundpaymentsid}/Execute':
    put:
      tags:
        - BQ - InboundPayments
      summary: Execute inbound payment transactions from a correspondent
      description: Execute inbound payment transactions from a correspondent
      operationId: ExecuteInboundPayments
      parameters:
        - $ref: '#/components/parameters/correspondentbankoperationsid'
        - $ref: '#/components/parameters/inboundpaymentsid'
      requestBody:
        $ref: '#/components/requestBodies/InboundPayments'
      responses:
        '200':
          $ref: '#/components/responses/InboundPayments'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankOperations/{correspondentbankoperationsid}/InboundPayments/{inboundpaymentsid}/Retrieve':
    get:
      tags:
        - BQ - InboundPayments
      summary: Retrieve inbound payments
      description: Retrieve inbound payments
      operationId: RetrieveInboundPayments
      parameters:
        - $ref: '#/components/parameters/correspondentbankoperationsid'
        - $ref: '#/components/parameters/inboundpaymentsid'
      responses:
        '200':
          $ref: '#/components/responses/InboundPayments'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankOperations/{correspondentbankoperationsid}/OutboundPayments/{outboundpaymentsid}/Update':
    put:
      tags:
        - BQ - OutboundPayments
      summary: Update outbound payment transactions
      description: Update outbound payment transactions
      operationId: UpdateOutboundPayments
      parameters:
        - $ref: '#/components/parameters/correspondentbankoperationsid'
        - $ref: '#/components/parameters/outboundpaymentsid'
      requestBody:
        $ref: '#/components/requestBodies/UpdateOutboundPaymentsRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateOutboundPaymentsResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankOperations/{correspondentbankoperationsid}/OutboundPayments/{outboundpaymentsid}/Execute':
    put:
      tags:
        - BQ - OutboundPayments
      summary: Execute outbound payment transactions to a correspondent
      description: Execute outbound payment transactions to a correspondent
      operationId: ExecuteOutboundPayments
      parameters:
        - $ref: '#/components/parameters/correspondentbankoperationsid'
        - $ref: '#/components/parameters/outboundpaymentsid'
      requestBody:
        $ref: '#/components/requestBodies/ExecuteOutboundPaymentsRequest'
      responses:
        '200':
          $ref: '#/components/responses/ExecuteOutboundPaymentsResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankOperations/{correspondentbankoperationsid}/OutboundPayments/{outboundpaymentsid}/Retrieve':
    get:
      tags:
        - BQ - OutboundPayments
      summary: Retrieve outbound payments
      description: Retrieve outbound payments
      operationId: RetrieveOutboundPayments
      parameters:
        - $ref: '#/components/parameters/correspondentbankoperationsid'
        - $ref: '#/components/parameters/outboundpaymentsid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveOutboundPaymentsResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankOperations/{correspondentbankoperationsid}/ClearingandSettlement/{clearingandsettlementid}/Update':
    put:
      tags:
        - BQ - ClearingandSettlement
      summary: Update a clearing and settlement transaction
      description: Update a clearing and settlement transaction
      operationId: UpdateClearingandSettlement
      parameters:
        - $ref: '#/components/parameters/correspondentbankoperationsid'
        - $ref: '#/components/parameters/clearingandsettlementid'
      requestBody:
        $ref: '#/components/requestBodies/ClearingandSettlement'
      responses:
        '200':
          $ref: '#/components/responses/ClearingandSettlement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankOperations/{correspondentbankoperationsid}/ClearingandSettlement/{clearingandsettlementid}/Exchange':
    put:
      tags:
        - BQ - ClearingandSettlement
      summary: Exchange a clearing and settlement task
      description: Exchange a clearing and settlement task
      operationId: ExchangeClearingandSettlement
      parameters:
        - $ref: '#/components/parameters/correspondentbankoperationsid'
        - $ref: '#/components/parameters/clearingandsettlementid'
      requestBody:
        $ref: '#/components/requestBodies/ClearingandSettlement'
      responses:
        '200':
          $ref: '#/components/responses/ClearingandSettlement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankOperations/{correspondentbankoperationsid}/ClearingandSettlement/{clearingandsettlementid}/Request':
    put:
      tags:
        - BQ - ClearingandSettlement
      summary: Request clearing and settlement processing for a correspondent
      description: Request clearing and settlement processing for a correspondent
      operationId: RequestClearingandSettlement
      parameters:
        - $ref: '#/components/parameters/correspondentbankoperationsid'
        - $ref: '#/components/parameters/clearingandsettlementid'
      requestBody:
        $ref: '#/components/requestBodies/ClearingandSettlement'
      responses:
        '200':
          $ref: '#/components/responses/ClearingandSettlement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankOperations/{correspondentbankoperationsid}/ClearingandSettlement/{clearingandsettlementid}/Retrieve':
    get:
      tags:
        - BQ - ClearingandSettlement
      summary: Retrieve clearing and settlement activity with a correspondent
      description: Retrieve clearing and settlement activity with a correspondent
      operationId: RetrieveClearingandSettlement
      parameters:
        - $ref: '#/components/parameters/correspondentbankoperationsid'
        - $ref: '#/components/parameters/clearingandsettlementid'
      responses:
        '200':
          $ref: '#/components/responses/ClearingandSettlement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankOperations/{correspondentbankoperationsid}/Reconciliation/{reconciliationid}/Update':
    put:
      tags:
        - BQ - Reconciliation
      summary: Update a reconciliation task
      description: Update a reconciliation task
      operationId: UpdateReconciliation
      parameters:
        - $ref: '#/components/parameters/correspondentbankoperationsid'
        - $ref: '#/components/parameters/reconciliationid'
      requestBody:
        $ref: '#/components/requestBodies/Reconciliation'
      responses:
        '200':
          $ref: '#/components/responses/Reconciliation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankOperations/{correspondentbankoperationsid}/Reconciliation/{reconciliationid}/Exchange':
    put:
      tags:
        - BQ - Reconciliation
      summary: Exchange  a reconciliation task
      description: Exchange  a reconciliation task
      operationId: ExchangeReconciliation
      parameters:
        - $ref: '#/components/parameters/correspondentbankoperationsid'
        - $ref: '#/components/parameters/reconciliationid'
      requestBody:
        $ref: '#/components/requestBodies/Reconciliation'
      responses:
        '200':
          $ref: '#/components/responses/Reconciliation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankOperations/{correspondentbankoperationsid}/Reconciliation/{reconciliationid}/Request':
    put:
      tags:
        - BQ - Reconciliation
      summary: Request reconciliation processing for a correspondent
      description: Request reconciliation processing for a correspondent
      operationId: RequestReconciliation
      parameters:
        - $ref: '#/components/parameters/correspondentbankoperationsid'
        - $ref: '#/components/parameters/reconciliationid'
      requestBody:
        $ref: '#/components/requestBodies/Reconciliation'
      responses:
        '200':
          $ref: '#/components/responses/Reconciliation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankOperations/{correspondentbankoperationsid}/Reconciliation/{reconciliationid}/Retrieve':
    get:
      tags:
        - BQ - Reconciliation
      summary: Retrieve reconciliation activity with a correspondent
      description: Retrieve reconciliation activity with a correspondent
      operationId: RetrieveReconciliation
      parameters:
        - $ref: '#/components/parameters/correspondentbankoperationsid'
        - $ref: '#/components/parameters/reconciliationid'
      responses:
        '200':
          $ref: '#/components/responses/Reconciliation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankOperations/{correspondentbankoperationsid}/InboundPayments/{inboundpaymentsid}/Exchange':
    put:
      tags:
        - BQ - InboundPayments
      summary: Exchange Inbound Payments
      description: Exchange Inbound Payments
      operationId: ExchangeInboundPayments
      parameters:
        - $ref: '#/components/parameters/correspondentbankoperationsid'
        - $ref: '#/components/parameters/inboundpaymentsid'
      requestBody:
        $ref: '#/components/requestBodies/InboundPayments'
      responses:
        '200':
          $ref: '#/components/responses/InboundPayments'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankOperations/{correspondentbankoperationsid}/OutboundPayments/{outboundpaymentsid}/Exchange':
    put:
      tags:
        - BQ - OutboundPayments
      summary: Exchange Outbound Payments
      description: Exchange Outbound Payments
      operationId: ExchangeOutboundPayments
      parameters:
        - $ref: '#/components/parameters/correspondentbankoperationsid'
        - $ref: '#/components/parameters/outboundpaymentsid'
      requestBody:
        $ref: '#/components/requestBodies/ExchangeOutboundPaymentsRequest'
      responses:
        '200':
          $ref: '#/components/responses/ExchangeOutboundPaymentsResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankOperations/{correspondentbankoperationsid}/Reconciliation/{reconciliationid}/Execute':
    put:
      tags:
        - BQ - Reconciliation
      summary: Execute Reconciliation
      description: Execute Reconciliation
      operationId: ExecuteReconciliation
      parameters:
        - $ref: '#/components/parameters/correspondentbankoperationsid'
        - $ref: '#/components/parameters/reconciliationid'
      requestBody:
        $ref: '#/components/requestBodies/Reconciliation'
      responses:
        '200':
          $ref: '#/components/responses/Reconciliation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankOperations/{correspondentbankoperationsid}/InboundPayments/Initiate':
    post:
      tags:
        - BQ - InboundPayments
      summary: Initiate Inbound Payments
      description: Initiate Inbound Payments
      operationId: InitiateInboundPayments
      parameters:
        - $ref: '#/components/parameters/correspondentbankoperationsid'
      requestBody:
        $ref: '#/components/requestBodies/InboundPayments'
      responses:
        '200':
          $ref: '#/components/responses/InboundPayments'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankOperations/{correspondentbankoperationsid}/OutboundPayments/Initiate':
    post:
      tags:
        - BQ - OutboundPayments
      summary: Initiate Outbound Payments
      description: Initiate Outbound Payments
      operationId: InitiateOutboundPayments
      parameters:
        - $ref: '#/components/parameters/correspondentbankoperationsid'
      requestBody:
        $ref: '#/components/requestBodies/InitiateOutboundPaymentsRequest'
      responses:
        '200':
          $ref: '#/components/responses/InitiateOutboundPaymentsResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankOperations/{correspondentbankoperationsid}/InboundPayments/{inboundpaymentsid}/Notify':
    get:
      tags:
        - BQ - InboundPayments
      summary: Notify Inbound Payments
      description: Notify Inbound Payments
      operationId: NotifyInboundPayments
      parameters:
        - $ref: '#/components/parameters/correspondentbankoperationsid'
        - $ref: '#/components/parameters/inboundpaymentsid'
      responses:
        '200':
          $ref: '#/components/responses/InboundPayments'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankOperations/{correspondentbankoperationsid}/OutboundPayments/{outboundpaymentsid}/Notify':
    get:
      tags:
        - BQ - OutboundPayments
      summary: Notify Outbound Payments
      description: Notify Outbound Payments
      operationId: NotifyOutboundPayments
      parameters:
        - $ref: '#/components/parameters/correspondentbankoperationsid'
        - $ref: '#/components/parameters/outboundpaymentsid'
      responses:
        '200':
          $ref: '#/components/responses/NotifyOutboundPaymentsResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankOperations/{correspondentbankoperationsid}/Reconciliation/{reconciliationid}/Notify':
    get:
      tags:
        - BQ - Reconciliation
      summary: Notify Reconciliation
      description: Notify Reconciliation
      operationId: NotifyReconciliation
      parameters:
        - $ref: '#/components/parameters/correspondentbankoperationsid'
        - $ref: '#/components/parameters/reconciliationid'
      responses:
        '200':
          $ref: '#/components/responses/Reconciliation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankOperations/{correspondentbankoperationsid}/InboundPayments/{inboundpaymentsid}/Request':
    put:
      tags:
        - BQ - InboundPayments
      summary: Request Inbound Payments
      description: Request Inbound Payments
      operationId: RequestInboundPayments
      parameters:
        - $ref: '#/components/parameters/correspondentbankoperationsid'
        - $ref: '#/components/parameters/inboundpaymentsid'
      requestBody:
        $ref: '#/components/requestBodies/InboundPayments'
      responses:
        '200':
          $ref: '#/components/responses/InboundPayments'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankOperations/{correspondentbankoperationsid}/OutboundPayments/{outboundpaymentsid}/Request':
    put:
      tags:
        - BQ - OutboundPayments
      summary: Request Outbound Payments
      description: Request Outbound Payments
      operationId: RequestOutboundPayments
      parameters:
        - $ref: '#/components/parameters/correspondentbankoperationsid'
        - $ref: '#/components/parameters/outboundpaymentsid'
      requestBody:
        $ref: '#/components/requestBodies/RequestOutboundPaymentsRequest'
      responses:
        '200':
          $ref: '#/components/responses/RequestOutboundPaymentsResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    event:
      type: object
      properties:
        EventType:
          type: string
          description: ''
          format: string
        EventDateTime:
          type: string
          description: ''
          format: string
        EventDescription:
          type: string
          description: ''
          format: string
        EventSource:
          type: string
          description: ''
          format: string
        EventLocation:
          type: string
          description: ''
          format: string
        EventAction:
          type: string
          description: ''
          format: string
        EventStatus:
          type: string
          description: ''
          format: string
        EventValue:
          type: string
          description: ''
          format: string
        EventValidityPeriod:
          type: string
          description: ''
          format: string
        EventIdentification:
          type: string
          description: ''
          format: string
      description: ''
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: ''
    CorrespondentBankOperationsOutcome:
      type: object
      properties:
        CorrespondentBankOperationsIncident:
          $ref: '#/components/schemas/event'
        CorrespondentBankOperationsProvision:
          $ref: '#/components/schemas/text'
      description: "The collection of operational serivces/functions offered by the operational facility\n\nExamples: messages, capture, routines"
    clearingsystemtypevalues:
      type: object
      properties:
        Clearingsystemtypevalues:
          type: string
          description: Type of the system which plays a role in the clearing process.
          format: enumeration
      description: "Specifies the system which plays a role in the clearing process. (ISO20022)\nSpecifies the system which plays a role in the clearing of securities or cash. (ISO20022)"
    clearingarrangement:
      type: object
      properties:
        ClearingSystem:
          $ref: '#/components/schemas/clearingsystemtypevalues'
      description: 'The clearing arrangement between the bank and clearing house - includes schedule, limits'
    clearinginstruction:
      type: object
      properties:
        ClearingInstruction:
          type: string
          description: 'A request to do the clearing of transaction. '
          format: class
      description: Customer specific default clearing instructions
    value:
      type: object
      properties:
        Value:
          type: string
          description: "Data or set of data \n\n- A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)"
          format: datatype
      description: ''
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: "Name by which a party is known and which is usually used to identify that party. (ISO20022)\n"
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    datetime:
      type: object
      properties:
        DateTimeContent:
          type: string
          description: ''
          format: string
        TimeZoneCode:
          type: string
          description: ''
          format: string
        DaylightSavingIndicator:
          type: string
          description: ''
          format: string
      description: ''
    partyidentificationtypevalues:
      enum:
        - Taxidentificationnumber
        - Nationalregistrationnumber
        - Registrationauthorityidentification
        - LEI(LegalEntityIdentifier)
        - Alienregistrationnumber
        - Passportnumber
        - Taxexemptidentificationnumber
        - Corporateidentification
        - Driverlicensenumber
        - Foreigninvestmentidentitynumber
        - Socialsecuritynumber
        - Identitycardnumber
        - Concat
        - Nationalregistrationidentificationnumber
      type: string
      description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC.\r\n"
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    partylegalstructuretypevalues:
      enum:
        - Individual
        - CommunityInterestCompany
        - CharitableIncorporatedOrganisation
        - Co-Operative
        - Charity
        - GeneralPartnership
        - LimitedLiabilityPartnership
        - ScottishLimitedPartnership
        - LimitedPartnership
        - PrivateLimitedCompany
        - PublicLimitedCompany
        - Sole(SoleTrader)
      type: string
      description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - \r\n"
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
        PartyLegalStructureType:
          $ref: '#/components/schemas/partylegalstructuretypevalues'
      description: ''
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: Entity that assigns and manages the identification.
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: 'Identifier of the settlement instruction. '
    currencycode:
      type: object
      properties:
        Currencycode:
          type: string
          description: "A code identifying a currency according to ISO-4217.\nA currency is a system of money in general use in a particular country.\n\nCode allocated to a currency, by a maintenance agency, under an international identification scheme as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\". Valid currency codes are registered with the ISO 4217 Maintenance Agency, and consist of three contiguous letters. (ISO20022)\n\n"
          format: datatype
      description: ''
    amounttypevalues:
      enum:
        - Principal
        - Actual
        - Estimated
        - Maximum
        - Default
        - Replacement
        - Incremental
        - Decremental
        - Reserved
        - Available
        - Used
      type: string
      description: ">\r\n* `Principal` - \r\n* `Actual` - Actual amount.\r\n* `Estimated` - Estimated amount (the final amount could be above or below).\r\n* `Maximum` - Maximum amount (the final amount must be less or equal).\r\n* `Default` - Default amount.\r\n* `Replacement` - Replacement amount.\r\n* `Incremental` - Incremental amount for reservation.\r\n* `Decremental` - Decremental amount for reservation.\r\n* `Reserved` - Reserved or updated reserved amount for reservation.\r\n* `Available` - \r\n* `Used` - \r\n"
    amount:
      type: object
      properties:
        AmountValue:
          $ref: '#/components/schemas/value'
        AmountCurrency:
          $ref: '#/components/schemas/currencycode'
        DecimalPointPosition:
          type: string
          description: "Decimal point position starts calulating from the right\n"
          format: string
        AmountType:
          $ref: '#/components/schemas/amounttypevalues'
      description: Amount of money moved between the instructing agent and the instructed agent. (ISO20022)
    settlementinstruction:
      type: object
      properties:
        SettlementInstructionIdentifier:
          $ref: '#/components/schemas/identifier'
        InterbankSettlementAmount:
          $ref: '#/components/schemas/amount'
        InterbankSettlementCurrency:
          $ref: '#/components/schemas/currencycode'
        CreditDateTime:
          $ref: '#/components/schemas/datetime'
        DebitDateTime:
          $ref: '#/components/schemas/datetime'
      description: Customer specific default settlement instructions (e.g. to handle netting arrangements)
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: ' Status |Status  (https://www.iso20022.org/standardsrepository/type/Status)|Standard|ISO20022 BM ()'
    accountstatustypevalues:
      enum:
        - Enabled
        - Disabled
        - Deleted
        - Proforma
        - Pending
      type: string
      description: ">\r\n* `Enabled` - Account can be used for its intended purpose.\r\n* `Disabled` - Account cannot be used for its intended purpose, either temporarily or permanently.\r\n* `Deleted` - Account cannot be used any longer.\r\n* `Proforma` - Account is temporary and can be partially used for its intended purpose. The account will be fully available for use when the account servicer has received all relevant documents.\r\n* `Pending` - Account change is pending approval.\r\n"
    accountstatus:
      type: object
      properties:
        AccountStatus:
          $ref: '#/components/schemas/status'
        AccountStatusType:
          $ref: '#/components/schemas/accountstatustypevalues'
      description: "A characteristic of account which refers to the LifecycleStatus of account like opened, closed, blocked, etc.\n\nSpecifies the current state of an account. (ISO20022)"
    accountidentificationtypevalues:
      enum:
        - BBAN
        - IBAN
        - UPIC
        - AccountNumber
        - PAN
        - Paym
        - Wallet
      type: string
      description: ">\r\n* `BBAN` - Basic Bank Account Number (BBAN) - identifier used nationally by financial institutions, ie, in individual countries, generally as part of a National Account Numbering Scheme(s), to uniquely identify the account of a customer. (ISO20022)\n\n.\r\n* `IBAN` - International Bank Account Number (IBAN) - identifier used internationally by financial institutions to uniquely identify the account of a customer. Further specifications of the format and content of the IBAN can be found in the standard ISO 13616 \"Banking and related financial services - International Bank Account Number (IBAN)\" version 1997-10-01, or later revisions. (ISO20022)\n\nAn identifier used internationally by financial institutions to uniquely identify the account of a customer at a financial institution, as described in the latest edition of the international standard ISO 13616. \"Banking and related financial services - International Bank Account Number (IBAN)\". (OBExternalAccountIdentification4Code)\r\n* `UPIC` - Universal Payment Identification Code (UPIC) - identifier used by the New York Clearing House to mask confidential data, such as bank accounts and bank routing numbers. UPIC numbers remain with business customers, regardless of banking relationship changes. (ISO20022)\r\n* `AccountNumber` - String of characters (mainly numbers) used to identify an account.(ISO20022)\n\nSort Code and Account Number - identifier scheme used in the UK by financial institutions to identify the account of a customer. The identifier is the concatenation of the 6 digit UK sort code and 8 digit account number. (OBExternalAccountIdentification4Code)\nThe regular expression for this identifier is: ^[0-9]{6}[0-9]{8}$\r\n* `PAN` - Primary Account Number - identifier scheme used to identify a card account. (OBExternalAccountIdentification4Code)\r\n* `Paym` - Paym Scheme to make payments via mobile (OBExternalAccountIdentification4Code)\r\n* `Wallet` - A primary and unique account identifier used to identify a wallet.\nAn ASPSP must document on their developer portal, the payment methods that supports this account identifier.(OBExternalAccountIdentification4Code)\r\n"
    accountidentification:
      type: object
      properties:
        AccountIdentificationType:
          $ref: '#/components/schemas/accountidentificationtypevalues'
        AccountIdentification:
          $ref: '#/components/schemas/identifier'
      description: The identifier of account like Account Number.
    accountdatetypevalues:
      enum:
        - OpeningDate
        - ClosingDate
        - BlockingDate
        - MaturityDate
        - LiveDate
      type: string
      description: ">\r\n* `OpeningDate` - Date on which the account and related basic services are effectively operational for the account owner. (ISO20022)\r\n* `ClosingDate` - Date on which the account and related services cease effectively to be operational for the account owner. (ISO20022)\r\n* `BlockingDate` - \r\n* `MaturityDate` - Maturity date for the account.\r\n* `LiveDate` - \r\n"
    accountdate:
      type: object
      properties:
        AccountDateType:
          $ref: '#/components/schemas/accountdatetypevalues'
        AccountDate:
          $ref: '#/components/schemas/datetime'
      description: 'A characteristic of account which refers to LifecycleDate of account (e.g., ClosingDate, OpeningDate, LiveDate, etc.) '
    accounttypevalues:
      enum:
        - DebitAccount
        - CreditAccount
        - VostroAcount
        - NostroAccount
        - PaymentAccount
        - SettlementAccount
        - SavingAccount
        - CurrentAccount
        - CashAccount
        - LoanAccount
      type: string
      description: ">\r\n* `DebitAccount` - \r\n* `CreditAccount` - \r\n* `VostroAcount` - In correspondent banking, an account held by one bank on behalf of another bank (the customer bank); the customer bank regards this account as its nostro account. (ECB)\r\n* `NostroAccount` - In correspondent banking, an account held by a customer bank on the books of another bank acting as a service provider. The other bank regards this account as a loro account. (ECB)\r\n* `PaymentAccount` - \r\n* `SettlementAccount` - A specific purpose account used to post debit and credit entries as a result of the transaction. (ISO20022)\n\nAccount which is used for settlement. (ISO20022)\r\n* `SavingAccount` - \r\n* `CurrentAccount` - \r\n* `CashAccount` - \r\n* `LoanAccount` - \r\n"
    accounttype:
      type: object
      properties:
        AccountType:
          $ref: '#/components/schemas/accounttypevalues'
        AccountTypeName:
          $ref: '#/components/schemas/name'
      description: 'Specifies the category of account like payment account, loan account, cash account, securities account, etc. '
    balancetypevalues:
      enum:
        - Openingbalance
        - Closingbalance
        - Currentbalance
        - Availablebalance
        - Ledgerbalance
        - Reservebalance
        - Freebalance
        - Principalbalance
      type: string
      description: ">\r\n* `Openingbalance` - Book balance of the account at the beginning of the account servicer's business day. It always equals the closing book balance from the previous business day. Note: the available balance at the beginning of the account servicer's business day may be different from the closing book balance from the previous business day. (ISO20022)\r\n* `Closingbalance` - Balance of the account at the end of the account servicer's business day. It is the sum of the opening balance at the beginning of the day and all entries booked to the account during the account servicer's business day. (ISO20022)\r\n* `Currentbalance` - Balance of the account at a precise moment in time. (ISO20022)\r\n* `Availablebalance` - Balance of money or securities that is at the disposal of the account owner on the date specified. (ISO20022)\r\n* `Ledgerbalance` - Ledger balance refers to posted transactions (e.g. limit authorisation amount - posted transactions). (ISO20022)\r\n* `Reservebalance` - \r\n* `Freebalance` - \r\n* `Principalbalance` - \r\n"
    debitcreditindicatortvalues:
      enum:
        - Debit
        - Credit
      type: string
      description: ">\r\n* `Debit` - Transaction is a debt entry\r\n* `Credit` - Transaction is a credit entry\r\n"
    accountbalance:
      type: object
      properties:
        BalanceAmount:
          $ref: '#/components/schemas/amount'
        BalanceType:
          $ref: '#/components/schemas/balancetypevalues'
        BalanceDate:
          $ref: '#/components/schemas/datetime'
        BalanceIndicator:
          $ref: '#/components/schemas/debitcreditindicatortvalues'
      description: "The state of the obligations managed on the account, the result of all entries on the account.\n\nNumerical representation of the net increases and decreases in an account at a specific point in time. (ISO20022)\n\nBanking: Amount available in an account for withdrawal or use.\nRead more: http://www.businessdictionary.com/definition/balance.html\n\nBookkeeping: Difference between the debit and credit sides of an account.\nRead more: http://www.businessdictionary.com/definition/balance.html"
    currencytypevalues:
      enum:
        - BaseCurrency
        - ReportingCurrency
        - SecondaryCurrency
        - TransferCurrency
      type: string
      description: ">\r\n* `BaseCurrency` - Base currency of the account. (ISO20022)\n\r\n* `ReportingCurrency` - Currency used to calculate and report the balance and related entries of an account. (ISO20022)\n\r\n* `SecondaryCurrency` - \r\n* `TransferCurrency` - Currency of the amount to be transferred which may be different from the currency of the debtor's account. (ISO20022)\r\n"
    accountcurrency:
      type: object
      properties:
        AccountCurrencyType:
          $ref: '#/components/schemas/currencytypevalues'
        AccountCurrency:
          $ref: '#/components/schemas/currencycode'
      description: ''
    account:
      type: object
      properties:
        AccountStatus:
          $ref: '#/components/schemas/accountstatus'
        AccountIdentification:
          $ref: '#/components/schemas/accountidentification'
        AccountDate:
          $ref: '#/components/schemas/accountdate'
        AccountType:
          $ref: '#/components/schemas/accounttype'
        AccountPurpose:
          $ref: '#/components/schemas/text'
        AccountBalance:
          $ref: '#/components/schemas/accountbalance'
        AccountCurrency:
          $ref: '#/components/schemas/accountcurrency'
        AccountDescription:
          $ref: '#/components/schemas/text'
        AccountName:
          $ref: '#/components/schemas/name'
      description: Reference to associated nostro account (our money at your bank) Account|Account  (https://www.iso20022.org/standardsrepository/type/Account)|Standard|ISO20022 BM ()
    clearingtransaction:
      type: object
      properties:
        ClearingTransaction:
          type: string
          description: Transaction that is the result of fulfilling a clearing arrangement
          format: class
      description: A record of a clearing transaction
    settlementtransaction:
      type: object
      properties:
        SettlementTransaction:
          type: string
          description: Transaction that is the result of fulfilling a settlement arrangement
          format: class
      description: A record of a settlement transaction
    ClearingandSettlement:
      type: object
      properties:
        CorrespondentBankClearingArrangementReference:
          $ref: '#/components/schemas/clearingarrangement'
        CorrespondentBankClearingArrangementClearingInstructions:
          $ref: '#/components/schemas/clearinginstruction'
        CorrespondentBankClearingArrangementSettlementInstructions:
          $ref: '#/components/schemas/settlementinstruction'
        MirrorNostroAccountReference:
          $ref: '#/components/schemas/account'
        ClearingTransaction:
          $ref: '#/components/schemas/clearingtransaction'
        SettlementTransaction:
          $ref: '#/components/schemas/settlementtransaction'
      description: "The collection of operational serivces/functions offered by the operational facility\n\nExamples: messages, capture, routines"
    transactiondatetypevalues:
      enum:
        - TransactionExecutedDate
        - TransactionFulfillmentDate
        - TransactionInitiatedDate
        - TransactionCancelledDate
        - TransactionApprovedDate
      type: string
      description: ">\r\n* `TransactionExecutedDate` - \r\n* `TransactionFulfillmentDate` - \r\n* `TransactionInitiatedDate` - \r\n* `TransactionCancelledDate` - \r\n* `TransactionApprovedDate` - \r\n"
    transactiondate:
      type: object
      properties:
        TransactionDate:
          $ref: '#/components/schemas/datetime'
        TransactionDateType:
          $ref: '#/components/schemas/transactiondatetypevalues'
      description: "The Date that the transaction has occurred or is planned to occur.\nA characteristic of transaction which refers to the LifecycleDate of transaction (e.g., initiated date, executed date, fulfillment date). "
    transactiontypevalues:
      enum:
        - FinancialTransaction
        - BusinessTransaction
        - BankingTransaction
        - AccountingTransaction
        - BookingTransaction
        - AllocationTransaction
        - DeliveryTransaction
        - ProductionTransaction
      type: string
      description: ">\r\n* `FinancialTransaction` - \r\n* `BusinessTransaction` - \r\n* `BankingTransaction` - \r\n* `AccountingTransaction` - \r\n* `BookingTransaction` - \r\n* `AllocationTransaction` - \r\n* `DeliveryTransaction` - \r\n* `ProductionTransaction` - \r\n"
    transactionstatustypevalues:
      enum:
        - Initiated
        - Executed
        - Cancelled
        - Confirmed
        - Suspended
        - Pending
        - Completed
        - Notified
        - Booked
        - Rejected
      type: string
      description: ">\r\n* `Initiated` - \r\n* `Executed` - \r\n* `Cancelled` - \r\n* `Confirmed` - \r\n* `Suspended` - \r\n* `Pending` - \r\n* `Completed` - \r\n* `Notified` - \r\n* `Booked` - \r\n* `Rejected` - \r\n"
    transactionlifecyclestatus:
      type: object
      properties:
        TransactionLifecycleStatus:
          $ref: '#/components/schemas/status'
        TransactionLifecycleStatusType:
          $ref: '#/components/schemas/transactionstatustypevalues'
      description: 'A characteristic of transaction which refers to the LifecycleStatus of transaction (e.g., initiated, executed, confirmed, cancelled, etc.) '
    transaction:
      type: object
      properties:
        TransactionIdentification:
          $ref: '#/components/schemas/identifier'
        TransactionDate:
          $ref: '#/components/schemas/transactiondate'
        TransactionType:
          $ref: '#/components/schemas/transactiontypevalues'
        TransactionDescription:
          $ref: '#/components/schemas/text'
        TransactionStatus:
          $ref: '#/components/schemas/transactionlifecyclestatus'
        TransactionName:
          $ref: '#/components/schemas/name'
      description: Inbound payment transaction details
    productagreementtypevalues:
      enum:
        - CurrentAccountAgreement
        - SavingsAccountAgreement
        - BrokeredProductAgreement
        - ConsumerLoanAgreement
        - MortgageLoanAgreement
        - DirectDebitServiceAgreement
      type: string
      description: ">\r\n* `CurrentAccountAgreement` - \r\n* `SavingsAccountAgreement` - \r\n* `BrokeredProductAgreement` - \r\n* `ConsumerLoanAgreement` - \r\n* `MortgageLoanAgreement` - \r\n* `DirectDebitServiceAgreement` - \r\n"
    productidentificationtypevalues:
      enum:
        - ISINCode
        - PackageCode
        - Buyersitemnumber
        - Commercialdescriptioncodename
        - EAN
        - Harmonizedtariffcodename
        - Manufacturersitemnumber
        - Modelnumber
        - Partnumber
        - Quotacategory
        - Stylenumber
        - Suppliersitemnumber
        - Universalproductcode
      type: string
      description: ">\r\n* `ISINCode` - \r\n* `PackageCode` - \r\n* `Buyersitemnumber` - Product identifier assigned by the buyer.\r\n* `Commercialdescriptioncodename` - A code to identify a product based on applicable commercial conditions.\r\n* `EAN` - The unique EAN (European Article Number) code.\r\n* `Harmonizedtariffcodename` - Classification of goods as developed by the Customs Cooperation council.\r\n* `Manufacturersitemnumber` - Product identifier as assigned by the manufacturer.\r\n* `Modelnumber` - Reference number assigned by the manufacturer to differentiate variations in similar products in a class or group.\r\n* `Partnumber` - Reference assigned by the manufacturer to a product part.\r\n* `Quotacategory` - Product identifier used by the retail industry.\r\n* `Stylenumber` - Identification of the style of a product.\r\n* `Suppliersitemnumber` - Number assigned to an article by the supplier of that article.\r\n* `Universalproductcode` - Number assigned to a manufacturer's product by the Product Code Council.\r\n"
    productidentification:
      type: object
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/identifier'
        ProductIdentificationType:
          $ref: '#/components/schemas/productidentificationtypevalues'
      description: The identifier of product e.g. ISIN Code.
    bankingproducttypevalues:
      enum:
        - LoanProduct
        - CurrentAccountProduct
        - SavingAccountProduct
        - BrokeredProduct
        - TermDepositProduct
      type: string
      description: ">\r\n* `LoanProduct` - \r\n* `CurrentAccountProduct` - \r\n* `SavingAccountProduct` - \r\n* `BrokeredProduct` - \r\n* `TermDepositProduct` - \r\n"
    productlifecyclestatustypevalues:
      enum:
        - Initiated
        - Announced
        - Sold
        - Obsolete
        - Active
      type: string
      description: ">\r\n* `Initiated` - \r\n* `Announced` - \r\n* `Sold` - \r\n* `Obsolete` - \r\n* `Active` - \r\n"
    productlifecyclestatus:
      type: object
      properties:
        ProductLifecycleStatus:
          $ref: '#/components/schemas/status'
        ProductLifecycleStatusType:
          $ref: '#/components/schemas/productlifecyclestatustypevalues'
      description: 'Refers to the lifecycle of a product (e.g., initiated, announced, active, obsolete, withdrawn).'
    bankingproduct:
      type: object
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/productidentification'
        ProductType:
          $ref: '#/components/schemas/bankingproducttypevalues'
        ProductLifecycleStatus:
          $ref: '#/components/schemas/productlifecyclestatus'
        ProductPriority:
          $ref: '#/components/schemas/text'
        ProductDescription:
          $ref: '#/components/schemas/text'
        ProductVersion:
          $ref: '#/components/schemas/text'
        ProductName:
          $ref: '#/components/schemas/name'
      description: ''
    date:
      type: object
      properties:
        DateContent:
          type: string
          description: ''
          format: string
      description: Date on which the agreement was signed by all parties. (ISO20022)
    agreementtypevalues:
      enum:
        - CustomerAgreement
        - SupplierAgreement
        - BrokerAgreement
        - SalesAgreement
        - PurchaseAgreement
        - MaintenanceAgreement
        - ProductAgreement
        - ProductSalesAgreement
        - ResourceAgreement
      type: string
      description: ">\r\n* `CustomerAgreement` - \r\n* `SupplierAgreement` - \r\n* `BrokerAgreement` - \r\n* `SalesAgreement` - \r\n* `PurchaseAgreement` - \r\n* `MaintenanceAgreement` - \r\n* `ProductAgreement` - \r\n* `ProductSalesAgreement` - \r\n* `ResourceAgreement` - \r\n"
    agreementlifecyclestatustypevalues:
      enum:
        - Offered
        - Confirmed
        - Completed
        - Signed
        - Terminated
        - Rejected
      type: string
      description: ">\r\n* `Offered` - \r\n* `Confirmed` - \r\n* `Completed` - \r\n* `Signed` - \r\n* `Terminated` - \r\n* `Rejected` - \r\n"
    agreementlifecyclestatus:
      type: object
      properties:
        AgreementLifecycleStatus:
          $ref: '#/components/schemas/status'
        AgreementLifecycleStatusType:
          $ref: '#/components/schemas/agreementlifecyclestatustypevalues'
      description: 'A characteristic of agreement which refers to the LifecycleStatus of agreement (e.g., potential, offered, confirmed, completed, signed, terminated).'
    agreement:
      type: object
      properties:
        AgreementSignedDate:
          $ref: '#/components/schemas/date'
        AgreementType:
          $ref: '#/components/schemas/agreementtypevalues'
        AgreementValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        AgreementVersion:
          $ref: '#/components/schemas/text'
        AgreementStatus:
          $ref: '#/components/schemas/agreementlifecyclestatus'
        AgreementSubjectMatter:
          $ref: '#/components/schemas/text'
        AgreementIdentification:
          $ref: '#/components/schemas/identifier'
        AgreementDate:
          $ref: '#/components/schemas/datetime'
        AgreementDescription:
          $ref: '#/components/schemas/text'
      description: ''
    productagreement:
      type: object
      properties:
        Type:
          $ref: '#/components/schemas/productagreementtypevalues'
        ProductReference:
          $ref: '#/components/schemas/bankingproduct'
        AgreementReference:
          $ref: '#/components/schemas/agreement'
      description: Payer account reference or number
    instructiondatetypevalues:
      enum:
        - DueDate
        - ExecutionDate
        - FulfillmentDate
      type: string
      description: ">\r\n* `DueDate` - \r\n* `ExecutionDate` - \r\n* `FulfillmentDate` - \r\n"
    instructiondate:
      type: object
      properties:
        InstructionDate:
          $ref: '#/components/schemas/date'
        InstructionDateType:
          $ref: '#/components/schemas/instructiondatetypevalues'
      description: ''
    instructionlifecylestatustypevalues:
      enum:
        - Requested
        - Prepared
        - InProgress
        - Fulfilled
        - OnHold
        - Failed
      type: string
      description: ">\r\n* `Requested` - Instruction handed over to the party that has taken the engegament (obligation) to take the requested action\r\n* `Prepared` - Instruction is ready to be handed over to the executor\r\n* `InProgress` - Insruction is being processed \r\n* `Fulfilled` - Instruction has been fully executed\r\n* `OnHold` - processing has been put on hold \n\n\nreason shhould be specified in another datatype\r\n* `Failed` - \r\n"
    instructionlifecyclestatus:
      type: object
      properties:
        InstructionLifecycleStatusType:
          $ref: '#/components/schemas/instructionlifecylestatustypevalues'
        InstructionLifecycleStatus:
          $ref: '#/components/schemas/status'
      description: 'A characteristic of instruction which refers to the LifecycleStatus of instruction (e.g., requested, executed, fulfilled, etc.); '
    instructionidentificationtypevalues:
      enum:
        - OrderNumber
        - InstructionNumber
      type: string
      description: ">\r\n* `OrderNumber` - \r\n* `InstructionNumber` - \r\n"
    instructionidentification:
      type: object
      properties:
        InstructionIdentifier:
          $ref: '#/components/schemas/identifier'
        InstructionIdentifierType:
          $ref: '#/components/schemas/instructionidentificationtypevalues'
      description: "An identifier that allows to uniquely refer to an instance of an Instruction.\n"
    instructiontypevalues:
      enum:
        - PaymentInstruction
        - DeliveryOrder
        - InformationRequest
        - ExchangeInstruction
        - AllocationInstruction
        - MaintenanceInstruction
      type: string
      description: ">\r\n* `PaymentInstruction` - \r\n* `DeliveryOrder` - \r\n* `InformationRequest` - \r\n* `ExchangeInstruction` - \r\n* `AllocationInstruction` - \r\n* `MaintenanceInstruction` - \r\n"
    log:
      type: object
      properties:
        LogType:
          type: string
          description: ''
          format: string
        LogPeriod:
          type: string
          description: ''
          format: string
        LogDate:
          type: string
          description: Key dates associated with the log (e.g. start time).
          format: string
        LogIdentification:
          type: string
          description: ''
          format: string
      description: ''
    instruction:
      type: object
      properties:
        InstructionDate:
          $ref: '#/components/schemas/instructiondate'
        InstructionStatus:
          $ref: '#/components/schemas/instructionlifecyclestatus'
        InstructionIdentifier:
          $ref: '#/components/schemas/instructionidentification'
        InstructionType:
          $ref: '#/components/schemas/instructiontypevalues'
        InstructionResult:
          $ref: '#/components/schemas/text'
        InstructionDescription:
          $ref: '#/components/schemas/text'
        InstructionLog:
          $ref: '#/components/schemas/log'
        InstructionPurpose:
          $ref: '#/components/schemas/text'
      description: Transaction specific clearing and settlement instructions
    correspondentbankinvolvementtypevalues:
      enum:
        - AdvisingBank
        - BeneficiaryBank
        - ReimbursingBank
        - RefinancingBank
        - OrderingBank
        - SenderBank
        - PayingBank
        - IntermediaryBank
        - SenderCorrespondent
        - ReceiverCorrespondent
      type: string
      description: ">\r\n* `AdvisingBank` - \r\n* `BeneficiaryBank` - \r\n* `ReimbursingBank` - \r\n* `RefinancingBank` - \r\n* `OrderingBank` - \r\n* `SenderBank` - \r\n* `PayingBank` - \r\n* `IntermediaryBank` - \r\n* `SenderCorrespondent` - \r\n* `ReceiverCorrespondent` - \r\n"
    InboundPayments:
      type: object
      properties:
        CorrespondentTransactionRecord:
          $ref: '#/components/schemas/transaction'
        SWIFTTransactionReference:
          $ref: '#/components/schemas/transaction'
        PayerBankReference:
          $ref: '#/components/schemas/involvedparty'
        PayerReference:
          $ref: '#/components/schemas/involvedparty'
        CorrespondedBankReference:
          $ref: '#/components/schemas/involvedparty'
        PayerProductInstanceReference:
          $ref: '#/components/schemas/productagreement'
        PayeeReference:
          $ref: '#/components/schemas/involvedparty'
        PayeeProductInstanceReference:
          $ref: '#/components/schemas/productagreement'
        PayeeBankReference:
          $ref: '#/components/schemas/involvedparty'
        SpecialInstructions:
          $ref: '#/components/schemas/instruction'
        Amount:
          $ref: '#/components/schemas/amount'
        Currency:
          $ref: '#/components/schemas/currencycode'
        DateType:
          $ref: '#/components/schemas/transactiondatetypevalues'
        Date:
          $ref: '#/components/schemas/datetime'
        CorrespondentBankRoleType:
          $ref: '#/components/schemas/correspondentbankinvolvementtypevalues'
      description: "The collection of operational serivces/functions offered by the operational facility\n\nExamples: messages, capture, routines"
    OutboundPayments:
      type: object
      properties:
        CorrespondentTransactionRecord:
          $ref: '#/components/schemas/transaction'
        SWIFTTransactionReference:
          $ref: '#/components/schemas/transaction'
        PayerBankReference:
          $ref: '#/components/schemas/involvedparty'
        PayerReference:
          $ref: '#/components/schemas/involvedparty'
        CorrespondedBankReference:
          $ref: '#/components/schemas/involvedparty'
        PayerProductInstanceReference:
          $ref: '#/components/schemas/productagreement'
        PayeeReference:
          $ref: '#/components/schemas/involvedparty'
        PayeeProductInstanceReference:
          $ref: '#/components/schemas/productagreement'
        PayeeBankReference:
          $ref: '#/components/schemas/involvedparty'
        SpecialInstructions:
          $ref: '#/components/schemas/instruction'
        Amount:
          $ref: '#/components/schemas/amount'
        Currency:
          $ref: '#/components/schemas/currencycode'
        DateType:
          $ref: '#/components/schemas/transactiondatetypevalues'
        Date:
          $ref: '#/components/schemas/transactiondate'
        CorrespondentBankRoleType:
          $ref: '#/components/schemas/correspondentbankinvolvementtypevalues'
        TransactionStatus:
          type: string
          description: ''
          format: ''
      description: "The collection of operational serivces/functions offered by the operational facility\n\nExamples: messages, capture, routines"
    task:
      type: object
      properties:
        Task:
          type: string
          description: ''
          format: datatype
      description: Reference to the correspondent reconciliation task
    workproducttypevalues:
      enum:
        - Document
        - WorkingPaper
        - ActivityLog
        - Form
        - File
        - MeetingSchedule
        - MeetingMinute
      type: string
      description: ">\r\n* `Document` - \r\n* `WorkingPaper` - \r\n* `ActivityLog` - \r\n* `Form` - \r\n* `File` - File of consolidated notes, evaluations and recommendations for the work task\r\n* `MeetingSchedule` - \r\n* `MeetingMinute` - \r\n"
    workproduct:
      type: object
      properties:
        WorkProductType:
          $ref: '#/components/schemas/workproducttypevalues'
        WorkProductIdentifoication:
          type: string
          description: ''
          format: string
      description: 'Work documentation, accounts and transaction details produced and referenced during the reconciliation'
    Reconciliation:
      type: object
      properties:
        CorrespondentBankReconciliationTaskReference:
          $ref: '#/components/schemas/task'
        CorrespondentBankReconciliationTaskWorkProducts:
          $ref: '#/components/schemas/workproduct'
        CorrespondentBankReconciliationTaskResult:
          $ref: '#/components/schemas/text'
      description: "The collection of operational serivces/functions offered by the operational facility\n\nExamples: messages, capture, routines"
    correspondentbankingarrangement:
      type: object
      properties:
        CorrespondentBankingArrangement:
          type: string
          description: ''
          format: class
      description: "The correspondent bank arrangement (details agreed limits, fees, preferred payments mechanism, etc.) ||\r\n|"
    schedule:
      type: object
      properties:
        ScheduleType:
          type: string
          description: ''
          format: string
      description: "Details of the schedule for processing payments, clearing and settlement and reconciliations ||\r\n|"
    calendar:
      type: object
      properties:
        CalendarReference:
          type: string
          description: ''
          format: string
        CalendarType:
          type: string
          description: ''
          format: string
      description: "A reference to the bank calendar details for payment processing ||\r\n|"
    CorrespondentBankOperatingSession:
      type: object
      properties:
        CorrespondentBankFacilityReference:
          $ref: '#/components/schemas/correspondentbankingarrangement'
        CorrespondentBankFacility:
          $ref: '#/components/schemas/correspondentbankingarrangement'
        CorrespondentBankServicingSchedule:
          $ref: '#/components/schemas/schedule'
        HolidayTimezoneSchedule:
          $ref: '#/components/schemas/calendar'
        VostroAccountReference:
          $ref: '#/components/schemas/account'
        NostroMirrorAccountReference:
          $ref: '#/components/schemas/account'
        SessionStatus:
          $ref: '#/components/schemas/status'
      description: 'Fulfill any scheduled and ad-hoc obligations under a service arrangement, most typically for a financial product or facility within Correspondent Bank. '
    InitiateCorrespondentBankOperatingSessionRequest:
      type: object
      properties:
        CorrespondentBankOperatingSession:
          type: object
          properties:
            CorrespondentBankFacilityReference:
              $ref: '#/components/schemas/correspondentbankingarrangement'
            CorrespondentBankFacility:
              $ref: '#/components/schemas/correspondentbankingarrangement'
            CorrespondentBankServicingSchedule:
              $ref: '#/components/schemas/schedule'
            HolidayTimezoneSchedule:
              $ref: '#/components/schemas/calendar'
            VostroAccountReference:
              $ref: '#/components/schemas/account'
            NostroMirrorAccountReference:
              $ref: '#/components/schemas/account'
      description: 'Input: Initiate a correspondent fulfillment arrangement'
    InitiateCorrespondentBankOperatingSessionResponse:
      type: object
      properties:
        CorrespondentBankOperatingSession:
          type: object
          properties:
            CorrespondentBankFacilityReference:
              $ref: '#/components/schemas/correspondentbankingarrangement'
            CorrespondentBankFacility:
              $ref: '#/components/schemas/correspondentbankingarrangement'
            CorrespondentBankServicingSchedule:
              $ref: '#/components/schemas/schedule'
            HolidayTimezoneSchedule:
              $ref: '#/components/schemas/calendar'
            VostroAccountReference:
              $ref: '#/components/schemas/account'
            NostroMirrorAccountReference:
              $ref: '#/components/schemas/account'
      description: 'Output: Initiate a correspondent fulfillment arrangement'
    UpdateCorrespondentBankOperatingSessionRequest:
      type: object
      properties:
        CorrespondentBankOperatingSession:
          type: object
          properties:
            CorrespondentBankFacilityReference:
              $ref: '#/components/schemas/correspondentbankingarrangement'
            CorrespondentBankFacility:
              $ref: '#/components/schemas/correspondentbankingarrangement'
            CorrespondentBankServicingSchedule:
              $ref: '#/components/schemas/schedule'
            HolidayTimezoneSchedule:
              $ref: '#/components/schemas/calendar'
            VostroAccountReference:
              $ref: '#/components/schemas/account'
            NostroMirrorAccountReference:
              $ref: '#/components/schemas/account'
      description: 'Input: Update correspondent fulfillment arrangement'
    UpdateCorrespondentBankOperatingSessionResponse:
      type: object
      properties:
        CorrespondentBankOperatingSession:
          type: object
          properties:
            CorrespondentBankFacilityReference:
              $ref: '#/components/schemas/correspondentbankingarrangement'
            CorrespondentBankFacility:
              $ref: '#/components/schemas/correspondentbankingarrangement'
            CorrespondentBankServicingSchedule:
              $ref: '#/components/schemas/schedule'
            HolidayTimezoneSchedule:
              $ref: '#/components/schemas/calendar'
            VostroAccountReference:
              $ref: '#/components/schemas/account'
            NostroMirrorAccountReference:
              $ref: '#/components/schemas/account'
      description: 'Output: Update correspondent fulfillment arrangement'
    ControlCorrespondentBankOperatingSessionRequest:
      type: object
      properties:
        CorrespondentBankOperatingSession:
          type: object
          properties:
            CorrespondentBankFacilityReference:
              $ref: '#/components/schemas/correspondentbankingarrangement'
            CorrespondentBankFacility:
              $ref: '#/components/schemas/correspondentbankingarrangement'
            CorrespondentBankServicingSchedule:
              $ref: '#/components/schemas/schedule'
            HolidayTimezoneSchedule:
              $ref: '#/components/schemas/calendar'
            VostroAccountReference:
              $ref: '#/components/schemas/account'
            NostroMirrorAccountReference:
              $ref: '#/components/schemas/account'
      description: 'Input: Control the handling of an arrangement'
    ControlCorrespondentBankOperatingSessionResponse:
      type: object
      properties:
        CorrespondentBankOperatingSession:
          type: object
          properties:
            CorrespondentBankFacilityReference:
              $ref: '#/components/schemas/correspondentbankingarrangement'
            CorrespondentBankFacility:
              $ref: '#/components/schemas/correspondentbankingarrangement'
            CorrespondentBankServicingSchedule:
              $ref: '#/components/schemas/schedule'
            HolidayTimezoneSchedule:
              $ref: '#/components/schemas/calendar'
            VostroAccountReference:
              $ref: '#/components/schemas/account'
            NostroMirrorAccountReference:
              $ref: '#/components/schemas/account'
      description: 'Output: Control the handling of an arrangement'
    RetrieveCorrespondentBankOperatingSessionRequest:
      type: object
      properties:
        CorrespondentBankOperatingSession:
          type: object
          properties:
            CorrespondentBankFacilityReference:
              $ref: '#/components/schemas/correspondentbankingarrangement'
            CorrespondentBankFacility:
              $ref: '#/components/schemas/correspondentbankingarrangement'
            CorrespondentBankServicingSchedule:
              $ref: '#/components/schemas/schedule'
            HolidayTimezoneSchedule:
              $ref: '#/components/schemas/calendar'
            VostroAccountReference:
              $ref: '#/components/schemas/account'
            NostroMirrorAccountReference:
              $ref: '#/components/schemas/account'
      description: 'Input: Retrieve a correspondent fulfillment arrangement'
    RetrieveCorrespondentBankOperatingSessionResponse:
      type: object
      properties:
        CorrespondentBankOperatingSession:
          type: object
          properties:
            CorrespondentBankFacilityReference:
              $ref: '#/components/schemas/correspondentbankingarrangement'
            CorrespondentBankFacility:
              $ref: '#/components/schemas/correspondentbankingarrangement'
            CorrespondentBankServicingSchedule:
              $ref: '#/components/schemas/schedule'
            HolidayTimezoneSchedule:
              $ref: '#/components/schemas/calendar'
            VostroAccountReference:
              $ref: '#/components/schemas/account'
            NostroMirrorAccountReference:
              $ref: '#/components/schemas/account'
      description: 'Output: Retrieve a correspondent fulfillment arrangement'
    ExchangeCorrespondentBankOperatingSessionRequest:
      type: object
      properties:
        CorrespondentBankOperatingSession:
          type: object
          properties:
            CorrespondentBankFacilityReference:
              $ref: '#/components/schemas/correspondentbankingarrangement'
            CorrespondentBankFacility:
              $ref: '#/components/schemas/correspondentbankingarrangement'
            CorrespondentBankServicingSchedule:
              $ref: '#/components/schemas/schedule'
            HolidayTimezoneSchedule:
              $ref: '#/components/schemas/calendar'
            VostroAccountReference:
              $ref: '#/components/schemas/account'
            NostroMirrorAccountReference:
              $ref: '#/components/schemas/account'
      description: 'Input: Exchange Correspondent Bank Operating Session'
    ExchangeCorrespondentBankOperatingSessionResponse:
      type: object
      properties:
        CorrespondentBankOperatingSession:
          type: object
          properties:
            CorrespondentBankFacilityReference:
              $ref: '#/components/schemas/correspondentbankingarrangement'
            CorrespondentBankFacility:
              $ref: '#/components/schemas/correspondentbankingarrangement'
            CorrespondentBankServicingSchedule:
              $ref: '#/components/schemas/schedule'
            HolidayTimezoneSchedule:
              $ref: '#/components/schemas/calendar'
            VostroAccountReference:
              $ref: '#/components/schemas/account'
            NostroMirrorAccountReference:
              $ref: '#/components/schemas/account'
      description: 'Output: Exchange Correspondent Bank Operating Session'
    ExecuteCorrespondentBankOperatingSessionRequest:
      type: object
      properties:
        CorrespondentBankOperatingSession:
          type: object
          properties:
            CorrespondentBankFacilityReference:
              $ref: '#/components/schemas/correspondentbankingarrangement'
            CorrespondentBankFacility:
              $ref: '#/components/schemas/correspondentbankingarrangement'
            CorrespondentBankServicingSchedule:
              $ref: '#/components/schemas/schedule'
            HolidayTimezoneSchedule:
              $ref: '#/components/schemas/calendar'
            VostroAccountReference:
              $ref: '#/components/schemas/account'
            NostroMirrorAccountReference:
              $ref: '#/components/schemas/account'
      description: 'Input: Execute Correspondent Bank Operating Session'
    ExecuteCorrespondentBankOperatingSessionResponse:
      type: object
      properties:
        CorrespondentBankOperatingSession:
          type: object
          properties:
            CorrespondentBankFacilityReference:
              $ref: '#/components/schemas/correspondentbankingarrangement'
            CorrespondentBankFacility:
              $ref: '#/components/schemas/correspondentbankingarrangement'
            CorrespondentBankServicingSchedule:
              $ref: '#/components/schemas/schedule'
            HolidayTimezoneSchedule:
              $ref: '#/components/schemas/calendar'
            VostroAccountReference:
              $ref: '#/components/schemas/account'
            NostroMirrorAccountReference:
              $ref: '#/components/schemas/account'
      description: 'Output: Execute Correspondent Bank Operating Session'
    NotifyCorrespondentBankOperatingSessionRequest:
      type: object
      properties:
        CorrespondentBankOperatingSession:
          type: object
          properties:
            CorrespondentBankFacilityReference:
              $ref: '#/components/schemas/correspondentbankingarrangement'
            CorrespondentBankFacility:
              $ref: '#/components/schemas/correspondentbankingarrangement'
            CorrespondentBankServicingSchedule:
              $ref: '#/components/schemas/schedule'
            HolidayTimezoneSchedule:
              $ref: '#/components/schemas/calendar'
            VostroAccountReference:
              $ref: '#/components/schemas/account'
            NostroMirrorAccountReference:
              $ref: '#/components/schemas/account'
      description: 'Input: Notify Correspondent Bank Operating Session'
    NotifyCorrespondentBankOperatingSessionResponse:
      type: object
      properties:
        CorrespondentBankOperatingSession:
          type: object
          properties:
            CorrespondentBankFacilityReference:
              $ref: '#/components/schemas/correspondentbankingarrangement'
            CorrespondentBankFacility:
              $ref: '#/components/schemas/correspondentbankingarrangement'
            CorrespondentBankServicingSchedule:
              $ref: '#/components/schemas/schedule'
            HolidayTimezoneSchedule:
              $ref: '#/components/schemas/calendar'
            VostroAccountReference:
              $ref: '#/components/schemas/account'
            NostroMirrorAccountReference:
              $ref: '#/components/schemas/account'
      description: 'Output: Notify Correspondent Bank Operating Session'
    RequestCorrespondentBankOperatingSessionRequest:
      type: object
      properties:
        CorrespondentBankOperatingSession:
          type: object
          properties:
            CorrespondentBankFacilityReference:
              $ref: '#/components/schemas/correspondentbankingarrangement'
            CorrespondentBankFacility:
              $ref: '#/components/schemas/correspondentbankingarrangement'
            CorrespondentBankServicingSchedule:
              $ref: '#/components/schemas/schedule'
            HolidayTimezoneSchedule:
              $ref: '#/components/schemas/calendar'
            VostroAccountReference:
              $ref: '#/components/schemas/account'
            NostroMirrorAccountReference:
              $ref: '#/components/schemas/account'
      description: 'Input: Request Correspondent Bank Operating Session'
    RequestCorrespondentBankOperatingSessionResponse:
      type: object
      properties:
        CorrespondentBankOperatingSession:
          type: object
          properties:
            CorrespondentBankFacilityReference:
              $ref: '#/components/schemas/correspondentbankingarrangement'
            CorrespondentBankFacility:
              $ref: '#/components/schemas/correspondentbankingarrangement'
            CorrespondentBankServicingSchedule:
              $ref: '#/components/schemas/schedule'
            HolidayTimezoneSchedule:
              $ref: '#/components/schemas/calendar'
            VostroAccountReference:
              $ref: '#/components/schemas/account'
            NostroMirrorAccountReference:
              $ref: '#/components/schemas/account'
      description: 'Output: Request Correspondent Bank Operating Session'
    UpdateOutboundPaymentsRequest:
      type: object
      properties:
        OutboundPayments:
          type: object
          properties:
            CorrespondentTransactionRecord:
              $ref: '#/components/schemas/transaction'
            SWIFTTransactionReference:
              $ref: '#/components/schemas/transaction'
            PayerBankReference:
              $ref: '#/components/schemas/involvedparty'
            PayerReference:
              $ref: '#/components/schemas/involvedparty'
            CorrespondedBankReference:
              $ref: '#/components/schemas/involvedparty'
            PayerProductInstanceReference:
              $ref: '#/components/schemas/productagreement'
            PayeeReference:
              $ref: '#/components/schemas/involvedparty'
            PayeeProductInstanceReference:
              $ref: '#/components/schemas/productagreement'
            PayeeBankReference:
              $ref: '#/components/schemas/involvedparty'
            SpecialInstructions:
              $ref: '#/components/schemas/instruction'
            Amount:
              $ref: '#/components/schemas/amount'
            Currency:
              $ref: '#/components/schemas/currencycode'
            DateType:
              $ref: '#/components/schemas/transactiondatetypevalues'
            Date:
              $ref: '#/components/schemas/transactiondate'
            CorrespondentBankRoleType:
              $ref: '#/components/schemas/correspondentbankinvolvementtypevalues'
      description: 'Input: Update outbound payment transactions'
    UpdateOutboundPaymentsResponse:
      type: object
      properties:
        OutboundPayments:
          type: object
          properties:
            CorrespondentTransactionRecord:
              $ref: '#/components/schemas/transaction'
            SWIFTTransactionReference:
              $ref: '#/components/schemas/transaction'
            PayerBankReference:
              $ref: '#/components/schemas/involvedparty'
            PayerReference:
              $ref: '#/components/schemas/involvedparty'
            CorrespondedBankReference:
              $ref: '#/components/schemas/involvedparty'
            PayerProductInstanceReference:
              $ref: '#/components/schemas/productagreement'
            PayeeReference:
              $ref: '#/components/schemas/involvedparty'
            PayeeProductInstanceReference:
              $ref: '#/components/schemas/productagreement'
            PayeeBankReference:
              $ref: '#/components/schemas/involvedparty'
            SpecialInstructions:
              $ref: '#/components/schemas/instruction'
            Amount:
              $ref: '#/components/schemas/amount'
            Currency:
              $ref: '#/components/schemas/currencycode'
            DateType:
              $ref: '#/components/schemas/transactiondatetypevalues'
            Date:
              $ref: '#/components/schemas/transactiondate'
            CorrespondentBankRoleType:
              $ref: '#/components/schemas/correspondentbankinvolvementtypevalues'
      description: 'Output: Update outbound payment transactions'
    ExecuteOutboundPaymentsRequest:
      type: object
      properties:
        OutboundPayments:
          type: object
          properties:
            CorrespondentTransactionRecord:
              $ref: '#/components/schemas/transaction'
            SWIFTTransactionReference:
              $ref: '#/components/schemas/transaction'
            PayerBankReference:
              $ref: '#/components/schemas/involvedparty'
            PayerReference:
              $ref: '#/components/schemas/involvedparty'
            CorrespondedBankReference:
              $ref: '#/components/schemas/involvedparty'
            PayerProductInstanceReference:
              $ref: '#/components/schemas/productagreement'
            PayeeReference:
              $ref: '#/components/schemas/involvedparty'
            PayeeProductInstanceReference:
              $ref: '#/components/schemas/productagreement'
            PayeeBankReference:
              $ref: '#/components/schemas/involvedparty'
            SpecialInstructions:
              $ref: '#/components/schemas/instruction'
            Amount:
              $ref: '#/components/schemas/amount'
            Currency:
              $ref: '#/components/schemas/currencycode'
            DateType:
              $ref: '#/components/schemas/transactiondatetypevalues'
            Date:
              $ref: '#/components/schemas/transactiondate'
            CorrespondentBankRoleType:
              $ref: '#/components/schemas/correspondentbankinvolvementtypevalues'
      description: 'Input: Execute outbound payment transactions to a correspondent'
    ExecuteOutboundPaymentsResponse:
      type: object
      properties:
        OutboundPayments:
          type: object
          properties:
            CorrespondentTransactionRecord:
              $ref: '#/components/schemas/transaction'
            SWIFTTransactionReference:
              $ref: '#/components/schemas/transaction'
            PayerBankReference:
              $ref: '#/components/schemas/involvedparty'
            PayerReference:
              $ref: '#/components/schemas/involvedparty'
            CorrespondedBankReference:
              $ref: '#/components/schemas/involvedparty'
            PayerProductInstanceReference:
              $ref: '#/components/schemas/productagreement'
            PayeeReference:
              $ref: '#/components/schemas/involvedparty'
            PayeeProductInstanceReference:
              $ref: '#/components/schemas/productagreement'
            PayeeBankReference:
              $ref: '#/components/schemas/involvedparty'
            SpecialInstructions:
              $ref: '#/components/schemas/instruction'
            Amount:
              $ref: '#/components/schemas/amount'
            Currency:
              $ref: '#/components/schemas/currencycode'
            DateType:
              $ref: '#/components/schemas/transactiondatetypevalues'
            Date:
              $ref: '#/components/schemas/transactiondate'
            CorrespondentBankRoleType:
              $ref: '#/components/schemas/correspondentbankinvolvementtypevalues'
      description: 'Output: Execute outbound payment transactions to a correspondent'
    RetrieveOutboundPaymentsRequest:
      type: object
      properties:
        OutboundPayments:
          type: object
          properties:
            CorrespondentTransactionRecord:
              $ref: '#/components/schemas/transaction'
            SWIFTTransactionReference:
              $ref: '#/components/schemas/transaction'
            PayerBankReference:
              $ref: '#/components/schemas/involvedparty'
            PayerReference:
              $ref: '#/components/schemas/involvedparty'
            CorrespondedBankReference:
              $ref: '#/components/schemas/involvedparty'
            PayerProductInstanceReference:
              $ref: '#/components/schemas/productagreement'
            PayeeReference:
              $ref: '#/components/schemas/involvedparty'
            PayeeProductInstanceReference:
              $ref: '#/components/schemas/productagreement'
            PayeeBankReference:
              $ref: '#/components/schemas/involvedparty'
            SpecialInstructions:
              $ref: '#/components/schemas/instruction'
            Amount:
              $ref: '#/components/schemas/amount'
            Currency:
              $ref: '#/components/schemas/currencycode'
            DateType:
              $ref: '#/components/schemas/transactiondatetypevalues'
            Date:
              $ref: '#/components/schemas/transactiondate'
            CorrespondentBankRoleType:
              $ref: '#/components/schemas/correspondentbankinvolvementtypevalues'
      description: 'Input: Retrieve outbound payments'
    RetrieveOutboundPaymentsResponse:
      type: object
      properties:
        OutboundPayments:
          type: object
          properties:
            CorrespondentTransactionRecord:
              $ref: '#/components/schemas/transaction'
            SWIFTTransactionReference:
              $ref: '#/components/schemas/transaction'
            PayerBankReference:
              $ref: '#/components/schemas/involvedparty'
            PayerReference:
              $ref: '#/components/schemas/involvedparty'
            CorrespondedBankReference:
              $ref: '#/components/schemas/involvedparty'
            PayerProductInstanceReference:
              $ref: '#/components/schemas/productagreement'
            PayeeReference:
              $ref: '#/components/schemas/involvedparty'
            PayeeProductInstanceReference:
              $ref: '#/components/schemas/productagreement'
            PayeeBankReference:
              $ref: '#/components/schemas/involvedparty'
            SpecialInstructions:
              $ref: '#/components/schemas/instruction'
            Amount:
              $ref: '#/components/schemas/amount'
            Currency:
              $ref: '#/components/schemas/currencycode'
            DateType:
              $ref: '#/components/schemas/transactiondatetypevalues'
            Date:
              $ref: '#/components/schemas/transactiondate'
            CorrespondentBankRoleType:
              $ref: '#/components/schemas/correspondentbankinvolvementtypevalues'
      description: 'Output: Retrieve outbound payments'
    ExchangeOutboundPaymentsRequest:
      type: object
      properties:
        OutboundPayments:
          type: object
          properties:
            CorrespondentTransactionRecord:
              $ref: '#/components/schemas/transaction'
            SWIFTTransactionReference:
              $ref: '#/components/schemas/transaction'
            PayerBankReference:
              $ref: '#/components/schemas/involvedparty'
            PayerReference:
              $ref: '#/components/schemas/involvedparty'
            CorrespondedBankReference:
              $ref: '#/components/schemas/involvedparty'
            PayerProductInstanceReference:
              $ref: '#/components/schemas/productagreement'
            PayeeReference:
              $ref: '#/components/schemas/involvedparty'
            PayeeProductInstanceReference:
              $ref: '#/components/schemas/productagreement'
            PayeeBankReference:
              $ref: '#/components/schemas/involvedparty'
            SpecialInstructions:
              $ref: '#/components/schemas/instruction'
            Amount:
              $ref: '#/components/schemas/amount'
            Currency:
              $ref: '#/components/schemas/currencycode'
            DateType:
              $ref: '#/components/schemas/transactiondatetypevalues'
            Date:
              $ref: '#/components/schemas/transactiondate'
            CorrespondentBankRoleType:
              $ref: '#/components/schemas/correspondentbankinvolvementtypevalues'
      description: 'Input: Exchange Outbound Payments'
    ExchangeOutboundPaymentsResponse:
      type: object
      properties:
        OutboundPayments:
          type: object
          properties:
            CorrespondentTransactionRecord:
              $ref: '#/components/schemas/transaction'
            SWIFTTransactionReference:
              $ref: '#/components/schemas/transaction'
            PayerBankReference:
              $ref: '#/components/schemas/involvedparty'
            PayerReference:
              $ref: '#/components/schemas/involvedparty'
            CorrespondedBankReference:
              $ref: '#/components/schemas/involvedparty'
            PayerProductInstanceReference:
              $ref: '#/components/schemas/productagreement'
            PayeeReference:
              $ref: '#/components/schemas/involvedparty'
            PayeeProductInstanceReference:
              $ref: '#/components/schemas/productagreement'
            PayeeBankReference:
              $ref: '#/components/schemas/involvedparty'
            SpecialInstructions:
              $ref: '#/components/schemas/instruction'
            Amount:
              $ref: '#/components/schemas/amount'
            Currency:
              $ref: '#/components/schemas/currencycode'
            DateType:
              $ref: '#/components/schemas/transactiondatetypevalues'
            Date:
              $ref: '#/components/schemas/transactiondate'
            CorrespondentBankRoleType:
              $ref: '#/components/schemas/correspondentbankinvolvementtypevalues'
      description: 'Output: Exchange Outbound Payments'
    InitiateOutboundPaymentsRequest:
      type: object
      properties:
        OutboundPayments:
          type: object
          properties:
            CorrespondentTransactionRecord:
              $ref: '#/components/schemas/transaction'
            SWIFTTransactionReference:
              $ref: '#/components/schemas/transaction'
            PayerBankReference:
              $ref: '#/components/schemas/involvedparty'
            PayerReference:
              $ref: '#/components/schemas/involvedparty'
            CorrespondedBankReference:
              $ref: '#/components/schemas/involvedparty'
            PayerProductInstanceReference:
              $ref: '#/components/schemas/productagreement'
            PayeeReference:
              $ref: '#/components/schemas/involvedparty'
            PayeeProductInstanceReference:
              $ref: '#/components/schemas/productagreement'
            PayeeBankReference:
              $ref: '#/components/schemas/involvedparty'
            SpecialInstructions:
              $ref: '#/components/schemas/instruction'
            Amount:
              $ref: '#/components/schemas/amount'
            Currency:
              $ref: '#/components/schemas/currencycode'
            DateType:
              $ref: '#/components/schemas/transactiondatetypevalues'
            Date:
              $ref: '#/components/schemas/transactiondate'
            CorrespondentBankRoleType:
              $ref: '#/components/schemas/correspondentbankinvolvementtypevalues'
      description: 'Input: Initiate Outbound Payments'
    InitiateOutboundPaymentsResponse:
      type: object
      properties:
        OutboundPayments:
          type: object
          properties:
            CorrespondentTransactionRecord:
              $ref: '#/components/schemas/transaction'
            SWIFTTransactionReference:
              $ref: '#/components/schemas/transaction'
            PayerBankReference:
              $ref: '#/components/schemas/involvedparty'
            PayerReference:
              $ref: '#/components/schemas/involvedparty'
            CorrespondedBankReference:
              $ref: '#/components/schemas/involvedparty'
            PayerProductInstanceReference:
              $ref: '#/components/schemas/productagreement'
            PayeeReference:
              $ref: '#/components/schemas/involvedparty'
            PayeeProductInstanceReference:
              $ref: '#/components/schemas/productagreement'
            PayeeBankReference:
              $ref: '#/components/schemas/involvedparty'
            SpecialInstructions:
              $ref: '#/components/schemas/instruction'
            Amount:
              $ref: '#/components/schemas/amount'
            Currency:
              $ref: '#/components/schemas/currencycode'
            DateType:
              $ref: '#/components/schemas/transactiondatetypevalues'
            Date:
              $ref: '#/components/schemas/transactiondate'
            CorrespondentBankRoleType:
              $ref: '#/components/schemas/correspondentbankinvolvementtypevalues'
      description: 'Output: Initiate Outbound Payments'
    NotifyOutboundPaymentsRequest:
      type: object
      properties:
        OutboundPayments:
          type: object
          properties:
            CorrespondentTransactionRecord:
              $ref: '#/components/schemas/transaction'
            SWIFTTransactionReference:
              $ref: '#/components/schemas/transaction'
            PayerBankReference:
              $ref: '#/components/schemas/involvedparty'
            PayerReference:
              $ref: '#/components/schemas/involvedparty'
            CorrespondedBankReference:
              $ref: '#/components/schemas/involvedparty'
            PayerProductInstanceReference:
              $ref: '#/components/schemas/productagreement'
            PayeeReference:
              $ref: '#/components/schemas/involvedparty'
            PayeeProductInstanceReference:
              $ref: '#/components/schemas/productagreement'
            PayeeBankReference:
              $ref: '#/components/schemas/involvedparty'
            SpecialInstructions:
              $ref: '#/components/schemas/instruction'
            Amount:
              $ref: '#/components/schemas/amount'
            Currency:
              $ref: '#/components/schemas/currencycode'
            DateType:
              $ref: '#/components/schemas/transactiondatetypevalues'
            Date:
              $ref: '#/components/schemas/transactiondate'
            CorrespondentBankRoleType:
              $ref: '#/components/schemas/correspondentbankinvolvementtypevalues'
      description: 'Input: Notify Outbound Payments'
    NotifyOutboundPaymentsResponse:
      type: object
      properties:
        OutboundPayments:
          type: object
          properties:
            CorrespondentTransactionRecord:
              $ref: '#/components/schemas/transaction'
            SWIFTTransactionReference:
              $ref: '#/components/schemas/transaction'
            PayerBankReference:
              $ref: '#/components/schemas/involvedparty'
            PayerReference:
              $ref: '#/components/schemas/involvedparty'
            CorrespondedBankReference:
              $ref: '#/components/schemas/involvedparty'
            PayerProductInstanceReference:
              $ref: '#/components/schemas/productagreement'
            PayeeReference:
              $ref: '#/components/schemas/involvedparty'
            PayeeProductInstanceReference:
              $ref: '#/components/schemas/productagreement'
            PayeeBankReference:
              $ref: '#/components/schemas/involvedparty'
            SpecialInstructions:
              $ref: '#/components/schemas/instruction'
            Amount:
              $ref: '#/components/schemas/amount'
            Currency:
              $ref: '#/components/schemas/currencycode'
            DateType:
              $ref: '#/components/schemas/transactiondatetypevalues'
            Date:
              $ref: '#/components/schemas/transactiondate'
            CorrespondentBankRoleType:
              $ref: '#/components/schemas/correspondentbankinvolvementtypevalues'
      description: 'Output: Notify Outbound Payments'
    RequestOutboundPaymentsRequest:
      type: object
      properties:
        OutboundPayments:
          type: object
          properties:
            CorrespondentTransactionRecord:
              $ref: '#/components/schemas/transaction'
            SWIFTTransactionReference:
              $ref: '#/components/schemas/transaction'
            PayerBankReference:
              $ref: '#/components/schemas/involvedparty'
            PayerReference:
              $ref: '#/components/schemas/involvedparty'
            CorrespondedBankReference:
              $ref: '#/components/schemas/involvedparty'
            PayerProductInstanceReference:
              $ref: '#/components/schemas/productagreement'
            PayeeReference:
              $ref: '#/components/schemas/involvedparty'
            PayeeProductInstanceReference:
              $ref: '#/components/schemas/productagreement'
            PayeeBankReference:
              $ref: '#/components/schemas/involvedparty'
            SpecialInstructions:
              $ref: '#/components/schemas/instruction'
            Amount:
              $ref: '#/components/schemas/amount'
            Currency:
              $ref: '#/components/schemas/currencycode'
            DateType:
              $ref: '#/components/schemas/transactiondatetypevalues'
            Date:
              $ref: '#/components/schemas/transactiondate'
            CorrespondentBankRoleType:
              $ref: '#/components/schemas/correspondentbankinvolvementtypevalues'
      description: 'Input: Request Outbound Payments'
    RequestOutboundPaymentsResponse:
      type: object
      properties:
        OutboundPayments:
          type: object
          properties:
            CorrespondentTransactionRecord:
              $ref: '#/components/schemas/transaction'
            SWIFTTransactionReference:
              $ref: '#/components/schemas/transaction'
            PayerBankReference:
              $ref: '#/components/schemas/involvedparty'
            PayerReference:
              $ref: '#/components/schemas/involvedparty'
            CorrespondedBankReference:
              $ref: '#/components/schemas/involvedparty'
            PayerProductInstanceReference:
              $ref: '#/components/schemas/productagreement'
            PayeeReference:
              $ref: '#/components/schemas/involvedparty'
            PayeeProductInstanceReference:
              $ref: '#/components/schemas/productagreement'
            PayeeBankReference:
              $ref: '#/components/schemas/involvedparty'
            SpecialInstructions:
              $ref: '#/components/schemas/instruction'
            Amount:
              $ref: '#/components/schemas/amount'
            Currency:
              $ref: '#/components/schemas/currencycode'
            DateType:
              $ref: '#/components/schemas/transactiondatetypevalues'
            Date:
              $ref: '#/components/schemas/transactiondate'
            CorrespondentBankRoleType:
              $ref: '#/components/schemas/correspondentbankinvolvementtypevalues'
      description: 'Output: Request Outbound Payments'
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InitiateCorrespondentBankOperatingSessionResponse:
      description: InitiateCorrespondentBankOperatingSessionResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateCorrespondentBankOperatingSessionResponse'
    UpdateCorrespondentBankOperatingSessionResponse:
      description: UpdateCorrespondentBankOperatingSessionResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateCorrespondentBankOperatingSessionResponse'
    ControlCorrespondentBankOperatingSessionResponse:
      description: ControlCorrespondentBankOperatingSessionResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ControlCorrespondentBankOperatingSessionResponse'
    RetrieveCorrespondentBankOperatingSessionResponse:
      description: RetrieveCorrespondentBankOperatingSessionResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveCorrespondentBankOperatingSessionResponse'
    ExchangeCorrespondentBankOperatingSessionResponse:
      description: ExchangeCorrespondentBankOperatingSessionResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExchangeCorrespondentBankOperatingSessionResponse'
    ExecuteCorrespondentBankOperatingSessionResponse:
      description: ExecuteCorrespondentBankOperatingSessionResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExecuteCorrespondentBankOperatingSessionResponse'
    NotifyCorrespondentBankOperatingSessionResponse:
      description: NotifyCorrespondentBankOperatingSessionResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotifyCorrespondentBankOperatingSessionResponse'
    RequestCorrespondentBankOperatingSessionResponse:
      description: RequestCorrespondentBankOperatingSessionResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestCorrespondentBankOperatingSessionResponse'
    InboundPayments:
      description: InboundPayments
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InboundPayments'
    UpdateOutboundPaymentsResponse:
      description: UpdateOutboundPaymentsResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateOutboundPaymentsResponse'
    ExecuteOutboundPaymentsResponse:
      description: ExecuteOutboundPaymentsResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExecuteOutboundPaymentsResponse'
    RetrieveOutboundPaymentsResponse:
      description: RetrieveOutboundPaymentsResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveOutboundPaymentsResponse'
    ClearingandSettlement:
      description: ClearingandSettlement
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ClearingandSettlement'
    Reconciliation:
      description: Reconciliation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Reconciliation'
    ExchangeOutboundPaymentsResponse:
      description: ExchangeOutboundPaymentsResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExchangeOutboundPaymentsResponse'
    InitiateOutboundPaymentsResponse:
      description: InitiateOutboundPaymentsResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateOutboundPaymentsResponse'
    NotifyOutboundPaymentsResponse:
      description: NotifyOutboundPaymentsResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotifyOutboundPaymentsResponse'
    RequestOutboundPaymentsResponse:
      description: RequestOutboundPaymentsResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestOutboundPaymentsResponse'
  parameters:
    correspondentbankoperationsid:
      name: correspondentbankoperationsid
      in: path
      required: true
      style: simple
      schema:
        type: string
    inboundpaymentsid:
      name: inboundpaymentsid
      in: path
      required: true
      style: simple
      schema:
        type: string
    outboundpaymentsid:
      name: outboundpaymentsid
      in: path
      required: true
      style: simple
      schema:
        type: string
    clearingandsettlementid:
      name: clearingandsettlementid
      in: path
      required: true
      style: simple
      schema:
        type: string
    reconciliationid:
      name: reconciliationid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    InitiateCorrespondentBankOperatingSessionRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateCorrespondentBankOperatingSessionRequest'
      required: true
    UpdateCorrespondentBankOperatingSessionRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateCorrespondentBankOperatingSessionRequest'
      required: true
    ControlCorrespondentBankOperatingSessionRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ControlCorrespondentBankOperatingSessionRequest'
      required: true
    ExchangeCorrespondentBankOperatingSessionRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExchangeCorrespondentBankOperatingSessionRequest'
      required: true
    ExecuteCorrespondentBankOperatingSessionRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExecuteCorrespondentBankOperatingSessionRequest'
      required: true
    RequestCorrespondentBankOperatingSessionRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestCorrespondentBankOperatingSessionRequest'
      required: true
    InboundPayments:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InboundPayments'
      required: true
    UpdateOutboundPaymentsRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateOutboundPaymentsRequest'
      required: true
    ExecuteOutboundPaymentsRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExecuteOutboundPaymentsRequest'
      required: true
    ClearingandSettlement:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ClearingandSettlement'
      required: true
    Reconciliation:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Reconciliation'
      required: true
    ExchangeOutboundPaymentsRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExchangeOutboundPaymentsRequest'
      required: true
    InitiateOutboundPaymentsRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateOutboundPaymentsRequest'
      required: true
    RequestOutboundPaymentsRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestOutboundPaymentsRequest'
      required: true