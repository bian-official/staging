asyncapi: 3.0.0
info:
  title: Account Reconciliation
  version: 12.0.0
  description: >-
    BIAN Service Domain (expanded with BIAN BOM) | This Service Domain handles
    account reconciliation tasks
channels:
  AccountReconciliationProcedure/Created:
    address: AccountReconciliationProcedure/Created
    messages:
      subscribe.message:
        $ref: '#/components/messages/AccountReconciliationProcedure'
  AccountReconciliationProcedure/Updated:
    address: AccountReconciliationProcedure/Updated
    messages:
      subscribe.message:
        $ref: '#/components/messages/AccountReconciliationProcedure'
  AccountAssessment/Created:
    address: AccountAssessment/Created
    messages:
      subscribe.message:
        $ref: '#/components/messages/AccountAssessment'
  AccountAssessment/Updated:
    address: AccountAssessment/Updated
    messages:
      subscribe.message:
        $ref: '#/components/messages/AccountAssessment'
  AccountResolution/Created:
    address: AccountResolution/Created
    messages:
      subscribe.message:
        $ref: '#/components/messages/AccountResolution'
  AccountResolution/Updated:
    address: AccountResolution/Updated
    messages:
      subscribe.message:
        $ref: '#/components/messages/AccountResolution'
  AccountReconciliationOutcome/Created:
    address: AccountReconciliationOutcome/Created
    messages:
      subscribe.message:
        $ref: '#/components/messages/AccountReconciliationOutcome'
  AccountReconciliationOutcome/Updated:
    address: AccountReconciliationOutcome/Updated
    messages:
      subscribe.message:
        $ref: '#/components/messages/AccountReconciliationOutcome'
  AccountReconciliationProcedure/Notify:
    address: AccountReconciliationProcedure/Notify
    messages:
      publish.message:
        $ref: '#/components/messages/AccountReconciliationProcedureNotify'
    description: ''
  AccountAssessment/Notify:
    address: AccountAssessment/Notify
    messages:
      publish.message:
        $ref: '#/components/messages/AccountAssessmentNotify'
    description: ''
  AccountResolution/Notify:
    address: AccountResolution/Notify
    messages:
      publish.message:
        $ref: '#/components/messages/AccountResolutionNotify'
    description: ''
operations:
  AccountReconciliationProcedure/Created.subscribe:
    action: send
    channel:
      $ref: '#/channels/AccountReconciliationProcedure~1Created'
    messages:
      - $ref: >-
          #/channels/AccountReconciliationProcedure~1Created/messages/subscribe.message
  AccountReconciliationProcedure/Updated.subscribe:
    action: send
    channel:
      $ref: '#/channels/AccountReconciliationProcedure~1Updated'
    messages:
      - $ref: >-
          #/channels/AccountReconciliationProcedure~1Updated/messages/subscribe.message
  AccountAssessment/Created.subscribe:
    action: send
    channel:
      $ref: '#/channels/AccountAssessment~1Created'
    messages:
      - $ref: '#/channels/AccountAssessment~1Created/messages/subscribe.message'
  AccountAssessment/Updated.subscribe:
    action: send
    channel:
      $ref: '#/channels/AccountAssessment~1Updated'
    messages:
      - $ref: '#/channels/AccountAssessment~1Updated/messages/subscribe.message'
  AccountResolution/Created.subscribe:
    action: send
    channel:
      $ref: '#/channels/AccountResolution~1Created'
    messages:
      - $ref: '#/channels/AccountResolution~1Created/messages/subscribe.message'
  AccountResolution/Updated.subscribe:
    action: send
    channel:
      $ref: '#/channels/AccountResolution~1Updated'
    messages:
      - $ref: '#/channels/AccountResolution~1Updated/messages/subscribe.message'
  AccountReconciliationOutcome/Created.subscribe:
    action: send
    channel:
      $ref: '#/channels/AccountReconciliationOutcome~1Created'
    messages:
      - $ref: >-
          #/channels/AccountReconciliationOutcome~1Created/messages/subscribe.message
  AccountReconciliationOutcome/Updated.subscribe:
    action: send
    channel:
      $ref: '#/channels/AccountReconciliationOutcome~1Updated'
    messages:
      - $ref: >-
          #/channels/AccountReconciliationOutcome~1Updated/messages/subscribe.message
  AccountReconciliationProcedure/Notify.publish:
    action: receive
    channel:
      $ref: '#/channels/AccountReconciliationProcedure~1Notify'
    summary: Notify Account Reconciliation Procedure
    messages:
      - $ref: >-
          #/channels/AccountReconciliationProcedure~1Notify/messages/publish.message
  AccountAssessment/Notify.publish:
    action: receive
    channel:
      $ref: '#/channels/AccountAssessment~1Notify'
    summary: Notify Account Assessment Workstep
    messages:
      - $ref: '#/channels/AccountAssessment~1Notify/messages/publish.message'
  AccountResolution/Notify.publish:
    action: receive
    channel:
      $ref: '#/channels/AccountResolution~1Notify'
    summary: Notify Account Resolution Workstep
    messages:
      - $ref: '#/channels/AccountResolution~1Notify/messages/publish.message'
components:
  messages:
    AccountReconciliationProcedure:
      name: AccountReconciliationProcedure
      description: >-
        Complete work tasks following a defined procedure in support of general
        office activities and product and service delivery within Account
        Reconciliation. 
      payload:
        $ref: '#/components/schemas/AccountReconciliationProcedure'
    AccountAssessment:
      name: AccountAssessment
      description: >-
        A course of action for doing Account Assessment Workstep in the context
        of executing the Account Assessment Workstep
      payload:
        $ref: '#/components/schemas/AccountAssessment'
    AccountResolution:
      name: AccountResolution
      description: >-
        A course of action for doing Account Assessment Workstep in the context
        of executing the Account Assessment Workstep
      payload:
        $ref: '#/components/schemas/AccountResolution'
    AccountReconciliationOutcome:
      name: AccountReconciliationOutcome
      description: >-
        A course of action for doing Account Assessment Workstep in the context
        of executing the Account Assessment Workstep
      payload:
        $ref: '#/components/schemas/AccountReconciliationOutcome'
    AccountReconciliationProcedureNotify:
      name: AccountReconciliationProcedureNotify
      payload:
        $ref: '#/components/schemas/AccountReconciliationProcedureNotify'
    AccountAssessmentNotify:
      name: AccountAssessmentNotify
      payload:
        $ref: '#/components/schemas/AccountAssessmentNotify'
    AccountResolutionNotify:
      name: AccountResolutionNotify
      payload:
        $ref: '#/components/schemas/AccountResolutionNotify'
  schemas:
    AccountAssessment:
      type: object
      description: >-
        A course of action for doing Account Assessment Workstep in the context
        of executing the Account Assessment Workstep
      properties:
        Preconditions:
          $ref: '#/components/schemas/Condition'
        BusinessUnitEmployeeReference:
          $ref: '#/components/schemas/Involvedparty'
        Schedule:
          $ref: '#/components/schemas/Schedule'
        BusinessService:
          $ref: '#/components/schemas/BusinessService'
        Postconditions:
          $ref: '#/components/schemas/Condition'
        AccountReconciliationProcedureReference:
          $ref: '#/components/schemas/Procedure'
        AccountAssessmentWorkstepReference:
          $ref: '#/components/schemas/Workstep'
        AccountAssessmentWorkstepType:
          $ref: '#/components/schemas/Text'
    Condition:
      type: object
      format: Condition
      description: >-
        The required status/situation and or tasks that need to be completed
        prior to the initiation of the workstep 
      properties:
        Condition:
          type: string
          format: Class
          description: >-
            Condition is a premise upon which the fulfillment of an agreement
            depends 


            General and special arrangements, provisions, requirements, rules,
            specifications, and standards that form an integral part of an
            agreement or contract.


            Read more:
            http://www.businessdictionary.com/definition/terms-and-conditions.html

             
    Involvedparty:
      type: object
      format: Involvedparty
      description: 'The operating unit/employee responsible for the workstep '
      properties:
        PartyReference:
          $ref: '#/components/schemas/Party'
        Involvedparty:
          type: string
          format: DataType
          description: 'Party who plays a specific role  '
        PartyInvolvement:
          $ref: '#/components/schemas/Partyrole'
    Party:
      type: object
      format: Party
      description: ' '
      properties:
        PartyName:
          $ref: '#/components/schemas/Name'
        PartyType:
          enum:
            - Person
            - Organisation
          format: Party
        PartyDateTime:
          $ref: '#/components/schemas/Datetime'
        PartyIdentification:
          $ref: '#/components/schemas/Partyidentification'
        PartyLegalStructureType:
          enum:
            - Individual
            - CommunityInterestCompany
            - Co-Operative
            - Charity
            - GeneralPartnership
            - LimitedLiabilityPartnership
            - ScottishLimitedPartnership
            - LimitedPartnership
            - PrivateLimitedCompany
            - PublicLimitedCompany
            - Sole(SoleTrader)
          format: Party
    Name:
      type: object
      format: Name
      description: >-
        Name by which a party is known and which is usually used to identify
        that party. (ISO20022)
         
      properties:
        Name:
          type: string
          format: DataType
          description: >-
            A name is a word or phrase that constitutes the distinctive
            designation of a person, place, thing or concept. (UN/CEFAT) 
    Datetime:
      type: object
      format: Datetime
      description: ' '
      properties:
        DateTimeContent:
          type: string
          format: String
          description: ''
        TimeZoneCode:
          type: string
          format: String
          description: ''
        DaylightSavingIndicator:
          type: string
          format: String
          description: ''
        Datetime:
          type: string
          format: DataType
          description: >-
            A date time identifies a date and time of day to various common
            resolutions: year, month, week, day, hour, minute, second, and
            fraction of second. (UN/CEFACT)


            A particular point in the progression of time defined by a mandatory
            date and a mandatory time component, expressed in either UTC time
            format (YYYY-MM-DDThh:mm:ss.sssZ), local time with UTC offset format
            (YYYY-MM-DDThh:mm:ss.sss+/-hh:mm), or local time format
            (YYYY-MM-DDThh:mm:ss.sss). These representations are defined in "XML
            Schema Part 2: Datatypes Second Edition W3C Recommendation 28
            October 2004" which is aligned with ISO 8601. (ISO20022)

            Note on the time format:

            1) beginning / end of calendar day

            00:00:00  -  the beginning of a calendar day

            24:00:00  -  the end of a calendar day

            2) fractions of second in time format

            Decimal fractions of seconds may be included. In this case, the
            involved parties shall agree on the maximum number of digits that
            are allowed. 
    Partyidentification:
      type: object
      format: Partyidentification
      description: ' '
      properties:
        PartyIdentificationType:
          enum:
            - Taxidentificationnumber
            - Nationalregistrationnumber
            - LEI(LegalEntityIdentifier)
            - Alienregistrationnumber
            - Passportnumber
            - Corporateidentification
            - Driverlicensenumber
            - Socialsecuritynumber
            - Identitycardnumber
            - Concat
          format: Partyidentification
        PartyIdentification:
          $ref: '#/components/schemas/Identifier'
        Partyidentification:
          type: string
          format: DataType
          description: ''
    Identifier:
      type: object
      format: Identifier
      description: ' '
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/Value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/Involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/Datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/Datetime'
        Identifier:
          type: string
          format: DataType
          description: >-
            An identifier is a character string used to uniquely identify one
            instance of an object within an identification scheme that is
            managed by an agency. (UN/CEFAT) 
    Value:
      type: object
      format: Value
      description: ' '
      properties:
        Value:
          type: string
          format: DataType
          description: >-
            Data or set of data 


            A value is the concept of worth in general that is assigned or is
            determined by measurement, assessment or calculation. (UN/CEFACT) 
    Partyrole:
      type: object
      format: Partyrole
      description: ' '
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/Text'
        PartyRoleName:
          $ref: '#/components/schemas/Name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        PartyInvolvementType:
          enum:
            - Agreementinvolvement
            - Partyinvolvement
            - Arrangementinvolvement
            - Relationshipinvolvement
            - Locationinvolvement
            - Bankguaranteeinvolvement
          format: Partyrole
    Text:
      type: object
      format: Text
      description: ' '
      properties:
        Text:
          type: string
          format: DataType
          description: >-
            Text is a character string such as a finite set of characters
            generally in the form of words of a language. (UN/CEFACT) 
    Datetimeperiod:
      type: object
      format: Datetimeperiod
      description: ' '
      properties:
        FromDateTime:
          $ref: '#/components/schemas/Datetime'
        ToDateTime:
          $ref: '#/components/schemas/Datetime'
        Datetimeperiod:
          type: string
          format: DataType
          description: >-
            Time span defined by a start date and time, and an end date and
            time. (ISO20022) 
    Schedule:
      type: object
      format: Schedule
      description: 'The timing and key actions/milestones making up the workstep '
      properties:
        ScheduleType:
          type: string
          format: String
          description: ''
    BusinessService:
      type: object
      format: BusinessService
      description: 'The Account Assessment Workstep specific Business Service '
      properties:
        BusinessServiceType:
          enum:
            - Businessservicetypevalues
          format: BusinessService
    Procedure:
      type: object
      format: Procedure
      description: 'Reference to Account Assessment Workstep '
      properties:
        ProcedureType:
          enum:
            - Proceduretypevalues
          format: Procedure
        ProcedureDateTime:
          $ref: '#/components/schemas/Datetime'
        ProcedureRequest:
          $ref: '#/components/schemas/Instruction'
        ProcedureSchedule:
          $ref: '#/components/schemas/Schedule'
        ProcedureStatus:
          $ref: '#/components/schemas/Status'
    Instruction:
      type: object
      format: Instruction
      description: 'Request to process something (most refers to Asset Type) '
      properties:
        InstructionDate:
          $ref: '#/components/schemas/Instructiondate'
        InstructionStatus:
          $ref: '#/components/schemas/Instructionlifecyclestatus'
        InstructionIdentifier:
          $ref: '#/components/schemas/Instructionidentification'
        InstructionType:
          enum:
            - PaymentInstruction
            - DeliveryOrder
            - InformationRequest
            - ExchangeInstruction
            - AllocationInstruction
            - MaintenanceInstruction
          format: Instruction
        InstructionResult:
          $ref: '#/components/schemas/Text'
        InstructionDescription:
          $ref: '#/components/schemas/Text'
        InstructionLog:
          $ref: '#/components/schemas/Log'
        InstructionPurpose:
          $ref: '#/components/schemas/Text'
    Instructiondate:
      type: object
      format: Instructiondate
      description: ' '
      properties:
        InstructionDate:
          $ref: '#/components/schemas/Date'
        InstructionDateType:
          enum:
            - DueDate
            - ExecutionDate
            - FulfillmentDate
          format: Instructiondate
    Date:
      type: object
      format: Date
      description: ' '
      properties:
        DateContent:
          type: string
          format: String
          description: ''
    Instructionlifecyclestatus:
      type: object
      format: Instructionlifecyclestatus
      description: >-
        A characteristic of instruction which refers to the LifecycleStatus of
        instruction (e.g., requested, executed, fulfilled, etc.);  
      properties:
        InstructionLifecycleStatusType:
          enum:
            - Requested
            - Prepared
            - InProgress
            - Fulfilled
            - OnHold
            - Failed
          format: Instructionlifecyclestatus
        InstructionLifecycleStatus:
          $ref: '#/components/schemas/Status'
    Status:
      type: object
      format: Status
      description: ' '
      properties:
        StatusReason:
          $ref: '#/components/schemas/Text'
        StatusDateTime:
          $ref: '#/components/schemas/Datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/Involvedparty'
        Status:
          type: string
          format: DataType
          description: >-
            A characteristic that describe the object by referring to a state
            transition in its lifecycle. 
    Instructionidentification:
      type: object
      format: Instructionidentification
      description: >-
        An identifier that allows to uniquely refer to an instance of an
        Instruction.
         
      properties:
        InstructionIdentifier:
          $ref: '#/components/schemas/Identifier'
        InstructionIdentifierType:
          enum:
            - OrderNumber
            - InstructionNumber
          format: Instructionidentification
    Log:
      type: object
      format: Log
      description: ' '
      properties:
        LogType:
          type: string
          format: String
          description: ''
        LogPeriod:
          type: string
          format: String
          description: ''
        LogDate:
          type: string
          format: String
          description: 'Key dates associated with the log (e.g. start time). '
        LogIdentification:
          type: string
          format: String
          description: ''
    Workstep:
      type: object
      format: Workstep
      description: 'Reference to Account Assessment Workstep '
      properties:
        WorkstepResult:
          $ref: '#/components/schemas/Text'
        WorkstepType:
          enum:
            - Worksteptypevalues
          format: Workstep
        WorkstepDescription:
          $ref: '#/components/schemas/Text'
        WorkstepDateTime:
          $ref: '#/components/schemas/Datetime'
        WorkstepStatus:
          $ref: '#/components/schemas/Status'
    AccountResolution:
      type: object
      description: >-
        A course of action for doing Account Assessment Workstep in the context
        of executing the Account Assessment Workstep
      properties:
        Preconditions:
          $ref: '#/components/schemas/Condition'
        BusinessUnitEmployeeReference:
          $ref: '#/components/schemas/Involvedparty'
        Schedule:
          $ref: '#/components/schemas/Schedule'
        BusinessService:
          $ref: '#/components/schemas/BusinessService'
        Postconditions:
          $ref: '#/components/schemas/Condition'
        AccountReconciliationProcedureReference:
          $ref: '#/components/schemas/Procedure'
        AccountResolutionWorkstepReference:
          $ref: '#/components/schemas/Workstep'
        AccountResolutionWorkstepType:
          $ref: '#/components/schemas/Text'
    AccountReconciliationOutcome:
      type: object
      description: >-
        A course of action for doing Account Assessment Workstep in the context
        of executing the Account Assessment Workstep
      properties:
        AccountReconciliationWorkProduct:
          $ref: '#/components/schemas/Workproduct'
        AccountReconciliationProcedure:
          $ref: '#/components/schemas/Procedure'
    Workproduct:
      type: object
      format: Workproduct
      description: ' '
      properties:
        WorkProductType:
          enum:
            - Document
            - WorkingPaper
            - ActivityLog
            - Form
            - File
            - MeetingSchedule
            - MeetingMinute
          format: Workproduct
        WorkProductIdentifoication:
          type: string
          format: String
          description: ''
    AccountReconciliationProcedure:
      type: object
      description: >-
        Complete work tasks following a defined procedure in support of general
        office activities and product and service delivery within Account
        Reconciliation. 
      properties:
        AccountReconciliationProcedureParameterType:
          $ref: '#/components/schemas/Text'
        AccountReconciliationProcedureSelectedOption:
          $ref: '#/components/schemas/Feature'
        AccountReconciliationProcedureRequest:
          $ref: '#/components/schemas/Instruction'
        AccountReconciliationProcedureSchedule:
          $ref: '#/components/schemas/Schedule'
        AccountReconciliationProcedureStatus:
          $ref: '#/components/schemas/Status'
        AccountReconciliationProcedureAssociatedPartyReference:
          $ref: '#/components/schemas/Involvedparty'
        AccountReconciliationProcedureBusinessUnitReference:
          $ref: '#/components/schemas/Involvedparty'
        AccountReconciliationProcedureServiceProviderReference:
          $ref: '#/components/schemas/Involvedparty'
        AccountReconciliationProcedureFinancialFacilityReference:
          $ref: '#/components/schemas/FinancialFacility'
        AccountReconciliationProcedureEmployeeReference:
          $ref: '#/components/schemas/Involvedparty'
        AccountReconciliationProcedureCustomerReference:
          $ref: '#/components/schemas/Involvedparty'
        AccountReconciliationProcedureType:
          $ref: '#/components/schemas/Proceduretype'
        AccountReconciliationProcedureServiceProviderSchedule:
          $ref: '#/components/schemas/Schedule'
        AccountReconciliationProcedureServiceType:
          $ref: '#/components/schemas/Servicetype'
        AccountReconciliationProcedureProductandServiceType:
          $ref: '#/components/schemas/Bankingproducttype'
        AccountReconciliationProcedureProductandServiceInstance:
          $ref: '#/components/schemas/BankingProduct'
        AccountReconciliationProcedureTransactionType:
          $ref: '#/components/schemas/Transactiontype'
        AccountReconciliationProcedureTransaction:
          $ref: '#/components/schemas/Transaction'
        AccountReconciliationProcedureFinancialTransactionArrangement:
          $ref: '#/components/schemas/Arrangement'
        AccountReconciliationProcedureCustomerAgreementReference:
          $ref: '#/components/schemas/Agreement'
        AccountReconciliationProcedureReference:
          $ref: '#/components/schemas/Procedure'
        AccountReconciliationProcedureAccountReference:
          $ref: '#/components/schemas/Account'
        AccountReconciliationProcedureDocumentReference:
          $ref: '#/components/schemas/Document'
        ReconciliationTransactionReference:
          $ref: '#/components/schemas/ReconciliationTransaction'
        ReconciliationArrangementReference:
          $ref: '#/components/schemas/TransactionReconciliationArrangement'
        ReconciliationRequestReference:
          $ref: '#/components/schemas/ReconciliationInstruction'
        AccountReconciliationProcedureSystemReference:
          $ref: '#/components/schemas/System'
    Feature:
      type: object
      format: Feature
      description: >-
        A selected optional business service as subject matter of Account
        Reconciliation Procedure 
      properties:
        FeatureType:
          $ref: '#/components/schemas/Text'
        FeatureIdentification:
          $ref: '#/components/schemas/Identifier'
        FeatureName:
          $ref: '#/components/schemas/Name'
        FeatureLifecycleStatus:
          $ref: '#/components/schemas/Status'
        FeatureDescription:
          $ref: '#/components/schemas/Text'
    FinancialFacility:
      type: object
      format: FinancialFacility
      description: >-
        Reference to the Financial Facility related to Account Reconciliation
        Procedure 
      properties:
        FinancialFacility:
          type: string
          format: Class
          description: >-
            A production or operational capacity to perform a business function
            for delivering a banking product or service


            A functional classification of banking product that provides ongoing
            capacity to deliver financial services (e.g. loan service, payment
            service)


             
    Proceduretype:
      type: object
      format: Proceduretype
      description: >-
        A Classification value that distinguishes between the type of process
        undertaken within Account Reconciliation Procedure 
      properties:
        ProcedureTypeName:
          $ref: '#/components/schemas/Name'
        ProcedureType:
          enum:
            - Proceduretypevalues
          format: Proceduretype
    Servicetype:
      type: object
      format: Servicetype
      description: >-
        A Classification value that distinguishes between the type of services
        in Account Reconciliation Procedure 
      properties:
        ServiceTypeName:
          $ref: '#/components/schemas/Name'
        ServiceType:
          enum:
            - ITService
            - AdministrativeService
            - SystemService
            - FinancialService
            - InformationService
            - BusinessService
          format: Servicetype
    Bankingproducttype:
      type: object
      format: Bankingproducttype
      description: >-
        A Classification value that distinguishes between the type of
        products/services related to Account Reconciliation Procedure 
      properties:
        ProductTypeDefinition:
          type: string
          format: String
          description: ''
        ProductType:
          enum:
            - LoanProduct
            - CurrentAccountProduct
            - SavingAccountProduct
            - BrokeredProduct
            - TermDepositProduct
          format: Bankingproducttype
        ProductClassificationIssuingAuthority:
          type: string
          format: String
          description: ''
    BankingProduct:
      type: object
      format: BankingProduct
      description: >-
        Reference to the product or service that is related to Account
        Reconciliation Procedure Product_x000D_

        |Product
        (https://www.iso20022.org/standardsrepository/type/Product)|Standard|ISO20022
        BM ()
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/Productidentification'
        ProductType:
          enum:
            - LoanProduct
            - CurrentAccountProduct
            - SavingAccountProduct
            - BrokeredProduct
            - TermDepositProduct
          format: BankingProduct
        ProductLifecycleStatus:
          $ref: '#/components/schemas/Productlifecyclestatus'
        ProductPriority:
          $ref: '#/components/schemas/Text'
        ProductDescription:
          $ref: '#/components/schemas/Text'
        ProductVersion:
          $ref: '#/components/schemas/Text'
        ProductName:
          $ref: '#/components/schemas/Name'
    Productidentification:
      type: object
      format: Productidentification
      description: 'The identifier of product e.g. ISIN Code. '
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/Identifier'
        ProductIdentificationType:
          enum:
            - ISINCode
            - PackageCode
            - Buyersitemnumber
            - EAN
            - Harmonizedtariffcodename
            - Manufacturersitemnumber
            - Modelnumber
            - Partnumber
            - Quotacategory
            - Stylenumber
            - Suppliersitemnumber
            - Universalproductcode
          format: Productidentification
    Productlifecyclestatus:
      type: object
      format: Productlifecyclestatus
      description: >-
        Refers to the lifecycle of a product (e.g., initiated, announced,
        active, obsolete, withdrawn). 
      properties:
        ProductLifecycleStatus:
          $ref: '#/components/schemas/Status'
        ProductLifecycleStatusType:
          enum:
            - Initiated
            - Announced
            - Sold
            - Obsolete
            - Active
          format: Productlifecyclestatus
    Transactiontype:
      type: object
      format: Transactiontype
      description: >-
        A Classification value that distinguishes between the type of
        transactions in Account Reconciliation Procedure 
      properties:
        TransactionTypeName:
          $ref: '#/components/schemas/Name'
        TransactionType:
          enum:
            - FinancialTransaction
            - BusinessTransaction
            - BankingTransaction
            - AccountingTransaction
            - BookingTransaction
            - AllocationTransaction
            - DeliveryTransaction
            - ProductionTransaction
          format: Transactiontype
    Transaction:
      type: object
      format: Transaction
      description: >-
        Reference to the transaction that is related to Account Reconciliation
        Procedure 
      properties:
        TransactionIdentification:
          $ref: '#/components/schemas/Identifier'
        TransactionDate:
          $ref: '#/components/schemas/Transactiondate'
        TransactionType:
          enum:
            - FinancialTransaction
            - BusinessTransaction
            - BankingTransaction
            - AccountingTransaction
            - BookingTransaction
            - AllocationTransaction
            - DeliveryTransaction
            - ProductionTransaction
          format: Transaction
        TransactionDescription:
          $ref: '#/components/schemas/Text'
        TransactionStatus:
          $ref: '#/components/schemas/Transactionlifecyclestatus'
        TransactionName:
          $ref: '#/components/schemas/Name'
    Transactiondate:
      type: object
      format: Transactiondate
      description: >-
        The Date that the transaction has occurred or is planned to occur.

        A characteristic of transaction which refers to the LifecycleDate of
        transaction (e.g., initiated date, executed date, fulfillment date).  
      properties:
        TransactionDate:
          $ref: '#/components/schemas/Datetime'
        TransactionDateType:
          enum:
            - TransactionExecutedDate
            - TransactionFulfillmentDate
            - TransactionInitiatedDate
            - TransactionCancelledDate
            - TransactionApprovedDate
          format: Transactiondate
    Transactionlifecyclestatus:
      type: object
      format: Transactionlifecyclestatus
      description: >-
        A characteristic of transaction which refers to the LifecycleStatus of
        transaction (e.g., initiated, executed, confirmed, cancelled, etc.)  
      properties:
        TransactionLifecycleStatus:
          $ref: '#/components/schemas/Status'
        TransactionLifecycleStatusType:
          enum:
            - Initiated
            - Executed
            - Cancelled
            - Confirmed
            - Suspended
            - Pending
            - Completed
            - Notified
            - Booked
            - Rejected
          format: Transactionlifecyclestatus
    Arrangement:
      type: object
      format: Arrangement
      description: >-
        Reference to the Financial Transaction Arrangement that is related to
        Account Reconciliation Procedure Obligation|Obligation
        (https://www.iso20022.org/standardsrepository/type/Obligation)|Standard|ISO20022
        BM ()
      properties:
        ArrangementAction:
          $ref: '#/components/schemas/Action'
        ArrangementStartDate:
          $ref: '#/components/schemas/Datetime'
        ArrangementEndDate:
          $ref: '#/components/schemas/Datetime'
        ArrangementStatus:
          $ref: '#/components/schemas/Arrangementlifecyclestatus'
        ArrangementSubjectMatter:
          $ref: '#/components/schemas/Subject'
        Arrangementtype:
          enum:
            - SweepArrangement
            - WithdrawalArrangement
            - DepositArrangement
            - InterestArrangement
            - FeeArrangement
            - LienArrangement
            - InformationArrangement
            - PaymentArrangement
            - EntitlementArrangement
            - PeriodArrangement
            - CollateralArrangement
            - LimitArrangement
            - AccessArrangement
            - CardPaymentArrangement
            - StandingOrderArrangement
            - OverdraftArrangement
            - RepaymentArrangement
            - StatementArrangement
            - CreditTransferArrangement
            - ProductAndServiceArrangement
            - FactoringArrangement
            - RolloverArrangement
            - RestructuringArrangement
            - InsuranceArrangement
            - CollectionArrangement
            - UnderwritingArrangement
            - TerminationArrangement
            - MaturityArrangement
          format: Arrangement
    Action:
      type: object
      format: Action
      description: ' '
      properties:
        ActionType:
          enum:
            - Initiate
            - Execute
            - Create
            - Transfer
            - Pay
            - Deliver
            - Apply
            - Calculate
          format: Action
    Arrangementlifecyclestatus:
      type: object
      format: Arrangementlifecyclestatus
      description: >-
        A characteristic of arrangement which refers to the LifecycleStatus of
        arrangement (e.g., requested, proposed, offered, accepted, cancelled,
        terminated, fulfilled, etc.) 
      properties:
        ArrangementLifecycleStatus:
          $ref: '#/components/schemas/Status'
        ArrangementLifecycleStatusType:
          enum:
            - Requested
            - Proposed
            - Offered
            - Accepted
            - Cancelled
            - Fulfilled
            - Terminated
          format: Arrangementlifecyclestatus
    Subject:
      type: object
      format: Subject
      description: ' '
      properties:
        Subject:
          type: string
          format: Class
          description: >-
            A thing that is discussed or dealt whit in agreement/arrangement
            about doing or not doing (as action) something. 
    Agreement:
      type: object
      format: Agreement
      description: >-
        Reference to the Customer Agreement that is related to Account
        Reconciliation Procedure Agreement_x000D_

        |Agreement
        (https://www.iso20022.org/standardsrepository/type/Agreement)|Standard|ISO20022
        BM ()
      properties:
        AgreementSignedDate:
          $ref: '#/components/schemas/Date'
        AgreementType:
          enum:
            - CustomerAgreement
            - SupplierAgreement
            - BrokerAgreement
            - SalesAgreement
            - PurchaseAgreement
            - MaintenanceAgreement
            - ProductAgreement
            - ProductSalesAgreement
            - ResourceAgreement
          format: Agreement
        AgreementValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        AgreementVersion:
          $ref: '#/components/schemas/Text'
        AgreementStatus:
          $ref: '#/components/schemas/Agreementlifecyclestatus'
        AgreementSubjectMatter:
          $ref: '#/components/schemas/Text'
        AgreementIdentification:
          $ref: '#/components/schemas/Identifier'
        AgreementDate:
          $ref: '#/components/schemas/Datetime'
        AgreementDescription:
          $ref: '#/components/schemas/Text'
    Agreementlifecyclestatus:
      type: object
      format: Agreementlifecyclestatus
      description: >-
        A characteristic of agreement which refers to the LifecycleStatus of
        agreement (e.g., potential, offered, confirmed, completed, signed,
        terminated). 
      properties:
        AgreementLifecycleStatus:
          $ref: '#/components/schemas/Status'
        AgreementLifecycleStatusType:
          enum:
            - Offered
            - Confirmed
            - Completed
            - Signed
            - Terminated
            - Rejected
          format: Agreementlifecyclestatus
    Account:
      type: object
      format: Account
      description: >-
        Reference to the Account for which a reconciliation procedure is
        performed. Account|Account 
        (https://www.iso20022.org/standardsrepository/type/Account)|Standard|ISO20022
        BM ()
      properties:
        AccountStatus:
          $ref: '#/components/schemas/Accountstatus'
        AccountIdentification:
          $ref: '#/components/schemas/Accountidentification'
        AccountDate:
          $ref: '#/components/schemas/Accountdate'
        AccountType:
          $ref: '#/components/schemas/Accounttype'
        AccountPurpose:
          $ref: '#/components/schemas/Text'
        AccountBalance:
          $ref: '#/components/schemas/Accountbalance'
        AccountCurrency:
          $ref: '#/components/schemas/Accountcurrency'
        AccountDescription:
          $ref: '#/components/schemas/Text'
        AccountName:
          $ref: '#/components/schemas/Name'
    Accountstatus:
      type: object
      format: Accountstatus
      description: >-
        A characteristic of account which refers to the LifecycleStatus of
        account like opened, closed, blocked, etc.


        Specifies the current state of an account. (ISO20022) 
      properties:
        AccountStatus:
          $ref: '#/components/schemas/Status'
        AccountStatusType:
          enum:
            - Enabled
            - Disabled
            - Deleted
            - Proforma
            - Pending
          format: Accountstatus
        Accountstatus:
          type: string
          format: DataType
          description: 'Specifies the current state of an account. (ISO20022) '
    Accountidentification:
      type: object
      format: Accountidentification
      description: 'The identifier of account like Account Number. '
      properties:
        AccountIdentificationType:
          enum:
            - BBAN
            - IBAN
            - UPIC
            - AccountNumber
            - PAN
            - Paym
            - Wallet
          format: Accountidentification
        AccountIdentification:
          $ref: '#/components/schemas/Identifier'
        Accountidentification:
          type: string
          format: DataType
          description: ''
    Accountdate:
      type: object
      format: Accountdate
      description: >-
        A characteristic of account which refers to LifecycleDate of account
        (e.g., ClosingDate, OpeningDate, LiveDate, etc.)  
      properties:
        AccountDateType:
          enum:
            - OpeningDate
            - ClosingDate
            - BlockingDate
            - MaturityDate
            - LiveDate
          format: Accountdate
        AccountDate:
          $ref: '#/components/schemas/Datetime'
        Accountdate:
          type: string
          format: DataType
          description: ''
    Accounttype:
      type: object
      format: Accounttype
      description: >-
        Specifies the category of account like payment account, loan account,
        cash account, securities account, etc.  
      properties:
        AccountType:
          enum:
            - DebitAccount
            - CreditAccount
            - VostroAcount
            - NostroAccount
            - PaymentAccount
            - SettlementAccount
            - SavingAccount
            - CurrentAccount
            - CashAccount
            - LoanAccount
          format: Accounttype
        AccountTypeName:
          $ref: '#/components/schemas/Name'
        Accounttype:
          type: string
          format: DataType
          description: 'A classification of accounts based on their purpose  '
    Accountbalance:
      type: object
      format: Accountbalance
      description: >-
        The state of the obligations managed on the account, the result of all
        entries on the account.


        Numerical representation of the net increases and decreases in an
        account at a specific point in time. (ISO20022)


        Banking: Amount available in an account for withdrawal or use.

        Read more: http://www.businessdictionary.com/definition/balance.html


        Bookkeeping: Difference between the debit and credit sides of an
        account.

        Read more: http://www.businessdictionary.com/definition/balance.html 
      properties:
        BalanceAmount:
          $ref: '#/components/schemas/Amount'
        BalanceType:
          enum:
            - Openingbalance
            - Closingbalance
            - Currentbalance
            - Availablebalance
            - Ledgerbalance
            - Reservebalance
            - Freebalance
            - Principalbalance
          format: Accountbalance
        BalanceDate:
          $ref: '#/components/schemas/Datetime'
        BalanceIndicator:
          enum:
            - Debit
            - Credit
          format: Accountbalance
        Accountbalance:
          type: string
          format: DataType
          description: >-
            Numerical representation of the net increases and decreases in an
            account at a specific point in time. (ISO20022)

            https://www.iso20022.org/standardsrepository/type/Balance 
    Amount:
      type: object
      format: Amount
      description: ' '
      properties:
        AmountValue:
          $ref: '#/components/schemas/Value'
        AmountCurrency:
          $ref: '#/components/schemas/Currencycode'
        DecimalPointPosition:
          type: string
          format: String
          description: Decimal point position starts calulating from the right
        AmountType:
          enum:
            - Principal
            - Actual
            - Estimated
            - Maximum
            - Default
            - Replacement
            - Incremental
            - Decremental
            - Reserved
            - Available
            - Used
          format: Amount
        Amount:
          type: string
          format: DataType
          description: >-
            Number of monetary units specified in a currency, where the unit of
            currency is explicit and compliant with ISO 4217. (UN/CEFACT)


            The decimal seperator is a dot.



            Number of monetary units specified in a currency, where the unit of
            currency is explicit and compliant with ISO 4217. The decimal
            separator is a dot. (ISO20022)

            Note: A zero amount is considered a positive amount.

            total number of digits: 18

            number of digits in fractional part: 5

            minInclusive: 0 
    Currencycode:
      type: object
      format: Currencycode
      description: ' '
      properties:
        Currencycode:
          type: string
          format: DataType
          description: >-
            A code identifying a currency according to ISO-4217.

            A currency is a system of money in general use in a particular
            country.


            Code allocated to a currency, by a maintenance agency, under an
            international identification scheme as described in the latest
            edition of the international standard ISO 4217 "Codes for the
            representation of currencies and funds". Valid currency codes are
            registered with the ISO 4217 Maintenance Agency, and consist of
            three contiguous letters. (ISO20022)

             
    Accountcurrency:
      type: object
      format: Accountcurrency
      description: ' '
      properties:
        AccountCurrencyType:
          enum:
            - BaseCurrency
            - ReportingCurrency
            - SecondaryCurrency
            - TransferCurrency
          format: Accountcurrency
        AccountCurrency:
          $ref: '#/components/schemas/Currencycode'
        Accountcurrency:
          type: string
          format: DataType
          description: ''
    Document:
      type: object
      format: Document
      description: "Reference to the Document submitted in a reconciliation process. Document\__x000D_\n|Document (https://www.iso20022.org/standardsrepository/type/Document)|Standard|ISO20022 BM ()"
      properties:
        DocumentIdentification:
          $ref: '#/components/schemas/Identifier'
        DocumentVersion:
          type: string
          format: Number
          description: ''
        DocumentType:
          enum:
            - Meteredserviceinvoice
            - Commercialinvoice
            - Creditnote
            - Debitnote
            - Hireinvoice
            - Selfbilledinvoice
            - Remittanceadvicemessage
            - Relatedpaymentinstruction
            - Commercialcontract
            - Foreignexchangedealreference
            - Statementofaccount
            - Dispatchadvice
            - Purchaseorder
            - Billoflading
            - Voucher
            - Accountreceivableopenitem
            - Cashierreceipt
            - Customerreceipt
            - Journal
            - Salereceipt
          format: Document
        DocumentStatus:
          $ref: '#/components/schemas/Status'
        DocumentDateTime:
          $ref: '#/components/schemas/Datetime'
        DocumentName:
          $ref: '#/components/schemas/Name'
        DocumentDateTimeType:
          enum:
            - CreationDate
            - CapturingDate
            - VersionDate
            - ValueDate
            - IssueDate
          format: Document
        DocumentPurpose:
          $ref: '#/components/schemas/Text'
        DocumentFormat:
          $ref: '#/components/schemas/Text'
        DocumentSubject:
          $ref: '#/components/schemas/Text'
        DocumentDescription:
          $ref: '#/components/schemas/Text'
        DocumentValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
    ReconciliationTransaction:
      type: object
      format: ReconciliationTransaction
      description: >-
        Reference to the Transaction which is the result of reconciliation
        ReconciliationTransaction|ReconciliationTransaction
        (https://www.iso20022.org/standardsrepository/type/ReconciliationTransaction)|Standard|ISO20022
        BM ()
      properties:
        CumulativeAmount:
          $ref: '#/components/schemas/Amount'
        TransactionType:
          enum:
            - Debit
            - Debitreverse
            - Credit
            - Creditreverse
            - Declined
            - Failed
            - Reservation
          format: ReconciliationTransaction
        ReconciliationTransactionIdentification:
          $ref: '#/components/schemas/Identifier'
        Currency:
          $ref: '#/components/schemas/Currencycode'
    TransactionReconciliationArrangement:
      type: object
      format: TransactionReconciliationArrangement
      description: >-
        Reference to the arrangement committed to perform the reconciliation
        ReconciliationTransaction|ReconciliationTransaction
        (https://www.iso20022.org/standardsrepository/type/ReconciliationTransaction)|Standard|ISO20022
        BM ()
      properties:
        TotalNumber:
          type: string
          format: Number
          description: >-
            Total number of transactions during a reconciliation period
            (ISO20022) 
        TransactionType:
          enum:
            - Debit
            - Debitreverse
            - Credit
            - Creditreverse
            - Declined
            - Failed
            - Reservation
          format: TransactionReconciliationArrangement
        ReconciliationIdentification:
          $ref: '#/components/schemas/Identifier'
        CardPayment:
          $ref: '#/components/schemas/Cardpaymentarrangement'
        ClosePeriodIndicator:
          type: string
          format: Boolean
          description: >-
            Indicates if the transaction requires a closure of the
            reconciliation period. (ISO20022) 
    Cardpaymentarrangement:
      type: object
      format: Cardpaymentarrangement
      description: >-
        Specifies the card payments which are part of the transaction
        reconciliation. (ISO20022) 
      properties:
        PaymentCardArrangementIdentifier:
          $ref: '#/components/schemas/Identifier'
        CardPaymentArrangementType:
          enum:
            - SweepArrangement
            - WithdrawalArrangement
            - DepositArrangement
            - InterestArrangement
            - FeeArrangement
            - LienArrangement
            - InformationArrangement
            - PaymentArrangement
            - EntitlementArrangement
            - PeriodArrangement
            - CollateralArrangement
            - LimitArrangement
            - AccessArrangement
            - CardPaymentArrangement
            - StandingOrderArrangement
            - OverdraftArrangement
            - RepaymentArrangement
            - StatementArrangement
            - CreditTransferArrangement
            - ProductAndServiceArrangement
            - FactoringArrangement
            - RolloverArrangement
            - RestructuringArrangement
            - InsuranceArrangement
            - CollectionArrangement
            - UnderwritingArrangement
            - TerminationArrangement
            - MaturityArrangement
          format: Cardpaymentarrangement
    ReconciliationInstruction:
      type: object
      format: ReconciliationInstruction
      description: >-
        Reference to the Instruction which is a request to fulfill the
        Reconciliation Arrangement 
      properties:
        ReconciliationInstruction:
          type: string
          format: Class
          description: 'An instruction to fulfill the Reconciliation Arrangement '
    System:
      type: object
      format: System
      description: >-
        Reference to the System which provides the reconciliation process.
        System|System
        (https://www.iso20022.org/standardsrepository/type/System)|Standard|ISO20022
        BM ()
      properties:
        SystemAccessSchedule:
          $ref: '#/components/schemas/Schedule'
        SystemType:
          type: string
          format: String
          description: ''
    AccountReconciliationProcedureNotify:
      type: object
      description: ''
      properties:
        AccountReconciliationProcedureParameterType:
          $ref: '#/components/schemas/Text'
        AccountReconciliationProcedureSelectedOption:
          $ref: '#/components/schemas/Feature'
        AccountReconciliationProcedureRequest:
          $ref: '#/components/schemas/Instruction'
        AccountReconciliationProcedureSchedule:
          $ref: '#/components/schemas/Schedule'
        AccountReconciliationProcedureStatus:
          $ref: '#/components/schemas/Status'
        AccountReconciliationProcedureAssociatedPartyReference:
          $ref: '#/components/schemas/Involvedparty'
        AccountReconciliationProcedureBusinessUnitReference:
          $ref: '#/components/schemas/Involvedparty'
        AccountReconciliationProcedureServiceProviderReference:
          $ref: '#/components/schemas/Involvedparty'
        AccountReconciliationProcedureFinancialFacilityReference:
          $ref: '#/components/schemas/FinancialFacility'
        AccountReconciliationProcedureEmployeeReference:
          $ref: '#/components/schemas/Involvedparty'
        AccountReconciliationProcedureCustomerReference:
          $ref: '#/components/schemas/Involvedparty'
        AccountReconciliationProcedureType:
          $ref: '#/components/schemas/Proceduretype'
        AccountReconciliationProcedureServiceProviderSchedule:
          $ref: '#/components/schemas/Schedule'
        AccountReconciliationProcedureServiceType:
          $ref: '#/components/schemas/Servicetype'
        AccountReconciliationProcedureProductandServiceType:
          $ref: '#/components/schemas/Bankingproducttype'
        AccountReconciliationProcedureProductandServiceInstance:
          $ref: '#/components/schemas/BankingProduct'
        AccountReconciliationProcedureTransactionType:
          $ref: '#/components/schemas/Transactiontype'
        AccountReconciliationProcedureFinancialTransactionArrangement:
          $ref: '#/components/schemas/Arrangement'
        AccountReconciliationProcedureCustomerAgreementReference:
          $ref: '#/components/schemas/Agreement'
        AccountReconciliationProcedureReference:
          $ref: '#/components/schemas/Procedure'
    AccountAssessmentNotify:
      type: object
      description: ''
      properties:
        Preconditions:
          $ref: '#/components/schemas/Condition'
        BusinessUnitEmployeeReference:
          $ref: '#/components/schemas/Involvedparty'
        Schedule:
          $ref: '#/components/schemas/Schedule'
        BusinessService:
          $ref: '#/components/schemas/BusinessService'
        Postconditions:
          $ref: '#/components/schemas/Condition'
        AccountReconciliationProcedureReference:
          $ref: '#/components/schemas/Procedure'
        AccountAssessmentWorkstepReference:
          $ref: '#/components/schemas/Workstep'
        AccountAssessmentWorkstepType:
          $ref: '#/components/schemas/Text'
    AccountResolutionNotify:
      type: object
      description: ''
      properties:
        Preconditions:
          $ref: '#/components/schemas/Condition'
        BusinessUnitEmployeeReference:
          $ref: '#/components/schemas/Involvedparty'
        Schedule:
          $ref: '#/components/schemas/Schedule'
        BusinessService:
          $ref: '#/components/schemas/BusinessService'
        Postconditions:
          $ref: '#/components/schemas/Condition'
        AccountReconciliationProcedureReference:
          $ref: '#/components/schemas/Procedure'
        AccountResolutionWorkstepReference:
          $ref: '#/components/schemas/Workstep'
        AccountResolutionWorkstepType:
          $ref: '#/components/schemas/Text'
