openapi: 3.0.1
info:
  title: Leasing
  description: The leasing products enables customers to finance equipment purchases using the leased item as collateral when necessary
  version: 10.0.0
servers:
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/B154/Leasing/10.0.0
paths:
  /Leasing/{leasingId}/Control:
    put:
      tags:
      - CR - LeasingFacility
      summary: CoCR Control the processing of Leasing Facility
      description: CoCR Control the processing of Leasing Facility
      operationId: Control
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      requestBody:
        $ref: '#/components/requestBodies/LeasingFacility'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ControlLeasingFacilityResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Exchange:
    put:
      tags:
      - CR - LeasingFacility
      summary: EcCR Accept, verify, etc. aspects of Leasing Facility processing
      description: EcCR Accept, verify, etc. aspects of Leasing Facility processing
      operationId: Exchange
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      requestBody:
        $ref: '#/components/requestBodies/LeasingFacility'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExchangeLeasingFacilityResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Execute:
    put:
      tags:
      - CR - LeasingFacility
      summary: ExCR Execute an available automated action for Leasing Facility
      description: ExCR Execute an available automated action for Leasing Facility
      operationId: Execute
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      requestBody:
        $ref: '#/components/requestBodies/LeasingFacility'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecuteLeasingFacilityResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/Initiate:
    post:
      tags:
      - CR - LeasingFacility
      summary: InCR Instantiate a new Leasing Facility
      description: InCR Instantiate a new Leasing Facility
      operationId: Initiate
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/LeasingFacility'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitiateLeasingFacilityResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Retrieve:
    get:
      tags:
      - CR - LeasingFacility
      summary: ReCR Retrieve details about any aspect of Leasing Facility
      description: ReCR Retrieve details about any aspect of Leasing Facility
      operationId: Retrieve
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeasingFacility'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Request:
    put:
      tags:
      - CR - LeasingFacility
      summary: RqCR Request manual intervention or a decision with respect to Leasing Facility
      description: RqCR Request manual intervention or a decision with respect to Leasing Facility
      operationId: Request
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      requestBody:
        $ref: '#/components/requestBodies/LeasingFacility'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestLeasingFacilityResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Update:
    put:
      tags:
      - CR - LeasingFacility
      summary: UpCR Update details relating to Leasing Facility
      description: UpCR Update details relating to Leasing Facility
      operationId: Update
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      requestBody:
        $ref: '#/components/requestBodies/LeasingFacility'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateLeasingFacilityResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Fees/{feesId}/Exchange:
    put:
      tags:
      - BQ - Fees
      summary: EcBQ Accept, verify, etc. aspects of Fees processing
      description: EcBQ Accept, verify, etc. aspects of Fees processing
      operationId: ExchangeFees
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      - $ref: '#/components/parameters/FeesID'
      requestBody:
        $ref: '#/components/requestBodies/Fees'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fees'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Lien/{lienId}/Exchange:
    put:
      tags:
      - BQ - Lien
      summary: EcBQ Accept, verify, etc. aspects of Lien processing
      description: EcBQ Accept, verify, etc. aspects of Lien processing
      operationId: ExchangeLien
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      - $ref: '#/components/parameters/LienID'
      requestBody:
        $ref: '#/components/requestBodies/Lien'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lien'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Payments/{paymentsId}/Exchange:
    put:
      tags:
      - BQ - Payments
      summary: EcBQ Accept, verify, etc. aspects of Payments processing
      description: EcBQ Accept, verify, etc. aspects of Payments processing
      operationId: ExchangePayments
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      - $ref: '#/components/parameters/PaymentsID'
      requestBody:
        $ref: '#/components/requestBodies/Payments'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payments'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Sweep/{sweepId}/Exchange:
    put:
      tags:
      - BQ - Sweep
      summary: EcBQ Accept, verify, etc. aspects of Sweep processing
      description: EcBQ Accept, verify, etc. aspects of Sweep processing
      operationId: ExchangeSweep
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      - $ref: '#/components/parameters/SweepID'
      requestBody:
        $ref: '#/components/requestBodies/Sweep'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sweep'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Collateral/Initiate:
    post:
      tags:
      - BQ - Collateral
      summary: InBQ Instantiate a new Collateral
      description: InBQ Instantiate a new Collateral
      operationId: InitiateCollateral
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      requestBody:
        $ref: '#/components/requestBodies/Collateral'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collateral'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/CorporateAction/Initiate:
    post:
      tags:
      - BQ - CorporateAction
      summary: InBQ Instantiate a new Corporate Action
      description: InBQ Instantiate a new Corporate Action
      operationId: InitiateCorporateAction
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      requestBody:
        $ref: '#/components/requestBodies/CorporateAction'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CorporateAction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Deposits/Initiate:
    post:
      tags:
      - BQ - Deposits
      summary: InBQ Instantiate a new Deposits
      description: InBQ Instantiate a new Deposits
      operationId: InitiateDeposits
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      requestBody:
        $ref: '#/components/requestBodies/Deposits'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deposits'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Fees/Initiate:
    post:
      tags:
      - BQ - Fees
      summary: InBQ Instantiate a new Fees
      description: InBQ Instantiate a new Fees
      operationId: InitiateFees
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      requestBody:
        $ref: '#/components/requestBodies/Fees'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fees'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/FinancialInstrument/Initiate:
    post:
      tags:
      - BQ - FinancialInstrument
      summary: InBQ Instantiate a new Financial Instrument
      description: InBQ Instantiate a new Financial Instrument
      operationId: InitiateFinancialInstrument
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      requestBody:
        $ref: '#/components/requestBodies/InitiateFinancialInstrumentRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitiateFinancialInstrumentResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/IssuedDevice/Initiate:
    post:
      tags:
      - BQ - IssuedDevice
      summary: InBQ Instantiate a new Issued Device
      description: InBQ Instantiate a new Issued Device
      operationId: InitiateIssuedDevice
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      requestBody:
        $ref: '#/components/requestBodies/IssuedDevice'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssuedDevice'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Lien/Initiate:
    post:
      tags:
      - BQ - Lien
      summary: InBQ Instantiate a new Lien
      description: InBQ Instantiate a new Lien
      operationId: InitiateLien
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      requestBody:
        $ref: '#/components/requestBodies/Lien'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lien'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Payments/Initiate:
    post:
      tags:
      - BQ - Payments
      summary: InBQ Instantiate a new Payments
      description: InBQ Instantiate a new Payments
      operationId: InitiatePayments
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      requestBody:
        $ref: '#/components/requestBodies/Payments'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payments'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Sweep/Initiate:
    post:
      tags:
      - BQ - Sweep
      summary: InBQ Instantiate a new Sweep
      description: InBQ Instantiate a new Sweep
      operationId: InitiateSweep
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      requestBody:
        $ref: '#/components/requestBodies/Sweep'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sweep'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Withdrawals/Initiate:
    post:
      tags:
      - BQ - Withdrawals
      summary: InBQ Instantiate a new Withdrawals
      description: InBQ Instantiate a new Withdrawals
      operationId: InitiateWithdrawals
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      requestBody:
        $ref: '#/components/requestBodies/Withdrawals'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Withdrawals'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Collateral/{collateralId}/Retrieve:
    get:
      tags:
      - BQ - Collateral
      summary: ReBQ Retrieve details about any aspect of Collateral
      description: ReBQ Retrieve details about any aspect of Collateral
      operationId: RetrieveCollateral
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      - $ref: '#/components/parameters/CollateralID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collateral'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/CorporateAction/{corporateactionId}/Retrieve:
    get:
      tags:
      - BQ - CorporateAction
      summary: ReBQ Retrieve details about any aspect of Corporate Action
      description: ReBQ Retrieve details about any aspect of Corporate Action
      operationId: RetrieveCorporateAction
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      - $ref: '#/components/parameters/CorporateActionID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CorporateAction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Deposits/{depositsId}/Retrieve:
    get:
      tags:
      - BQ - Deposits
      summary: ReBQ Retrieve details about any aspect of Deposits
      description: ReBQ Retrieve details about any aspect of Deposits
      operationId: RetrieveDeposits
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      - $ref: '#/components/parameters/DepositsID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deposits'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Fees/{feesId}/Retrieve:
    get:
      tags:
      - BQ - Fees
      summary: ReBQ Retrieve details about any aspect of Fees
      description: ReBQ Retrieve details about any aspect of Fees
      operationId: RetrieveFees
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      - $ref: '#/components/parameters/FeesID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fees'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/FinancialInstrument/{financialinstrumentId}/Retrieve:
    get:
      tags:
      - BQ - FinancialInstrument
      summary: ReBQ Retrieve details about any aspect of Financial Instrument
      description: ReBQ Retrieve details about any aspect of Financial Instrument
      operationId: RetrieveFinancialInstrument
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      - $ref: '#/components/parameters/FinancialInstrumentID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveFinancialInstrumentResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Interest/{interestId}/Retrieve:
    get:
      tags:
      - BQ - Interest
      summary: ReBQ Retrieve details about any aspect of Interest
      description: ReBQ Retrieve details about any aspect of Interest
      operationId: RetrieveInterest
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      - $ref: '#/components/parameters/InterestID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interest'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/IssuedDevice/{issueddeviceId}/Retrieve:
    get:
      tags:
      - BQ - IssuedDevice
      summary: ReBQ Retrieve details about any aspect of Issued Device
      description: ReBQ Retrieve details about any aspect of Issued Device
      operationId: RetrieveIssuedDevice
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      - $ref: '#/components/parameters/IssuedDeviceID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssuedDevice'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Lien/{lienId}/Retrieve:
    get:
      tags:
      - BQ - Lien
      summary: ReBQ Retrieve details about any aspect of Lien
      description: ReBQ Retrieve details about any aspect of Lien
      operationId: RetrieveLien
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      - $ref: '#/components/parameters/LienID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lien'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Payments/{paymentsId}/Retrieve:
    get:
      tags:
      - BQ - Payments
      summary: ReBQ Retrieve details about any aspect of Payments
      description: ReBQ Retrieve details about any aspect of Payments
      operationId: RetrievePayments
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      - $ref: '#/components/parameters/PaymentsID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payments'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Sweep/{sweepId}/Retrieve:
    get:
      tags:
      - BQ - Sweep
      summary: ReBQ Retrieve details about any aspect of Sweep
      description: ReBQ Retrieve details about any aspect of Sweep
      operationId: RetrieveSweep
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      - $ref: '#/components/parameters/SweepID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sweep'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Withdrawals/{withdrawalsId}/Retrieve:
    get:
      tags:
      - BQ - Withdrawals
      summary: ReBQ Retrieve details about any aspect of Withdrawals
      description: ReBQ Retrieve details about any aspect of Withdrawals
      operationId: RetrieveWithdrawals
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      - $ref: '#/components/parameters/WithdrawalsID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Withdrawals'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Collateral/{collateralId}/Request:
    put:
      tags:
      - BQ - Collateral
      summary: RqBQ Request manual intervention or a decision with respect to Collateral
      description: RqBQ Request manual intervention or a decision with respect to Collateral
      operationId: RequestCollateral
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      - $ref: '#/components/parameters/CollateralID'
      requestBody:
        $ref: '#/components/requestBodies/Collateral'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collateral'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Fees/{feesId}/Request:
    put:
      tags:
      - BQ - Fees
      summary: RqBQ Request manual intervention or a decision with respect to Fees
      description: RqBQ Request manual intervention or a decision with respect to Fees
      operationId: RequestFees
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      - $ref: '#/components/parameters/FeesID'
      requestBody:
        $ref: '#/components/requestBodies/Fees'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fees'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Collateral/{collateralId}/Update:
    put:
      tags:
      - BQ - Collateral
      summary: UpBQ Update details relating to Collateral
      description: UpBQ Update details relating to Collateral
      operationId: UpdateCollateral
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      - $ref: '#/components/parameters/CollateralID'
      requestBody:
        $ref: '#/components/requestBodies/Collateral'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collateral'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/CorporateAction/{corporateactionId}/Update:
    put:
      tags:
      - BQ - CorporateAction
      summary: UpBQ Update details relating to Corporate Action
      description: UpBQ Update details relating to Corporate Action
      operationId: UpdateCorporateAction
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      - $ref: '#/components/parameters/CorporateActionID'
      requestBody:
        $ref: '#/components/requestBodies/CorporateAction'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CorporateAction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Deposits/{depositsId}/Update:
    put:
      tags:
      - BQ - Deposits
      summary: UpBQ Update details relating to Deposits
      description: UpBQ Update details relating to Deposits
      operationId: UpdateDeposits
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      - $ref: '#/components/parameters/DepositsID'
      requestBody:
        $ref: '#/components/requestBodies/Deposits'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deposits'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Fees/{feesId}/Update:
    put:
      tags:
      - BQ - Fees
      summary: UpBQ Update details relating to Fees
      description: UpBQ Update details relating to Fees
      operationId: UpdateFees
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      - $ref: '#/components/parameters/FeesID'
      requestBody:
        $ref: '#/components/requestBodies/Fees'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fees'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/FinancialInstrument/{financialinstrumentId}/Update:
    put:
      tags:
      - BQ - FinancialInstrument
      summary: UpBQ Update details relating to Financial Instrument
      description: UpBQ Update details relating to Financial Instrument
      operationId: UpdateFinancialInstrument
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      - $ref: '#/components/parameters/FinancialInstrumentID'
      requestBody:
        $ref: '#/components/requestBodies/UpdateFinancialInstrumentRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateFinancialInstrumentResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Interest/{interestId}/Update:
    put:
      tags:
      - BQ - Interest
      summary: UpBQ Update details relating to Interest
      description: UpBQ Update details relating to Interest
      operationId: UpdateInterest
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      - $ref: '#/components/parameters/InterestID'
      requestBody:
        $ref: '#/components/requestBodies/Interest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interest'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/IssuedDevice/{issueddeviceId}/Update:
    put:
      tags:
      - BQ - IssuedDevice
      summary: UpBQ Update details relating to Issued Device
      description: UpBQ Update details relating to Issued Device
      operationId: UpdateIssuedDevice
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      - $ref: '#/components/parameters/IssuedDeviceID'
      requestBody:
        $ref: '#/components/requestBodies/IssuedDevice'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssuedDevice'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Lien/{lienId}/Update:
    put:
      tags:
      - BQ - Lien
      summary: UpBQ Update details relating to Lien
      description: UpBQ Update details relating to Lien
      operationId: UpdateLien
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      - $ref: '#/components/parameters/LienID'
      requestBody:
        $ref: '#/components/requestBodies/Lien'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lien'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Payments/{paymentsId}/Update:
    put:
      tags:
      - BQ - Payments
      summary: UpBQ Update details relating to Payments
      description: UpBQ Update details relating to Payments
      operationId: UpdatePayments
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      - $ref: '#/components/parameters/PaymentsID'
      requestBody:
        $ref: '#/components/requestBodies/Payments'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payments'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Sweep/{sweepId}/Update:
    put:
      tags:
      - BQ - Sweep
      summary: UpBQ Update details relating to Sweep
      description: UpBQ Update details relating to Sweep
      operationId: UpdateSweep
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      - $ref: '#/components/parameters/SweepID'
      requestBody:
        $ref: '#/components/requestBodies/Sweep'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sweep'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Withdrawals/{withdrawalsId}/Update:
    put:
      tags:
      - BQ - Withdrawals
      summary: UpBQ Update details relating to Withdrawals
      description: UpBQ Update details relating to Withdrawals
      operationId: UpdateWithdrawals
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      - $ref: '#/components/parameters/WithdrawalsID'
      requestBody:
        $ref: '#/components/requestBodies/Withdrawals'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Withdrawals'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    LeasingFacility:
      type: object
      properties:
        LeasingFacilityParameterType:
          type: string
          description: A Classification value that distinguishes between arrangements according to the type of business services within Leasing Arrangement
        LeasingFacilitySelectedOption:
          type: string
          description: A selected optional business service as subject matter of Leasing Arrangement
        LeasingFacilityType:
          type: string
          description: The type of Leasing Arrangement
        LeasingFacilityReference:
          type: object
          description: Reference to Leasing Arrangement
        LeasingFacilitySchedule:
          type: string
          description: Timetable to fulfill Leasing Arrangement
        LeasingFacilityStatus:
          type: string
          description: The status of Leasing Arrangement
        LeasingFacilityCurrency:
          type: string
          description: The curreny which is arranged in Leasing Arrangement
        LeasingFacilityRegulationReference:
          type: object
          description: Reference to the regulation which is defined in Leasing Arrangement
        LeasingFacilityRegulationType:
          type: string
          description: A Classification that distinguishes between the regularity domains of Leasing Arrangement
        LeasingFacilityJurisdiction:
          type: string
          description: Reference to the jurisdiction that is assigned to Leasing Arrangement in case of legal dispute.
        LeasingFacilityBookingLocation:
          type: string
          description: The financial accounting unit into which the financial events, with regard to the origination and fulfillment of the agreement in the context of Leasing Arrangement, are entered.
        LeasingFacilityAccountType:
          type: string
          description: The type of account which is linked to Leasing Arrangement
        LeasingFacilityAccountReference:
          type: object
          description: Reference to the account which is linked to Leasing Arrangement
    Fees:
      type: object
      properties:
        FeesPreconditions:
          type: string
          description: The required status/situation prior to the implementation of the feature
        FeesFeatureSchedule:
          type: string
          description: The timing and key actions/milestones involved in completing the fulfillment feature instance
        BusinessService:
          type: object
          description: The Leasing Arrangement specific Business Service
        FeesPostconditions:
          type: string
          description: The completion status and any triggered/dependent actions once the feature instance has been fulfilled
        FeesServiceType:
          type: string
          description: Reference to the specific business service type
        FeesServiceDescription:
          type: string
          description: Description of the performed business service
        FeesServiceInputsandOuputs:
          type: string
          description: Mandatory and optional inputs and output information for the business service
        FeesServiceWorkProduct:
          type: string
          description: Documentation, meeting schedules, notes, reasearch. calculations and any other work products produced by the business service
        FeesServiceName:
          type: string
          description: ''
    Interest:
      type: object
      properties:
        InterestPreconditions:
          type: string
          description: The required status/situation prior to the implementation of the feature
        InterestFeatureSchedule:
          type: string
          description: The timing and key actions/milestones involved in completing the fulfillment feature instance
        BusinessService:
          type: object
          description: The Leasing Arrangement specific Business Service
        InterestPostconditions:
          type: string
          description: The completion status and any triggered/dependent actions once the feature instance has been fulfilled
        InterestServiceType:
          type: string
          description: Reference to the specific business service type
        InterestServiceDescription:
          type: string
          description: Description of the performed business service
        InterestServiceInputsandOuputs:
          type: string
          description: Mandatory and optional inputs and output information for the business service
        InterestServiceWorkProduct:
          type: string
          description: Documentation, meeting schedules, notes, reasearch. calculations and any other work products produced by the business service
        InterestServiceName:
          type: string
          description: ''
    Collateral:
      type: object
      properties:
        CollateralPreconditions:
          type: string
          description: The required status/situation prior to the implementation of the feature
        CollateralFeatureSchedule:
          type: string
          description: The timing and key actions/milestones involved in completing the fulfillment feature instance
        BusinessService:
          type: object
          description: The Leasing Arrangement specific Business Service
        CollateralPostconditions:
          type: string
          description: The completion status and any triggered/dependent actions once the feature instance has been fulfilled
        CollateralServiceType:
          type: string
          description: Reference to the specific business service type
        CollateralServiceDescription:
          type: string
          description: Description of the performed business service
        CollateralServiceInputsandOuputs:
          type: string
          description: Mandatory and optional inputs and output information for the business service
        CollateralServiceWorkProduct:
          type: string
          description: Documentation, meeting schedules, notes, reasearch. calculations and any other work products produced by the business service
        CollateralServiceName:
          type: string
          description: ''
    Withdrawals:
      type: object
      properties:
        WithdrawalsPreconditions:
          type: string
          description: The required status/situation prior to the implementation of the feature
        WithdrawalsFeatureSchedule:
          type: string
          description: The timing and key actions/milestones involved in completing the fulfillment feature instance
        WithdrawalProcessing:
          type: object
          description: The Leasing Arrangement specific Business Service
        WithdrawalsPostconditions:
          type: string
          description: The completion status and any triggered/dependent actions once the feature instance has been fulfilled
        WithdrawalsWithdrawalProcessingServiceType:
          type: string
          description: Reference to the specific business service type
        WithdrawalsWithdrawalProcessingServiceDescription:
          type: string
          description: Description of the performed business service
        WithdrawalsWithdrawalProcessingServiceInputsandOuputs:
          type: string
          description: Mandatory and optional inputs and output information for the business service
        WithdrawalsWithdrawalProcessingServiceWorkProduct:
          type: string
          description: Documentation, meeting schedules, notes, reasearch. calculations and any other work products produced by the business service
        WithdrawalsWithdrawalProcessingServiceName:
          type: string
          description: ''
    FinancialAccounting:
      type: object
      properties:
        FinancialAccountingPreconditions:
          type: string
          description: The required status/situation prior to the implementation of the feature
        FinancialAccountingFeatureSchedule:
          type: string
          description: The timing and key actions/milestones involved in completing the fulfillment feature instance
        FinancialAccounting:
          type: object
          description: The Leasing Arrangement specific Business Service
        FinancialAccountingPostconditions:
          type: string
          description: The completion status and any triggered/dependent actions once the feature instance has been fulfilled
        FinancialAccountingFinancialAccountingServiceType:
          type: string
          description: Reference to the specific business service type
        FinancialAccountingFinancialAccountingServiceDescription:
          type: string
          description: Description of the performed business service
        FinancialAccountingFinancialAccountingServiceInputsandOuputs:
          type: string
          description: Mandatory and optional inputs and output information for the business service
        FinancialAccountingFinancialAccountingServiceWorkProduct:
          type: string
          description: Documentation, meeting schedules, notes, reasearch. calculations and any other work products produced by the business service
        FinancialAccountingFinancialAccountingServiceName:
          type: string
          description: ''
    ClearingandSettlement:
      type: object
      properties:
        CorrespondentBankClearingArrangementReference:
          type: object
          description: The clearing arrangement between the bank and clearing house - includes schedule, limits
        CorrespondentBankClearingArrangementClearingInstructions:
          type: string
          description: Customer specific default clearing instructions
        CorrespondentBankClearingArrangementSettlementInstructions:
          type: string
          description: Customer specific default settlement instructions (e.g. to handle netting arrangements)
        MirrorNostroAccountReference:
          type: object
          description: Used for central bank clearing reconciliations
        ClearingTransaction:
          type: string
          description: A record of a clearing transaction
        SettlementTransaction:
          type: string
          description: A record of a settlement transaction
    IssuedDevice:
      type: object
      properties:
        IssuedDevicePreconditions:
          type: string
          description: The required status/situation prior to the implementation of the feature
        IssuedDeviceFeatureSchedule:
          type: string
          description: The timing and key actions/milestones involved in completing the fulfillment feature instance
        BusinessService:
          type: object
          description: The Leasing Arrangement specific Business Service
        IssuedDevicePostconditions:
          type: string
          description: The completion status and any triggered/dependent actions once the feature instance has been fulfilled
        IssuedDeviceServiceType:
          type: string
          description: Reference to the specific business service type
        IssuedDeviceServiceDescription:
          type: string
          description: Description of the performed business service
        IssuedDeviceServiceInputsandOuputs:
          type: string
          description: Mandatory and optional inputs and output information for the business service
        IssuedDeviceServiceWorkProduct:
          type: string
          description: Documentation, meeting schedules, notes, reasearch. calculations and any other work products produced by the business service
        IssuedDeviceServiceName:
          type: string
          description: ''
    Payments:
      type: object
      properties:
        PaymentsPreconditions:
          type: string
          description: The required status/situation prior to the implementation of the feature
        PaymentsFeatureSchedule:
          type: string
          description: The timing and key actions/milestones involved in completing the fulfillment feature instance
        BusinessService:
          type: object
          description: The Leasing Arrangement specific Business Service
        PaymentsPostconditions:
          type: string
          description: The completion status and any triggered/dependent actions once the feature instance has been fulfilled
        PaymentsServiceType:
          type: string
          description: Reference to the specific business service type
        PaymentsServiceDescription:
          type: string
          description: Description of the performed business service
        PaymentsServiceInputsandOuputs:
          type: string
          description: Mandatory and optional inputs and output information for the business service
        PaymentsServiceWorkProduct:
          type: string
          description: Documentation, meeting schedules, notes, reasearch. calculations and any other work products produced by the business service
        PaymentsServiceName:
          type: string
          description: ''
    Deposits:
      type: object
      properties:
        DepositsPreconditions:
          type: string
          description: The required status/situation prior to the implementation of the feature
        DepositsFeatureSchedule:
          type: string
          description: The timing and key actions/milestones involved in completing the fulfillment feature instance
        DepositProcessing:
          type: object
          description: The Leasing Arrangement specific Business Service
        DepositsPostconditions:
          type: string
          description: The completion status and any triggered/dependent actions once the feature instance has been fulfilled
        DepositsDepositProcessingServiceType:
          type: string
          description: Reference to the specific business service type
        DepositsDepositProcessingServiceDescription:
          type: string
          description: Description of the performed business service
        DepositsDepositProcessingServiceInputsandOuputs:
          type: string
          description: Mandatory and optional inputs and output information for the business service
        DepositsDepositProcessingServiceWorkProduct:
          type: string
          description: Documentation, meeting schedules, notes, reasearch. calculations and any other work products produced by the business service
        DepositsDepositProcessingServiceName:
          type: string
          description: ''
    LeasingOutcome:
      type: object
      properties:
        LeasingFinancialFacility:
          type: string
          description: ''
        LeasingWorkProduct:
          type: string
          description: ''
    Sweep:
      type: object
      properties:
        SweepPreconditions:
          type: string
          description: The required status/situation prior to the implementation of the feature
        SweepFeatureSchedule:
          type: string
          description: The timing and key actions/milestones involved in completing the fulfillment feature instance
        BusinessService:
          type: object
          description: The Leasing Arrangement specific Business Service
        SweepPostconditions:
          type: string
          description: The completion status and any triggered/dependent actions once the feature instance has been fulfilled
        SweepServiceType:
          type: string
          description: Reference to the specific business service type
        SweepServiceDescription:
          type: string
          description: Description of the performed business service
        SweepServiceInputsandOuputs:
          type: string
          description: Mandatory and optional inputs and output information for the business service
        SweepServiceWorkProduct:
          type: string
          description: Documentation, meeting schedules, notes, reasearch. calculations and any other work products produced by the business service
        SweepServiceName:
          type: string
          description: ''
    CorporateAction:
      type: object
      properties:
        CorporateActionPreconditions:
          type: string
          description: The required status/situation prior to the implementation of the feature
        CorporateActionFeatureSchedule:
          type: string
          description: The timing and key actions/milestones involved in completing the fulfillment feature instance
        BS-CorporateActionProcessing:
          type: object
          description: The Leasing Arrangement specific Business Service
        CorporateActionPostconditions:
          type: string
          description: The completion status and any triggered/dependent actions once the feature instance has been fulfilled
        CorporateActionBS-CorporateActionProcessingServiceType:
          type: string
          description: Reference to the specific business service type
        CorporateActionBS-CorporateActionProcessingServiceDescription:
          type: string
          description: Description of the performed business service
        CorporateActionBS-CorporateActionProcessingServiceInputsandOuputs:
          type: string
          description: Mandatory and optional inputs and output information for the business service
        CorporateActionBS-CorporateActionProcessingServiceWorkProduct:
          type: string
          description: Documentation, meeting schedules, notes, reasearch. calculations and any other work products produced by the business service
        CorporateActionBS-CorporateActionProcessingServiceName:
          type: string
          description: ''
    FinancialInstrument:
      type: object
      properties:
        FinancialInstrumentPreconditions:
          type: string
          description: The required status/situation prior to the implementation of the feature
        FinancialInstrumentFeatureSchedule:
          type: string
          description: The timing and key actions/milestones involved in completing the fulfillment feature instance
        FinancialInstrument:
          type: object
          description: The Leasing Arrangement specific Business Service
        FinancialInstrumentPostconditions:
          type: string
          description: The completion status and any triggered/dependent actions once the feature instance has been fulfilled
        FinancialInstrumentFinancialInstrumentServiceType:
          type: string
          description: Reference to the specific business service type
        FinancialInstrumentFinancialInstrumentServiceDescription:
          type: string
          description: Description of the performed business service
        FinancialInstrumentFinancialInstrumentServiceInputsandOuputs:
          type: string
          description: Mandatory and optional inputs and output information for the business service
        FinancialInstrumentFinancialInstrumentServiceWorkProduct:
          type: string
          description: Documentation, meeting schedules, notes, reasearch. calculations and any other work products produced by the business service
        FinancialInstrumentFinancialInstrumentServiceName:
          type: string
          description: ''
    Lien:
      type: object
      properties:
        LienPreconditions:
          type: string
          description: The required status/situation prior to the implementation of the feature
        LienFeatureSchedule:
          type: string
          description: The timing and key actions/milestones involved in completing the fulfillment feature instance
        BusinessService:
          type: object
          description: The Leasing Arrangement specific Business Service
        LienPostconditions:
          type: string
          description: The completion status and any triggered/dependent actions once the feature instance has been fulfilled
        LienServiceType:
          type: string
          description: Reference to the specific business service type
        LienServiceDescription:
          type: string
          description: Description of the performed business service
        LienServiceInputsandOuputs:
          type: string
          description: Mandatory and optional inputs and output information for the business service
        LienServiceWorkProduct:
          type: string
          description: Documentation, meeting schedules, notes, reasearch. calculations and any other work products produced by the business service
        LienServiceName:
          type: string
          description: ''
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          description: NA
        status:
          type: string
          description: NA
        message:
          type: string
          description: NA
    ControlLeasingFacilityResponse:
      type: object
      properties:
        LeasingFacility:
          type: object
          properties:
            LeasingFacilityParameterType:
              type: string
              description: NA
            LeasingFacilitySelectedOption:
              type: string
              description: NA
            LeasingFacilitySchedule:
              type: string
              description: NA
            LeasingFacilityStatus:
              type: string
              description: NA
    ExchangeLeasingFacilityResponse:
      type: object
      properties:
        LeasingFacility:
          type: object
          properties:
            LeasingFacilityParameterType:
              type: string
              description: NA
            LeasingFacilitySelectedOption:
              type: string
              description: NA
            LeasingFacilitySchedule:
              type: string
              description: NA
            LeasingFacilityStatus:
              type: string
              description: NA
    ExecuteLeasingFacilityResponse:
      type: object
      properties:
        LeasingFacility:
          type: object
          properties:
            LeasingFacilityParameterType:
              type: string
              description: NA
            LeasingFacilitySelectedOption:
              type: string
              description: NA
            LeasingFacilitySchedule:
              type: string
              description: NA
            LeasingFacilityStatus:
              type: string
              description: NA
    InitiateLeasingFacilityResponse:
      type: object
      properties:
        LeasingFacility:
          type: object
          properties:
            LeasingFacilityParameterType:
              type: string
              description: NA
            LeasingFacilitySelectedOption:
              type: string
              description: NA
            LeasingFacilitySchedule:
              type: string
              description: NA
            LeasingFacilityStatus:
              type: string
              description: NA
    RequestLeasingFacilityResponse:
      type: object
      properties:
        LeasingFacility:
          type: object
          properties:
            LeasingFacilityParameterType:
              type: string
              description: NA
            LeasingFacilitySelectedOption:
              type: string
              description: NA
            LeasingFacilitySchedule:
              type: string
              description: NA
            LeasingFacilityStatus:
              type: string
              description: NA
    UpdateLeasingFacilityResponse:
      type: object
      properties:
        LeasingFacility:
          type: object
          properties:
            LeasingFacilityParameterType:
              type: string
              description: NA
            LeasingFacilitySelectedOption:
              type: string
              description: NA
            LeasingFacilitySchedule:
              type: string
              description: NA
            LeasingFacilityStatus:
              type: string
              description: NA
    InitiateFinancialInstrumentRequest:
      type: object
      properties:
        FinancialInstrument:
          type: object
          properties:
            FinancialInstrumentPreconditions:
              type: string
              description: NA
            FinancialInstrumentFeatureSchedule:
              type: string
              description: NA
            FinancialInstrumentPostconditions:
              type: string
              description: NA
            FinancialInstrumentFinancialInstrumentServiceType:
              type: string
              description: NA
            FinancialInstrumentFinancialInstrumentServiceDescription:
              type: string
              description: NA
            FinancialInstrumentFinancialInstrumentServiceInputsandOuputs:
              type: string
              description: NA
            FinancialInstrumentFinancialInstrumentServiceWorkProduct:
              type: string
              description: NA
            FinancialInstrumentFinancialInstrumentServiceName:
              type: string
              description: NA
    InitiateFinancialInstrumentResponse:
      type: object
      properties:
        FinancialInstrument:
          type: object
          properties:
            FinancialInstrumentPreconditions:
              type: string
              description: NA
            FinancialInstrumentFeatureSchedule:
              type: string
              description: NA
            FinancialInstrumentPostconditions:
              type: string
              description: NA
            FinancialInstrumentFinancialInstrumentServiceType:
              type: string
              description: NA
            FinancialInstrumentFinancialInstrumentServiceDescription:
              type: string
              description: NA
            FinancialInstrumentFinancialInstrumentServiceInputsandOuputs:
              type: string
              description: NA
            FinancialInstrumentFinancialInstrumentServiceWorkProduct:
              type: string
              description: NA
            FinancialInstrumentFinancialInstrumentServiceName:
              type: string
              description: NA
    RetrieveFinancialInstrumentResponse:
      type: object
      properties:
        FinancialInstrument:
          type: object
          properties:
            FinancialInstrumentPreconditions:
              type: string
              description: NA
            FinancialInstrumentFeatureSchedule:
              type: string
              description: NA
            FinancialInstrumentPostconditions:
              type: string
              description: NA
            FinancialInstrumentFinancialInstrumentServiceType:
              type: string
              description: NA
            FinancialInstrumentFinancialInstrumentServiceDescription:
              type: string
              description: NA
            FinancialInstrumentFinancialInstrumentServiceInputsandOuputs:
              type: string
              description: NA
            FinancialInstrumentFinancialInstrumentServiceWorkProduct:
              type: string
              description: NA
            FinancialInstrumentFinancialInstrumentServiceName:
              type: string
              description: NA
    UpdateFinancialInstrumentRequest:
      type: object
      properties:
        FinancialInstrument:
          type: object
          properties:
            FinancialInstrumentPreconditions:
              type: string
              description: NA
            FinancialInstrumentFeatureSchedule:
              type: string
              description: NA
            FinancialInstrumentPostconditions:
              type: string
              description: NA
            FinancialInstrumentFinancialInstrumentServiceType:
              type: string
              description: NA
            FinancialInstrumentFinancialInstrumentServiceDescription:
              type: string
              description: NA
            FinancialInstrumentFinancialInstrumentServiceInputsandOuputs:
              type: string
              description: NA
            FinancialInstrumentFinancialInstrumentServiceWorkProduct:
              type: string
              description: NA
            FinancialInstrumentFinancialInstrumentServiceName:
              type: string
              description: NA
    UpdateFinancialInstrumentResponse:
      type: object
      properties:
        FinancialInstrument:
          type: object
          properties:
            FinancialInstrumentPreconditions:
              type: string
              description: NA
            FinancialInstrumentFeatureSchedule:
              type: string
              description: NA
            FinancialInstrumentPostconditions:
              type: string
              description: NA
            FinancialInstrumentFinancialInstrumentServiceType:
              type: string
              description: NA
            FinancialInstrumentFinancialInstrumentServiceDescription:
              type: string
              description: NA
            FinancialInstrumentFinancialInstrumentServiceInputsandOuputs:
              type: string
              description: NA
            FinancialInstrumentFinancialInstrumentServiceWorkProduct:
              type: string
              description: NA
            FinancialInstrumentFinancialInstrumentServiceName:
              type: string
              description: NA
  parameters:
    LeasingID:
      name: leasingId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    FeesID:
      name: feesId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    InterestID:
      name: interestId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    CollateralID:
      name: collateralId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    WithdrawalsID:
      name: withdrawalsId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    FinancialAccountingID:
      name: financialaccountingId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    ClearingandSettlementID:
      name: clearingandsettlementId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    IssuedDeviceID:
      name: issueddeviceId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    PaymentsID:
      name: paymentsId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    DepositsID:
      name: depositsId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    LeasingOutcomeID:
      name: leasingoutcomeId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    SweepID:
      name: sweepId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    CorporateActionID:
      name: corporateactionId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    FinancialInstrumentID:
      name: financialinstrumentId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    LienID:
      name: lienId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
  requestBodies:
    LeasingFacility:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LeasingFacility'
    Fees:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Fees'
    Lien:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Lien'
    Payments:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Payments'
    Sweep:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Sweep'
    Collateral:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Collateral'
    CorporateAction:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CorporateAction'
    Deposits:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Deposits'
    InitiateFinancialInstrumentRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateFinancialInstrumentRequest'
    IssuedDevice:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IssuedDevice'
    Withdrawals:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Withdrawals'
    UpdateFinancialInstrumentRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateFinancialInstrumentRequest'
    Interest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Interest'
  responses:
    HTTPError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    BadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequestsError:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
...
