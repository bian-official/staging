openapi: 3.0.1
info:
  title: Customer Workbench
  description: This service domain represents customer side devices. Most commonly providing a customer access portal to the banks products and services through any suitable channel and device
  version: 10.0.0
servers:
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/B154/CustomerWorkbench/10.0.0
paths:
  /CustomerWorkbench/Initiate:
    post:
      tags:
      - CR - CustomerWorkbenchOperatingSession
      summary: InCR Initiate a customer workbench operating session
      description: InCR Initiate a customer workbench operating session
      operationId: Initiate
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/CustomerWorkbenchOperatingSession'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitiateCustomerWorkbenchOperatingSessionResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerWorkbench/{customerworkbenchId}/Update:
    put:
      tags:
      - CR - CustomerWorkbenchOperatingSession
      summary: UpCR Update details of a workbench session
      description: UpCR Update details of a workbench session
      operationId: Update
      parameters:
      - $ref: '#/components/parameters/CustomerWorkbenchID'
      requestBody:
        $ref: '#/components/requestBodies/CustomerWorkbenchOperatingSession'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerWorkbenchOperatingSession'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerWorkbench/{customerworkbenchId}/Retrieve:
    get:
      tags:
      - CR - CustomerWorkbenchOperatingSession
      summary: ReCR Retrieve details about the workbench session
      description: ReCR Retrieve details about the workbench session
      operationId: Retrieve
      parameters:
      - $ref: '#/components/parameters/CustomerWorkbenchID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerWorkbenchOperatingSession'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerWorkbench/{customerworkbenchId}/SWUpdate/Initiate:
    post:
      tags:
      - BQ - SWUpdate
      summary: InBQ Initiate a SW update
      description: InBQ Initiate a SW update
      operationId: InitiateSWUpdate
      parameters:
      - $ref: '#/components/parameters/CustomerWorkbenchID'
      requestBody:
        $ref: '#/components/requestBodies/InitiateSWUpdateRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitiateSWUpdateResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerWorkbench/{customerworkbenchId}/SWUpdate/{swupdateId}/Retrieve:
    get:
      tags:
      - BQ - SWUpdate
      summary: ReBQ Retrieve details about a SW update
      description: ReBQ Retrieve details about a SW update
      operationId: RetrieveSWUpdate
      parameters:
      - $ref: '#/components/parameters/CustomerWorkbenchID'
      - $ref: '#/components/parameters/SWUpdateID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveSWUpdateResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerWorkbench/{customerworkbenchId}/Broadcast/Initiate:
    post:
      tags:
      - BQ - Broadcast
      summary: InBQ Initiate a workstation broadcast
      description: InBQ Initiate a workstation broadcast
      operationId: InitiateBroadcast
      parameters:
      - $ref: '#/components/parameters/CustomerWorkbenchID'
      requestBody:
        $ref: '#/components/requestBodies/Broadcast'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitiateBroadcastResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerWorkbench/{customerworkbenchId}/Broadcast/{broadcastId}/Request:
    put:
      tags:
      - BQ - Broadcast
      summary: ReBQ Retrieve details about a workstation broadcast
      description: ReBQ Retrieve details about a workstation broadcast
      operationId: RequestBroadcast
      parameters:
      - $ref: '#/components/parameters/CustomerWorkbenchID'
      - $ref: '#/components/parameters/BroadcastID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Broadcast'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerWorkbench/{customerworkbenchId}/Browsing/Initiate:
    post:
      tags:
      - BQ - Browsing
      summary: InBQ Initiate a browsing session
      description: InBQ Initiate a browsing session
      operationId: InitiateBrowsing
      parameters:
      - $ref: '#/components/parameters/CustomerWorkbenchID'
      requestBody:
        $ref: '#/components/requestBodies/Browsing'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: boolean
                example: true
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerWorkbench/{customerworkbenchId}/Browsing/{browsingId}/Execute:
    put:
      tags:
      - BQ - Browsing
      summary: ExBQ Execute tasks within a browsing session (e.g. extract data)
      description: ExBQ Execute tasks within a browsing session (e.g. extract data)
      operationId: ExecuteBrowsing
      parameters:
      - $ref: '#/components/parameters/CustomerWorkbenchID'
      - $ref: '#/components/parameters/BrowsingID'
      requestBody:
        $ref: '#/components/requestBodies/Browsing'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: boolean
                example: true
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerWorkbench/{customerworkbenchId}/Browsing/{browsingId}/Retrieve:
    get:
      tags:
      - BQ - Browsing
      summary: ReBQ Retrieve details about a browsing session
      description: ReBQ Retrieve details about a browsing session
      operationId: RetrieveBrowsing
      parameters:
      - $ref: '#/components/parameters/CustomerWorkbenchID'
      - $ref: '#/components/parameters/BrowsingID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Browsing'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerWorkbench/{customerworkbenchId}/Contact/Initiate:
    post:
      tags:
      - BQ - Contact
      summary: InBQ Initiate a contact with the bank
      description: InBQ Initiate a contact with the bank
      operationId: InitiateContact
      parameters:
      - $ref: '#/components/parameters/CustomerWorkbenchID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerWorkbench/{customerworkbenchId}/Contact/{contactId}/Execute:
    put:
      tags:
      - BQ - Contact
      summary: ExBQ Execute an automated action within the contact (e.g. self serve)
      description: ExBQ Execute an automated action within the contact (e.g. self serve)
      operationId: ExecuteContact
      parameters:
      - $ref: '#/components/parameters/CustomerWorkbenchID'
      - $ref: '#/components/parameters/ContactID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerWorkbench/{customerworkbenchId}/Contact/{contactId}/Request:
    put:
      tags:
      - BQ - Contact
      summary: RqBQ Request manual intervention in a contact (e.g. request service)
      description: RqBQ Request manual intervention in a contact (e.g. request service)
      operationId: RequestContact
      parameters:
      - $ref: '#/components/parameters/CustomerWorkbenchID'
      - $ref: '#/components/parameters/ContactID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerWorkbench/{customerworkbenchId}/Contact/{contactId}/Retrieve:
    get:
      tags:
      - BQ - Contact
      summary: ReBQ Retrieve details about a contact
      description: ReBQ Retrieve details about a contact
      operationId: RetrieveContact
      parameters:
      - $ref: '#/components/parameters/CustomerWorkbenchID'
      - $ref: '#/components/parameters/ContactID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerWorkbench/{customerworkbenchId}/ProductandServiceAccess/Initiate:
    post:
      tags:
      - BQ - ProductandServiceAccess
      summary: InBQ Initiate product/service access within the contact
      description: InBQ Initiate product/service access within the contact
      operationId: InitiateProductandServiceAccess
      parameters:
      - $ref: '#/components/parameters/CustomerWorkbenchID'
      requestBody:
        $ref: '#/components/requestBodies/Contact'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitiateProductandServiceAccessResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerWorkbench/{customerworkbenchId}/ProductandServiceAccess/{productandserviceaccessId}/Execute:
    put:
      tags:
      - BQ - ProductandServiceAccess
      summary: ExBQ Execute an automated action with the product/service access (e.g. self serve)
      description: ExBQ Execute an automated action with the product/service access (e.g. self serve)
      operationId: ExecuteProductandServiceAccess
      parameters:
      - $ref: '#/components/parameters/CustomerWorkbenchID'
      - $ref: '#/components/parameters/ProductandServiceAccessID'
      requestBody:
        $ref: '#/components/requestBodies/Contact'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecuteProductandServiceAccessResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerWorkbench/{customerworkbenchId}/ProductandServiceAccess/{productandserviceaccessId}/Request:
    put:
      tags:
      - BQ - ProductandServiceAccess
      summary: RqBQ Request manual intervention in a product/service access (e.g. request service)
      description: RqBQ Request manual intervention in a product/service access (e.g. request service)
      operationId: RequestProductandServiceAccess
      parameters:
      - $ref: '#/components/parameters/CustomerWorkbenchID'
      - $ref: '#/components/parameters/ProductandServiceAccessID'
      requestBody:
        $ref: '#/components/requestBodies/Contact'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestProductandServiceAccessResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerWorkbench/{customerworkbenchId}/ProductandServiceAccess/{productandserviceaccessId}/Retrieve:
    get:
      tags:
      - BQ - ProductandServiceAccess
      summary: ReBQ Retrieve details about product/service access
      description: ReBQ Retrieve details about product/service access
      operationId: RetrieveProductandServiceAccess
      parameters:
      - $ref: '#/components/parameters/CustomerWorkbenchID'
      - $ref: '#/components/parameters/ProductandServiceAccessID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    CustomerWorkbenchOperatingSession:
      type: object
      properties:
        CustomerReference:
          type: object
          description: The customer running the workbench device
        CustomerWorkbenchDeviceType:
          type: string
          description: The type of user device (e.g. mobile, laptop, workstation )
        CustomerWorkbenchDeviceRegistration:
          type: string
          description: Reference to device properties used to identify the device  (e.g. URL, ANI, serial number)
        CustomerWorkbenchDeviceManufacturer:
          type: string
          description: The make of the device if known
        CustomerWorkbenchDeviceOperatingSystemOrVersionNumber:
          type: string
          description: The operating system type and version (use to match downloaded software)
        CustomerWorkbenchDeviceAccessPermissions:
          type: string
          description: The bank's access permissions (e.g. local storage access, administrator permissions, system download permission)
        InstalledBankApplicationType:
          type: string
          description: Details of the local bank applications
        InstalledBankApplicationVersionNumber:
          type: string
          description: The version number(s) of device resident bank software
        LastUpdateDateOrTime:
          type: string
          description: The last update date time stamp for local bank software
    Broadcast:
      type: object
      properties:
        CustomerWorkbenchBroadcastRecord:
          type: string
          description: Text of the broadcast message
        CustomerWorkbenchBroadcastRecordDate/Time:
          type: string
          description: The timestamp for the broadcast
    Contact:
      type: object
      properties:
        ContactStart/EndTime:
          type: string
          description: Logged duration of the contact
        ContactActivityLog:
          type: string
          description: Local record of page/service access as appropriate
    SWUpdate:
      type: object
      properties:
        SWUpdateApplication:
          type: string
          description: The name of the bank application that is downloaded
        SWUpdateVersion:
          type: string
          description: The version number downloaded
        SWUpdateImage:
          type: string
          description: The downloaded executable image
        Date:
          type: string
          description: The date and time of the download
    Browsing:
      type: object
      properties:
        CustomerURL:
          type: string
          description: The device URL can be used to detect known and repeat customer access
        BankWebsiteURL:
          type: string
          description: The access URL to the public web based bank information
    ProductandServiceAccess:
      type: object
      properties:
        CustomerDetails/Preferences:
          type: string
          description: Locally maintained values used for auto-fill and local validation
        ProductandServiceMenu:
          type: string
          description: Locally maintained structured dialogue to access bank services as appropriate
        ProductandServiceMenuAccessLog:
          type: string
          description: Locally record of product/service screen access
        AccessStart/EndTime:
          type: string
          description: Logged time and duration spent on product/service screens
        CustomerResidentFiles:
          type: string
          description: Local copies of requested information, application forms etc.
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          description: NA
        status:
          type: string
          description: NA
        message:
          type: string
          description: NA
    InitiateCustomerWorkbenchOperatingSessionResponse:
      type: object
      properties:
        CustomerWorkbenchOperatingSession:
          type: object
          properties:
            CustomerWorkbenchDeviceAccessPermissions:
              type: string
              description: NA
    InitiateSWUpdateRequest:
      type: object
      properties:
        CustomerWorkbenchOperatingSession:
          type: object
          properties:
            CustomerReference:
              type: object
              description: NA
            CustomerWorkbenchDeviceType:
              type: string
              description: NA
            CustomerWorkbenchDeviceRegistration:
              type: string
              description: NA
            CustomerWorkbenchDeviceManufacturer:
              type: string
              description: NA
            CustomerWorkbenchDeviceOperatingSystemOrVersionNumber:
              type: string
              description: NA
            CustomerWorkbenchDeviceAccessPermissions:
              type: string
              description: NA
            InstalledBankApplicationType:
              type: string
              description: NA
            InstalledBankApplicationVersionNumber:
              type: string
              description: NA
            LastUpdateDateOrTime:
              type: string
              description: NA
        SWUpdate:
          type: object
          properties:
            SWUpdateApplication:
              type: string
              description: NA
            SWUpdateVersion:
              type: string
              description: NA
            SWUpdateImage:
              type: string
              description: NA
    InitiateSWUpdateResponse:
      type: object
      properties:
        CustomerWorkbenchOperatingSession:
          type: object
          properties:
            InstalledBankApplicationType:
              type: string
              description: NA
            InstalledBankApplicationVersionNumber:
              type: string
              description: NA
            LastUpdateDateOrTime:
              type: string
              description: NA
    RetrieveSWUpdateResponse:
      type: object
      properties:
        CustomerWorkbenchOperatingSession:
          type: object
          properties:
            CustomerReference:
              type: object
              description: NA
            CustomerWorkbenchDeviceType:
              type: string
              description: NA
            CustomerWorkbenchDeviceRegistration:
              type: string
              description: NA
            CustomerWorkbenchDeviceManufacturer:
              type: string
              description: NA
            CustomerWorkbenchDeviceOperatingSystemOrVersionNumber:
              type: string
              description: NA
            CustomerWorkbenchDeviceAccessPermissions:
              type: string
              description: NA
            InstalledBankApplicationType:
              type: string
              description: NA
            InstalledBankApplicationVersionNumber:
              type: string
              description: NA
            LastUpdateDateOrTime:
              type: string
              description: NA
        SWUpdate:
          type: object
          properties:
            SWUpdateApplication:
              type: string
              description: NA
            SWUpdateVersion:
              type: string
              description: NA
            SWUpdateImage:
              type: string
              description: NA
    InitiateBroadcastResponse:
      type: object
      properties:
        Broadcast:
          type: object
          properties:
            CustomerWorkbenchBroadcastRecordDateOrTime:
              type: string
              description: NA
    InitiateProductandServiceAccessResponse:
      type: object
      properties:
        Contact:
          type: object
          properties:
            ContactStartOrEndTime:
              type: string
              description: NA
            ContactActivityLog:
              type: string
              description: NA
        ProductandServiceAccess:
          type: object
          properties:
            AccessStartOrEndTime:
              type: string
              description: NA
            CustomerResidentFiles:
              type: string
              description: NA
    ExecuteProductandServiceAccessResponse:
      type: object
      properties:
        Contact:
          type: object
          properties:
            ContactStartOrEndTime:
              type: string
              description: NA
            ContactActivityLog:
              type: string
              description: NA
        ProductandServiceAccess:
          type: object
          properties:
            AccessStartOrEndTime:
              type: string
              description: NA
            CustomerResidentFiles:
              type: string
              description: NA
    RequestProductandServiceAccessResponse:
      type: object
      properties:
        Contact:
          type: object
          properties:
            ContactStartOrEndTime:
              type: string
              description: NA
            ContactActivityLog:
              type: string
              description: NA
        ProductandServiceAccess:
          type: object
          properties:
            AccessStartOrEndTime:
              type: string
              description: NA
            CustomerResidentFiles:
              type: string
              description: NA
  parameters:
    CustomerWorkbenchID:
      name: customerworkbenchId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    BroadcastID:
      name: broadcastId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    ContactID:
      name: contactId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    SWUpdateID:
      name: swupdateId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    BrowsingID:
      name: browsingId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    ProductandServiceAccessID:
      name: productandserviceaccessId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
  requestBodies:
    CustomerWorkbenchOperatingSession:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerWorkbenchOperatingSession'
    InitiateSWUpdateRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateSWUpdateRequest'
    Broadcast:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Broadcast'
    Browsing:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Browsing'
    Contact:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Contact'
  responses:
    HTTPError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    BadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequestsError:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
...
