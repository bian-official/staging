openapi: 3.0.1
info:
  title: Contact Routing
  description: The Contact Routing service domain tracks servicing resource availability and uses any known details about the customer contact (e.g. identity, indicated purpose of call, status of the relationship) to make an optimal routing decision. The routing selection may include matching the required product knowledge/skills to the available servicing resources.
  version: 10.0.0
servers:
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/B154/ContactRouting/10.0.0
paths:
  /ContactRouting/Provide:
    post:
      tags:
      - CR - CustomerServicingResourceAllocation
      summary: PrCR Enable the service resource pool allocation
      description: PrCR Enable the service resource pool allocation
      operationId: Provide
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/ProvideCustomerServicingResourceAllocationRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerServicingResourceAllocation'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ContactRouting/{contactroutingId}/Update:
    put:
      tags:
      - CR - CustomerServicingResourceAllocation
      summary: UpCR Update details about the servicing resource pool
      description: UpCR Update details about the servicing resource pool
      operationId: Update
      parameters:
      - $ref: '#/components/parameters/ContactRoutingID'
      requestBody:
        $ref: '#/components/requestBodies/CustomerServicingResourceAllocation'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerServicingResourceAllocation'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ContactRouting/{contactroutingId}/Capture:
    put:
      tags:
      - CR - CustomerServicingResourceAllocation
      summary: CaCR Capture servicing resource pool data (e.g. resource status/availability)
      description: CaCR Capture servicing resource pool data (e.g. resource status/availability)
      operationId: Capture
      parameters:
      - $ref: '#/components/parameters/ContactRoutingID'
      requestBody:
        $ref: '#/components/requestBodies/CaptureCustomerServicingResourceAllocationRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaptureCustomerServicingResourceAllocationResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ContactRouting/{contactroutingId}/Retrieve:
    get:
      tags:
      - CR - CustomerServicingResourceAllocation
      summary: ReCR Retrieve details about the servicing resource assignments
      description: ReCR Retrieve details about the servicing resource assignments
      operationId: Retrieve
      parameters:
      - $ref: '#/components/parameters/ContactRoutingID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerServicingResourceAllocation'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ContactRouting/{contactroutingId}/Allocation/{allocationId}/Request:
    put:
      tags:
      - BQ - Allocation
      summary: PrBQ Request a servicing resource (can be qualification and future booking)
      description: PrBQ Request a servicing resource (can be qualification and future booking)
      operationId: RequestAllocation
      parameters:
      - $ref: '#/components/parameters/ContactRoutingID'
      - $ref: '#/components/parameters/AllocationID'
      requestBody:
        $ref: '#/components/requestBodies/CustomerServicingResourceAllocation'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestAllocationResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ContactRouting/{contactroutingId}/Allocation/{allocationId}/Update:
    put:
      tags:
      - BQ - Allocation
      summary: UpBQ Update details of a servicing resource allocation
      description: UpBQ Update details of a servicing resource allocation
      operationId: UpdateAllocation
      parameters:
      - $ref: '#/components/parameters/ContactRoutingID'
      - $ref: '#/components/parameters/AllocationID'
      requestBody:
        $ref: '#/components/requestBodies/Allocation'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Allocation'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ContactRouting/{contactroutingId}/Allocation/{allocationId}/Capture:
    put:
      tags:
      - BQ - Allocation
      summary: CaBQ Capture data for an active allocation (e.g. availability)
      description: CaBQ Capture data for an active allocation (e.g. availability)
      operationId: CaptureAllocation
      parameters:
      - $ref: '#/components/parameters/ContactRoutingID'
      - $ref: '#/components/parameters/AllocationID'
      requestBody:
        $ref: '#/components/requestBodies/CaptureAllocationRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaptureAllocationResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ContactRouting/{contactroutingId}/Allocation/{allocationId}/Retrieve:
    get:
      tags:
      - BQ - Allocation
      summary: ReBQ Retrieve details about a servicing resource allocation
      description: ReBQ Retrieve details about a servicing resource allocation
      operationId: RetrieveAllocation
      parameters:
      - $ref: '#/components/parameters/ContactRoutingID'
      - $ref: '#/components/parameters/AllocationID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Allocation'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    CustomerServicingResourceAllocation:
      type: object
      properties:
        ServicingResourceAllocationServiceSchedule:
          type: string
          description: Maintains the allocation status of available service resources. Can include future booking commitments
        ServicingResourceReference:
          type: object
          description: Reference to a servicing resource
        ServicingResourceRecord:
          type: string
          description: Details about a registered servicing resource/specialist
        ServicingResourceQualificationProfile:
          type: string
          description: Details the qualification, expertise and level of experience of a servicing specialist
        ServicingPositionReference:
          type: object
          description: Reference to the assigned servicing position for the resource for the current session
        ServicingResourceAvailabilitySchedule:
          type: string
          description: Details the time the resource plans to be and is actually available for allocations
        ServicingResourceStatus:
          type: string
          description: Tracks the current status indicating availability for assignment
        ServicingSessionReference:
          type: object
          description: Reference to a servicing session assignments made
    Allocation:
      type: object
      properties:
        AllocationRequestType:
          type: string
          description: Defines the type of allocation (e.g. next available, qualification based, future reservation)
        CustomerServicingRequestRecord:
          type: string
          description: Contains details of servicing resource request. This can be simple for next available agent, or detail specific required qualifications and expertise
        CustomerContactRecord:
          type: string
          description: Extracts from the active contact can be used to support more advance selection logic to identify the best available servicing specialist resource
        AllocationTaskResult:
          type: string
          description: The result of the allocation task
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          description: NA
        status:
          type: string
          description: NA
        message:
          type: string
          description: NA
    ProvideCustomerServicingResourceAllocationRequest:
      type: object
      properties:
        CustomerServicingResourceAllocation:
          type: object
          properties:
            ServicingResourceReference:
              type: object
              description: NA
            ServicingResourceRecord:
              type: string
              description: NA
            ServicingResourceQualificationProfile:
              type: string
              description: NA
            ServicingResourceAvailabilitySchedule:
              type: string
              description: NA
            ServicingResourceStatus:
              type: string
              description: NA
    CaptureCustomerServicingResourceAllocationRequest:
      type: object
      properties:
        CustomerServicingResourceAllocation:
          type: object
          properties:
            ServicingResourceRecord:
              type: string
              description: NA
            ServicingResourceAvailabilitySchedule:
              type: string
              description: NA
            ServicingResourceStatus:
              type: string
              description: NA
    CaptureCustomerServicingResourceAllocationResponse:
      type: object
      properties:
        CustomerServicingResourceAllocation:
          type: object
          properties:
            ServicingResourceRecord:
              type: string
              description: NA
    RequestAllocationResponse:
      type: object
      properties:
        CustomerServicingResourceAllocation:
          type: object
          properties:
            ServicingResourceAvailabilitySchedule:
              type: string
              description: NA
            ServicingResourceStatus:
              type: string
              description: NA
            ServicingSessionReference:
              type: object
              description: NA
    CaptureAllocationRequest:
      type: object
      properties:
        Allocation:
          type: object
          properties:
            AllocationRequestType:
              type: string
              description: NA
            CustomerServicingRequestRecord:
              type: string
              description: NA
            CustomerContactRecord:
              type: string
              description: NA
    CaptureAllocationResponse:
      type: object
      properties:
        Allocation:
          type: object
          properties:
            AllocationTaskResult:
              type: string
              description: NA
  parameters:
    ContactRoutingID:
      name: contactroutingId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    AllocationID:
      name: allocationId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
  requestBodies:
    ProvideCustomerServicingResourceAllocationRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProvideCustomerServicingResourceAllocationRequest'
    CustomerServicingResourceAllocation:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerServicingResourceAllocation'
    CaptureCustomerServicingResourceAllocationRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CaptureCustomerServicingResourceAllocationRequest'
    Allocation:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Allocation'
    CaptureAllocationRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CaptureAllocationRequest'
  responses:
    HTTPError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    BadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequestsError:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
...
