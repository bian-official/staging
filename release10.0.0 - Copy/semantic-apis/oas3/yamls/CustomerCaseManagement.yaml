openapi: 3.0.1
info:
  title: Customer Case Management
  description: Track and assess case load and resolution activity - allocate resources as necessary to optimize case resolution performance
  version: 10.0.0
servers:
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/B154/CustomerCaseManagement/10.0.0
paths:
  /CustomerCaseManagement/Create:
    post:
      tags:
      - CR - CustomerCaseManagementPlan
      summary: CrCR Create the management plan for customer case handling
      description: CrCR Create the management plan for customer case handling
      operationId: Create
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/CustomerCaseManagementPlan'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerCaseManagementPlan'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerCaseManagement/{customercasemanagementId}/Update:
    put:
      tags:
      - CR - CustomerCaseManagementPlan
      summary: UpCR Update aspects of the customer case handling management plan
      description: UpCR Update aspects of the customer case handling management plan
      operationId: Update
      parameters:
      - $ref: '#/components/parameters/CustomerCaseManagementID'
      requestBody:
        $ref: '#/components/requestBodies/CustomerCaseManagementPlan'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerCaseManagementPlan'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerCaseManagement/{customercasemanagementId}/Request:
    put:
      tags:
      - CR - CustomerCaseManagementPlan
      summary: RqCR Request manual intervention with the plan
      description: RqCR Request manual intervention with the plan
      operationId: Request
      parameters:
      - $ref: '#/components/parameters/CustomerCaseManagementID'
      requestBody:
        $ref: '#/components/requestBodies/CustomerCaseManagementPlan'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerCaseManagementPlan'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerCaseManagement/{customercasemanagementId}/Retrieve:
    get:
      tags:
      - CR - CustomerCaseManagementPlan
      summary: ReCR Retrieve details about the customer case handling management plan
      description: ReCR Retrieve details about the customer case handling management plan
      operationId: Retrieve
      parameters:
      - $ref: '#/components/parameters/CustomerCaseManagementID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerCaseManagementPlan'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerCaseManagement/{customercasemanagementId}/Rules/{rulesId}/Update:
    put:
      tags:
      - BQ - Rules
      summary: UpBQ Update details of the case resolution criterion
      description: UpBQ Update details of the case resolution criterion
      operationId: UpdateRules
      parameters:
      - $ref: '#/components/parameters/CustomerCaseManagementID'
      - $ref: '#/components/parameters/RulesID'
      requestBody:
        $ref: '#/components/requestBodies/Rules'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rules'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerCaseManagement/{customercasemanagementId}/Rules/{rulesId}/Request:
    put:
      tags:
      - BQ - Rules
      summary: RqBQ Request manual intervention in the case resolution rules
      description: RqBQ Request manual intervention in the case resolution rules
      operationId: RequestRules
      parameters:
      - $ref: '#/components/parameters/CustomerCaseManagementID'
      - $ref: '#/components/parameters/RulesID'
      requestBody:
        $ref: '#/components/requestBodies/Rules'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rules'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerCaseManagement/{customercasemanagementId}/Rules/{rulesId}/Retrieve:
    get:
      tags:
      - BQ - Rules
      summary: ReBQ Retrieve details about the customer case criterion
      description: ReBQ Retrieve details about the customer case criterion
      operationId: RetrieveRules
      parameters:
      - $ref: '#/components/parameters/CustomerCaseManagementID'
      - $ref: '#/components/parameters/RulesID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rules'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerCaseManagement/{customercasemanagementId}/Performance/{performanceId}/Update:
    put:
      tags:
      - BQ - Performance
      summary: UpBQ Update performance analysis related information
      description: UpBQ Update performance analysis related information
      operationId: UpdatePerformance
      parameters:
      - $ref: '#/components/parameters/CustomerCaseManagementID'
      - $ref: '#/components/parameters/PerformanceID'
      requestBody:
        $ref: '#/components/requestBodies/Performance'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Performance'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerCaseManagement/{customercasemanagementId}/Performance/{performanceId}/Request:
    put:
      tags:
      - BQ - Performance
      summary: RqBQ Request manual intervention in unit performance analysis
      description: RqBQ Request manual intervention in unit performance analysis
      operationId: RequestPerformance
      parameters:
      - $ref: '#/components/parameters/CustomerCaseManagementID'
      - $ref: '#/components/parameters/PerformanceID'
      requestBody:
        $ref: '#/components/requestBodies/Performance'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Performance'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerCaseManagement/{customercasemanagementId}/Performance/{performanceId}/Retrieve:
    get:
      tags:
      - BQ - Performance
      summary: ReBQ Retrieve details about business unit performance assessment activity
      description: ReBQ Retrieve details about business unit performance assessment activity
      operationId: RetrievePerformance
      parameters:
      - $ref: '#/components/parameters/CustomerCaseManagementID'
      - $ref: '#/components/parameters/PerformanceID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Performance'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    CustomerCaseManagementPlan:
      type: object
      properties:
        CustomerCaseManagementPlanPeriod:
          type: string
          description: The time period addressed by the management plan. This may define required actions and target performance over a fixed period or can be a 'rolling' plan that is continually refined based on experience
        CustomerCasePoliciesAndGuidelines:
          type: string
          description: The specific policies and guidelines for case resolution employees
        CustomerCaseServicePerformanceGoals:
          type: string
          description: The target and actual service performance goals that are tracked by customer case management
        CustomerCaseServiceSchedule:
          type: string
          description: The target and actual customer case service schedule - recording planned and actual service availability and expected throughput/productivity
        CustomerCaseServiceOperatingConfiguration:
          type: string
          description: The set-up/organization for the customer case business function (covers operational and management/oversight roles and responsibilities)
        CustomerCaseResourcePlan:
          type: string
          description: Details the number and skill/qualification profile of the customer case handling staff (target and actual)
        CustomerCaseTrainingPlan:
          type: string
          description: Details of staff training and certification activity (planned and actual)
    Rules:
      type: object
      properties:
        CustomerCaseDecisionCriterion:
          type: string
          description: Definition of the basis for customer case evaluation
        CustomerCaseDecisionCriterionDefinition:
          type: string
          description: Definition of the applicable subject/criterion to be considered in case evaluation (e.g. documentary evidence, customer/merchant history, projected relationship impact, financial cost/projected revenue impact, reputational impact)
        CustomerCaseDecisionCriterionRules:
          type: string
          description: Specific rules, thresholds and parameter values to be applied in case evaluation for the criterion
        CustomerCaseDecisionCriterionAnalysis:
          type: string
          description: Record of the sensitivity/tuning evaluations and adjustments made to the rule settings for the criterion
        CustomerCaseDecisionCriterionHistory:
          type: string
          description: Sample case examples that apply the criterion that are used to evaluate the impact and re-calibrate the associated rules as appropriate
    Performance:
      type: object
      properties:
        CustomerCaseResourceUtilization:
          type: string
          description: Record of the customer case resolution resource utilization (target and actual)
        CustomerCaseLoadingProjections:
          type: string
          description: Estimated projected customer case resource requirements and utilization and loading based on historical patterns and anticipated activity
        CustomerCaseResolutionServiceStatistics:
          type: string
          description: Tracked activity and performance statistics used to manage the case resolution business function
        CustomerCaseServiceStatisticType:
          type: string
          description: The type of activity that is tracked and analyzed (e.g. case resolution throughput, time/effort per case, customer acceptance/appeal rate, merchant acceptance/appeal rate, customer/merchant retention, case resolution profit/loss)
        CustomerCaseServiceStatisticValue:
          type: string
          description: The statistical analysis that can include historical and trended views of the activity
        CustomerCaseServiceStatisticInterpretation:
          type: string
          description: The evaluation of the root cause or comparative assessments of the analysis
        CustomerCaseServiceStatisticRecommendation:
          type: string
          description: Service/configuration amendment recommendations arising from the statistical analysis
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          description: NA
        status:
          type: string
          description: NA
        message:
          type: string
          description: NA
  parameters:
    CustomerCaseManagementID:
      name: customercasemanagementId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    RulesID:
      name: rulesId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    PerformanceID:
      name: performanceId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
  requestBodies:
    CustomerCaseManagementPlan:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerCaseManagementPlan'
    Rules:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Rules'
    Performance:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Performance'
  responses:
    HTTPError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    BadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequestsError:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
...
