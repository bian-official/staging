openapi: 3.0.1
info:
  title: Bank Drafts
  description: This Service Domain support bank guaranteed payment transactions such as bank drafts
  contact:
    name: BIAN
    url: https://bian.org
  version: 11.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/BankDrafts/11.0.0
paths:
  '/BankDrafts/{bankdraftsid}/Control':
    put:
      tags:
        - CR - BearerDocumentTransaction
      summary: Control Bearer Document Transaction
      description: Control Bearer Document Transaction
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
      requestBody:
        $ref: '#/components/requestBodies/ControlBearerDocumentTransactionRequest'
      responses:
        '200':
          $ref: '#/components/responses/ControlBearerDocumentTransactionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/Exchange':
    put:
      tags:
        - CR - BearerDocumentTransaction
      summary: Exchange Bearer Document Transaction
      description: Exchange Bearer Document Transaction
      operationId: Exchange
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
      requestBody:
        $ref: '#/components/requestBodies/ExchangeBearerDocumentTransactionRequest'
      responses:
        '200':
          $ref: '#/components/responses/ExchangeBearerDocumentTransactionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/Execute':
    put:
      tags:
        - CR - BearerDocumentTransaction
      summary: Execute Bearer Document Transaction
      description: Execute Bearer Document Transaction
      operationId: Execute
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
      requestBody:
        $ref: '#/components/requestBodies/ExecuteBearerDocumentTransactionRequest'
      responses:
        '200':
          $ref: '#/components/responses/ExecuteBearerDocumentTransactionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /BankDrafts/Initiate:
    post:
      tags:
        - CR - BearerDocumentTransaction
      summary: Initiate Bearer Document Transaction
      description: Initiate Bearer Document Transaction
      operationId: Initiate
      requestBody:
        $ref: '#/components/requestBodies/InitiateBearerDocumentTransactionRequest'
      responses:
        '200':
          $ref: '#/components/responses/InitiateBearerDocumentTransactionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/Notify':
    get:
      tags:
        - CR - BearerDocumentTransaction
      summary: Notify Bearer Document Transaction
      description: Notify Bearer Document Transaction
      operationId: Notify
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
      responses:
        '200':
          $ref: '#/components/responses/NotifyBearerDocumentTransactionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/Request':
    put:
      tags:
        - CR - BearerDocumentTransaction
      summary: Request Bearer Document Transaction
      description: Request Bearer Document Transaction
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
      requestBody:
        $ref: '#/components/requestBodies/RequestBearerDocumentTransactionRequest'
      responses:
        '200':
          $ref: '#/components/responses/RequestBearerDocumentTransactionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/Retrieve':
    get:
      tags:
        - CR - BearerDocumentTransaction
      summary: Retrieve Bearer Document Transaction
      description: Retrieve Bearer Document Transaction
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveBearerDocumentTransactionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/Update':
    put:
      tags:
        - CR - BearerDocumentTransaction
      summary: Update Bearer Document Transaction
      description: Update Bearer Document Transaction
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
      requestBody:
        $ref: '#/components/requestBodies/UpdateBearerDocumentTransactionRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateBearerDocumentTransactionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/BankGuaranteedPaymentRemittanceTask/{bankguaranteedpaymentremittancetaskid}/Exchange':
    put:
      tags:
        - BQ - BankGuaranteedPaymentRemittanceTask
      summary: Exchange Bank Guaranteed Payment Remittance Task
      description: Exchange Bank Guaranteed Payment Remittance Task
      operationId: ExchangeBankGuaranteedPaymentRemittanceTask
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
        - $ref: '#/components/parameters/bankguaranteedpaymentremittancetaskid'
      requestBody:
        $ref: '#/components/requestBodies/BankGuaranteedPaymentRemittanceTask'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteedPaymentRemittanceTask'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/BankGuaranteedPaymentSpecificationTask/{bankguaranteedpaymentspecificationtaskid}/Exchange':
    put:
      tags:
        - BQ - BankGuaranteedPaymentSpecificationTask
      summary: Exchange Bank Guaranteed Payment Specification Task
      description: Exchange Bank Guaranteed Payment Specification Task
      operationId: ExchangeBankGuaranteedPaymentSpecificationTask
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
        - $ref: '#/components/parameters/bankguaranteedpaymentspecificationtaskid'
      requestBody:
        $ref: '#/components/requestBodies/BankGuaranteedPaymentSpecificationTask'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteedPaymentSpecificationTask'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/BearerDocumentCreationandRegistrationTask/{bearerdocumentcreationandregistrationtaskid}/Exchange':
    put:
      tags:
        - BQ - BearerDocumentCreationandRegistrationTask
      summary: Exchange Bearer Document Creation and Registration Task
      description: Exchange Bearer Document Creation and Registration Task
      operationId: ExchangeBearerDocumentCreationandRegistrationTask
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
        - $ref: '#/components/parameters/bearerdocumentcreationandregistrationtaskid'
      requestBody:
        $ref: '#/components/requestBodies/BearerDocumentCreationandRegistrationTask'
      responses:
        '200':
          $ref: '#/components/responses/BearerDocumentCreationandRegistrationTask'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/CustomerPaymentTask/{customerpaymenttaskid}/Exchange':
    put:
      tags:
        - BQ - CustomerPaymentTask
      summary: Exchange Customer Payment Task
      description: Exchange Customer Payment Task
      operationId: ExchangeCustomerPaymentTask
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
        - $ref: '#/components/parameters/customerpaymenttaskid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerPaymentTask'
      responses:
        '200':
          $ref: '#/components/responses/CustomerPaymentTask'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/BankGuaranteedPaymentRemittanceTask/{bankguaranteedpaymentremittancetaskid}/Execute':
    put:
      tags:
        - BQ - BankGuaranteedPaymentRemittanceTask
      summary: Execute Bank Guaranteed Payment Remittance Task
      description: Execute Bank Guaranteed Payment Remittance Task
      operationId: ExecuteBankGuaranteedPaymentRemittanceTask
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
        - $ref: '#/components/parameters/bankguaranteedpaymentremittancetaskid'
      requestBody:
        $ref: '#/components/requestBodies/BankGuaranteedPaymentRemittanceTask'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteedPaymentRemittanceTask'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/BankGuaranteedPaymentSpecificationTask/{bankguaranteedpaymentspecificationtaskid}/Execute':
    put:
      tags:
        - BQ - BankGuaranteedPaymentSpecificationTask
      summary: Execute Bank Guaranteed Payment Specification Task
      description: Execute Bank Guaranteed Payment Specification Task
      operationId: ExecuteBankGuaranteedPaymentSpecificationTask
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
        - $ref: '#/components/parameters/bankguaranteedpaymentspecificationtaskid'
      requestBody:
        $ref: '#/components/requestBodies/BankGuaranteedPaymentSpecificationTask'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteedPaymentSpecificationTask'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/BearerDocumentCreationandRegistrationTask/{bearerdocumentcreationandregistrationtaskid}/Execute':
    put:
      tags:
        - BQ - BearerDocumentCreationandRegistrationTask
      summary: Execute Bearer Document Creation and Registration Task
      description: Execute Bearer Document Creation and Registration Task
      operationId: ExecuteBearerDocumentCreationandRegistrationTask
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
        - $ref: '#/components/parameters/bearerdocumentcreationandregistrationtaskid'
      requestBody:
        $ref: '#/components/requestBodies/BearerDocumentCreationandRegistrationTask'
      responses:
        '200':
          $ref: '#/components/responses/BearerDocumentCreationandRegistrationTask'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/CustomerPaymentTask/{customerpaymenttaskid}/Execute':
    put:
      tags:
        - BQ - CustomerPaymentTask
      summary: Execute Customer Payment Task
      description: Execute Customer Payment Task
      operationId: ExecuteCustomerPaymentTask
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
        - $ref: '#/components/parameters/customerpaymenttaskid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerPaymentTask'
      responses:
        '200':
          $ref: '#/components/responses/CustomerPaymentTask'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/BankGuaranteedPaymentRemittanceTask/Initiate':
    post:
      tags:
        - BQ - BankGuaranteedPaymentRemittanceTask
      summary: Initiate Bank Guaranteed Payment Remittance Task
      description: Initiate Bank Guaranteed Payment Remittance Task
      operationId: InitiateBankGuaranteedPaymentRemittanceTask
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
      requestBody:
        $ref: '#/components/requestBodies/BankGuaranteedPaymentRemittanceTask'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteedPaymentRemittanceTask'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/BankGuaranteedPaymentSpecificationTask/Initiate':
    post:
      tags:
        - BQ - BankGuaranteedPaymentSpecificationTask
      summary: Initiate Bank Guaranteed Payment Specification Task
      description: Initiate Bank Guaranteed Payment Specification Task
      operationId: InitiateBankGuaranteedPaymentSpecificationTask
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
      requestBody:
        $ref: '#/components/requestBodies/BankGuaranteedPaymentSpecificationTask'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteedPaymentSpecificationTask'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/BearerDocumentCreationandRegistrationTask/Initiate':
    post:
      tags:
        - BQ - BearerDocumentCreationandRegistrationTask
      summary: Initiate Bearer Document Creation and Registration Task
      description: Initiate Bearer Document Creation and Registration Task
      operationId: InitiateBearerDocumentCreationandRegistrationTask
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
      requestBody:
        $ref: '#/components/requestBodies/BearerDocumentCreationandRegistrationTask'
      responses:
        '200':
          $ref: '#/components/responses/BearerDocumentCreationandRegistrationTask'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/CustomerPaymentTask/Initiate':
    post:
      tags:
        - BQ - CustomerPaymentTask
      summary: Initiate Customer Payment Task
      description: Initiate Customer Payment Task
      operationId: InitiateCustomerPaymentTask
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerPaymentTask'
      responses:
        '200':
          $ref: '#/components/responses/CustomerPaymentTask'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/BankGuaranteedPaymentRemittanceTask/{bankguaranteedpaymentremittancetaskid}/Notify':
    get:
      tags:
        - BQ - BankGuaranteedPaymentRemittanceTask
      summary: Notify Bank Guaranteed Payment Remittance Task
      description: Notify Bank Guaranteed Payment Remittance Task
      operationId: NotifyBankGuaranteedPaymentRemittanceTask
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
        - $ref: '#/components/parameters/bankguaranteedpaymentremittancetaskid'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteedPaymentRemittanceTask'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/BankGuaranteedPaymentSpecificationTask/{bankguaranteedpaymentspecificationtaskid}/Notify':
    get:
      tags:
        - BQ - BankGuaranteedPaymentSpecificationTask
      summary: Notify Bank Guaranteed Payment Specification Task
      description: Notify Bank Guaranteed Payment Specification Task
      operationId: NotifyBankGuaranteedPaymentSpecificationTask
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
        - $ref: '#/components/parameters/bankguaranteedpaymentspecificationtaskid'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteedPaymentSpecificationTask'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/BearerDocumentCreationandRegistrationTask/{bearerdocumentcreationandregistrationtaskid}/Notify':
    get:
      tags:
        - BQ - BearerDocumentCreationandRegistrationTask
      summary: Notify Bearer Document Creation and Registration Task
      description: Notify Bearer Document Creation and Registration Task
      operationId: NotifyBearerDocumentCreationandRegistrationTask
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
        - $ref: '#/components/parameters/bearerdocumentcreationandregistrationtaskid'
      responses:
        '200':
          $ref: '#/components/responses/BearerDocumentCreationandRegistrationTask'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/CustomerPaymentTask/{customerpaymenttaskid}/Notify':
    get:
      tags:
        - BQ - CustomerPaymentTask
      summary: Notify Customer Payment Task
      description: Notify Customer Payment Task
      operationId: NotifyCustomerPaymentTask
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
        - $ref: '#/components/parameters/customerpaymenttaskid'
      responses:
        '200':
          $ref: '#/components/responses/CustomerPaymentTask'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/BankGuaranteedPaymentRemittanceTask/{bankguaranteedpaymentremittancetaskid}/Request':
    put:
      tags:
        - BQ - BankGuaranteedPaymentRemittanceTask
      summary: Request Bank Guaranteed Payment Remittance Task
      description: Request Bank Guaranteed Payment Remittance Task
      operationId: RequestBankGuaranteedPaymentRemittanceTask
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
        - $ref: '#/components/parameters/bankguaranteedpaymentremittancetaskid'
      requestBody:
        $ref: '#/components/requestBodies/BankGuaranteedPaymentRemittanceTask'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteedPaymentRemittanceTask'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/BankGuaranteedPaymentSpecificationTask/{bankguaranteedpaymentspecificationtaskid}/Request':
    put:
      tags:
        - BQ - BankGuaranteedPaymentSpecificationTask
      summary: Request Bank Guaranteed Payment Specification Task
      description: Request Bank Guaranteed Payment Specification Task
      operationId: RequestBankGuaranteedPaymentSpecificationTask
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
        - $ref: '#/components/parameters/bankguaranteedpaymentspecificationtaskid'
      requestBody:
        $ref: '#/components/requestBodies/BankGuaranteedPaymentSpecificationTask'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteedPaymentSpecificationTask'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/BearerDocumentCreationandRegistrationTask/{bearerdocumentcreationandregistrationtaskid}/Request':
    put:
      tags:
        - BQ - BearerDocumentCreationandRegistrationTask
      summary: Request Bearer Document Creation and Registration Task
      description: Request Bearer Document Creation and Registration Task
      operationId: RequestBearerDocumentCreationandRegistrationTask
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
        - $ref: '#/components/parameters/bearerdocumentcreationandregistrationtaskid'
      requestBody:
        $ref: '#/components/requestBodies/BearerDocumentCreationandRegistrationTask'
      responses:
        '200':
          $ref: '#/components/responses/BearerDocumentCreationandRegistrationTask'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/CustomerPaymentTask/{customerpaymenttaskid}/Request':
    put:
      tags:
        - BQ - CustomerPaymentTask
      summary: Request Customer Payment Task
      description: Request Customer Payment Task
      operationId: RequestCustomerPaymentTask
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
        - $ref: '#/components/parameters/customerpaymenttaskid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerPaymentTask'
      responses:
        '200':
          $ref: '#/components/responses/CustomerPaymentTask'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/BankGuaranteedPaymentRemittanceTask/{bankguaranteedpaymentremittancetaskid}/Retrieve':
    get:
      tags:
        - BQ - BankGuaranteedPaymentRemittanceTask
      summary: Retrieve Bank Guaranteed Payment Remittance Task
      description: Retrieve Bank Guaranteed Payment Remittance Task
      operationId: RetrieveBankGuaranteedPaymentRemittanceTask
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
        - $ref: '#/components/parameters/bankguaranteedpaymentremittancetaskid'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteedPaymentRemittanceTask'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/BankGuaranteedPaymentSpecificationTask/{bankguaranteedpaymentspecificationtaskid}/Retrieve':
    get:
      tags:
        - BQ - BankGuaranteedPaymentSpecificationTask
      summary: Retrieve Bank Guaranteed Payment Specification Task
      description: Retrieve Bank Guaranteed Payment Specification Task
      operationId: RetrieveBankGuaranteedPaymentSpecificationTask
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
        - $ref: '#/components/parameters/bankguaranteedpaymentspecificationtaskid'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteedPaymentSpecificationTask'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/BearerDocumentCreationandRegistrationTask/{bearerdocumentcreationandregistrationtaskid}/Retrieve':
    get:
      tags:
        - BQ - BearerDocumentCreationandRegistrationTask
      summary: Retrieve Bearer Document Creation and Registration Task
      description: Retrieve Bearer Document Creation and Registration Task
      operationId: RetrieveBearerDocumentCreationandRegistrationTask
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
        - $ref: '#/components/parameters/bearerdocumentcreationandregistrationtaskid'
      responses:
        '200':
          $ref: '#/components/responses/BearerDocumentCreationandRegistrationTask'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/CustomerPaymentTask/{customerpaymenttaskid}/Retrieve':
    get:
      tags:
        - BQ - CustomerPaymentTask
      summary: Retrieve Customer Payment Task
      description: Retrieve Customer Payment Task
      operationId: RetrieveCustomerPaymentTask
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
        - $ref: '#/components/parameters/customerpaymenttaskid'
      responses:
        '200':
          $ref: '#/components/responses/CustomerPaymentTask'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/BankGuaranteedPaymentRemittanceTask/{bankguaranteedpaymentremittancetaskid}/Update':
    put:
      tags:
        - BQ - BankGuaranteedPaymentRemittanceTask
      summary: Update Bank Guaranteed Payment Remittance Task
      description: Update Bank Guaranteed Payment Remittance Task
      operationId: UpdateBankGuaranteedPaymentRemittanceTask
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
        - $ref: '#/components/parameters/bankguaranteedpaymentremittancetaskid'
      requestBody:
        $ref: '#/components/requestBodies/BankGuaranteedPaymentRemittanceTask'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteedPaymentRemittanceTask'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/BankGuaranteedPaymentSpecificationTask/{bankguaranteedpaymentspecificationtaskid}/Update':
    put:
      tags:
        - BQ - BankGuaranteedPaymentSpecificationTask
      summary: Update Bank Guaranteed Payment Specification Task
      description: Update Bank Guaranteed Payment Specification Task
      operationId: UpdateBankGuaranteedPaymentSpecificationTask
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
        - $ref: '#/components/parameters/bankguaranteedpaymentspecificationtaskid'
      requestBody:
        $ref: '#/components/requestBodies/BankGuaranteedPaymentSpecificationTask'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteedPaymentSpecificationTask'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/BearerDocumentCreationandRegistrationTask/{bearerdocumentcreationandregistrationtaskid}/Update':
    put:
      tags:
        - BQ - BearerDocumentCreationandRegistrationTask
      summary: Update Bearer Document Creation and Registration Task
      description: Update Bearer Document Creation and Registration Task
      operationId: UpdateBearerDocumentCreationandRegistrationTask
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
        - $ref: '#/components/parameters/bearerdocumentcreationandregistrationtaskid'
      requestBody:
        $ref: '#/components/requestBodies/BearerDocumentCreationandRegistrationTask'
      responses:
        '200':
          $ref: '#/components/responses/BearerDocumentCreationandRegistrationTask'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/CustomerPaymentTask/{customerpaymenttaskid}/Update':
    put:
      tags:
        - BQ - CustomerPaymentTask
      summary: Update Customer Payment Task
      description: Update Customer Payment Task
      operationId: UpdateCustomerPaymentTask
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
        - $ref: '#/components/parameters/customerpaymenttaskid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerPaymentTask'
      responses:
        '200':
          $ref: '#/components/responses/CustomerPaymentTask'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    condition:
      type: object
      properties:
        Condition:
          type: string
          description: "Condition is a premise upon which the fulfillment of an agreement depends \n\nGeneral and special arrangements, provisions, requirements, rules, specifications, and standards that form an integral part of an agreement or contract.\n\nRead more: http://www.businessdictionary.com/definition/terms-and-conditions.html\n\n"
          format: class
      description: The required status/situation prior to the execution of the task
    schedule:
      type: object
      properties:
        ScheduleType:
          type: string
          description: ''
          format: string
      description: The timing and key actions/milestones involved in completing the transaction task
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: ''
    businessservicetypevalues:
      type: object
      properties:
        Businessservicetypevalues:
          type: string
          description: ''
          format: enumeration
      description: ''
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: " ||\r\n|"
    businessservice:
      type: object
      properties:
        BusinessServiceName:
          $ref: '#/components/schemas/name'
        BusinessServiceType:
          $ref: '#/components/schemas/businessservicetypevalues'
        BusinessServiceDescription:
          $ref: '#/components/schemas/text'
      description: The Customer Payment Task specific Business Service
    value:
      type: object
      properties:
        Value:
          type: string
          description: 'A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)'
          format: datatype
      description: ''
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    datetime:
      type: object
      properties:
        DateTimeContent:
          type: string
          description: ''
          format: string
        TimeZoneCode:
          type: string
          description: ''
          format: string
        DaylightSavingIndicator:
          type: string
          description: ''
          format: string
      description: ''
    partyidentificationtypevalues:
      enum:
        - LEI(LegalEntityIdentifier)
        - TaxIdentificationNumber
        - NationalRegistrationNumber
        - RegistrationAuthorityIdentification
        - PassportNumber
        - AlienRegistrationNumber
        - TaxExemptIdentificationNumber
        - ForeignInvestmentIdentityNumber
        - DriverLicenseNumber
        - CorporateIdentification
        - SocialSecurityNumber
        - IdentityCardNumber
        - NationalRegistrationIdentificationNumber
        - Concat
      type: string
      description: ">\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `TaxIdentificationNumber` - \r\n* `NationalRegistrationNumber` - \r\n* `RegistrationAuthorityIdentification` - \r\n* `PassportNumber` - \r\n* `AlienRegistrationNumber` - \r\n* `TaxExemptIdentificationNumber` - \r\n* `ForeignInvestmentIdentityNumber` - \r\n* `DriverLicenseNumber` - \r\n* `CorporateIdentification` - \r\n* `SocialSecurityNumber` - \r\n* `IdentityCardNumber` - \r\n* `NationalRegistrationIdentificationNumber` - \r\n* `Concat` - \r\n"
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
      description: ''
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: " ||\r\n|"
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: An identifier that allows to uniquely refer to an instance of a transaction.
    transactiondatetypevalues:
      enum:
        - TransactionExecutedDate
        - TransactionFulfillmentDate
        - TransactionInitiatedDate
        - TransactionCancelledDate
        - TransactionApprovedDate
      type: string
      description: ">\r\n* `TransactionExecutedDate` - \r\n* `TransactionFulfillmentDate` - \r\n* `TransactionInitiatedDate` - \r\n* `TransactionCancelledDate` - \r\n* `TransactionApprovedDate` - \r\n"
    transactiondate:
      type: object
      properties:
        TransactionDate:
          $ref: '#/components/schemas/datetime'
        TransactionDateType:
          $ref: '#/components/schemas/transactiondatetypevalues'
      description: "The Date that the transaction has occurred or is planned to occur.\nA characteristic of transaction which refers to the LifecycleDate of transaction (e.g., initiated date, executed date, fulfillment date). "
    transactiontypevalues:
      enum:
        - FinancialTransaction
        - BusinessTransaction
        - BankingTransaction
        - AccountingTransaction
        - BookingTransaction
        - AllocationTransaction
        - DeliveryTransaction
        - ProductionTransaction
      type: string
      description: ">\r\n* `FinancialTransaction` - \r\n* `BusinessTransaction` - \r\n* `BankingTransaction` - \r\n* `AccountingTransaction` - \r\n* `BookingTransaction` - \r\n* `AllocationTransaction` - \r\n* `DeliveryTransaction` - \r\n* `ProductionTransaction` - \r\n"
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: ''
    transactionlifecyclestatustypevalues:
      enum:
        - ConfirmedTransaction
        - CancelledTransaction
        - ExecutedTransaction
        - InitiatedTransaction
        - NotifiedTransaction
        - SuspendedTransaction
        - CompletedTransaction
        - PendingTransaction
      type: string
      description: ">\r\n* `ConfirmedTransaction` - \r\n* `CancelledTransaction` - \r\n* `ExecutedTransaction` - \r\n* `InitiatedTransaction` - \r\n* `NotifiedTransaction` - \r\n* `SuspendedTransaction` - \r\n* `CompletedTransaction` - \r\n* `PendingTransaction` - \r\n"
    transactionlifecyclestatus:
      type: object
      properties:
        TransactionLifecycleStatus:
          $ref: '#/components/schemas/status'
        TransactionLifecycleStatusType:
          $ref: '#/components/schemas/transactionlifecyclestatustypevalues'
      description: "A characteristic of transaction which refers to the LifecycleStatus of transaction (e.g., initiated, executed, confirmed, cancelled, etc.)  ||\r\n|"
    transaction:
      type: object
      properties:
        TransactionIdentification:
          $ref: '#/components/schemas/identifier'
        TransactionDate:
          $ref: '#/components/schemas/transactiondate'
        TransactionType:
          $ref: '#/components/schemas/transactiontypevalues'
        TransactionDescription:
          $ref: '#/components/schemas/text'
        TransactionStatus:
          $ref: '#/components/schemas/transactionlifecyclestatus'
        TransactionName:
          $ref: '#/components/schemas/name'
      description: "Reference to Customer Payment Task ||\r\n|"
    task:
      type: object
      properties:
        Task:
          type: string
          format: datatype
      description: Reference to Customer Payment Task
    CustomerPaymentTask:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        BearerDocumentTransactionReference:
          $ref: '#/components/schemas/transaction'
        CustomerPaymentTaskReference:
          $ref: '#/components/schemas/task'
        CustomerPaymentTaskType:
          $ref: '#/components/schemas/text'
      description: The Customer Payment Task is a discrete action or task that is required in the execution of the Customer Payment Task
    BankGuaranteedPaymentRemittanceTask:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        BearerDocumentTransactionReference:
          $ref: '#/components/schemas/transaction'
        BankGuaranteedPaymentRemittanceTaskReference:
          $ref: '#/components/schemas/task'
        BankGuaranteedPaymentRemittanceTaskType:
          $ref: '#/components/schemas/text'
      description: The Customer Payment Task is a discrete action or task that is required in the execution of the Customer Payment Task
    BearerDocumentCreationandRegistrationTask:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        BearerDocumentTransactionReference:
          $ref: '#/components/schemas/transaction'
        BearerDocumentCreationandRegistrationTaskReference:
          $ref: '#/components/schemas/task'
        BearerDocumentCreationandRegistrationTaskType:
          $ref: '#/components/schemas/text'
      description: The Customer Payment Task is a discrete action or task that is required in the execution of the Customer Payment Task
    BankGuaranteedPaymentSpecificationTask:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        BearerDocumentTransactionReference:
          $ref: '#/components/schemas/transaction'
        BankGuaranteedPaymentSpecificationTaskReference:
          $ref: '#/components/schemas/task'
        BankGuaranteedPaymentSpecificationTaskType:
          $ref: '#/components/schemas/text'
      description: The Customer Payment Task is a discrete action or task that is required in the execution of the Customer Payment Task
    calendar:
      type: object
      properties:
        CalendarReference:
          type: string
        CalendarType:
          type: string
      description: ''
    feetransaction:
      type: object
      properties:
        FeeType:
          type: string
          description: Type of the applied Fee
          format: string
        AccruedFeeAmount:
          type: string
          description: 'Total fee charged '
          format: string
        FeeAmount:
          type: string
          description: "Amount of money paid for the charge\nAmount of money asked or paid for the charge (ISO20022)\n"
          format: string
      description: ''
    interesttransactiontypevalues:
      enum:
        - InterestAllocationTransaction
        - InterestPaymentTransaction
        - InterestAdjustmentTransaction
      type: string
      description: ">\r\n* `InterestAllocationTransaction` - \r\n* `InterestPaymentTransaction` - \r\n* `InterestAdjustmentTransaction` - \r\n"
    rate:
      type: object
      properties:
        RateValue:
          type: string
          description: ''
          format: string
        RateUnit:
          type: string
          description: "The unit of measure like Percentage or BPS\n\nBasis points (BPS) refers to a common unit of measure for interest rates and other percentages in finance."
          format: string
        RatePeriod:
          type: string
          description: ''
          format: string
        RateCapitalUnit:
          type: string
          description: ''
          format: string
      description: The actual interest rate used for the payment of the interest for the specified interest period. (ISO20022)
    interesttransaction:
      type: object
      properties:
        InterestTransactionAmount:
          type: string
          description: Amount of applied interest
          format: string
        InterestTransactionDescription:
          type: string
          description: Description of InterestTransaction
          format: string
        InterestTransactionType:
          $ref: '#/components/schemas/interesttransactiontypevalues'
        InterestRate:
          $ref: '#/components/schemas/rate'
        InteretType:
          type: string
          description: "Type of an applied Interest\n\nSpecifies the type of interest associated with a trade. (ISO20022)"
          format: string
      description: ''
    workproducttypevalues:
      enum:
        - File
        - ActivityLog
        - WorkingPaper
        - MeetingSchedule
        - Form
        - MeetingMinute
        - Document
      type: string
      description: ">\r\n* `File` - \r\n* `ActivityLog` - \r\n* `WorkingPaper` - \r\n* `MeetingSchedule` - \r\n* `Form` - \r\n* `MeetingMinute` - \r\n* `Document` - \r\n"
    workproduct:
      type: object
      properties:
        WorkProductType:
          $ref: '#/components/schemas/workproducttypevalues'
        WorkProductIdentifoication:
          type: string
          description: ''
          format: string
      description: ''
    BankDraftsOutcome:
      type: object
      properties:
        BankDraftsCalendar:
          $ref: '#/components/schemas/calendar'
        BankDraftsCounterparty:
          $ref: '#/components/schemas/involvedparty'
        BankDraftsDividend:
          $ref: '#/components/schemas/text'
        BankDraftsFees:
          $ref: '#/components/schemas/feetransaction'
        BankDraftsInterest:
          $ref: '#/components/schemas/interesttransaction'
        BankDraftsMargining:
          $ref: '#/components/schemas/text'
        BankDraftsNotionalPrincipal:
          $ref: '#/components/schemas/text'
        BankDraftsOptions:
          $ref: '#/components/schemas/text'
        BankDraftsRates:
          $ref: '#/components/schemas/rate'
        BankDraftsSettlement:
          $ref: '#/components/schemas/text'
        BankDraftsWorkProduct:
          $ref: '#/components/schemas/workproduct'
      description: The Customer Payment Task is a discrete action or task that is required in the execution of the Customer Payment Task
    servicetypevalues:
      enum:
        - AdministrativeService
        - BankingService
        - ITService
        - SystemService
        - BusinessService
      type: string
      description: ">\r\n* `AdministrativeService` - \r\n* `BankingService` - \r\n* `ITService` - \r\n* `SystemService` - \r\n* `BusinessService` - \r\n"
    servicetype:
      type: object
      properties:
        ServiceTypeName:
          $ref: '#/components/schemas/name'
        ServiceType:
          $ref: '#/components/schemas/servicetypevalues'
      description: ''
    service:
      type: object
      properties:
        ServiceName:
          $ref: '#/components/schemas/name'
        ServiceDescription:
          $ref: '#/components/schemas/text'
        ServiceType:
          $ref: '#/components/schemas/servicetype'
      description: "A selected optional business service as subject matter of Bearer Document Transaction ||\r\n|"
    actiontype:
      type: object
      properties:
        ActionType:
          type: string
        ActionTypeName:
          type: string
      description: "A Classification value that specifies type of transaction for this  Bearer Document Transaction ||\r\n|"
    financialdocumenttypevalues:
      enum:
        - Meteredserviceinvoice
        - Creditnoterelatedtofinancialadjustment
        - Debitnoterelatedtofinancialadjustment
        - Commercialinvoice
        - Creditnote
        - Debitnote
        - Hireinvoice
        - Selfbilledinvoice
        - Remittanceadvicemessage
        - Relatedpaymentinstruction
        - Commercialcontract
        - Foreignexchangedealreference
        - Statementofaccount
        - Dispatchadvice
        - Purchaseorder
        - Structuredcommunicationreference
        - Billoflading
        - Voucher
        - Accountreceivableopenitem
        - Tradeservicesutilitytransaction
        - Cashierreceipt
        - Customerreceipt
        - Journal
        - Salereceipt
      type: string
      description: ">\r\n* `Meteredserviceinvoice` - Document is an invoice claiming payment for the supply of metered services, for example gas or electricity supplied to a fixed meter.\r\n* `Creditnoterelatedtofinancialadjustment` - Document is a credit note for the final amount settled for a commercial transaction.\r\n* `Debitnoterelatedtofinancialadjustment` - Document is a debit note for the final amount settled for a commercial transaction.\r\n* `Commercialinvoice` - Document is an invoice.\r\n* `Creditnote` - Document is a credit note.\r\n* `Debitnote` - Document is a debit note.\r\n* `Hireinvoice` - Document is an invoice for the hiring of human resources or renting goods or equipment.\r\n* `Selfbilledinvoice` - Document is an invoice issued by the debtor.\r\n* `Remittanceadvicemessage` - Document is a remittance advice sent separately from the current transaction.\r\n* `Relatedpaymentinstruction` - Document is a linked payment instruction to which the current payment instruction is related, for example, in a cover scenario.\r\n* `Commercialcontract` - Document is an agreement between the parties, stipulating the terms and conditions of the delivery of goods or services.\r\n* `Foreignexchangedealreference` - Document is a pre-agreed or pre-arranged foreign exchange transaction to which the payment transaction refers.\r\n* `Statementofaccount` - Document is a statement of the transactions posted to the debtor's account at the supplier.\r\n* `Dispatchadvice` - Document is a dispatch advice.\r\n* `Purchaseorder` - Document is a purchase order.\r\n* `Structuredcommunicationreference` - Document is a structured communication reference provided by the creditor to identify the referred transaction.\r\n* `Billoflading` - Document is a shipping notice.\r\n* `Voucher` - Document is an electronic payment document.\r\n* `Accountreceivableopenitem` - Document is a payment that applies to a specific source document.\r\n* `Tradeservicesutilitytransaction` - Document is a transaction identifier as assigned by the Trade Services Utility.\r\n* `Cashierreceipt` - When the Sale system print the Cashier copy of the Payment receipt.\r\n* `Customerreceipt` - When the Sale System requires   the POI system to print the Customer receipt.\r\n* `Journal` - When the POI or the Sale System wants to store a message on the journal printer or electronic journal of the Sale Terminal (it is sometimes a Sale Logging/Journal Printer).\r\n* `Salereceipt` - When the Sale System requires the POI system to print the Sale receipt.\r\n"
    documentdatetimetypevalues:
      enum:
        - CreationDate
        - CapturingDate
        - VersionDate
        - ValueDate
        - IssueDate
      type: string
      description: ">\r\n* `CreationDate` - \r\n* `CapturingDate` - \r\n* `VersionDate` - \r\n* `ValueDate` - \r\n* `IssueDate` - \r\n"
    document:
      type: object
      properties:
        DocumentIdentifer:
          $ref: '#/components/schemas/identifier'
        DocumentVersion:
          type: string
          description: ''
          format: number
        DocumentType:
          $ref: '#/components/schemas/financialdocumenttypevalues'
        DocumentStatus:
          $ref: '#/components/schemas/status'
        DocumentDateTime:
          $ref: '#/components/schemas/datetime'
        DocumentName:
          $ref: '#/components/schemas/name'
        DocumentDateTimeType:
          $ref: '#/components/schemas/documentdatetimetypevalues'
        DocumentPurpose:
          $ref: '#/components/schemas/text'
        DocumentFormat:
          $ref: '#/components/schemas/text'
        DocumentSubject:
          $ref: '#/components/schemas/text'
        DocumentDescription:
          $ref: '#/components/schemas/text'
        DocumentValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
      description: " ||\r\n|"
    paymentinstructiontypevalues:
      enum:
        - MoneyTransferInstruction
        - DepositInstruction
        - WthdrawInstruction
        - StandingOrderInstruction
      type: string
      description: ">\r\n* `MoneyTransferInstruction` - \r\n* `DepositInstruction` - \r\n* `WthdrawInstruction` - \r\n* `StandingOrderInstruction` - \r\n"
    paymentinstructiondatetimetypevalues:
      enum:
        - RequestedExecutionDate
        - AcceptanceDateTime
        - CreationDate
      type: string
      description: ">\r\n* `RequestedExecutionDate` - \r\n* `AcceptanceDateTime` - \r\n* `CreationDate` - \r\n"
    paymentinstructiondatetime:
      type: object
      properties:
        PaymentInstructionDateTime:
          $ref: '#/components/schemas/datetime'
        PaymentInstructionDateTimeType:
          $ref: '#/components/schemas/paymentinstructiondatetimetypevalues'
      description: Type of critical dates of a payment transaction executed by the payment order like RequestedExecutionDate.
    priorityvaluetypes:
      enum:
        - Urgent
        - High
        - Normal
        - Low
      type: string
      description: ">\r\n* `Urgent` - Priority level is urgent (highest priority possible).\r\n* `High` - Priority level is high.\r\n* `Normal` - Priority level is normal.\r\n* `Low` - Priority level is low.\r\n"
    clearingchanneltypevalues:
      enum:
        - Realtimegrosssettlementsystem
        - Realtimenetsettlementsystem
        - Masspaymentnetsystem
        - Booktransfer
      type: string
      description: ">\r\n* `Realtimegrosssettlementsystem` - Clearing channel is a real-time gross settlement system.\r\n* `Realtimenetsettlementsystem` - Clearing channel is a real-time net settlement system.\r\n* `Masspaymentnetsystem` - Clearing channel is a mass payment net settlement system.\r\n* `Booktransfer` - Payment through internal book transfer.\r\n"
    paymentinstruction:
      type: object
      properties:
        PaymentInstructionDirectionType:
          $ref: '#/components/schemas/text'
        PaymentInstructionType:
          $ref: '#/components/schemas/paymentinstructiontypevalues'
        PaymentInstructionRequestedMechanism:
          $ref: '#/components/schemas/text'
        PaymentInstructionDateTime:
          $ref: '#/components/schemas/paymentinstructiondatetime'
        PaymentInstructionProcessingValidityTime:
          $ref: '#/components/schemas/datetimeperiod'
        PaymentInstructionPriority:
          $ref: '#/components/schemas/priorityvaluetypes'
        PaymentInstructionClearingChannel:
          $ref: '#/components/schemas/clearingchanneltypevalues'
      description: " ||\r\n|"
    BearerDocumentTransaction:
      type: object
      properties:
        BearerDocumentTransactionParameterType:
          $ref: '#/components/schemas/text'
        BearerDocumentTransactionSelectedOption:
          $ref: '#/components/schemas/service'
        BearerDocumentTransactionStatus:
          $ref: '#/components/schemas/transactionlifecyclestatus'
        BearerDocumentTransactionType:
          $ref: '#/components/schemas/actiontype'
        BearerDocumentTransactionReference:
          $ref: '#/components/schemas/transaction'
        BearerDocumentReference:
          $ref: '#/components/schemas/document'
        BearerDocumentInstructionReference:
          $ref: '#/components/schemas/paymentinstruction'
        BearerDocumentInvolvedPartyReference:
          $ref: '#/components/schemas/involvedparty'
      description: 'Execute a well-bounded financial transaction/task, typically involving largely automated/structured fulfillment processing within Bank Drafts. '
    ControlBearerDocumentTransactionRequest:
      type: object
      properties:
        BearerDocumentTransaction:
          type: object
          properties:
            BearerDocumentTransactionParameterType:
              $ref: '#/components/schemas/text'
            BearerDocumentTransactionSelectedOption:
              $ref: '#/components/schemas/service'
            BearerDocumentTransactionStatus:
              $ref: '#/components/schemas/transactionlifecyclestatus'
            BearerDocumentTransactionType:
              $ref: '#/components/schemas/actiontype'
            BearerDocumentTransactionReference:
              $ref: '#/components/schemas/transaction'
      description: 'Input: Control Bearer Document Transaction'
    ControlBearerDocumentTransactionResponse:
      type: object
      properties:
        BearerDocumentTransaction:
          type: object
          properties:
            BearerDocumentTransactionParameterType:
              $ref: '#/components/schemas/text'
            BearerDocumentTransactionSelectedOption:
              $ref: '#/components/schemas/service'
            BearerDocumentTransactionStatus:
              $ref: '#/components/schemas/transactionlifecyclestatus'
            BearerDocumentTransactionType:
              $ref: '#/components/schemas/actiontype'
            BearerDocumentTransactionReference:
              $ref: '#/components/schemas/transaction'
      description: 'Output: Control Bearer Document Transaction'
    ExchangeBearerDocumentTransactionRequest:
      type: object
      properties:
        BearerDocumentTransaction:
          type: object
          properties:
            BearerDocumentTransactionParameterType:
              $ref: '#/components/schemas/text'
            BearerDocumentTransactionSelectedOption:
              $ref: '#/components/schemas/service'
            BearerDocumentTransactionStatus:
              $ref: '#/components/schemas/transactionlifecyclestatus'
            BearerDocumentTransactionType:
              $ref: '#/components/schemas/actiontype'
            BearerDocumentTransactionReference:
              $ref: '#/components/schemas/transaction'
      description: 'Input: Exchange Bearer Document Transaction'
    ExchangeBearerDocumentTransactionResponse:
      type: object
      properties:
        BearerDocumentTransaction:
          type: object
          properties:
            BearerDocumentTransactionParameterType:
              $ref: '#/components/schemas/text'
            BearerDocumentTransactionSelectedOption:
              $ref: '#/components/schemas/service'
            BearerDocumentTransactionStatus:
              $ref: '#/components/schemas/transactionlifecyclestatus'
            BearerDocumentTransactionType:
              $ref: '#/components/schemas/actiontype'
            BearerDocumentTransactionReference:
              $ref: '#/components/schemas/transaction'
      description: 'Output: Exchange Bearer Document Transaction'
    ExecuteBearerDocumentTransactionRequest:
      type: object
      properties:
        BearerDocumentTransaction:
          type: object
          properties:
            BearerDocumentTransactionParameterType:
              $ref: '#/components/schemas/text'
            BearerDocumentTransactionSelectedOption:
              $ref: '#/components/schemas/service'
            BearerDocumentTransactionStatus:
              $ref: '#/components/schemas/transactionlifecyclestatus'
            BearerDocumentTransactionType:
              $ref: '#/components/schemas/actiontype'
            BearerDocumentTransactionReference:
              $ref: '#/components/schemas/transaction'
      description: 'Input: Execute Bearer Document Transaction'
    ExecuteBearerDocumentTransactionResponse:
      type: object
      properties:
        BearerDocumentTransaction:
          type: object
          properties:
            BearerDocumentTransactionParameterType:
              $ref: '#/components/schemas/text'
            BearerDocumentTransactionSelectedOption:
              $ref: '#/components/schemas/service'
            BearerDocumentTransactionStatus:
              $ref: '#/components/schemas/transactionlifecyclestatus'
            BearerDocumentTransactionType:
              $ref: '#/components/schemas/actiontype'
            BearerDocumentTransactionReference:
              $ref: '#/components/schemas/transaction'
      description: 'Output: Execute Bearer Document Transaction'
    InitiateBearerDocumentTransactionRequest:
      type: object
      properties:
        BearerDocumentTransaction:
          type: object
          properties:
            BearerDocumentTransactionParameterType:
              $ref: '#/components/schemas/text'
            BearerDocumentTransactionSelectedOption:
              $ref: '#/components/schemas/service'
            BearerDocumentTransactionStatus:
              $ref: '#/components/schemas/transactionlifecyclestatus'
            BearerDocumentTransactionType:
              $ref: '#/components/schemas/actiontype'
            BearerDocumentTransactionReference:
              $ref: '#/components/schemas/transaction'
      description: 'Input: Initiate Bearer Document Transaction'
    InitiateBearerDocumentTransactionResponse:
      type: object
      properties:
        BearerDocumentTransaction:
          type: object
          properties:
            BearerDocumentTransactionParameterType:
              $ref: '#/components/schemas/text'
            BearerDocumentTransactionSelectedOption:
              $ref: '#/components/schemas/service'
            BearerDocumentTransactionStatus:
              $ref: '#/components/schemas/transactionlifecyclestatus'
            BearerDocumentTransactionType:
              $ref: '#/components/schemas/actiontype'
            BearerDocumentTransactionReference:
              $ref: '#/components/schemas/transaction'
      description: 'Output: Initiate Bearer Document Transaction'
    NotifyBearerDocumentTransactionRequest:
      type: object
      properties:
        BearerDocumentTransaction:
          type: object
          properties:
            BearerDocumentTransactionParameterType:
              $ref: '#/components/schemas/text'
            BearerDocumentTransactionSelectedOption:
              $ref: '#/components/schemas/service'
            BearerDocumentTransactionStatus:
              $ref: '#/components/schemas/transactionlifecyclestatus'
            BearerDocumentTransactionType:
              $ref: '#/components/schemas/actiontype'
            BearerDocumentTransactionReference:
              $ref: '#/components/schemas/transaction'
      description: 'Input: Notify Bearer Document Transaction'
    NotifyBearerDocumentTransactionResponse:
      type: object
      properties:
        BearerDocumentTransaction:
          type: object
          properties:
            BearerDocumentTransactionParameterType:
              $ref: '#/components/schemas/text'
            BearerDocumentTransactionSelectedOption:
              $ref: '#/components/schemas/service'
            BearerDocumentTransactionStatus:
              $ref: '#/components/schemas/transactionlifecyclestatus'
            BearerDocumentTransactionType:
              $ref: '#/components/schemas/actiontype'
            BearerDocumentTransactionReference:
              $ref: '#/components/schemas/transaction'
      description: 'Output: Notify Bearer Document Transaction'
    RequestBearerDocumentTransactionRequest:
      type: object
      properties:
        BearerDocumentTransaction:
          type: object
          properties:
            BearerDocumentTransactionParameterType:
              $ref: '#/components/schemas/text'
            BearerDocumentTransactionSelectedOption:
              $ref: '#/components/schemas/service'
            BearerDocumentTransactionStatus:
              $ref: '#/components/schemas/transactionlifecyclestatus'
            BearerDocumentTransactionType:
              $ref: '#/components/schemas/actiontype'
            BearerDocumentTransactionReference:
              $ref: '#/components/schemas/transaction'
      description: 'Input: Request Bearer Document Transaction'
    RequestBearerDocumentTransactionResponse:
      type: object
      properties:
        BearerDocumentTransaction:
          type: object
          properties:
            BearerDocumentTransactionParameterType:
              $ref: '#/components/schemas/text'
            BearerDocumentTransactionSelectedOption:
              $ref: '#/components/schemas/service'
            BearerDocumentTransactionStatus:
              $ref: '#/components/schemas/transactionlifecyclestatus'
            BearerDocumentTransactionType:
              $ref: '#/components/schemas/actiontype'
            BearerDocumentTransactionReference:
              $ref: '#/components/schemas/transaction'
      description: 'Output: Request Bearer Document Transaction'
    RetrieveBearerDocumentTransactionRequest:
      type: object
      properties:
        BearerDocumentTransaction:
          type: object
          properties:
            BearerDocumentTransactionParameterType:
              $ref: '#/components/schemas/text'
            BearerDocumentTransactionSelectedOption:
              $ref: '#/components/schemas/service'
            BearerDocumentTransactionStatus:
              $ref: '#/components/schemas/transactionlifecyclestatus'
            BearerDocumentTransactionType:
              $ref: '#/components/schemas/actiontype'
            BearerDocumentTransactionReference:
              $ref: '#/components/schemas/transaction'
      description: 'Input: Retrieve Bearer Document Transaction'
    RetrieveBearerDocumentTransactionResponse:
      type: object
      properties:
        BearerDocumentTransaction:
          type: object
          properties:
            BearerDocumentTransactionParameterType:
              $ref: '#/components/schemas/text'
            BearerDocumentTransactionSelectedOption:
              $ref: '#/components/schemas/service'
            BearerDocumentTransactionStatus:
              $ref: '#/components/schemas/transactionlifecyclestatus'
            BearerDocumentTransactionType:
              $ref: '#/components/schemas/actiontype'
            BearerDocumentTransactionReference:
              $ref: '#/components/schemas/transaction'
      description: 'Output: Retrieve Bearer Document Transaction'
    UpdateBearerDocumentTransactionRequest:
      type: object
      properties:
        BearerDocumentTransaction:
          type: object
          properties:
            BearerDocumentTransactionParameterType:
              $ref: '#/components/schemas/text'
            BearerDocumentTransactionSelectedOption:
              $ref: '#/components/schemas/service'
            BearerDocumentTransactionStatus:
              $ref: '#/components/schemas/transactionlifecyclestatus'
            BearerDocumentTransactionType:
              $ref: '#/components/schemas/actiontype'
            BearerDocumentTransactionReference:
              $ref: '#/components/schemas/transaction'
      description: 'Input: Update Bearer Document Transaction'
    UpdateBearerDocumentTransactionResponse:
      type: object
      properties:
        BearerDocumentTransaction:
          type: object
          properties:
            BearerDocumentTransactionParameterType:
              $ref: '#/components/schemas/text'
            BearerDocumentTransactionSelectedOption:
              $ref: '#/components/schemas/service'
            BearerDocumentTransactionStatus:
              $ref: '#/components/schemas/transactionlifecyclestatus'
            BearerDocumentTransactionType:
              $ref: '#/components/schemas/actiontype'
            BearerDocumentTransactionReference:
              $ref: '#/components/schemas/transaction'
      description: 'Output: Update Bearer Document Transaction'
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ControlBearerDocumentTransactionResponse:
      description: ControlBearerDocumentTransactionResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ControlBearerDocumentTransactionResponse'
    ExchangeBearerDocumentTransactionResponse:
      description: ExchangeBearerDocumentTransactionResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExchangeBearerDocumentTransactionResponse'
    ExecuteBearerDocumentTransactionResponse:
      description: ExecuteBearerDocumentTransactionResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExecuteBearerDocumentTransactionResponse'
    InitiateBearerDocumentTransactionResponse:
      description: InitiateBearerDocumentTransactionResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateBearerDocumentTransactionResponse'
    NotifyBearerDocumentTransactionResponse:
      description: NotifyBearerDocumentTransactionResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotifyBearerDocumentTransactionResponse'
    RequestBearerDocumentTransactionResponse:
      description: RequestBearerDocumentTransactionResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestBearerDocumentTransactionResponse'
    RetrieveBearerDocumentTransactionResponse:
      description: RetrieveBearerDocumentTransactionResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveBearerDocumentTransactionResponse'
    UpdateBearerDocumentTransactionResponse:
      description: UpdateBearerDocumentTransactionResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateBearerDocumentTransactionResponse'
    BankGuaranteedPaymentRemittanceTask:
      description: BankGuaranteedPaymentRemittanceTask
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BankGuaranteedPaymentRemittanceTask'
    BankGuaranteedPaymentSpecificationTask:
      description: BankGuaranteedPaymentSpecificationTask
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BankGuaranteedPaymentSpecificationTask'
    BearerDocumentCreationandRegistrationTask:
      description: BearerDocumentCreationandRegistrationTask
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BearerDocumentCreationandRegistrationTask'
    CustomerPaymentTask:
      description: CustomerPaymentTask
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerPaymentTask'
  parameters:
    bankdraftsid:
      name: bankdraftsid
      in: path
      required: true
      style: simple
      schema:
        type: string
    bankguaranteedpaymentremittancetaskid:
      name: bankguaranteedpaymentremittancetaskid
      in: path
      required: true
      style: simple
      schema:
        type: string
    bankguaranteedpaymentspecificationtaskid:
      name: bankguaranteedpaymentspecificationtaskid
      in: path
      required: true
      style: simple
      schema:
        type: string
    bearerdocumentcreationandregistrationtaskid:
      name: bearerdocumentcreationandregistrationtaskid
      in: path
      required: true
      style: simple
      schema:
        type: string
    customerpaymenttaskid:
      name: customerpaymenttaskid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    ControlBearerDocumentTransactionRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ControlBearerDocumentTransactionRequest'
      required: true
    ExchangeBearerDocumentTransactionRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExchangeBearerDocumentTransactionRequest'
      required: true
    ExecuteBearerDocumentTransactionRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExecuteBearerDocumentTransactionRequest'
      required: true
    InitiateBearerDocumentTransactionRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateBearerDocumentTransactionRequest'
      required: true
    RequestBearerDocumentTransactionRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestBearerDocumentTransactionRequest'
      required: true
    UpdateBearerDocumentTransactionRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateBearerDocumentTransactionRequest'
      required: true
    BankGuaranteedPaymentRemittanceTask:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BankGuaranteedPaymentRemittanceTask'
      required: true
    BankGuaranteedPaymentSpecificationTask:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BankGuaranteedPaymentSpecificationTask'
      required: true
    BearerDocumentCreationandRegistrationTask:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BearerDocumentCreationandRegistrationTask'
      required: true
    CustomerPaymentTask:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerPaymentTask'
      required: true