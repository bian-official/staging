openapi: 3.0.1
info:
  title: Stock Lending and Repos
  description: This Service Domain supports the bank offering tri-party repo transactions made between its customers to support their short term capital management requirements
  contact:
    name: BIAN
    url: https://bian.org
  version: 11.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/StockLendingandRepos/11.0.0
paths:
  '/StockLendingandRepos/{stocklendingandreposid}/Control':
    put:
      tags:
        - CR - RepoTransaction
      summary: Control Repo Transaction
      description: Control Repo Transaction
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/stocklendingandreposid'
      requestBody:
        $ref: '#/components/requestBodies/ControlRepoTransactionRequest'
      responses:
        '200':
          $ref: '#/components/responses/ControlRepoTransactionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/StockLendingandRepos/{stocklendingandreposid}/Exchange':
    put:
      tags:
        - CR - RepoTransaction
      summary: Exchange Repo Transaction
      description: Exchange Repo Transaction
      operationId: Exchange
      parameters:
        - $ref: '#/components/parameters/stocklendingandreposid'
      requestBody:
        $ref: '#/components/requestBodies/ExchangeRepoTransactionRequest'
      responses:
        '200':
          $ref: '#/components/responses/ExchangeRepoTransactionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/StockLendingandRepos/{stocklendingandreposid}/Execute':
    put:
      tags:
        - CR - RepoTransaction
      summary: Execute Repo Transaction
      description: Execute Repo Transaction
      operationId: Execute
      parameters:
        - $ref: '#/components/parameters/stocklendingandreposid'
      requestBody:
        $ref: '#/components/requestBodies/ExecuteRepoTransactionRequest'
      responses:
        '200':
          $ref: '#/components/responses/ExecuteRepoTransactionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /StockLendingandRepos/Initiate:
    post:
      tags:
        - CR - RepoTransaction
      summary: Initiate Repo Transaction
      description: Initiate Repo Transaction
      operationId: Initiate
      requestBody:
        $ref: '#/components/requestBodies/InitiateRepoTransactionRequest'
      responses:
        '200':
          $ref: '#/components/responses/InitiateRepoTransactionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/StockLendingandRepos/{stocklendingandreposid}/Notify':
    get:
      tags:
        - CR - RepoTransaction
      summary: Notify Repo Transaction
      description: Notify Repo Transaction
      operationId: Notify
      parameters:
        - $ref: '#/components/parameters/stocklendingandreposid'
      responses:
        '200':
          $ref: '#/components/responses/NotifyRepoTransactionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/StockLendingandRepos/{stocklendingandreposid}/Request':
    put:
      tags:
        - CR - RepoTransaction
      summary: Request Repo Transaction
      description: Request Repo Transaction
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/stocklendingandreposid'
      requestBody:
        $ref: '#/components/requestBodies/RequestRepoTransactionRequest'
      responses:
        '200':
          $ref: '#/components/responses/RequestRepoTransactionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/StockLendingandRepos/{stocklendingandreposid}/Retrieve':
    get:
      tags:
        - CR - RepoTransaction
      summary: Retrieve Repo Transaction
      description: Retrieve Repo Transaction
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/stocklendingandreposid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveRepoTransactionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/StockLendingandRepos/{stocklendingandreposid}/Update':
    put:
      tags:
        - CR - RepoTransaction
      summary: Update Repo Transaction
      description: Update Repo Transaction
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/stocklendingandreposid'
      requestBody:
        $ref: '#/components/requestBodies/UpdateRepoTransactionRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateRepoTransactionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/StockLendingandRepos/{stocklendingandreposid}/RepoTransactionCashTransferTask/{repotransactioncashtransfertaskid}/Exchange':
    put:
      tags:
        - BQ - RepoTransactionCashTransferTask
      summary: Exchange Repo Transaction Cash Transfer Task
      description: Exchange Repo Transaction Cash Transfer Task
      operationId: ExchangeRepoTransactionCashTransferTask
      parameters:
        - $ref: '#/components/parameters/stocklendingandreposid'
        - $ref: '#/components/parameters/repotransactioncashtransfertaskid'
      requestBody:
        $ref: '#/components/requestBodies/RepoTransactionCashTransferTask'
      responses:
        '200':
          $ref: '#/components/responses/RepoTransactionCashTransferTask'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/StockLendingandRepos/{stocklendingandreposid}/RepoTransactionInitiationTask/{repotransactioninitiationtaskid}/Exchange':
    put:
      tags:
        - BQ - RepoTransactionInitiationTask
      summary: Exchange Repo Transaction Initiation Task
      description: Exchange Repo Transaction Initiation Task
      operationId: ExchangeRepoTransactionInitiationTask
      parameters:
        - $ref: '#/components/parameters/stocklendingandreposid'
        - $ref: '#/components/parameters/repotransactioninitiationtaskid'
      requestBody:
        $ref: '#/components/requestBodies/RepoTransactionInitiationTask'
      responses:
        '200':
          $ref: '#/components/responses/RepoTransactionInitiationTask'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/StockLendingandRepos/{stocklendingandreposid}/RepoTransactionSecurityTransferTask/{repotransactionsecuritytransfertaskid}/Exchange':
    put:
      tags:
        - BQ - RepoTransactionSecurityTransferTask
      summary: Exchange Repo Transaction Security Transfer Task
      description: Exchange Repo Transaction Security Transfer Task
      operationId: ExchangeRepoTransactionSecurityTransferTask
      parameters:
        - $ref: '#/components/parameters/stocklendingandreposid'
        - $ref: '#/components/parameters/repotransactionsecuritytransfertaskid'
      requestBody:
        $ref: '#/components/requestBodies/RepoTransactionSecurityTransferTask'
      responses:
        '200':
          $ref: '#/components/responses/RepoTransactionSecurityTransferTask'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/StockLendingandRepos/{stocklendingandreposid}/RepoTransactionCashTransferTask/{repotransactioncashtransfertaskid}/Execute':
    put:
      tags:
        - BQ - RepoTransactionCashTransferTask
      summary: Execute Repo Transaction Cash Transfer Task
      description: Execute Repo Transaction Cash Transfer Task
      operationId: ExecuteRepoTransactionCashTransferTask
      parameters:
        - $ref: '#/components/parameters/stocklendingandreposid'
        - $ref: '#/components/parameters/repotransactioncashtransfertaskid'
      requestBody:
        $ref: '#/components/requestBodies/RepoTransactionCashTransferTask'
      responses:
        '200':
          $ref: '#/components/responses/RepoTransactionCashTransferTask'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/StockLendingandRepos/{stocklendingandreposid}/RepoTransactionInitiationTask/{repotransactioninitiationtaskid}/Execute':
    put:
      tags:
        - BQ - RepoTransactionInitiationTask
      summary: Execute Repo Transaction Initiation Task
      description: Execute Repo Transaction Initiation Task
      operationId: ExecuteRepoTransactionInitiationTask
      parameters:
        - $ref: '#/components/parameters/stocklendingandreposid'
        - $ref: '#/components/parameters/repotransactioninitiationtaskid'
      requestBody:
        $ref: '#/components/requestBodies/RepoTransactionInitiationTask'
      responses:
        '200':
          $ref: '#/components/responses/RepoTransactionInitiationTask'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/StockLendingandRepos/{stocklendingandreposid}/RepoTransactionSecurityTransferTask/{repotransactionsecuritytransfertaskid}/Execute':
    put:
      tags:
        - BQ - RepoTransactionSecurityTransferTask
      summary: Execute Repo Transaction Security Transfer Task
      description: Execute Repo Transaction Security Transfer Task
      operationId: ExecuteRepoTransactionSecurityTransferTask
      parameters:
        - $ref: '#/components/parameters/stocklendingandreposid'
        - $ref: '#/components/parameters/repotransactionsecuritytransfertaskid'
      requestBody:
        $ref: '#/components/requestBodies/RepoTransactionSecurityTransferTask'
      responses:
        '200':
          $ref: '#/components/responses/RepoTransactionSecurityTransferTask'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/StockLendingandRepos/{stocklendingandreposid}/RepoTransactionCashTransferTask/Initiate':
    post:
      tags:
        - BQ - RepoTransactionCashTransferTask
      summary: Initiate Repo Transaction Cash Transfer Task
      description: Initiate Repo Transaction Cash Transfer Task
      operationId: InitiateRepoTransactionCashTransferTask
      parameters:
        - $ref: '#/components/parameters/stocklendingandreposid'
      requestBody:
        $ref: '#/components/requestBodies/RepoTransactionCashTransferTask'
      responses:
        '200':
          $ref: '#/components/responses/RepoTransactionCashTransferTask'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/StockLendingandRepos/{stocklendingandreposid}/RepoTransactionInitiationTask/Initiate':
    post:
      tags:
        - BQ - RepoTransactionInitiationTask
      summary: Initiate Repo Transaction Initiation Task
      description: Initiate Repo Transaction Initiation Task
      operationId: InitiateRepoTransactionInitiationTask
      parameters:
        - $ref: '#/components/parameters/stocklendingandreposid'
      requestBody:
        $ref: '#/components/requestBodies/RepoTransactionInitiationTask'
      responses:
        '200':
          $ref: '#/components/responses/RepoTransactionInitiationTask'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/StockLendingandRepos/{stocklendingandreposid}/RepoTransactionSecurityTransferTask/Initiate':
    post:
      tags:
        - BQ - RepoTransactionSecurityTransferTask
      summary: Initiate Repo Transaction Security Transfer Task
      description: Initiate Repo Transaction Security Transfer Task
      operationId: InitiateRepoTransactionSecurityTransferTask
      parameters:
        - $ref: '#/components/parameters/stocklendingandreposid'
      requestBody:
        $ref: '#/components/requestBodies/RepoTransactionSecurityTransferTask'
      responses:
        '200':
          $ref: '#/components/responses/RepoTransactionSecurityTransferTask'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/StockLendingandRepos/{stocklendingandreposid}/RepoTransactionCashTransferTask/{repotransactioncashtransfertaskid}/Notify':
    get:
      tags:
        - BQ - RepoTransactionCashTransferTask
      summary: Notify Repo Transaction Cash Transfer Task
      description: Notify Repo Transaction Cash Transfer Task
      operationId: NotifyRepoTransactionCashTransferTask
      parameters:
        - $ref: '#/components/parameters/stocklendingandreposid'
        - $ref: '#/components/parameters/repotransactioncashtransfertaskid'
      responses:
        '200':
          $ref: '#/components/responses/RepoTransactionCashTransferTask'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/StockLendingandRepos/{stocklendingandreposid}/RepoTransactionInitiationTask/{repotransactioninitiationtaskid}/Notify':
    get:
      tags:
        - BQ - RepoTransactionInitiationTask
      summary: Notify Repo Transaction Initiation Task
      description: Notify Repo Transaction Initiation Task
      operationId: NotifyRepoTransactionInitiationTask
      parameters:
        - $ref: '#/components/parameters/stocklendingandreposid'
        - $ref: '#/components/parameters/repotransactioninitiationtaskid'
      responses:
        '200':
          $ref: '#/components/responses/RepoTransactionInitiationTask'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/StockLendingandRepos/{stocklendingandreposid}/RepoTransactionSecurityTransferTask/{repotransactionsecuritytransfertaskid}/Notify':
    get:
      tags:
        - BQ - RepoTransactionSecurityTransferTask
      summary: Notify Repo Transaction Security Transfer Task
      description: Notify Repo Transaction Security Transfer Task
      operationId: NotifyRepoTransactionSecurityTransferTask
      parameters:
        - $ref: '#/components/parameters/stocklendingandreposid'
        - $ref: '#/components/parameters/repotransactionsecuritytransfertaskid'
      responses:
        '200':
          $ref: '#/components/responses/RepoTransactionSecurityTransferTask'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/StockLendingandRepos/{stocklendingandreposid}/RepoTransactionCashTransferTask/{repotransactioncashtransfertaskid}/Request':
    put:
      tags:
        - BQ - RepoTransactionCashTransferTask
      summary: Request Repo Transaction Cash Transfer Task
      description: Request Repo Transaction Cash Transfer Task
      operationId: RequestRepoTransactionCashTransferTask
      parameters:
        - $ref: '#/components/parameters/stocklendingandreposid'
        - $ref: '#/components/parameters/repotransactioncashtransfertaskid'
      requestBody:
        $ref: '#/components/requestBodies/RepoTransactionCashTransferTask'
      responses:
        '200':
          $ref: '#/components/responses/RepoTransactionCashTransferTask'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/StockLendingandRepos/{stocklendingandreposid}/RepoTransactionInitiationTask/{repotransactioninitiationtaskid}/Request':
    put:
      tags:
        - BQ - RepoTransactionInitiationTask
      summary: Request Repo Transaction Initiation Task
      description: Request Repo Transaction Initiation Task
      operationId: RequestRepoTransactionInitiationTask
      parameters:
        - $ref: '#/components/parameters/stocklendingandreposid'
        - $ref: '#/components/parameters/repotransactioninitiationtaskid'
      requestBody:
        $ref: '#/components/requestBodies/RepoTransactionInitiationTask'
      responses:
        '200':
          $ref: '#/components/responses/RepoTransactionInitiationTask'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/StockLendingandRepos/{stocklendingandreposid}/RepoTransactionSecurityTransferTask/{repotransactionsecuritytransfertaskid}/Request':
    put:
      tags:
        - BQ - RepoTransactionSecurityTransferTask
      summary: Request Repo Transaction Security Transfer Task
      description: Request Repo Transaction Security Transfer Task
      operationId: RequestRepoTransactionSecurityTransferTask
      parameters:
        - $ref: '#/components/parameters/stocklendingandreposid'
        - $ref: '#/components/parameters/repotransactionsecuritytransfertaskid'
      requestBody:
        $ref: '#/components/requestBodies/RepoTransactionSecurityTransferTask'
      responses:
        '200':
          $ref: '#/components/responses/RepoTransactionSecurityTransferTask'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/StockLendingandRepos/{stocklendingandreposid}/RepoTransactionCashTransferTask/{repotransactioncashtransfertaskid}/Retrieve':
    get:
      tags:
        - BQ - RepoTransactionCashTransferTask
      summary: Retrieve Repo Transaction Cash Transfer Task
      description: Retrieve Repo Transaction Cash Transfer Task
      operationId: RetrieveRepoTransactionCashTransferTask
      parameters:
        - $ref: '#/components/parameters/stocklendingandreposid'
        - $ref: '#/components/parameters/repotransactioncashtransfertaskid'
      responses:
        '200':
          $ref: '#/components/responses/RepoTransactionCashTransferTask'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/StockLendingandRepos/{stocklendingandreposid}/RepoTransactionInitiationTask/{repotransactioninitiationtaskid}/Retrieve':
    get:
      tags:
        - BQ - RepoTransactionInitiationTask
      summary: Retrieve Repo Transaction Initiation Task
      description: Retrieve Repo Transaction Initiation Task
      operationId: RetrieveRepoTransactionInitiationTask
      parameters:
        - $ref: '#/components/parameters/stocklendingandreposid'
        - $ref: '#/components/parameters/repotransactioninitiationtaskid'
      responses:
        '200':
          $ref: '#/components/responses/RepoTransactionInitiationTask'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/StockLendingandRepos/{stocklendingandreposid}/RepoTransactionSecurityTransferTask/{repotransactionsecuritytransfertaskid}/Retrieve':
    get:
      tags:
        - BQ - RepoTransactionSecurityTransferTask
      summary: Retrieve Repo Transaction Security Transfer Task
      description: Retrieve Repo Transaction Security Transfer Task
      operationId: RetrieveRepoTransactionSecurityTransferTask
      parameters:
        - $ref: '#/components/parameters/stocklendingandreposid'
        - $ref: '#/components/parameters/repotransactionsecuritytransfertaskid'
      responses:
        '200':
          $ref: '#/components/responses/RepoTransactionSecurityTransferTask'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/StockLendingandRepos/{stocklendingandreposid}/RepoTransactionCashTransferTask/{repotransactioncashtransfertaskid}/Update':
    put:
      tags:
        - BQ - RepoTransactionCashTransferTask
      summary: Update Repo Transaction Cash Transfer Task
      description: Update Repo Transaction Cash Transfer Task
      operationId: UpdateRepoTransactionCashTransferTask
      parameters:
        - $ref: '#/components/parameters/stocklendingandreposid'
        - $ref: '#/components/parameters/repotransactioncashtransfertaskid'
      requestBody:
        $ref: '#/components/requestBodies/RepoTransactionCashTransferTask'
      responses:
        '200':
          $ref: '#/components/responses/RepoTransactionCashTransferTask'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/StockLendingandRepos/{stocklendingandreposid}/RepoTransactionInitiationTask/{repotransactioninitiationtaskid}/Update':
    put:
      tags:
        - BQ - RepoTransactionInitiationTask
      summary: Update Repo Transaction Initiation Task
      description: Update Repo Transaction Initiation Task
      operationId: UpdateRepoTransactionInitiationTask
      parameters:
        - $ref: '#/components/parameters/stocklendingandreposid'
        - $ref: '#/components/parameters/repotransactioninitiationtaskid'
      requestBody:
        $ref: '#/components/requestBodies/RepoTransactionInitiationTask'
      responses:
        '200':
          $ref: '#/components/responses/RepoTransactionInitiationTask'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/StockLendingandRepos/{stocklendingandreposid}/RepoTransactionSecurityTransferTask/{repotransactionsecuritytransfertaskid}/Update':
    put:
      tags:
        - BQ - RepoTransactionSecurityTransferTask
      summary: Update Repo Transaction Security Transfer Task
      description: Update Repo Transaction Security Transfer Task
      operationId: UpdateRepoTransactionSecurityTransferTask
      parameters:
        - $ref: '#/components/parameters/stocklendingandreposid'
        - $ref: '#/components/parameters/repotransactionsecuritytransfertaskid'
      requestBody:
        $ref: '#/components/requestBodies/RepoTransactionSecurityTransferTask'
      responses:
        '200':
          $ref: '#/components/responses/RepoTransactionSecurityTransferTask'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    condition:
      type: object
      properties:
        Condition:
          type: string
          description: "Condition is a premise upon which the fulfillment of an agreement depends \n\nGeneral and special arrangements, provisions, requirements, rules, specifications, and standards that form an integral part of an agreement or contract.\n\nRead more: http://www.businessdictionary.com/definition/terms-and-conditions.html\n\n"
          format: class
      description: The required status/situation prior to the execution of the task
    schedule:
      type: object
      properties:
        ScheduleType:
          type: string
          description: ''
          format: string
      description: The timing and key actions/milestones involved in completing the transaction task
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: ''
    businessservicetypevalues:
      type: object
      properties:
        Businessservicetypevalues:
          type: string
          description: ''
          format: enumeration
      description: ''
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: " ||\r\n|"
    businessservice:
      type: object
      properties:
        BusinessServiceName:
          $ref: '#/components/schemas/name'
        BusinessServiceType:
          $ref: '#/components/schemas/businessservicetypevalues'
        BusinessServiceDescription:
          $ref: '#/components/schemas/text'
      description: The Repo Transaction Cash Transfer Task specific Business Service
    value:
      type: object
      properties:
        Value:
          type: string
          description: 'A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)'
          format: datatype
      description: ''
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    datetime:
      type: object
      properties:
        DateTimeContent:
          type: string
          description: ''
          format: string
        TimeZoneCode:
          type: string
          description: ''
          format: string
        DaylightSavingIndicator:
          type: string
          description: ''
          format: string
      description: ''
    partyidentificationtypevalues:
      enum:
        - LEI(LegalEntityIdentifier)
        - TaxIdentificationNumber
        - NationalRegistrationNumber
        - RegistrationAuthorityIdentification
        - PassportNumber
        - AlienRegistrationNumber
        - TaxExemptIdentificationNumber
        - ForeignInvestmentIdentityNumber
        - DriverLicenseNumber
        - CorporateIdentification
        - SocialSecurityNumber
        - IdentityCardNumber
        - NationalRegistrationIdentificationNumber
        - Concat
      type: string
      description: ">\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `TaxIdentificationNumber` - \r\n* `NationalRegistrationNumber` - \r\n* `RegistrationAuthorityIdentification` - \r\n* `PassportNumber` - \r\n* `AlienRegistrationNumber` - \r\n* `TaxExemptIdentificationNumber` - \r\n* `ForeignInvestmentIdentityNumber` - \r\n* `DriverLicenseNumber` - \r\n* `CorporateIdentification` - \r\n* `SocialSecurityNumber` - \r\n* `IdentityCardNumber` - \r\n* `NationalRegistrationIdentificationNumber` - \r\n* `Concat` - \r\n"
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
      description: ''
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: " ||\r\n|"
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: An identifier that allows to uniquely refer to an instance of a transaction.
    transactiondatetypevalues:
      enum:
        - TransactionExecutedDate
        - TransactionFulfillmentDate
        - TransactionInitiatedDate
        - TransactionCancelledDate
        - TransactionApprovedDate
      type: string
      description: ">\r\n* `TransactionExecutedDate` - \r\n* `TransactionFulfillmentDate` - \r\n* `TransactionInitiatedDate` - \r\n* `TransactionCancelledDate` - \r\n* `TransactionApprovedDate` - \r\n"
    transactiondate:
      type: object
      properties:
        TransactionDate:
          $ref: '#/components/schemas/datetime'
        TransactionDateType:
          $ref: '#/components/schemas/transactiondatetypevalues'
      description: "The Date that the transaction has occurred or is planned to occur.\nA characteristic of transaction which refers to the LifecycleDate of transaction (e.g., initiated date, executed date, fulfillment date). "
    transactiontypevalues:
      enum:
        - FinancialTransaction
        - BusinessTransaction
        - BankingTransaction
        - AccountingTransaction
        - BookingTransaction
        - AllocationTransaction
        - DeliveryTransaction
        - ProductionTransaction
      type: string
      description: ">\r\n* `FinancialTransaction` - \r\n* `BusinessTransaction` - \r\n* `BankingTransaction` - \r\n* `AccountingTransaction` - \r\n* `BookingTransaction` - \r\n* `AllocationTransaction` - \r\n* `DeliveryTransaction` - \r\n* `ProductionTransaction` - \r\n"
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: ''
    transactionlifecyclestatustypevalues:
      enum:
        - ConfirmedTransaction
        - CancelledTransaction
        - ExecutedTransaction
        - InitiatedTransaction
        - NotifiedTransaction
        - SuspendedTransaction
        - CompletedTransaction
        - PendingTransaction
      type: string
      description: ">\r\n* `ConfirmedTransaction` - \r\n* `CancelledTransaction` - \r\n* `ExecutedTransaction` - \r\n* `InitiatedTransaction` - \r\n* `NotifiedTransaction` - \r\n* `SuspendedTransaction` - \r\n* `CompletedTransaction` - \r\n* `PendingTransaction` - \r\n"
    transactionlifecyclestatus:
      type: object
      properties:
        TransactionLifecycleStatus:
          $ref: '#/components/schemas/status'
        TransactionLifecycleStatusType:
          $ref: '#/components/schemas/transactionlifecyclestatustypevalues'
      description: "A characteristic of transaction which refers to the LifecycleStatus of transaction (e.g., initiated, executed, confirmed, cancelled, etc.)  ||\r\n|"
    transaction:
      type: object
      properties:
        TransactionIdentification:
          $ref: '#/components/schemas/identifier'
        TransactionDate:
          $ref: '#/components/schemas/transactiondate'
        TransactionType:
          $ref: '#/components/schemas/transactiontypevalues'
        TransactionDescription:
          $ref: '#/components/schemas/text'
        TransactionStatus:
          $ref: '#/components/schemas/transactionlifecyclestatus'
        TransactionName:
          $ref: '#/components/schemas/name'
      description: Reference to Repo Transaction Cash Transfer Task
    task:
      type: object
      properties:
        Task:
          type: string
          format: datatype
      description: Reference to Repo Transaction Cash Transfer Task
    RepoTransactionCashTransferTask:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        RepoTransactionReference:
          $ref: '#/components/schemas/transaction'
        RepoTransactionCashTransferTaskReference:
          $ref: '#/components/schemas/task'
        RepoTransactionCashTransferTaskType:
          $ref: '#/components/schemas/text'
      description: The Repo Transaction Cash Transfer Task is a discrete action or task that is required in the execution of the Repo Transaction Cash Transfer Task
    RepoTransactionSecurityTransferTask:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        RepoTransactionReference:
          $ref: '#/components/schemas/transaction'
        RepoTransactionSecurityTransferTaskReference:
          $ref: '#/components/schemas/task'
        RepoTransactionSecurityTransferTaskType:
          $ref: '#/components/schemas/text'
      description: The Repo Transaction Cash Transfer Task is a discrete action or task that is required in the execution of the Repo Transaction Cash Transfer Task
    RepoTransactionInitiationTask:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        RepoTransactionReference:
          $ref: '#/components/schemas/transaction'
        RepoTransactionInitiationTaskReference:
          $ref: '#/components/schemas/task'
        RepoTransactionInitiationTaskType:
          $ref: '#/components/schemas/text'
      description: The Repo Transaction Cash Transfer Task is a discrete action or task that is required in the execution of the Repo Transaction Cash Transfer Task
    calendar:
      type: object
      properties:
        CalendarReference:
          type: string
        CalendarType:
          type: string
      description: ''
    feetransaction:
      type: object
      properties:
        FeeType:
          type: string
          description: Type of the applied Fee
          format: string
        AccruedFeeAmount:
          type: string
          description: 'Total fee charged '
          format: string
        FeeAmount:
          type: string
          description: "Amount of money paid for the charge\nAmount of money asked or paid for the charge (ISO20022)\n"
          format: string
      description: ''
    interesttransactiontypevalues:
      enum:
        - InterestAllocationTransaction
        - InterestPaymentTransaction
        - InterestAdjustmentTransaction
      type: string
      description: ">\r\n* `InterestAllocationTransaction` - \r\n* `InterestPaymentTransaction` - \r\n* `InterestAdjustmentTransaction` - \r\n"
    rate:
      type: object
      properties:
        RateValue:
          type: string
          description: ''
          format: string
        RateUnit:
          type: string
          description: "The unit of measure like Percentage or BPS\n\nBasis points (BPS) refers to a common unit of measure for interest rates and other percentages in finance."
          format: string
        RatePeriod:
          type: string
          description: ''
          format: string
        RateCapitalUnit:
          type: string
          description: ''
          format: string
      description: The actual interest rate used for the payment of the interest for the specified interest period. (ISO20022)
    interesttransaction:
      type: object
      properties:
        InterestTransactionAmount:
          type: string
          description: Amount of applied interest
          format: string
        InterestTransactionDescription:
          type: string
          description: Description of InterestTransaction
          format: string
        InterestTransactionType:
          $ref: '#/components/schemas/interesttransactiontypevalues'
        InterestRate:
          $ref: '#/components/schemas/rate'
        InteretType:
          type: string
          description: "Type of an applied Interest\n\nSpecifies the type of interest associated with a trade. (ISO20022)"
          format: string
      description: ''
    workproducttypevalues:
      enum:
        - File
        - ActivityLog
        - WorkingPaper
        - MeetingSchedule
        - Form
        - MeetingMinute
        - Document
      type: string
      description: ">\r\n* `File` - \r\n* `ActivityLog` - \r\n* `WorkingPaper` - \r\n* `MeetingSchedule` - \r\n* `Form` - \r\n* `MeetingMinute` - \r\n* `Document` - \r\n"
    workproduct:
      type: object
      properties:
        WorkProductType:
          $ref: '#/components/schemas/workproducttypevalues'
        WorkProductIdentifoication:
          type: string
          description: ''
          format: string
      description: ''
    StockLendingandReposOutcome:
      type: object
      properties:
        StockLendingandReposCalendar:
          $ref: '#/components/schemas/calendar'
        StockLendingandReposCounterparty:
          $ref: '#/components/schemas/involvedparty'
        StockLendingandReposDividend:
          $ref: '#/components/schemas/text'
        StockLendingandReposFees:
          $ref: '#/components/schemas/feetransaction'
        StockLendingandReposInterest:
          $ref: '#/components/schemas/interesttransaction'
        StockLendingandReposMargining:
          $ref: '#/components/schemas/text'
        StockLendingandReposNotionalPrincipal:
          $ref: '#/components/schemas/text'
        StockLendingandReposOptions:
          $ref: '#/components/schemas/text'
        StockLendingandReposRates:
          $ref: '#/components/schemas/rate'
        StockLendingandReposSettlement:
          $ref: '#/components/schemas/text'
        StockLendingandReposWorkProduct:
          $ref: '#/components/schemas/workproduct'
      description: The Repo Transaction Cash Transfer Task is a discrete action or task that is required in the execution of the Repo Transaction Cash Transfer Task
    servicetypevalues:
      enum:
        - AdministrativeService
        - BankingService
        - ITService
        - SystemService
        - BusinessService
      type: string
      description: ">\r\n* `AdministrativeService` - \r\n* `BankingService` - \r\n* `ITService` - \r\n* `SystemService` - \r\n* `BusinessService` - \r\n"
    servicetype:
      type: object
      properties:
        ServiceTypeName:
          $ref: '#/components/schemas/name'
        ServiceType:
          $ref: '#/components/schemas/servicetypevalues'
      description: ''
    service:
      type: object
      properties:
        ServiceName:
          $ref: '#/components/schemas/name'
        ServiceDescription:
          $ref: '#/components/schemas/text'
        ServiceType:
          $ref: '#/components/schemas/servicetype'
      description: "A selected optional business service as subject matter of Repo Transaction ||\r\n|"
    repurchasetypevalues:
      enum:
        - Swap
        - Repurchasecall
        - Pairoff
        - Reporate
        - Rollover
        - Topup
        - Withdrawal
        - Principalexposureadjustment
      type: string
      description: ">\r\n* `Swap` - Relates to a Swap/Substitution.\r\n* `Repurchasecall` - Relates to a change in the closing or maturity date.\r\n* `Pairoff` - Relates to a pair-off: the transaction is paired off and netted against one or more previous transactions.\r\n* `Reporate` - Is part of a pair-off.\r\n* `Rollover` - Relates to a repo rollover of a position extending the closing or maturity date.\r\n* `Topup` - Relates to a repo rollover of a position extending the closing or maturity date.\r\n* `Withdrawal` - Relates to a repo rollover of a position extending the closing or maturity date.\r\n* `Principalexposureadjustment` - Relates to a principal adjustment.\r\n ||\r\n|"
    repotransaction:
      type: object
      properties:
        RepoTransaction:
          type: string
          description: A Transaction that is the result of fulfillment of Repo Arrangement
          format: class
      description: "An unique reference to an item or an occurrence of Repo Transaction ||\r\n|"
    repurchaseagreementtypevalues:
      enum:
        - SpecificCollateral
        - GeneralCollateral
      type: string
      description: ">\r\n* `SpecificCollateral` - Repurchase agreement where a single, pre-defined, financial instrument is sold and repurchased. (IS020022)\r\n* `GeneralCollateral` - Repurchase agreement where the agreement allows for the sale and repurchase of any of a selection of assets from a pool of eligible assets. (ISO20022)\r\n"
    repurchaseagreement:
      type: object
      properties:
        RepurchaseAgreementType:
          $ref: '#/components/schemas/repurchaseagreementtypevalues'
      description: " ||\r\n|"
    repurchaseagreementinvolvementtypevalues:
      enum:
        - Investor/Lender
        - Borrower
        - Dealer
        - Tri-PartyAgent
      type: string
      description: ">\r\n* `Investor/Lender` - \r\n* `Borrower` - \r\n* `Dealer` - \r\n* `Tri-PartyAgent` - A tri-party agent, acts as an intermediary between the two parties to the repo to facilitate services like collateral selection, payment and settlement, custody and management during the life of the transaction.\r\n ||\r\n|"
    currencycode:
      type: object
      properties:
        Currencycode:
          type: string
          description: "A code identifying a currency according to ISO-4217.\nA currency is a system of money in general use in a particular country.\n\nCode allocated to a currency, by a maintenance agency, under an international identification scheme as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\". Valid currency codes are registered with the ISO 4217 Maintenance Agency, and consist of three contiguous letters. (ISO20022)\n\n"
          format: datatype
      description: ''
    amount:
      type: object
      properties:
        AmountValue:
          type: string
          description: ''
          format: string
        AmountCurrency:
          $ref: '#/components/schemas/currencycode'
        DecimalPointPosition:
          type: string
          description: "Decimal point position starts calulating from the right\n"
          format: string
      description: ''
    repoarrangement:
      type: object
      properties:
        RepurchaseRate:
          $ref: '#/components/schemas/rate'
        TerminationDateTime:
          $ref: '#/components/schemas/datetime'
        RepurchaseAmount:
          $ref: '#/components/schemas/amount'
        RepurchaseType:
          $ref: '#/components/schemas/repurchasetypevalues'
      description: " ||\r\n|"
    RepoTransaction:
      type: object
      properties:
        RepoTransactionParameterType:
          $ref: '#/components/schemas/text'
        RepoTransactionSelectedOption:
          $ref: '#/components/schemas/service'
        RepoTransactionStatus:
          $ref: '#/components/schemas/transactionlifecyclestatus'
        RepoTransactionType:
          $ref: '#/components/schemas/repurchasetypevalues'
        RepoTransactionReference:
          $ref: '#/components/schemas/repotransaction'
        RepurchaseAgreementReference:
          $ref: '#/components/schemas/repurchaseagreement'
        RepurchaseAgreementInvolvedPartyReference:
          $ref: '#/components/schemas/involvedparty'
        RepurchaseAgreementInvolvementType:
          $ref: '#/components/schemas/repurchaseagreementinvolvementtypevalues'
        RepurchaseArrangementReference:
          $ref: '#/components/schemas/repoarrangement'
      description: 'Execute a well-bounded financial transaction/task, typically involving largely automated/structured fulfillment processing within Stock Lending and Repos. '
    ControlRepoTransactionRequest:
      type: object
      properties:
        RepoTransaction:
          type: object
          properties:
            RepoTransactionParameterType:
              $ref: '#/components/schemas/text'
            RepoTransactionSelectedOption:
              $ref: '#/components/schemas/service'
            RepoTransactionStatus:
              $ref: '#/components/schemas/transactionlifecyclestatus'
            RepoTransactionType:
              $ref: '#/components/schemas/repurchasetypevalues'
            RepoTransactionReference:
              $ref: '#/components/schemas/repotransaction'
      description: 'Input: Control Repo Transaction'
    ControlRepoTransactionResponse:
      type: object
      properties:
        RepoTransaction:
          type: object
          properties:
            RepoTransactionParameterType:
              $ref: '#/components/schemas/text'
            RepoTransactionSelectedOption:
              $ref: '#/components/schemas/service'
            RepoTransactionStatus:
              $ref: '#/components/schemas/transactionlifecyclestatus'
            RepoTransactionType:
              $ref: '#/components/schemas/repurchasetypevalues'
            RepoTransactionReference:
              $ref: '#/components/schemas/repotransaction'
      description: 'Output: Control Repo Transaction'
    ExchangeRepoTransactionRequest:
      type: object
      properties:
        RepoTransaction:
          type: object
          properties:
            RepoTransactionParameterType:
              $ref: '#/components/schemas/text'
            RepoTransactionSelectedOption:
              $ref: '#/components/schemas/service'
            RepoTransactionStatus:
              $ref: '#/components/schemas/transactionlifecyclestatus'
            RepoTransactionType:
              $ref: '#/components/schemas/repurchasetypevalues'
            RepoTransactionReference:
              $ref: '#/components/schemas/repotransaction'
      description: 'Input: Exchange Repo Transaction'
    ExchangeRepoTransactionResponse:
      type: object
      properties:
        RepoTransaction:
          type: object
          properties:
            RepoTransactionParameterType:
              $ref: '#/components/schemas/text'
            RepoTransactionSelectedOption:
              $ref: '#/components/schemas/service'
            RepoTransactionStatus:
              $ref: '#/components/schemas/transactionlifecyclestatus'
            RepoTransactionType:
              $ref: '#/components/schemas/repurchasetypevalues'
            RepoTransactionReference:
              $ref: '#/components/schemas/repotransaction'
      description: 'Output: Exchange Repo Transaction'
    ExecuteRepoTransactionRequest:
      type: object
      properties:
        RepoTransaction:
          type: object
          properties:
            RepoTransactionParameterType:
              $ref: '#/components/schemas/text'
            RepoTransactionSelectedOption:
              $ref: '#/components/schemas/service'
            RepoTransactionStatus:
              $ref: '#/components/schemas/transactionlifecyclestatus'
            RepoTransactionType:
              $ref: '#/components/schemas/repurchasetypevalues'
            RepoTransactionReference:
              $ref: '#/components/schemas/repotransaction'
      description: 'Input: Execute Repo Transaction'
    ExecuteRepoTransactionResponse:
      type: object
      properties:
        RepoTransaction:
          type: object
          properties:
            RepoTransactionParameterType:
              $ref: '#/components/schemas/text'
            RepoTransactionSelectedOption:
              $ref: '#/components/schemas/service'
            RepoTransactionStatus:
              $ref: '#/components/schemas/transactionlifecyclestatus'
            RepoTransactionType:
              $ref: '#/components/schemas/repurchasetypevalues'
            RepoTransactionReference:
              $ref: '#/components/schemas/repotransaction'
      description: 'Output: Execute Repo Transaction'
    InitiateRepoTransactionRequest:
      type: object
      properties:
        RepoTransaction:
          type: object
          properties:
            RepoTransactionParameterType:
              $ref: '#/components/schemas/text'
            RepoTransactionSelectedOption:
              $ref: '#/components/schemas/service'
            RepoTransactionStatus:
              $ref: '#/components/schemas/transactionlifecyclestatus'
            RepoTransactionType:
              $ref: '#/components/schemas/repurchasetypevalues'
            RepoTransactionReference:
              $ref: '#/components/schemas/repotransaction'
      description: 'Input: Initiate Repo Transaction'
    InitiateRepoTransactionResponse:
      type: object
      properties:
        RepoTransaction:
          type: object
          properties:
            RepoTransactionParameterType:
              $ref: '#/components/schemas/text'
            RepoTransactionSelectedOption:
              $ref: '#/components/schemas/service'
            RepoTransactionStatus:
              $ref: '#/components/schemas/transactionlifecyclestatus'
            RepoTransactionType:
              $ref: '#/components/schemas/repurchasetypevalues'
            RepoTransactionReference:
              $ref: '#/components/schemas/repotransaction'
      description: 'Output: Initiate Repo Transaction'
    NotifyRepoTransactionRequest:
      type: object
      properties:
        RepoTransaction:
          type: object
          properties:
            RepoTransactionParameterType:
              $ref: '#/components/schemas/text'
            RepoTransactionSelectedOption:
              $ref: '#/components/schemas/service'
            RepoTransactionStatus:
              $ref: '#/components/schemas/transactionlifecyclestatus'
            RepoTransactionType:
              $ref: '#/components/schemas/repurchasetypevalues'
            RepoTransactionReference:
              $ref: '#/components/schemas/repotransaction'
      description: 'Input: Notify Repo Transaction'
    NotifyRepoTransactionResponse:
      type: object
      properties:
        RepoTransaction:
          type: object
          properties:
            RepoTransactionParameterType:
              $ref: '#/components/schemas/text'
            RepoTransactionSelectedOption:
              $ref: '#/components/schemas/service'
            RepoTransactionStatus:
              $ref: '#/components/schemas/transactionlifecyclestatus'
            RepoTransactionType:
              $ref: '#/components/schemas/repurchasetypevalues'
            RepoTransactionReference:
              $ref: '#/components/schemas/repotransaction'
      description: 'Output: Notify Repo Transaction'
    RequestRepoTransactionRequest:
      type: object
      properties:
        RepoTransaction:
          type: object
          properties:
            RepoTransactionParameterType:
              $ref: '#/components/schemas/text'
            RepoTransactionSelectedOption:
              $ref: '#/components/schemas/service'
            RepoTransactionStatus:
              $ref: '#/components/schemas/transactionlifecyclestatus'
            RepoTransactionType:
              $ref: '#/components/schemas/repurchasetypevalues'
            RepoTransactionReference:
              $ref: '#/components/schemas/repotransaction'
      description: 'Input: Request Repo Transaction'
    RequestRepoTransactionResponse:
      type: object
      properties:
        RepoTransaction:
          type: object
          properties:
            RepoTransactionParameterType:
              $ref: '#/components/schemas/text'
            RepoTransactionSelectedOption:
              $ref: '#/components/schemas/service'
            RepoTransactionStatus:
              $ref: '#/components/schemas/transactionlifecyclestatus'
            RepoTransactionType:
              $ref: '#/components/schemas/repurchasetypevalues'
            RepoTransactionReference:
              $ref: '#/components/schemas/repotransaction'
      description: 'Output: Request Repo Transaction'
    RetrieveRepoTransactionRequest:
      type: object
      properties:
        RepoTransaction:
          type: object
          properties:
            RepoTransactionParameterType:
              $ref: '#/components/schemas/text'
            RepoTransactionSelectedOption:
              $ref: '#/components/schemas/service'
            RepoTransactionStatus:
              $ref: '#/components/schemas/transactionlifecyclestatus'
            RepoTransactionType:
              $ref: '#/components/schemas/repurchasetypevalues'
            RepoTransactionReference:
              $ref: '#/components/schemas/repotransaction'
      description: 'Input: Retrieve Repo Transaction'
    RetrieveRepoTransactionResponse:
      type: object
      properties:
        RepoTransaction:
          type: object
          properties:
            RepoTransactionParameterType:
              $ref: '#/components/schemas/text'
            RepoTransactionSelectedOption:
              $ref: '#/components/schemas/service'
            RepoTransactionStatus:
              $ref: '#/components/schemas/transactionlifecyclestatus'
            RepoTransactionType:
              $ref: '#/components/schemas/repurchasetypevalues'
            RepoTransactionReference:
              $ref: '#/components/schemas/repotransaction'
      description: 'Output: Retrieve Repo Transaction'
    UpdateRepoTransactionRequest:
      type: object
      properties:
        RepoTransaction:
          type: object
          properties:
            RepoTransactionParameterType:
              $ref: '#/components/schemas/text'
            RepoTransactionSelectedOption:
              $ref: '#/components/schemas/service'
            RepoTransactionStatus:
              $ref: '#/components/schemas/transactionlifecyclestatus'
            RepoTransactionType:
              $ref: '#/components/schemas/repurchasetypevalues'
            RepoTransactionReference:
              $ref: '#/components/schemas/repotransaction'
      description: 'Input: Update Repo Transaction'
    UpdateRepoTransactionResponse:
      type: object
      properties:
        RepoTransaction:
          type: object
          properties:
            RepoTransactionParameterType:
              $ref: '#/components/schemas/text'
            RepoTransactionSelectedOption:
              $ref: '#/components/schemas/service'
            RepoTransactionStatus:
              $ref: '#/components/schemas/transactionlifecyclestatus'
            RepoTransactionType:
              $ref: '#/components/schemas/repurchasetypevalues'
            RepoTransactionReference:
              $ref: '#/components/schemas/repotransaction'
      description: 'Output: Update Repo Transaction'
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ControlRepoTransactionResponse:
      description: ControlRepoTransactionResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ControlRepoTransactionResponse'
    ExchangeRepoTransactionResponse:
      description: ExchangeRepoTransactionResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExchangeRepoTransactionResponse'
    ExecuteRepoTransactionResponse:
      description: ExecuteRepoTransactionResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExecuteRepoTransactionResponse'
    InitiateRepoTransactionResponse:
      description: InitiateRepoTransactionResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateRepoTransactionResponse'
    NotifyRepoTransactionResponse:
      description: NotifyRepoTransactionResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotifyRepoTransactionResponse'
    RequestRepoTransactionResponse:
      description: RequestRepoTransactionResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestRepoTransactionResponse'
    RetrieveRepoTransactionResponse:
      description: RetrieveRepoTransactionResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveRepoTransactionResponse'
    UpdateRepoTransactionResponse:
      description: UpdateRepoTransactionResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateRepoTransactionResponse'
    RepoTransactionCashTransferTask:
      description: RepoTransactionCashTransferTask
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RepoTransactionCashTransferTask'
    RepoTransactionInitiationTask:
      description: RepoTransactionInitiationTask
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RepoTransactionInitiationTask'
    RepoTransactionSecurityTransferTask:
      description: RepoTransactionSecurityTransferTask
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RepoTransactionSecurityTransferTask'
  parameters:
    stocklendingandreposid:
      name: stocklendingandreposid
      in: path
      required: true
      style: simple
      schema:
        type: string
    repotransactioncashtransfertaskid:
      name: repotransactioncashtransfertaskid
      in: path
      required: true
      style: simple
      schema:
        type: string
    repotransactioninitiationtaskid:
      name: repotransactioninitiationtaskid
      in: path
      required: true
      style: simple
      schema:
        type: string
    repotransactionsecuritytransfertaskid:
      name: repotransactionsecuritytransfertaskid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    ControlRepoTransactionRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ControlRepoTransactionRequest'
      required: true
    ExchangeRepoTransactionRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExchangeRepoTransactionRequest'
      required: true
    ExecuteRepoTransactionRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExecuteRepoTransactionRequest'
      required: true
    InitiateRepoTransactionRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateRepoTransactionRequest'
      required: true
    RequestRepoTransactionRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestRepoTransactionRequest'
      required: true
    UpdateRepoTransactionRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateRepoTransactionRequest'
      required: true
    RepoTransactionCashTransferTask:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RepoTransactionCashTransferTask'
      required: true
    RepoTransactionInitiationTask:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RepoTransactionInitiationTask'
      required: true
    RepoTransactionSecurityTransferTask:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RepoTransactionSecurityTransferTask'
      required: true