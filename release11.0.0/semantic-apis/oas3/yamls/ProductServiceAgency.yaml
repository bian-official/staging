openapi: 3.0.1
info:
  title: Product Service Agency
  description: This Service Domain establishes and maintains contractual arrangements with product and service agencies
  contact:
    name: BIAN
    url: https://bian.org
  version: 11.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/ProductServiceAgency/11.0.0
paths:
  '/ProductServiceAgency/{productserviceagencyid}/Control':
    put:
      tags:
        - CR - ServiceProviderAgreement
      summary: Control Service Provider Agreement
      description: Control Service Provider Agreement
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/productserviceagencyid'
      requestBody:
        $ref: '#/components/requestBodies/ServiceProviderAgreement'
      responses:
        '200':
          $ref: '#/components/responses/ServiceProviderAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /ProductServiceAgency/Evaluate:
    post:
      tags:
        - CR - ServiceProviderAgreement
      summary: Evaluate Service Provider Agreement
      description: Evaluate Service Provider Agreement
      operationId: Evaluate
      requestBody:
        $ref: '#/components/requestBodies/ServiceProviderAgreement'
      responses:
        '200':
          $ref: '#/components/responses/ServiceProviderAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductServiceAgency/{productserviceagencyid}/Exchange':
    put:
      tags:
        - CR - ServiceProviderAgreement
      summary: Exchange Service Provider Agreement
      description: Exchange Service Provider Agreement
      operationId: Exchange
      parameters:
        - $ref: '#/components/parameters/productserviceagencyid'
      requestBody:
        $ref: '#/components/requestBodies/ServiceProviderAgreement'
      responses:
        '200':
          $ref: '#/components/responses/ServiceProviderAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductServiceAgency/{productserviceagencyid}/Grant':
    put:
      tags:
        - CR - ServiceProviderAgreement
      summary: Grant Service Provider Agreement
      description: Grant Service Provider Agreement
      operationId: Grant
      parameters:
        - $ref: '#/components/parameters/productserviceagencyid'
      requestBody:
        $ref: '#/components/requestBodies/ServiceProviderAgreement'
      responses:
        '200':
          $ref: '#/components/responses/ServiceProviderAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductServiceAgency/{productserviceagencyid}/Notify':
    get:
      tags:
        - CR - ServiceProviderAgreement
      summary: Notify Service Provider Agreement
      description: Notify Service Provider Agreement
      operationId: Notify
      parameters:
        - $ref: '#/components/parameters/productserviceagencyid'
      responses:
        '200':
          $ref: '#/components/responses/ServiceProviderAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductServiceAgency/{productserviceagencyid}/Request':
    put:
      tags:
        - CR - ServiceProviderAgreement
      summary: Request Service Provider Agreement
      description: Request Service Provider Agreement
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/productserviceagencyid'
      requestBody:
        $ref: '#/components/requestBodies/ServiceProviderAgreement'
      responses:
        '200':
          $ref: '#/components/responses/ServiceProviderAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductServiceAgency/{productserviceagencyid}/Retrieve':
    get:
      tags:
        - CR - ServiceProviderAgreement
      summary: Retrieve Service Provider Agreement
      description: Retrieve Service Provider Agreement
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/productserviceagencyid'
      responses:
        '200':
          $ref: '#/components/responses/ServiceProviderAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductServiceAgency/{productserviceagencyid}/Update':
    put:
      tags:
        - CR - ServiceProviderAgreement
      summary: Update Service Provider Agreement
      description: Update Service Provider Agreement
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/productserviceagencyid'
      requestBody:
        $ref: '#/components/requestBodies/ServiceProviderAgreement'
      responses:
        '200':
          $ref: '#/components/responses/ServiceProviderAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductServiceAgency/{productserviceagencyid}/LegalTerm/{legaltermid}/Evaluate':
    post:
      tags:
        - BQ - LegalTerm
      summary: Evaluate Legal Term
      description: Evaluate Legal Term
      operationId: EvaluateLegalTerm
      parameters:
        - $ref: '#/components/parameters/productserviceagencyid'
        - $ref: '#/components/parameters/legaltermid'
      requestBody:
        $ref: '#/components/requestBodies/LegalTerm'
      responses:
        '200':
          $ref: '#/components/responses/LegalTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductServiceAgency/{productserviceagencyid}/PolicyTerm/{policytermid}/Evaluate':
    post:
      tags:
        - BQ - PolicyTerm
      summary: Evaluate Policy Term
      description: Evaluate Policy Term
      operationId: EvaluatePolicyTerm
      parameters:
        - $ref: '#/components/parameters/productserviceagencyid'
        - $ref: '#/components/parameters/policytermid'
      requestBody:
        $ref: '#/components/requestBodies/PolicyTerm'
      responses:
        '200':
          $ref: '#/components/responses/PolicyTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductServiceAgency/{productserviceagencyid}/RegulatoryTerm/{regulatorytermid}/Evaluate':
    post:
      tags:
        - BQ - RegulatoryTerm
      summary: Evaluate Regulatory Term
      description: Evaluate Regulatory Term
      operationId: EvaluateRegulatoryTerm
      parameters:
        - $ref: '#/components/parameters/productserviceagencyid'
        - $ref: '#/components/parameters/regulatorytermid'
      requestBody:
        $ref: '#/components/requestBodies/RegulatoryTerm'
      responses:
        '200':
          $ref: '#/components/responses/RegulatoryTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductServiceAgency/{productserviceagencyid}/LegalTerm/{legaltermid}/Exchange':
    put:
      tags:
        - BQ - LegalTerm
      summary: Exchange Legal Term
      description: Exchange Legal Term
      operationId: ExchangeLegalTerm
      parameters:
        - $ref: '#/components/parameters/productserviceagencyid'
        - $ref: '#/components/parameters/legaltermid'
      requestBody:
        $ref: '#/components/requestBodies/LegalTerm'
      responses:
        '200':
          $ref: '#/components/responses/LegalTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductServiceAgency/{productserviceagencyid}/PolicyTerm/{policytermid}/Exchange':
    put:
      tags:
        - BQ - PolicyTerm
      summary: Exchange Policy Term
      description: Exchange Policy Term
      operationId: ExchangePolicyTerm
      parameters:
        - $ref: '#/components/parameters/productserviceagencyid'
        - $ref: '#/components/parameters/policytermid'
      requestBody:
        $ref: '#/components/requestBodies/PolicyTerm'
      responses:
        '200':
          $ref: '#/components/responses/PolicyTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductServiceAgency/{productserviceagencyid}/RegulatoryTerm/{regulatorytermid}/Exchange':
    put:
      tags:
        - BQ - RegulatoryTerm
      summary: Exchange Regulatory Term
      description: Exchange Regulatory Term
      operationId: ExchangeRegulatoryTerm
      parameters:
        - $ref: '#/components/parameters/productserviceagencyid'
        - $ref: '#/components/parameters/regulatorytermid'
      requestBody:
        $ref: '#/components/requestBodies/RegulatoryTerm'
      responses:
        '200':
          $ref: '#/components/responses/RegulatoryTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductServiceAgency/{productserviceagencyid}/LegalTerm/{legaltermid}/Notify':
    get:
      tags:
        - BQ - LegalTerm
      summary: Notify Legal Term
      description: Notify Legal Term
      operationId: NotifyLegalTerm
      parameters:
        - $ref: '#/components/parameters/productserviceagencyid'
        - $ref: '#/components/parameters/legaltermid'
      responses:
        '200':
          $ref: '#/components/responses/LegalTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductServiceAgency/{productserviceagencyid}/PolicyTerm/{policytermid}/Notify':
    get:
      tags:
        - BQ - PolicyTerm
      summary: Notify Policy Term
      description: Notify Policy Term
      operationId: NotifyPolicyTerm
      parameters:
        - $ref: '#/components/parameters/productserviceagencyid'
        - $ref: '#/components/parameters/policytermid'
      responses:
        '200':
          $ref: '#/components/responses/PolicyTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductServiceAgency/{productserviceagencyid}/RegulatoryTerm/{regulatorytermid}/Notify':
    get:
      tags:
        - BQ - RegulatoryTerm
      summary: Notify Regulatory Term
      description: Notify Regulatory Term
      operationId: NotifyRegulatoryTerm
      parameters:
        - $ref: '#/components/parameters/productserviceagencyid'
        - $ref: '#/components/parameters/regulatorytermid'
      responses:
        '200':
          $ref: '#/components/responses/RegulatoryTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductServiceAgency/{productserviceagencyid}/LegalTerm/{legaltermid}/Request':
    put:
      tags:
        - BQ - LegalTerm
      summary: Request Legal Term
      description: Request Legal Term
      operationId: RequestLegalTerm
      parameters:
        - $ref: '#/components/parameters/productserviceagencyid'
        - $ref: '#/components/parameters/legaltermid'
      requestBody:
        $ref: '#/components/requestBodies/LegalTerm'
      responses:
        '200':
          $ref: '#/components/responses/LegalTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductServiceAgency/{productserviceagencyid}/PolicyTerm/{policytermid}/Request':
    put:
      tags:
        - BQ - PolicyTerm
      summary: Request Policy Term
      description: Request Policy Term
      operationId: RequestPolicyTerm
      parameters:
        - $ref: '#/components/parameters/productserviceagencyid'
        - $ref: '#/components/parameters/policytermid'
      requestBody:
        $ref: '#/components/requestBodies/PolicyTerm'
      responses:
        '200':
          $ref: '#/components/responses/PolicyTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductServiceAgency/{productserviceagencyid}/RegulatoryTerm/{regulatorytermid}/Request':
    put:
      tags:
        - BQ - RegulatoryTerm
      summary: Request Regulatory Term
      description: Request Regulatory Term
      operationId: RequestRegulatoryTerm
      parameters:
        - $ref: '#/components/parameters/productserviceagencyid'
        - $ref: '#/components/parameters/regulatorytermid'
      requestBody:
        $ref: '#/components/requestBodies/RegulatoryTerm'
      responses:
        '200':
          $ref: '#/components/responses/RegulatoryTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductServiceAgency/{productserviceagencyid}/LegalTerm/{legaltermid}/Retrieve':
    get:
      tags:
        - BQ - LegalTerm
      summary: Retrieve Legal Term
      description: Retrieve Legal Term
      operationId: RetrieveLegalTerm
      parameters:
        - $ref: '#/components/parameters/productserviceagencyid'
        - $ref: '#/components/parameters/legaltermid'
      responses:
        '200':
          $ref: '#/components/responses/LegalTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductServiceAgency/{productserviceagencyid}/PolicyTerm/{policytermid}/Retrieve':
    get:
      tags:
        - BQ - PolicyTerm
      summary: Retrieve Policy Term
      description: Retrieve Policy Term
      operationId: RetrievePolicyTerm
      parameters:
        - $ref: '#/components/parameters/productserviceagencyid'
        - $ref: '#/components/parameters/policytermid'
      responses:
        '200':
          $ref: '#/components/responses/PolicyTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductServiceAgency/{productserviceagencyid}/RegulatoryTerm/{regulatorytermid}/Retrieve':
    get:
      tags:
        - BQ - RegulatoryTerm
      summary: Retrieve Regulatory Term
      description: Retrieve Regulatory Term
      operationId: RetrieveRegulatoryTerm
      parameters:
        - $ref: '#/components/parameters/productserviceagencyid'
        - $ref: '#/components/parameters/regulatorytermid'
      responses:
        '200':
          $ref: '#/components/responses/RegulatoryTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductServiceAgency/{productserviceagencyid}/LegalTerm/{legaltermid}/Update':
    put:
      tags:
        - BQ - LegalTerm
      summary: Update Legal Term
      description: Update Legal Term
      operationId: UpdateLegalTerm
      parameters:
        - $ref: '#/components/parameters/productserviceagencyid'
        - $ref: '#/components/parameters/legaltermid'
      requestBody:
        $ref: '#/components/requestBodies/LegalTerm'
      responses:
        '200':
          $ref: '#/components/responses/LegalTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductServiceAgency/{productserviceagencyid}/PolicyTerm/{policytermid}/Update':
    put:
      tags:
        - BQ - PolicyTerm
      summary: Update Policy Term
      description: Update Policy Term
      operationId: UpdatePolicyTerm
      parameters:
        - $ref: '#/components/parameters/productserviceagencyid'
        - $ref: '#/components/parameters/policytermid'
      requestBody:
        $ref: '#/components/requestBodies/PolicyTerm'
      responses:
        '200':
          $ref: '#/components/responses/PolicyTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductServiceAgency/{productserviceagencyid}/RegulatoryTerm/{regulatorytermid}/Update':
    put:
      tags:
        - BQ - RegulatoryTerm
      summary: Update Regulatory Term
      description: Update Regulatory Term
      operationId: UpdateRegulatoryTerm
      parameters:
        - $ref: '#/components/parameters/productserviceagencyid'
        - $ref: '#/components/parameters/regulatorytermid'
      requestBody:
        $ref: '#/components/requestBodies/RegulatoryTerm'
      responses:
        '200':
          $ref: '#/components/responses/RegulatoryTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    LegalTerm:
      type: object
      properties:
        Preconditions:
          type: string
          description: The required status/situation for the terms to apply and or tasks that need to be completed prior to the initiation of the workstep
          format: condition
        Schedule:
          type: string
          description: Any timing/duration considerations applying to the Legal Term
          format: schedule
        BusinessService:
          type: string
          description: The Legal Term specific Business Service
          format: businessservice
        ServiceProviderAgreementReference:
          type: string
          description: Reference to Legal Term
          format: agreement
        LegalTermReference:
          type: string
          description: Reference to Legal Term
          format: arrangement
        LegalTermType:
          type: string
          description: The type of Legal Term
          format: text
        Jurisdiction:
          type: string
          description: The legal jurisdiction
          format: string
        ApplicableLawReference:
          type: string
          description: Reference to any legal requirements
          format: object
        ApplicableLawInterpretation:
          type: string
          description: Explanation or interpretation of the law as applied
          format: string
      description: Covers the legal considerations of the agreement
    RegulatoryTerm:
      type: object
      properties:
        Preconditions:
          type: string
          description: The required status/situation for the terms to apply and or tasks that need to be completed prior to the initiation of the workstep
          format: condition
        Schedule:
          type: string
          description: Any timing/duration considerations applying to the Regulatory Term
          format: schedule
        BusinessService:
          type: string
          description: The Regulatory Term specific Business Service
          format: businessservice
        ServiceProviderAgreementReference:
          type: string
          description: Reference to Regulatory Term
          format: agreement
        RegulatoryTermReference:
          type: string
          description: Reference to Regulatory Term
          format: arrangement
        RegulatoryTermType:
          type: string
          description: The type of Regulatory Term
          format: text
        RegulatoryAuthority:
          type: string
          description: The applicable regulatory authority
          format: string
        ApplicableRegulationReference:
          type: string
          description: Reference to any regulatory requirements
          format: object
        ApplicableRegulationInterpretation:
          type: string
          description: Explanation or interpretation of the regulation as applied
          format: string
      description: Covers the legal considerations of the agreement
    PolicyTerm:
      type: object
      properties:
        Preconditions:
          type: string
          description: The required status/situation for the terms to apply and or tasks that need to be completed prior to the initiation of the workstep
          format: condition
        Schedule:
          type: string
          description: Any timing/duration considerations applying to the Policy Term
          format: schedule
        BusinessService:
          type: string
          description: The Policy Term specific Business Service
          format: businessservice
        ServiceProviderAgreementReference:
          type: string
          description: Reference to Policy Term
          format: agreement
        PolicyTermReference:
          type: string
          description: Reference to Policy Term
          format: arrangement
        PolicyTermType:
          type: string
          description: The type of Policy Term
          format: text
        BankPolicy-RuleType:
          type: string
          description: The type of bank policy referenced (e.g. staff certification)
          format: string
        ApplicableBankPolicy-RuleReference:
          type: string
          description: Reference to the bank's policies or rules
          format: object
        ApplicableBankPolicy-RuleInterpretation:
          type: string
          description: Explanation or interpretation of the policy or rule as applied
          format: string
      description: Covers the legal considerations of the agreement
    ProductServiceAgencyOutcome:
      type: object
      properties:
        ProductServiceAgencyAgreement:
          type: string
          description: ''
          format: agreement
        ProductServiceAgencyWorkProduct:
          type: string
          description: ''
          format: workproduct
        ProductServiceAgencyWorkProductType:
          type: string
          description: ''
          format: workproducttypevalues
      description: Covers the legal considerations of the agreement
    ServiceProviderAgreement:
      type: object
      properties:
        ServiceProviderAgreementParameterType:
          type: string
          description: A Classification value that distinguishes between Options defined within Service Provider Agreement
          format: text
        ServiceProviderAgreementSelectedOption:
          type: string
          description: 'A selected optional feature in a product, identified by Parameter Type'
          format: feature
        ServiceProviderAgreementType:
          type: string
          description: A Classification value that distinguishes between the subject matters of Service Provider Agreement
          format: agreementtypevalues
        ServiceProviderAgreementReference:
          type: string
          description: An unique reference to an item or an occurrence of Service Provider Agreement
          format: agreement
        ServiceProviderAgreementDischargeRequest:
          type: string
          description: Request to discharge Service Provider Agreement
          format: instruction
        ServiceProviderAgreementDischargeSchedule:
          type: string
          description: Timetable to discharge Service Provider Agreement
          format: schedule
        ServiceProviderAgreementStatus:
          type: string
          description: The status of Service Provider Agreement
          format: agreementlifecyclestatus
        ServiceProviderAgreementAssociatedParty:
          type: string
          description: Party who is involved in Service Provider Agreement
          format: involvedparty
        ServiceProviderAgreementCustomerReference:
          type: string
          description: Reference to the customer who is involved in Service Provider Agreement
          format: involvedparty
        ServiceProviderAgreementObligation:
          type: string
          description: Liability or duty to do something under the terms of Service Provider Agreement
          format: arrangement
        ServiceProviderAgreementEntitlement:
          type: string
          description: Right to do something under the terms of Service Provider Agreement
          format: arrangement
        ServiceProviderAgreementRegulationReference:
          type: string
          description: Reference to the regulation which is defined in Service Provider Agreement
          format: ruleset
        ServiceProviderAgreementRegulationType:
          type: string
          description: A Classification that distinguishes between the regularity domains of Service Provider Agreement
          format: rulesettype
        ServiceProviderAgreementJurisdiction:
          type: string
          description: Reference to the jurisdiction that is assigned to Service Provider Agreement in case of legal dispute.
          format: jurisdiction
        ServiceProviderAgreementAccountReference:
          type: string
          description: "Reference to the account which is linked to Service Provider Agreement\n\nA characteristic of agreement which refers to its involved account to specify the account that will be used to register for the transactions in position keeping management."
          format: account
        ServiceProviderAgreementSubjectMatter:
          type: string
          description: The subject matter of  Service Provider Agreement
          format: object
        ServiceProviderAgreementProductReference:
          type: string
          description: "Reference to the product which is linked to Service Provider Agreement\n\nComment: \nA characteristic of agreement which refers to its related products that are sold by agreement."
          format: bankingproduct
        ServiceProviderAgreementCalendarReference:
          type: string
          description: The calendar of Service Provider Agreement
          format: calendar
        ServiceProviderAgreementAssociatedAgreementReference:
          type: string
          description: Reference to the agreement that is related to Service Provider Agreement
          format: agreement
      description: "Maintain the terms and conditions that apply to a commercial relationship within Product Service Agency.\n\n"
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ServiceProviderAgreement:
      description: ServiceProviderAgreement
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceProviderAgreement'
    LegalTerm:
      description: LegalTerm
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LegalTerm'
    PolicyTerm:
      description: PolicyTerm
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PolicyTerm'
    RegulatoryTerm:
      description: RegulatoryTerm
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RegulatoryTerm'
  parameters:
    productserviceagencyid:
      name: productserviceagencyid
      in: path
      required: true
      style: simple
      schema:
        type: string
    legaltermid:
      name: legaltermid
      in: path
      required: true
      style: simple
      schema:
        type: string
    policytermid:
      name: policytermid
      in: path
      required: true
      style: simple
      schema:
        type: string
    regulatorytermid:
      name: regulatorytermid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    ServiceProviderAgreement:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceProviderAgreement'
      required: true
    LegalTerm:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LegalTerm'
      required: true
    PolicyTerm:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PolicyTerm'
      required: true
    RegulatoryTerm:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RegulatoryTerm'
      required: true