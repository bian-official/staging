openapi: 3.0.1
info:
  title: Merchant Relations
  description: This service domain maintains the terms and conditions agreed with merchants for cards related activity
  contact:
    name: BIAN
    url: https://bian.org
  version: 11.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/MerchantRelations/11.0.0
paths:
  '/MerchantRelations/{merchantrelationsid}/Control':
    put:
      tags:
        - CR - MerchantRelationshipAgreement
      summary: Control Merchant Relationship Agreement
      description: Control Merchant Relationship Agreement
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
      requestBody:
        $ref: '#/components/requestBodies/MerchantRelationshipAgreement'
      responses:
        '200':
          $ref: '#/components/responses/MerchantRelationshipAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /MerchantRelations/Evaluate:
    post:
      tags:
        - CR - MerchantRelationshipAgreement
      summary: Evaluate Merchant Relationship Agreement
      description: Evaluate Merchant Relationship Agreement
      operationId: Evaluate
      requestBody:
        $ref: '#/components/requestBodies/MerchantRelationshipAgreement'
      responses:
        '200':
          $ref: '#/components/responses/MerchantRelationshipAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/Exchange':
    put:
      tags:
        - CR - MerchantRelationshipAgreement
      summary: Exchange Merchant Relationship Agreement
      description: Exchange Merchant Relationship Agreement
      operationId: Exchange
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
      requestBody:
        $ref: '#/components/requestBodies/MerchantRelationshipAgreement'
      responses:
        '200':
          $ref: '#/components/responses/MerchantRelationshipAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/Grant':
    put:
      tags:
        - CR - MerchantRelationshipAgreement
      summary: Grant Merchant Relationship Agreement
      description: Grant Merchant Relationship Agreement
      operationId: Grant
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
      requestBody:
        $ref: '#/components/requestBodies/MerchantRelationshipAgreement'
      responses:
        '200':
          $ref: '#/components/responses/MerchantRelationshipAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/Notify':
    get:
      tags:
        - CR - MerchantRelationshipAgreement
      summary: Notify Merchant Relationship Agreement
      description: Notify Merchant Relationship Agreement
      operationId: Notify
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
      responses:
        '200':
          $ref: '#/components/responses/MerchantRelationshipAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/Request':
    put:
      tags:
        - CR - MerchantRelationshipAgreement
      summary: Request Merchant Relationship Agreement
      description: Request Merchant Relationship Agreement
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
      requestBody:
        $ref: '#/components/requestBodies/MerchantRelationshipAgreement'
      responses:
        '200':
          $ref: '#/components/responses/MerchantRelationshipAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/Retrieve':
    get:
      tags:
        - CR - MerchantRelationshipAgreement
      summary: Retrieve Merchant Relationship Agreement
      description: Retrieve Merchant Relationship Agreement
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
      responses:
        '200':
          $ref: '#/components/responses/MerchantRelationshipAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/Update':
    put:
      tags:
        - CR - MerchantRelationshipAgreement
      summary: Update Merchant Relationship Agreement
      description: Update Merchant Relationship Agreement
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
      requestBody:
        $ref: '#/components/requestBodies/MerchantRelationshipAgreement'
      responses:
        '200':
          $ref: '#/components/responses/MerchantRelationshipAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/LegalTerm/{legaltermid}/Evaluate':
    post:
      tags:
        - BQ - LegalTerm
      summary: Evaluate Legal Term
      description: Evaluate Legal Term
      operationId: EvaluateLegalTerm
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
        - $ref: '#/components/parameters/legaltermid'
      requestBody:
        $ref: '#/components/requestBodies/LegalTerm'
      responses:
        '200':
          $ref: '#/components/responses/LegalTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/OperationalTerm/{operationaltermid}/Evaluate':
    post:
      tags:
        - BQ - OperationalTerm
      summary: Evaluate Operational Term
      description: Evaluate Operational Term
      operationId: EvaluateOperationalTerm
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
        - $ref: '#/components/parameters/operationaltermid'
      requestBody:
        $ref: '#/components/requestBodies/OperationalTerm'
      responses:
        '200':
          $ref: '#/components/responses/OperationalTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/RegulatoryTerm/{regulatorytermid}/Evaluate':
    post:
      tags:
        - BQ - RegulatoryTerm
      summary: Evaluate Regulatory Term
      description: Evaluate Regulatory Term
      operationId: EvaluateRegulatoryTerm
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
        - $ref: '#/components/parameters/regulatorytermid'
      requestBody:
        $ref: '#/components/requestBodies/RegulatoryTerm'
      responses:
        '200':
          $ref: '#/components/responses/RegulatoryTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/LegalTerm/{legaltermid}/Exchange':
    put:
      tags:
        - BQ - LegalTerm
      summary: Exchange Legal Term
      description: Exchange Legal Term
      operationId: ExchangeLegalTerm
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
        - $ref: '#/components/parameters/legaltermid'
      requestBody:
        $ref: '#/components/requestBodies/LegalTerm'
      responses:
        '200':
          $ref: '#/components/responses/LegalTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/OperationalTerm/{operationaltermid}/Exchange':
    put:
      tags:
        - BQ - OperationalTerm
      summary: Exchange Operational Term
      description: Exchange Operational Term
      operationId: ExchangeOperationalTerm
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
        - $ref: '#/components/parameters/operationaltermid'
      requestBody:
        $ref: '#/components/requestBodies/OperationalTerm'
      responses:
        '200':
          $ref: '#/components/responses/OperationalTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/RegulatoryTerm/{regulatorytermid}/Exchange':
    put:
      tags:
        - BQ - RegulatoryTerm
      summary: Exchange Regulatory Term
      description: Exchange Regulatory Term
      operationId: ExchangeRegulatoryTerm
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
        - $ref: '#/components/parameters/regulatorytermid'
      requestBody:
        $ref: '#/components/requestBodies/RegulatoryTerm'
      responses:
        '200':
          $ref: '#/components/responses/RegulatoryTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/LegalTerm/{legaltermid}/Notify':
    get:
      tags:
        - BQ - LegalTerm
      summary: Notify Legal Term
      description: Notify Legal Term
      operationId: NotifyLegalTerm
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
        - $ref: '#/components/parameters/legaltermid'
      responses:
        '200':
          $ref: '#/components/responses/LegalTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/OperationalTerm/{operationaltermid}/Notify':
    get:
      tags:
        - BQ - OperationalTerm
      summary: Notify Operational Term
      description: Notify Operational Term
      operationId: NotifyOperationalTerm
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
        - $ref: '#/components/parameters/operationaltermid'
      responses:
        '200':
          $ref: '#/components/responses/OperationalTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/RegulatoryTerm/{regulatorytermid}/Notify':
    get:
      tags:
        - BQ - RegulatoryTerm
      summary: Notify Regulatory Term
      description: Notify Regulatory Term
      operationId: NotifyRegulatoryTerm
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
        - $ref: '#/components/parameters/regulatorytermid'
      responses:
        '200':
          $ref: '#/components/responses/RegulatoryTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/LegalTerm/{legaltermid}/Request':
    put:
      tags:
        - BQ - LegalTerm
      summary: Request Legal Term
      description: Request Legal Term
      operationId: RequestLegalTerm
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
        - $ref: '#/components/parameters/legaltermid'
      requestBody:
        $ref: '#/components/requestBodies/LegalTerm'
      responses:
        '200':
          $ref: '#/components/responses/LegalTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/OperationalTerm/{operationaltermid}/Request':
    put:
      tags:
        - BQ - OperationalTerm
      summary: Request Operational Term
      description: Request Operational Term
      operationId: RequestOperationalTerm
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
        - $ref: '#/components/parameters/operationaltermid'
      requestBody:
        $ref: '#/components/requestBodies/OperationalTerm'
      responses:
        '200':
          $ref: '#/components/responses/OperationalTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/RegulatoryTerm/{regulatorytermid}/Request':
    put:
      tags:
        - BQ - RegulatoryTerm
      summary: Request Regulatory Term
      description: Request Regulatory Term
      operationId: RequestRegulatoryTerm
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
        - $ref: '#/components/parameters/regulatorytermid'
      requestBody:
        $ref: '#/components/requestBodies/RegulatoryTerm'
      responses:
        '200':
          $ref: '#/components/responses/RegulatoryTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/LegalTerm/{legaltermid}/Retrieve':
    get:
      tags:
        - BQ - LegalTerm
      summary: Retrieve Legal Term
      description: Retrieve Legal Term
      operationId: RetrieveLegalTerm
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
        - $ref: '#/components/parameters/legaltermid'
      responses:
        '200':
          $ref: '#/components/responses/LegalTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/OperationalTerm/{operationaltermid}/Retrieve':
    get:
      tags:
        - BQ - OperationalTerm
      summary: Retrieve Operational Term
      description: Retrieve Operational Term
      operationId: RetrieveOperationalTerm
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
        - $ref: '#/components/parameters/operationaltermid'
      responses:
        '200':
          $ref: '#/components/responses/OperationalTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/RegulatoryTerm/{regulatorytermid}/Retrieve':
    get:
      tags:
        - BQ - RegulatoryTerm
      summary: Retrieve Regulatory Term
      description: Retrieve Regulatory Term
      operationId: RetrieveRegulatoryTerm
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
        - $ref: '#/components/parameters/regulatorytermid'
      responses:
        '200':
          $ref: '#/components/responses/RegulatoryTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/LegalTerm/{legaltermid}/Update':
    put:
      tags:
        - BQ - LegalTerm
      summary: Update Legal Term
      description: Update Legal Term
      operationId: UpdateLegalTerm
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
        - $ref: '#/components/parameters/legaltermid'
      requestBody:
        $ref: '#/components/requestBodies/LegalTerm'
      responses:
        '200':
          $ref: '#/components/responses/LegalTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/OperationalTerm/{operationaltermid}/Update':
    put:
      tags:
        - BQ - OperationalTerm
      summary: Update Operational Term
      description: Update Operational Term
      operationId: UpdateOperationalTerm
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
        - $ref: '#/components/parameters/operationaltermid'
      requestBody:
        $ref: '#/components/requestBodies/OperationalTerm'
      responses:
        '200':
          $ref: '#/components/responses/OperationalTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MerchantRelations/{merchantrelationsid}/RegulatoryTerm/{regulatorytermid}/Update':
    put:
      tags:
        - BQ - RegulatoryTerm
      summary: Update Regulatory Term
      description: Update Regulatory Term
      operationId: UpdateRegulatoryTerm
      parameters:
        - $ref: '#/components/parameters/merchantrelationsid'
        - $ref: '#/components/parameters/regulatorytermid'
      requestBody:
        $ref: '#/components/requestBodies/RegulatoryTerm'
      responses:
        '200':
          $ref: '#/components/responses/RegulatoryTerm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    LegalTerm:
      type: object
      properties:
        Preconditions:
          type: string
          description: The required status/situation for the terms to apply and or tasks that need to be completed prior to the initiation of the workstep
          format: condition
        Schedule:
          type: string
          description: Any timing/duration considerations applying to the Legal Term
          format: schedule
        BusinessService:
          type: string
          description: The Legal Term specific Business Service
          format: businessservice
        MerchantRelationshipAgreementReference:
          type: string
          description: Reference to Legal Term
          format: agreement
        LegalTermReference:
          type: string
          description: Reference to Legal Term
          format: arrangement
        LegalTermType:
          type: string
          description: The type of Legal Term
          format: text
        Jurisdiction:
          type: string
          description: The legal jurisdiction
          format: string
        ApplicableLawReference:
          type: string
          description: Reference to any legal requirements
          format: object
        ApplicableLawInterpretation:
          type: string
          description: Explanation or interpretation of the law as applied
          format: string
      description: Covers the legal considerations of the agreement
    OperationalTerm:
      type: object
      properties:
        Preconditions:
          type: string
          description: The required status/situation for the terms to apply and or tasks that need to be completed prior to the initiation of the workstep
          format: condition
        Schedule:
          type: string
          description: Any timing/duration considerations applying to the Operational Term
          format: schedule
        BusinessService:
          type: string
          description: The Operational Term specific Business Service
          format: businessservice
        MerchantRelationshipAgreementReference:
          type: string
          description: Reference to Operational Term
          format: agreement
        OperationalTermReference:
          type: string
          description: Reference to Operational Term
          format: arrangement
        OperationalTermType:
          type: string
          description: The type of Operational Term
          format: text
        OperationalTermDescription:
          type: string
          description: 'Description of the term, including servicing and fulfillment details'
          format: string
        OperationalTermParameterType:
          type: string
          description: 'Parameters that govern the execution of the term (e.g. rate discounted by, fee reduced by)'
          format: string
        OperationalTermParameterSetting:
          type: string
          description: The value of the parameter for this instance
          format: string
        OperationalTermTransactionRecord:
          type: string
          description: Details of cash flows associated with fulfillment instances of the term (can be charges made to the customer or compensating transfers to the base product profit center)
          format: string
        OperationalTermTransactionType:
          type: string
          description: 'The type of transaction and the resulting cash adjustment (e.g. interest forgiveness, fee reduction)'
          format: string
        OperationalTermTransactionDescription:
          type: string
          description: Description of the transaction detailing amounts and source and the creditor of transfers
          format: string
        OperationalTermAugmentedCashFlows:
          type: string
          description: The actual cash flows associated with the fulfillment of the term
          format: string
        PaymentInitiationTransactionInstanceReference:
          type: string
          description: Reference to the underlying funds transfer transaction
          format: object
      description: Covers the legal considerations of the agreement
    RegulatoryTerm:
      type: object
      properties:
        Preconditions:
          type: string
          description: The required status/situation for the terms to apply and or tasks that need to be completed prior to the initiation of the workstep
          format: condition
        Schedule:
          type: string
          description: Any timing/duration considerations applying to the Regulatory Term
          format: schedule
        BusinessService:
          type: string
          description: The Regulatory Term specific Business Service
          format: businessservice
        MerchantRelationshipAgreementReference:
          type: string
          description: Reference to Regulatory Term
          format: agreement
        RegulatoryTermReference:
          type: string
          description: Reference to Regulatory Term
          format: arrangement
        RegulatoryTermType:
          type: string
          description: The type of Regulatory Term
          format: text
        RegulatoryAuthority:
          type: string
          description: The applicable regulatory authority
          format: string
        ApplicableRegulationReference:
          type: string
          description: Reference to any regulatory requirements
          format: object
        ApplicableRegulationInterpretation:
          type: string
          description: Explanation or interpretation of the regulation as applied
          format: string
      description: Covers the legal considerations of the agreement
    MerchantRelationsOutcome:
      type: object
      properties:
        MerchantRelationsAgreement:
          type: string
          description: ''
          format: agreement
        MerchantRelationsWorkProduct:
          type: string
          description: ''
          format: workproduct
        MerchantRelationsWorkProductType:
          type: string
          description: ''
          format: workproducttypevalues
      description: Covers the legal considerations of the agreement
    MerchantRelationshipAgreement:
      type: object
      properties:
        MerchantRelationshipAgreementParameterType:
          type: string
          description: A Classification value that distinguishes between Options defined within Merchant Relationship Agreement
          format: text
        MerchantRelationshipAgreementSelectedOption:
          type: string
          description: 'A selected optional feature in a product, identified by Parameter Type'
          format: feature
        MerchantRelationshipAgreementType:
          type: string
          description: A Classification value that distinguishes between the subject matters of Merchant Relationship Agreement
          format: agreementtypevalues
        MerchantRelationshipAgreementReference:
          type: string
          description: An unique reference to an item or an occurrence of Merchant Relationship Agreement
          format: agreement
        MerchantRelationshipAgreementDischargeRequest:
          type: string
          description: Request to discharge Merchant Relationship Agreement
          format: instruction
        MerchantRelationshipAgreementDischargeSchedule:
          type: string
          description: Timetable to discharge Merchant Relationship Agreement
          format: schedule
        MerchantRelationshipAgreementStatus:
          type: string
          description: The status of Merchant Relationship Agreement
          format: agreementlifecyclestatus
        MerchantRelationshipAgreementAssociatedParty:
          type: string
          description: Party who is involved in Merchant Relationship Agreement
          format: involvedparty
        MerchantRelationshipAgreementCustomerReference:
          type: string
          description: Reference to the customer who is involved in Merchant Relationship Agreement
          format: involvedparty
        MerchantRelationshipAgreementObligation:
          type: string
          description: Liability or duty to do something under the terms of Merchant Relationship Agreement
          format: arrangement
        MerchantRelationshipAgreementEntitlement:
          type: string
          description: Right to do something under the terms of Merchant Relationship Agreement
          format: arrangement
        MerchantRelationshipAgreementRegulationReference:
          type: string
          description: Reference to the regulation which is defined in Merchant Relationship Agreement
          format: ruleset
        MerchantRelationshipAgreementRegulationType:
          type: string
          description: A Classification that distinguishes between the regularity domains of Merchant Relationship Agreement
          format: rulesettype
        MerchantRelationshipAgreementJurisdiction:
          type: string
          description: Reference to the jurisdiction that is assigned to Merchant Relationship Agreement in case of legal dispute.
          format: jurisdiction
        MerchantRelationshipAgreementAccountReference:
          type: string
          description: "Reference to the account which is linked to Merchant Relationship Agreement\n\nA characteristic of agreement which refers to its involved account to specify the account that will be used to register for the transactions in position keeping management."
          format: account
        MerchantRelationshipAgreementSubjectMatter:
          type: string
          description: The subject matter of  Merchant Relationship Agreement
          format: object
        MerchantRelationshipAgreementProductReference:
          type: string
          description: "Reference to the product which is linked to Merchant Relationship Agreement\n\nComment: \nA characteristic of agreement which refers to its related products that are sold by agreement."
          format: bankingproduct
        MerchantRelationshipAgreementCalendarReference:
          type: string
          description: The calendar of Merchant Relationship Agreement
          format: calendar
        MerchantRelationshipAgreementAssociatedAgreementReference:
          type: string
          description: Reference to the agreement that is related to Merchant Relationship Agreement
          format: agreement
      description: "Maintain the terms and conditions that apply to a commercial relationship within Merchant Relations.\n\n"
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    MerchantRelationshipAgreement:
      description: MerchantRelationshipAgreement
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MerchantRelationshipAgreement'
    LegalTerm:
      description: LegalTerm
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LegalTerm'
    OperationalTerm:
      description: OperationalTerm
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OperationalTerm'
    RegulatoryTerm:
      description: RegulatoryTerm
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RegulatoryTerm'
  parameters:
    merchantrelationsid:
      name: merchantrelationsid
      in: path
      required: true
      style: simple
      schema:
        type: string
    legaltermid:
      name: legaltermid
      in: path
      required: true
      style: simple
      schema:
        type: string
    operationaltermid:
      name: operationaltermid
      in: path
      required: true
      style: simple
      schema:
        type: string
    regulatorytermid:
      name: regulatorytermid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    MerchantRelationshipAgreement:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MerchantRelationshipAgreement'
      required: true
    LegalTerm:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LegalTerm'
      required: true
    OperationalTerm:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OperationalTerm'
      required: true
    RegulatoryTerm:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RegulatoryTerm'
      required: true