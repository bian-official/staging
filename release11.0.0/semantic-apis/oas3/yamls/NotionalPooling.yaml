openapi: 3.0.1
info:
  title: Notional Pooling
  description: 'Notional pooling allows corporate customer with multiple active accounts to pool credit and debit balances to provide a single centralized liquidity position and to minimize interest expense, simplify cash management and retain a degree of local autonomy to the accounts'
  contact:
    name: BIAN
    url: https://bian.org
  version: 11.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/NotionalPooling/11.0.0
paths:
  '/NotionalPooling/{notionalpoolingid}/Control':
    put:
      tags:
        - CR - NotionalPoolingFacility
      summary: Control Notional Pooling Facility
      description: Control Notional Pooling Facility
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/notionalpoolingid'
      requestBody:
        $ref: '#/components/requestBodies/NotionalPoolingFacility'
      responses:
        '200':
          $ref: '#/components/responses/NotionalPoolingFacility'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/NotionalPooling/{notionalpoolingid}/Exchange':
    put:
      tags:
        - CR - NotionalPoolingFacility
      summary: Exchange Notional Pooling Facility
      description: Exchange Notional Pooling Facility
      operationId: Exchange
      parameters:
        - $ref: '#/components/parameters/notionalpoolingid'
      requestBody:
        $ref: '#/components/requestBodies/NotionalPoolingFacility'
      responses:
        '200':
          $ref: '#/components/responses/NotionalPoolingFacility'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /NotionalPooling/Initiate:
    post:
      tags:
        - CR - NotionalPoolingFacility
      summary: Initiate Notional Pooling Facility
      description: Initiate Notional Pooling Facility
      operationId: Initiate
      requestBody:
        $ref: '#/components/requestBodies/NotionalPoolingFacility'
      responses:
        '200':
          $ref: '#/components/responses/NotionalPoolingFacility'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/NotionalPooling/{notionalpoolingid}/Notify':
    get:
      tags:
        - CR - NotionalPoolingFacility
      summary: Notify Notional Pooling Facility
      description: Notify Notional Pooling Facility
      operationId: Notify
      parameters:
        - $ref: '#/components/parameters/notionalpoolingid'
      responses:
        '200':
          $ref: '#/components/responses/NotionalPoolingFacility'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/NotionalPooling/{notionalpoolingid}/Request':
    put:
      tags:
        - CR - NotionalPoolingFacility
      summary: Request Notional Pooling Facility
      description: Request Notional Pooling Facility
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/notionalpoolingid'
      requestBody:
        $ref: '#/components/requestBodies/NotionalPoolingFacility'
      responses:
        '200':
          $ref: '#/components/responses/NotionalPoolingFacility'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/NotionalPooling/{notionalpoolingid}/Retrieve':
    get:
      tags:
        - CR - NotionalPoolingFacility
      summary: Retrieve Notional Pooling Facility
      description: Retrieve Notional Pooling Facility
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/notionalpoolingid'
      responses:
        '200':
          $ref: '#/components/responses/NotionalPoolingFacility'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/NotionalPooling/{notionalpoolingid}/Update':
    put:
      tags:
        - CR - NotionalPoolingFacility
      summary: Update Notional Pooling Facility
      description: Update Notional Pooling Facility
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/notionalpoolingid'
      requestBody:
        $ref: '#/components/requestBodies/NotionalPoolingFacility'
      responses:
        '200':
          $ref: '#/components/responses/NotionalPoolingFacility'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/NotionalPooling/{notionalpoolingid}/NotionalAccountArrangementFulfillment/{notionalaccountarrangementfulfillmentid}/Exchange':
    put:
      tags:
        - BQ - NotionalAccountArrangementFulfillment
      summary: Exchange Notional Account Arrangement Fulfillment
      description: Exchange Notional Account Arrangement Fulfillment
      operationId: ExchangeNotionalAccountArrangementFulfillment
      parameters:
        - $ref: '#/components/parameters/notionalpoolingid'
        - $ref: '#/components/parameters/notionalaccountarrangementfulfillmentid'
      requestBody:
        $ref: '#/components/requestBodies/NotionalAccountArrangementFulfillment'
      responses:
        '200':
          $ref: '#/components/responses/NotionalAccountArrangementFulfillment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/NotionalPooling/{notionalpoolingid}/NotionalAccountConsolidatedPositionFulfillment/{notionalaccountconsolidatedpositionfulfillmentid}/Exchange':
    put:
      tags:
        - BQ - NotionalAccountConsolidatedPositionFulfillment
      summary: Exchange Notional Account Consolidated Position Fulfillment
      description: Exchange Notional Account Consolidated Position Fulfillment
      operationId: ExchangeNotionalAccountConsolidatedPositionFulfillment
      parameters:
        - $ref: '#/components/parameters/notionalpoolingid'
        - $ref: '#/components/parameters/notionalaccountconsolidatedpositionfulfillmentid'
      requestBody:
        $ref: '#/components/requestBodies/NotionalAccountConsolidatedPositionFulfillment'
      responses:
        '200':
          $ref: '#/components/responses/NotionalAccountConsolidatedPositionFulfillment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/NotionalPooling/{notionalpoolingid}/NotionalAccountInterestAllocationFulfillment/{notionalaccountinterestallocationfulfillmentid}/Exchange':
    put:
      tags:
        - BQ - NotionalAccountInterestAllocationFulfillment
      summary: Exchange Notional Account Interest Allocation Fulfillment
      description: Exchange Notional Account Interest Allocation Fulfillment
      operationId: ExchangeNotionalAccountInterestAllocationFulfillment
      parameters:
        - $ref: '#/components/parameters/notionalpoolingid'
        - $ref: '#/components/parameters/notionalaccountinterestallocationfulfillmentid'
      requestBody:
        $ref: '#/components/requestBodies/NotionalAccountInterestAllocationFulfillment'
      responses:
        '200':
          $ref: '#/components/responses/NotionalAccountInterestAllocationFulfillment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/NotionalPooling/{notionalpoolingid}/NotionalAccountArrangementFulfillment/{notionalaccountarrangementfulfillmentid}/Execute':
    put:
      tags:
        - BQ - NotionalAccountArrangementFulfillment
      summary: Execute Notional Account Arrangement Fulfillment
      description: Execute Notional Account Arrangement Fulfillment
      operationId: ExecuteNotionalAccountArrangementFulfillment
      parameters:
        - $ref: '#/components/parameters/notionalpoolingid'
        - $ref: '#/components/parameters/notionalaccountarrangementfulfillmentid'
      requestBody:
        $ref: '#/components/requestBodies/NotionalAccountArrangementFulfillment'
      responses:
        '200':
          $ref: '#/components/responses/NotionalAccountArrangementFulfillment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/NotionalPooling/{notionalpoolingid}/NotionalAccountConsolidatedPositionFulfillment/{notionalaccountconsolidatedpositionfulfillmentid}/Execute':
    put:
      tags:
        - BQ - NotionalAccountConsolidatedPositionFulfillment
      summary: Execute Notional Account Consolidated Position Fulfillment
      description: Execute Notional Account Consolidated Position Fulfillment
      operationId: ExecuteNotionalAccountConsolidatedPositionFulfillment
      parameters:
        - $ref: '#/components/parameters/notionalpoolingid'
        - $ref: '#/components/parameters/notionalaccountconsolidatedpositionfulfillmentid'
      requestBody:
        $ref: '#/components/requestBodies/NotionalAccountConsolidatedPositionFulfillment'
      responses:
        '200':
          $ref: '#/components/responses/NotionalAccountConsolidatedPositionFulfillment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/NotionalPooling/{notionalpoolingid}/NotionalAccountInterestAllocationFulfillment/{notionalaccountinterestallocationfulfillmentid}/Execute':
    put:
      tags:
        - BQ - NotionalAccountInterestAllocationFulfillment
      summary: Execute Notional Account Interest Allocation Fulfillment
      description: Execute Notional Account Interest Allocation Fulfillment
      operationId: ExecuteNotionalAccountInterestAllocationFulfillment
      parameters:
        - $ref: '#/components/parameters/notionalpoolingid'
        - $ref: '#/components/parameters/notionalaccountinterestallocationfulfillmentid'
      requestBody:
        $ref: '#/components/requestBodies/NotionalAccountInterestAllocationFulfillment'
      responses:
        '200':
          $ref: '#/components/responses/NotionalAccountInterestAllocationFulfillment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/NotionalPooling/{notionalpoolingid}/NotionalAccountArrangementFulfillment/Initiate':
    post:
      tags:
        - BQ - NotionalAccountArrangementFulfillment
      summary: Initiate Notional Account Arrangement Fulfillment
      description: Initiate Notional Account Arrangement Fulfillment
      operationId: InitiateNotionalAccountArrangementFulfillment
      parameters:
        - $ref: '#/components/parameters/notionalpoolingid'
      requestBody:
        $ref: '#/components/requestBodies/NotionalAccountArrangementFulfillment'
      responses:
        '200':
          $ref: '#/components/responses/NotionalAccountArrangementFulfillment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/NotionalPooling/{notionalpoolingid}/NotionalAccountConsolidatedPositionFulfillment/Initiate':
    post:
      tags:
        - BQ - NotionalAccountConsolidatedPositionFulfillment
      summary: Initiate Notional Account Consolidated Position Fulfillment
      description: Initiate Notional Account Consolidated Position Fulfillment
      operationId: InitiateNotionalAccountConsolidatedPositionFulfillment
      parameters:
        - $ref: '#/components/parameters/notionalpoolingid'
      requestBody:
        $ref: '#/components/requestBodies/NotionalAccountConsolidatedPositionFulfillment'
      responses:
        '200':
          $ref: '#/components/responses/NotionalAccountConsolidatedPositionFulfillment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/NotionalPooling/{notionalpoolingid}/NotionalAccountInterestAllocationFulfillment/Initiate':
    post:
      tags:
        - BQ - NotionalAccountInterestAllocationFulfillment
      summary: Initiate Notional Account Interest Allocation Fulfillment
      description: Initiate Notional Account Interest Allocation Fulfillment
      operationId: InitiateNotionalAccountInterestAllocationFulfillment
      parameters:
        - $ref: '#/components/parameters/notionalpoolingid'
      requestBody:
        $ref: '#/components/requestBodies/NotionalAccountInterestAllocationFulfillment'
      responses:
        '200':
          $ref: '#/components/responses/NotionalAccountInterestAllocationFulfillment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/NotionalPooling/{notionalpoolingid}/NotionalAccountArrangementFulfillment/{notionalaccountarrangementfulfillmentid}/Notify':
    get:
      tags:
        - BQ - NotionalAccountArrangementFulfillment
      summary: Notify Notional Account Arrangement Fulfillment
      description: Notify Notional Account Arrangement Fulfillment
      operationId: NotifyNotionalAccountArrangementFulfillment
      parameters:
        - $ref: '#/components/parameters/notionalpoolingid'
        - $ref: '#/components/parameters/notionalaccountarrangementfulfillmentid'
      responses:
        '200':
          $ref: '#/components/responses/NotionalAccountArrangementFulfillment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/NotionalPooling/{notionalpoolingid}/NotionalAccountConsolidatedPositionFulfillment/{notionalaccountconsolidatedpositionfulfillmentid}/Notify':
    get:
      tags:
        - BQ - NotionalAccountConsolidatedPositionFulfillment
      summary: Notify Notional Account Consolidated Position Fulfillment
      description: Notify Notional Account Consolidated Position Fulfillment
      operationId: NotifyNotionalAccountConsolidatedPositionFulfillment
      parameters:
        - $ref: '#/components/parameters/notionalpoolingid'
        - $ref: '#/components/parameters/notionalaccountconsolidatedpositionfulfillmentid'
      responses:
        '200':
          $ref: '#/components/responses/NotionalAccountConsolidatedPositionFulfillment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/NotionalPooling/{notionalpoolingid}/NotionalAccountInterestAllocationFulfillment/{notionalaccountinterestallocationfulfillmentid}/Notify':
    get:
      tags:
        - BQ - NotionalAccountInterestAllocationFulfillment
      summary: Notify Notional Account Interest Allocation Fulfillment
      description: Notify Notional Account Interest Allocation Fulfillment
      operationId: NotifyNotionalAccountInterestAllocationFulfillment
      parameters:
        - $ref: '#/components/parameters/notionalpoolingid'
        - $ref: '#/components/parameters/notionalaccountinterestallocationfulfillmentid'
      responses:
        '200':
          $ref: '#/components/responses/NotionalAccountInterestAllocationFulfillment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/NotionalPooling/{notionalpoolingid}/NotionalAccountArrangementFulfillment/{notionalaccountarrangementfulfillmentid}/Request':
    put:
      tags:
        - BQ - NotionalAccountArrangementFulfillment
      summary: Request Notional Account Arrangement Fulfillment
      description: Request Notional Account Arrangement Fulfillment
      operationId: RequestNotionalAccountArrangementFulfillment
      parameters:
        - $ref: '#/components/parameters/notionalpoolingid'
        - $ref: '#/components/parameters/notionalaccountarrangementfulfillmentid'
      requestBody:
        $ref: '#/components/requestBodies/NotionalAccountArrangementFulfillment'
      responses:
        '200':
          $ref: '#/components/responses/NotionalAccountArrangementFulfillment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/NotionalPooling/{notionalpoolingid}/NotionalAccountConsolidatedPositionFulfillment/{notionalaccountconsolidatedpositionfulfillmentid}/Request':
    put:
      tags:
        - BQ - NotionalAccountConsolidatedPositionFulfillment
      summary: Request Notional Account Consolidated Position Fulfillment
      description: Request Notional Account Consolidated Position Fulfillment
      operationId: RequestNotionalAccountConsolidatedPositionFulfillment
      parameters:
        - $ref: '#/components/parameters/notionalpoolingid'
        - $ref: '#/components/parameters/notionalaccountconsolidatedpositionfulfillmentid'
      requestBody:
        $ref: '#/components/requestBodies/NotionalAccountConsolidatedPositionFulfillment'
      responses:
        '200':
          $ref: '#/components/responses/NotionalAccountConsolidatedPositionFulfillment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/NotionalPooling/{notionalpoolingid}/NotionalAccountInterestAllocationFulfillment/{notionalaccountinterestallocationfulfillmentid}/Request':
    put:
      tags:
        - BQ - NotionalAccountInterestAllocationFulfillment
      summary: Request Notional Account Interest Allocation Fulfillment
      description: Request Notional Account Interest Allocation Fulfillment
      operationId: RequestNotionalAccountInterestAllocationFulfillment
      parameters:
        - $ref: '#/components/parameters/notionalpoolingid'
        - $ref: '#/components/parameters/notionalaccountinterestallocationfulfillmentid'
      requestBody:
        $ref: '#/components/requestBodies/NotionalAccountInterestAllocationFulfillment'
      responses:
        '200':
          $ref: '#/components/responses/NotionalAccountInterestAllocationFulfillment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/NotionalPooling/{notionalpoolingid}/NotionalAccountArrangementFulfillment/{notionalaccountarrangementfulfillmentid}/Retrieve':
    get:
      tags:
        - BQ - NotionalAccountArrangementFulfillment
      summary: Retrieve Notional Account Arrangement Fulfillment
      description: Retrieve Notional Account Arrangement Fulfillment
      operationId: RetrieveNotionalAccountArrangementFulfillment
      parameters:
        - $ref: '#/components/parameters/notionalpoolingid'
        - $ref: '#/components/parameters/notionalaccountarrangementfulfillmentid'
      responses:
        '200':
          $ref: '#/components/responses/NotionalAccountArrangementFulfillment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/NotionalPooling/{notionalpoolingid}/NotionalAccountConsolidatedPositionFulfillment/{notionalaccountconsolidatedpositionfulfillmentid}/Retrieve':
    get:
      tags:
        - BQ - NotionalAccountConsolidatedPositionFulfillment
      summary: Retrieve Notional Account Consolidated Position Fulfillment
      description: Retrieve Notional Account Consolidated Position Fulfillment
      operationId: RetrieveNotionalAccountConsolidatedPositionFulfillment
      parameters:
        - $ref: '#/components/parameters/notionalpoolingid'
        - $ref: '#/components/parameters/notionalaccountconsolidatedpositionfulfillmentid'
      responses:
        '200':
          $ref: '#/components/responses/NotionalAccountConsolidatedPositionFulfillment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/NotionalPooling/{notionalpoolingid}/NotionalAccountInterestAllocationFulfillment/{notionalaccountinterestallocationfulfillmentid}/Retrieve':
    get:
      tags:
        - BQ - NotionalAccountInterestAllocationFulfillment
      summary: Retrieve Notional Account Interest Allocation Fulfillment
      description: Retrieve Notional Account Interest Allocation Fulfillment
      operationId: RetrieveNotionalAccountInterestAllocationFulfillment
      parameters:
        - $ref: '#/components/parameters/notionalpoolingid'
        - $ref: '#/components/parameters/notionalaccountinterestallocationfulfillmentid'
      responses:
        '200':
          $ref: '#/components/responses/NotionalAccountInterestAllocationFulfillment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/NotionalPooling/{notionalpoolingid}/NotionalAccountArrangementFulfillment/{notionalaccountarrangementfulfillmentid}/Update':
    put:
      tags:
        - BQ - NotionalAccountArrangementFulfillment
      summary: Update Notional Account Arrangement Fulfillment
      description: Update Notional Account Arrangement Fulfillment
      operationId: UpdateNotionalAccountArrangementFulfillment
      parameters:
        - $ref: '#/components/parameters/notionalpoolingid'
        - $ref: '#/components/parameters/notionalaccountarrangementfulfillmentid'
      requestBody:
        $ref: '#/components/requestBodies/NotionalAccountArrangementFulfillment'
      responses:
        '200':
          $ref: '#/components/responses/NotionalAccountArrangementFulfillment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/NotionalPooling/{notionalpoolingid}/NotionalAccountConsolidatedPositionFulfillment/{notionalaccountconsolidatedpositionfulfillmentid}/Update':
    put:
      tags:
        - BQ - NotionalAccountConsolidatedPositionFulfillment
      summary: Update Notional Account Consolidated Position Fulfillment
      description: Update Notional Account Consolidated Position Fulfillment
      operationId: UpdateNotionalAccountConsolidatedPositionFulfillment
      parameters:
        - $ref: '#/components/parameters/notionalpoolingid'
        - $ref: '#/components/parameters/notionalaccountconsolidatedpositionfulfillmentid'
      requestBody:
        $ref: '#/components/requestBodies/NotionalAccountConsolidatedPositionFulfillment'
      responses:
        '200':
          $ref: '#/components/responses/NotionalAccountConsolidatedPositionFulfillment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/NotionalPooling/{notionalpoolingid}/NotionalAccountInterestAllocationFulfillment/{notionalaccountinterestallocationfulfillmentid}/Update':
    put:
      tags:
        - BQ - NotionalAccountInterestAllocationFulfillment
      summary: Update Notional Account Interest Allocation Fulfillment
      description: Update Notional Account Interest Allocation Fulfillment
      operationId: UpdateNotionalAccountInterestAllocationFulfillment
      parameters:
        - $ref: '#/components/parameters/notionalpoolingid'
        - $ref: '#/components/parameters/notionalaccountinterestallocationfulfillmentid'
      requestBody:
        $ref: '#/components/requestBodies/NotionalAccountInterestAllocationFulfillment'
      responses:
        '200':
          $ref: '#/components/responses/NotionalAccountInterestAllocationFulfillment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    condition:
      type: object
      properties:
        Condition:
          type: string
          description: "Condition is a premise upon which the fulfillment of an agreement depends \n\nGeneral and special arrangements, provisions, requirements, rules, specifications, and standards that form an integral part of an agreement or contract.\n\nRead more: http://www.businessdictionary.com/definition/terms-and-conditions.html\n\n"
          format: class
      description: The required status/situation prior to the implementation of the feature
    schedule:
      type: object
      properties:
        ScheduleType:
          type: string
          description: ''
          format: string
      description: The timing and key actions/milestones involved in completing the fulfillment feature instance
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: ''
    businessservicetypevalues:
      type: object
      properties:
        Businessservicetypevalues:
          type: string
          description: ''
          format: enumeration
      description: ''
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: ''
    businessservice:
      type: object
      properties:
        BusinessServiceName:
          $ref: '#/components/schemas/name'
        BusinessServiceType:
          $ref: '#/components/schemas/businessservicetypevalues'
        BusinessServiceDescription:
          $ref: '#/components/schemas/text'
      description: The Notional Account Interest Allocation Fulfillment specific Business Service
    financialfacility:
      type: object
      properties:
        FinancialFacility:
          type: string
          description: ''
          format: class
      description: "Reference to Notional Account Interest Allocation Fulfillment ||\r\n|"
    NotionalAccountInterestAllocationFulfillment:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        NotionalPoolingFacilityReference:
          $ref: '#/components/schemas/financialfacility'
        NotionalAccountInterestAllocationFulfillmentReference:
          type: string
          description: Reference to Notional Account Interest Allocation Fulfillment
          format: object
        NotionalAccountInterestAllocationFulfillmentType:
          $ref: '#/components/schemas/text'
      description: The configuration and execution of Notional Account Interest Allocation Fulfillment arrangement within the Notional Account Interest Allocation Fulfillment
    NotionalAccountArrangementFulfillment:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        NotionalPoolingFacilityReference:
          $ref: '#/components/schemas/financialfacility'
        NotionalAccountArrangementFulfillmentReference:
          type: string
          description: Reference to Notional Account Arrangement Fulfillment
          format: object
        NotionalAccountArrangementFulfillmentType:
          $ref: '#/components/schemas/text'
      description: The configuration and execution of Notional Account Interest Allocation Fulfillment arrangement within the Notional Account Interest Allocation Fulfillment
    NotionalAccountConsolidatedPositionFulfillment:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        NotionalPoolingFacilityReference:
          $ref: '#/components/schemas/financialfacility'
        NotionalAccountConsolidatedPositionFulfillmentReference:
          type: string
          description: Reference to Notional Account Consolidated Position Fulfillment
          format: object
        NotionalAccountConsolidatedPositionFulfillmentType:
          $ref: '#/components/schemas/text'
      description: The configuration and execution of Notional Account Interest Allocation Fulfillment arrangement within the Notional Account Interest Allocation Fulfillment
    workproducttypevalues:
      enum:
        - File
        - ActivityLog
        - WorkingPaper
        - MeetingSchedule
        - Form
        - MeetingMinute
        - Document
      type: string
      description: ">\r\n* `File` - \r\n* `ActivityLog` - \r\n* `WorkingPaper` - \r\n* `MeetingSchedule` - \r\n* `Form` - \r\n* `MeetingMinute` - \r\n* `Document` - \r\n"
    workproduct:
      type: object
      properties:
        WorkProductType:
          $ref: '#/components/schemas/workproducttypevalues'
        WorkProductIdentifoication:
          type: string
          description: ''
          format: string
      description: ''
    NotionalPoolingOutcome:
      type: object
      properties:
        NotionalPoolingFinancialFacility:
          $ref: '#/components/schemas/financialfacility'
        NotionalPoolingWorkProduct:
          $ref: '#/components/schemas/workproduct'
      description: The configuration and execution of Notional Account Interest Allocation Fulfillment arrangement within the Notional Account Interest Allocation Fulfillment
    feature:
      type: object
      properties:
        FeatureType:
          type: string
          description: ''
          format: string
      description: "A selected optional product feature as subject matter of Notional Pooling Facility ||\r\n|"
    bankingproducttype:
      type: object
      properties:
        ProductTypeDefinition:
          type: string
        ProductType:
          type: string
        ProductClassificationIssuingAuthority:
          type: string
      description: "The type of Notional Pooling Facility ||\r\n|"
    calendar:
      type: object
      properties:
        CalendarReference:
          type: string
        CalendarType:
          type: string
      description: "Reference to the calendar used to fulfill Notional Pooling Facility ||\r\n|"
    datetime:
      type: object
      properties:
        DateTimeContent:
          type: string
          description: ''
          format: string
        TimeZoneCode:
          type: string
          description: ''
          format: string
        DaylightSavingIndicator:
          type: string
          description: ''
          format: string
      description: Date and time at which the status was assigned.
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: Period of time during which the status is valid.
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    partyidentificationtypevalues:
      enum:
        - LEI(LegalEntityIdentifier)
        - TaxIdentificationNumber
        - NationalRegistrationNumber
        - RegistrationAuthorityIdentification
        - PassportNumber
        - AlienRegistrationNumber
        - TaxExemptIdentificationNumber
        - ForeignInvestmentIdentityNumber
        - DriverLicenseNumber
        - CorporateIdentification
        - SocialSecurityNumber
        - IdentityCardNumber
        - NationalRegistrationIdentificationNumber
        - Concat
      type: string
      description: ">\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `TaxIdentificationNumber` - \r\n* `NationalRegistrationNumber` - \r\n* `RegistrationAuthorityIdentification` - \r\n* `PassportNumber` - \r\n* `AlienRegistrationNumber` - \r\n* `TaxExemptIdentificationNumber` - \r\n* `ForeignInvestmentIdentityNumber` - \r\n* `DriverLicenseNumber` - \r\n* `CorporateIdentification` - \r\n* `SocialSecurityNumber` - \r\n* `IdentityCardNumber` - \r\n* `NationalRegistrationIdentificationNumber` - \r\n* `Concat` - \r\n"
    value:
      type: object
      properties:
        Value:
          type: string
          description: 'A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)'
          format: datatype
      description: ''
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: "Party who plays a  specific role in the context of assigning a status. ||\r\n| ||\r\n|"
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: "The status of Notional Pooling Facility ||\r\n|"
    currencycode:
      type: object
      properties:
        Currencycode:
          type: string
          description: "A code identifying a currency according to ISO-4217.\nA currency is a system of money in general use in a particular country.\n\nCode allocated to a currency, by a maintenance agency, under an international identification scheme as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\". Valid currency codes are registered with the ISO 4217 Maintenance Agency, and consist of three contiguous letters. (ISO20022)\n\n"
          format: datatype
      description: "The curreny which is arranged in Notional Pooling Facility ||\r\n|"
    rulesettypevalues:
      enum:
        - Guideline
        - Policy
        - Law
        - Criterion
        - Regulation
        - Standard
      type: string
      description: ">\r\n* `Guideline` - \r\n* `Policy` - \r\n* `Law` - \r\n* `Criterion` - \r\n* `Regulation` - \r\n* `Standard` - \r\n"
    rulesettype:
      type: object
      properties:
        RuleSetTypeName:
          $ref: '#/components/schemas/name'
        RuleSetType:
          $ref: '#/components/schemas/rulesettypevalues'
      description: " ||\r\n|"
    ruleset:
      type: object
      properties:
        RuleSetDefinition:
          $ref: '#/components/schemas/text'
        RuleSetInterpretation:
          $ref: '#/components/schemas/text'
        RuleSetType:
          $ref: '#/components/schemas/rulesettype'
        RuleSetName:
          $ref: '#/components/schemas/name'
        RuleSetIdentification:
          $ref: '#/components/schemas/identifier'
        RuleSetLifecycleStatus:
          $ref: '#/components/schemas/status'
      description: "Reference to the regulation which is defined in Notional Pooling Facility ||\r\n|"
    jurisdiction:
      type: object
      properties:
        Jurisdiction:
          type: string
          description: Jurisdiction that will be assigned in case of legal dispute.
          format: class
      description: "Reference to the jurisdiction that is assigned to Notional Pooling Facility in case of legal dispute. ||\r\n|"
    businessunit:
      type: object
      properties:
        BusinessFunction:
          type: string
          description: ''
          format: string
        Goal:
          type: string
          description: ''
          format: string
      description: "The financial accounting unit into which the financial events, with regard to the origination and fulfillment of the agreement in the context of Notional Pooling Facility, are entered. ||\r\n|"
    actiontype:
      type: object
      properties:
        ActionType:
          type: string
        ActionTypeName:
          type: string
      description: "The type of account which is linked to Notional Pooling Facility ||\r\n|"
    accountstatustypevalues:
      enum:
        - Enabled
        - Pending
        - Disabled
        - Deleted
        - ProForma
      type: string
      description: ">\r\n* `Enabled` - \r\n* `Pending` - \r\n* `Disabled` - \r\n* `Deleted` - \r\n* `ProForma` - \r\n"
    accountstatus:
      type: object
      properties:
        AccountStatus:
          $ref: '#/components/schemas/status'
        AccountStatusType:
          $ref: '#/components/schemas/accountstatustypevalues'
      description: "A characteristic of account which refers to the LifecycleStatus of account like opened, closed, blocked, etc.\n\nSpecifies the current state of an account. (ISO20022)"
    accountidentificationtypevalues:
      enum:
        - IBAN
        - AccountNumber
        - BBAN
        - UPIC
      type: string
      description: ">\r\n* `IBAN` - \r\n* `AccountNumber` - \r\n* `BBAN` - \r\n* `UPIC` - \r\n"
    accountidentification:
      type: object
      properties:
        AccountIdentificationType:
          $ref: '#/components/schemas/accountidentificationtypevalues'
        AccountIdentification:
          $ref: '#/components/schemas/identifier'
      description: The identifier of account like Account Number.
    accountdatetypevalues:
      enum:
        - BlockingDate
        - OpeningDate
        - ClosingDate
      type: string
      description: ">\r\n* `BlockingDate` - \r\n* `OpeningDate` - \r\n* `ClosingDate` - \r\n"
    accountdate:
      type: object
      properties:
        AccountDateType:
          $ref: '#/components/schemas/accountdatetypevalues'
        AccountDate:
          $ref: '#/components/schemas/datetime'
      description: 'A characteristic of account which refers to LifecycleDate of account (e.g., ClosingDate, OpeningDate, LiveDate, etc.) '
    accounttypevalues:
      enum:
        - VostroAcount
        - PaymentAccount
        - DebitAccount
        - NostroAccount
        - SettlementAccount
        - CreditAccount
        - SavingAccount
        - CashAccount
        - CurrentAccount
      type: string
      description: ">\r\n* `VostroAcount` - \r\n* `PaymentAccount` - \r\n* `DebitAccount` - \r\n* `NostroAccount` - \r\n* `SettlementAccount` - \r\n* `CreditAccount` - \r\n* `SavingAccount` - \r\n* `CashAccount` - \r\n* `CurrentAccount` - \r\n"
    accounttype:
      type: object
      properties:
        AccountType:
          $ref: '#/components/schemas/accounttypevalues'
        AccountTypeName:
          $ref: '#/components/schemas/name'
      description: 'Specifies the category of account like payment account, loan account, cash account, securities account, etc. '
    amount:
      type: object
      properties:
        AmountValue:
          type: string
          description: ''
          format: string
        AmountCurrency:
          $ref: '#/components/schemas/currencycode'
        DecimalPointPosition:
          type: string
          description: "Decimal point position starts calulating from the right\n"
          format: string
      description: ''
    accountbalancetypevalues:
      enum:
        - OpeningBalance
        - ClosingBalance
        - AvailableBalance
        - ReserveBalance
        - CurrentBalance
        - LedgerBalance
        - FreeBalance
        - PrincipalBalance
      type: string
      description: ">\r\n* `OpeningBalance` - \r\n* `ClosingBalance` - \r\n* `AvailableBalance` - \r\n* `ReserveBalance` - \r\n* `CurrentBalance` - \r\n* `LedgerBalance` - \r\n* `FreeBalance` - \r\n* `PrincipalBalance` - \r\n"
    accountbalance:
      type: object
      properties:
        AccountBalance:
          $ref: '#/components/schemas/amount'
        AccountBalanceType:
          $ref: '#/components/schemas/accountbalancetypevalues'
        AccounBalanceDate:
          $ref: '#/components/schemas/datetime'
      description: "The state of the obligations managed on the account, the result of all entries on the account.\n\nNumerical representation of the net increases and decreases in an account at a specific point in time. (ISO20022)\n\nBanking: Amount available in an account for withdrawal or use.\nRead more: http://www.businessdictionary.com/definition/balance.html\n\nBookkeeping: Difference between the debit and credit sides of an account.\nRead more: http://www.businessdictionary.com/definition/balance.html"
    accountcurrencytypevalues:
      enum:
        - AccountBaseCurrency
        - AccountReportingCurrency
        - AccountSecondaryCurrency
      type: string
      description: ">\r\n* `AccountBaseCurrency` - \r\n* `AccountReportingCurrency` - \r\n* `AccountSecondaryCurrency` - \r\n"
    accountcurrency:
      type: object
      properties:
        AccountCurrencyType:
          $ref: '#/components/schemas/accountcurrencytypevalues'
        AccountCurrency:
          $ref: '#/components/schemas/currencycode'
      description: ''
    account:
      type: object
      properties:
        AccountStatus:
          $ref: '#/components/schemas/accountstatus'
        AccountIdentification:
          $ref: '#/components/schemas/accountidentification'
        AccountDate:
          $ref: '#/components/schemas/accountdate'
        AccountType:
          $ref: '#/components/schemas/accounttype'
        AccountPurpose:
          $ref: '#/components/schemas/text'
        AccountBalance:
          $ref: '#/components/schemas/accountbalance'
        AccountCurrency:
          $ref: '#/components/schemas/accountcurrency'
        AccountDescription:
          $ref: '#/components/schemas/text'
      description: "Reference to the account which is linked to Notional Pooling Facility ||\r\n|"
    position:
      type: object
      properties:
        PositionValue:
          type: string
          description: ''
          format: string
        PositionQuantity:
          type: string
          description: ''
          format: string
        PositionDate:
          type: string
          description: The date on which the state of something is calculated
          format: string
        PositionAmount:
          type: string
          description: ''
          format: string
      description: "The position of Notional Pooling Facility ||\r\n|"
    productidentificationtypevalues:
      enum:
        - ISINCode
        - PackageCode
      type: string
      description: ">\r\n* `ISINCode` - \r\n* `PackageCode` - \r\n"
    productidentification:
      type: object
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/identifier'
        ProductIdentificationType:
          $ref: '#/components/schemas/productidentificationtypevalues'
      description: The identifier of product e.g. ISIN Code.
    bankingproducttypevalues:
      enum:
        - LoanProduct
        - CurrentAccountProduct
        - SavingAccountProduct
      type: string
      description: ">\r\n* `LoanProduct` - \r\n* `CurrentAccountProduct` - \r\n* `SavingAccountProduct` - \r\n"
    productlifecyclestatustypevalues:
      enum:
        - Initiated
        - Announced
        - Sold
        - Obsolete
        - Active
      type: string
      description: ">\r\n* `Initiated` - \r\n* `Announced` - \r\n* `Sold` - \r\n* `Obsolete` - \r\n* `Active` - \r\n"
    productlifecyclestatus:
      type: object
      properties:
        ProductLifecycleStatus:
          $ref: '#/components/schemas/status'
        ProductLifecycleStatusType:
          $ref: '#/components/schemas/productlifecyclestatustypevalues'
      description: 'Refers to the lifecycle of a product (e.g., initiated, announced, active, obsolete, withdrawn).'
    bankingproduct:
      type: object
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/productidentification'
        ProductType:
          $ref: '#/components/schemas/bankingproducttypevalues'
        ProductLifecycleStatus:
          $ref: '#/components/schemas/productlifecyclestatus'
        ProductPriority:
          $ref: '#/components/schemas/text'
        ProductDescription:
          $ref: '#/components/schemas/text'
        ProductVersion:
          $ref: '#/components/schemas/text'
      description: "Reference to the product which is linked to Notional Pooling Facility ||\r\n|"
    limittypevalues:
      type: object
      properties:
        LimitTypeValues:
          type: string
          format: enumeration
      description: ''
    limittype:
      type: object
      properties:
        LimitTypeName:
          $ref: '#/components/schemas/name'
        LimitType:
          $ref: '#/components/schemas/limittypevalues'
      description: Nature of the limit.
    limitstatustypevalues:
      enum:
        - Requested
        - Deleted
        - Disabled
        - Enabled
      type: string
      description: ">\r\n* `Requested` - \r\n* `Deleted` - \r\n* `Disabled` - \r\n* `Enabled` - \r\n"
    limitstatus:
      type: object
      properties:
        LimitStatus:
          $ref: '#/components/schemas/status'
        LimitStatusType:
          $ref: '#/components/schemas/limitstatustypevalues'
      description: Current status of the limit.
    rate:
      type: object
      properties:
        RateValue:
          type: string
          description: ''
          format: string
        RateUnit:
          type: string
          description: "The unit of measure like Percentage or BPS\n\nBasis points (BPS) refers to a common unit of measure for interest rates and other percentages in finance."
          format: string
        RatePeriod:
          type: string
          description: ''
          format: string
        RateCapitalUnit:
          type: string
          description: ''
          format: string
      description: Specifies that the limit is a percentage of a related amount. (ISO20022)
    frequencycodevalues:
      enum:
        - Upfront
        - Weekly
        - Overnight
        - TriggeredByMovement
        - Hourly
        - TenDays
        - Quarterly
        - Adhoc
        - Annual
        - Monthly
        - Rate
        - Fortnightly
        - IntraDay
        - Daily
        - OnCreditEvent
        - SemiAnnual
        - Never
        - OnExpiry
      type: string
      description: ">\r\n* `Upfront` - \r\n* `Weekly` - \r\n* `Overnight` - \r\n* `TriggeredByMovement` - \r\n* `Hourly` - \r\n* `TenDays` - \r\n* `Quarterly` - \r\n* `Adhoc` - \r\n* `Annual` - \r\n* `Monthly` - \r\n* `Rate` - \r\n* `Fortnightly` - \r\n* `IntraDay` - \r\n* `Daily` - \r\n* `OnCreditEvent` - \r\n* `SemiAnnual` - \r\n* `Never` - \r\n* `OnExpiry` - \r\n"
    frequency:
      type: object
      properties:
        FrequencyCode:
          $ref: '#/components/schemas/frequencycodevalues'
        FrequencyName:
          $ref: '#/components/schemas/name'
        FrequencyDefinition:
          $ref: '#/components/schemas/text'
      description: Specifies the periodicity linked to a limit for example the periodicity can indicate that the limit can be reached daily or monthly. (ISO20022)
    limitarrangement:
      type: object
      properties:
        LimitType:
          $ref: '#/components/schemas/limittype'
        LimitCurrency:
          $ref: '#/components/schemas/currencycode'
        LimitValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        LimitAmount:
          $ref: '#/components/schemas/amount'
        LimitStatus:
          $ref: '#/components/schemas/limitstatus'
        LimitRate:
          $ref: '#/components/schemas/rate'
        LimitFrequency:
          $ref: '#/components/schemas/frequency'
      description: "Reference to the limitation related to the position of Notional Pooling Facility ||\r\n|"
    NotionalPoolingFacility:
      type: object
      properties:
        NotionalPoolingFacilityParameterType:
          type: string
          description: A Classification value that distinguishes between arrangements according to the type of business services within Notional Pooling Facility
          format: string
        NotionalPoolingFacilitySelectedOption:
          $ref: '#/components/schemas/feature'
        NotionalPoolingFacilityType:
          $ref: '#/components/schemas/bankingproducttype'
        NotionalPoolingFacilityCalendarReference:
          $ref: '#/components/schemas/calendar'
        NotionalPoolingFacilityStatus:
          $ref: '#/components/schemas/status'
        NotionalPoolingFacilityAssociatedParty:
          $ref: '#/components/schemas/involvedparty'
        NotionalPoolingFacilityCurrency:
          $ref: '#/components/schemas/currencycode'
        NotionalPoolingFacilityRegulationReference:
          $ref: '#/components/schemas/ruleset'
        NotionalPoolingFacilityRegulationType:
          $ref: '#/components/schemas/rulesettype'
        NotionalPoolingFacilityJurisdiction:
          $ref: '#/components/schemas/jurisdiction'
        NotionalPoolingFacilityBookingLocation:
          $ref: '#/components/schemas/businessunit'
        NotionalPoolingFacilityAccountType:
          $ref: '#/components/schemas/actiontype'
        NotionalPoolingFacilityAccountReference:
          $ref: '#/components/schemas/account'
        NotionalPoolingFacilityCustomerReference:
          $ref: '#/components/schemas/involvedparty'
        NotionalPoolingFacilityPosition:
          $ref: '#/components/schemas/position'
        NotionalPoolingFacilityProductReference:
          $ref: '#/components/schemas/bankingproduct'
        NotionalPoolingFacilityPositionLimit:
          $ref: '#/components/schemas/limitarrangement'
        NotionalPoolingFacilityReference:
          $ref: '#/components/schemas/financialfacility'
      description: 'Fulfill any scheduled and ad-hoc obligations under a service arrangement, most typically for a financial product or facility within Notional Pooling. '
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotionalPoolingFacility:
      description: NotionalPoolingFacility
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotionalPoolingFacility'
    NotionalAccountArrangementFulfillment:
      description: NotionalAccountArrangementFulfillment
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotionalAccountArrangementFulfillment'
    NotionalAccountConsolidatedPositionFulfillment:
      description: NotionalAccountConsolidatedPositionFulfillment
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotionalAccountConsolidatedPositionFulfillment'
    NotionalAccountInterestAllocationFulfillment:
      description: NotionalAccountInterestAllocationFulfillment
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotionalAccountInterestAllocationFulfillment'
  parameters:
    notionalpoolingid:
      name: notionalpoolingid
      in: path
      required: true
      style: simple
      schema:
        type: string
    notionalaccountarrangementfulfillmentid:
      name: notionalaccountarrangementfulfillmentid
      in: path
      required: true
      style: simple
      schema:
        type: string
    notionalaccountconsolidatedpositionfulfillmentid:
      name: notionalaccountconsolidatedpositionfulfillmentid
      in: path
      required: true
      style: simple
      schema:
        type: string
    notionalaccountinterestallocationfulfillmentid:
      name: notionalaccountinterestallocationfulfillmentid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    NotionalPoolingFacility:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotionalPoolingFacility'
      required: true
    NotionalAccountArrangementFulfillment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotionalAccountArrangementFulfillment'
      required: true
    NotionalAccountConsolidatedPositionFulfillment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotionalAccountConsolidatedPositionFulfillment'
      required: true
    NotionalAccountInterestAllocationFulfillment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotionalAccountInterestAllocationFulfillment'
      required: true