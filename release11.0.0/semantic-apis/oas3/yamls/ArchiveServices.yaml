openapi: 3.0.1
info:
  title: Archive Services
  description: 'The Archive Services Service Domain enables the bank to retain, maintain and access significant documents that are no longer actively accessed but that might be required in the future'
  contact:
    name: BIAN
    url: https://bian.org
  version: 11.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/ArchiveServices/11.0.0
paths:
  '/ArchiveServices/{archiveservicesid}/Control':
    put:
      tags:
        - CR - ArchiveOperatingSession
      summary: Control Archive Operating Session
      description: Control Archive Operating Session
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/archiveservicesid'
      requestBody:
        $ref: '#/components/requestBodies/ArchiveOperatingSession'
      responses:
        '200':
          $ref: '#/components/responses/ArchiveOperatingSession'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ArchiveServices/{archiveservicesid}/Exchange':
    put:
      tags:
        - CR - ArchiveOperatingSession
      summary: Exchange Archive Operating Session
      description: Exchange Archive Operating Session
      operationId: Exchange
      parameters:
        - $ref: '#/components/parameters/archiveservicesid'
      requestBody:
        $ref: '#/components/requestBodies/ArchiveOperatingSession'
      responses:
        '200':
          $ref: '#/components/responses/ArchiveOperatingSession'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ArchiveServices/{archiveservicesid}/Execute':
    put:
      tags:
        - CR - ArchiveOperatingSession
      summary: Execute Archive Operating Session
      description: Execute Archive Operating Session
      operationId: Execute
      parameters:
        - $ref: '#/components/parameters/archiveservicesid'
      requestBody:
        $ref: '#/components/requestBodies/ArchiveOperatingSession'
      responses:
        '200':
          $ref: '#/components/responses/ArchiveOperatingSession'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /ArchiveServices/Initiate:
    post:
      tags:
        - CR - ArchiveOperatingSession
      summary: Initiate Archive Operating Session
      description: Initiate Archive Operating Session
      operationId: Initiate
      requestBody:
        $ref: '#/components/requestBodies/ArchiveOperatingSession'
      responses:
        '200':
          $ref: '#/components/responses/ArchiveOperatingSession'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ArchiveServices/{archiveservicesid}/Notify':
    get:
      tags:
        - CR - ArchiveOperatingSession
      summary: Notify Archive Operating Session
      description: Notify Archive Operating Session
      operationId: Notify
      parameters:
        - $ref: '#/components/parameters/archiveservicesid'
      responses:
        '200':
          $ref: '#/components/responses/ArchiveOperatingSession'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ArchiveServices/{archiveservicesid}/Request':
    put:
      tags:
        - CR - ArchiveOperatingSession
      summary: Request Archive Operating Session
      description: Request Archive Operating Session
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/archiveservicesid'
      requestBody:
        $ref: '#/components/requestBodies/ArchiveOperatingSession'
      responses:
        '200':
          $ref: '#/components/responses/ArchiveOperatingSession'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ArchiveServices/{archiveservicesid}/Retrieve':
    get:
      tags:
        - CR - ArchiveOperatingSession
      summary: Retrieve Archive Operating Session
      description: Retrieve Archive Operating Session
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/archiveservicesid'
      responses:
        '200':
          $ref: '#/components/responses/ArchiveOperatingSession'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ArchiveServices/{archiveservicesid}/Update':
    put:
      tags:
        - CR - ArchiveOperatingSession
      summary: Update Archive Operating Session
      description: Update Archive Operating Session
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/archiveservicesid'
      requestBody:
        $ref: '#/components/requestBodies/ArchiveOperatingSession'
      responses:
        '200':
          $ref: '#/components/responses/ArchiveOperatingSession'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ArchiveServices/{archiveservicesid}/DocumentCaptureFunction/{documentcapturefunctionid}/Exchange':
    put:
      tags:
        - BQ - DocumentCaptureFunction
      summary: Exchange Document Capture Function
      description: Exchange Document Capture Function
      operationId: ExchangeDocumentCaptureFunction
      parameters:
        - $ref: '#/components/parameters/archiveservicesid'
        - $ref: '#/components/parameters/documentcapturefunctionid'
      requestBody:
        $ref: '#/components/requestBodies/DocumentCaptureFunction'
      responses:
        '200':
          $ref: '#/components/responses/DocumentCaptureFunction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ArchiveServices/{archiveservicesid}/DocumentMaintenanceFunction/{documentmaintenancefunctionid}/Exchange':
    put:
      tags:
        - BQ - DocumentMaintenanceFunction
      summary: Exchange Document Maintenance Function
      description: Exchange Document Maintenance Function
      operationId: ExchangeDocumentMaintenanceFunction
      parameters:
        - $ref: '#/components/parameters/archiveservicesid'
        - $ref: '#/components/parameters/documentmaintenancefunctionid'
      requestBody:
        $ref: '#/components/requestBodies/DocumentMaintenanceFunction'
      responses:
        '200':
          $ref: '#/components/responses/DocumentMaintenanceFunction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ArchiveServices/{archiveservicesid}/DocumentRetrievalFunction/{documentretrievalfunctionid}/Exchange':
    put:
      tags:
        - BQ - DocumentRetrievalFunction
      summary: Exchange Document Retrieval Function
      description: Exchange Document Retrieval Function
      operationId: ExchangeDocumentRetrievalFunction
      parameters:
        - $ref: '#/components/parameters/archiveservicesid'
        - $ref: '#/components/parameters/documentretrievalfunctionid'
      requestBody:
        $ref: '#/components/requestBodies/DocumentRetrievalFunction'
      responses:
        '200':
          $ref: '#/components/responses/DocumentRetrievalFunction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ArchiveServices/{archiveservicesid}/DocumentCaptureFunction/{documentcapturefunctionid}/Execute':
    put:
      tags:
        - BQ - DocumentCaptureFunction
      summary: Execute Document Capture Function
      description: Execute Document Capture Function
      operationId: ExecuteDocumentCaptureFunction
      parameters:
        - $ref: '#/components/parameters/archiveservicesid'
        - $ref: '#/components/parameters/documentcapturefunctionid'
      requestBody:
        $ref: '#/components/requestBodies/DocumentCaptureFunction'
      responses:
        '200':
          $ref: '#/components/responses/DocumentCaptureFunction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ArchiveServices/{archiveservicesid}/DocumentMaintenanceFunction/{documentmaintenancefunctionid}/Execute':
    put:
      tags:
        - BQ - DocumentMaintenanceFunction
      summary: Execute Document Maintenance Function
      description: Execute Document Maintenance Function
      operationId: ExecuteDocumentMaintenanceFunction
      parameters:
        - $ref: '#/components/parameters/archiveservicesid'
        - $ref: '#/components/parameters/documentmaintenancefunctionid'
      requestBody:
        $ref: '#/components/requestBodies/DocumentMaintenanceFunction'
      responses:
        '200':
          $ref: '#/components/responses/DocumentMaintenanceFunction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ArchiveServices/{archiveservicesid}/DocumentRetrievalFunction/{documentretrievalfunctionid}/Execute':
    put:
      tags:
        - BQ - DocumentRetrievalFunction
      summary: Execute Document Retrieval Function
      description: Execute Document Retrieval Function
      operationId: ExecuteDocumentRetrievalFunction
      parameters:
        - $ref: '#/components/parameters/archiveservicesid'
        - $ref: '#/components/parameters/documentretrievalfunctionid'
      requestBody:
        $ref: '#/components/requestBodies/DocumentRetrievalFunction'
      responses:
        '200':
          $ref: '#/components/responses/DocumentRetrievalFunction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ArchiveServices/{archiveservicesid}/DocumentCaptureFunction/Initiate':
    post:
      tags:
        - BQ - DocumentCaptureFunction
      summary: Initiate Document Capture Function
      description: Initiate Document Capture Function
      operationId: InitiateDocumentCaptureFunction
      parameters:
        - $ref: '#/components/parameters/archiveservicesid'
      requestBody:
        $ref: '#/components/requestBodies/DocumentCaptureFunction'
      responses:
        '200':
          $ref: '#/components/responses/DocumentCaptureFunction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ArchiveServices/{archiveservicesid}/DocumentMaintenanceFunction/Initiate':
    post:
      tags:
        - BQ - DocumentMaintenanceFunction
      summary: Initiate Document Maintenance Function
      description: Initiate Document Maintenance Function
      operationId: InitiateDocumentMaintenanceFunction
      parameters:
        - $ref: '#/components/parameters/archiveservicesid'
      requestBody:
        $ref: '#/components/requestBodies/DocumentMaintenanceFunction'
      responses:
        '200':
          $ref: '#/components/responses/DocumentMaintenanceFunction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ArchiveServices/{archiveservicesid}/DocumentRetrievalFunction/Initiate':
    post:
      tags:
        - BQ - DocumentRetrievalFunction
      summary: Initiate Document Retrieval Function
      description: Initiate Document Retrieval Function
      operationId: InitiateDocumentRetrievalFunction
      parameters:
        - $ref: '#/components/parameters/archiveservicesid'
      requestBody:
        $ref: '#/components/requestBodies/DocumentRetrievalFunction'
      responses:
        '200':
          $ref: '#/components/responses/DocumentRetrievalFunction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ArchiveServices/{archiveservicesid}/DocumentCaptureFunction/{documentcapturefunctionid}/Notify':
    get:
      tags:
        - BQ - DocumentCaptureFunction
      summary: Notify Document Capture Function
      description: Notify Document Capture Function
      operationId: NotifyDocumentCaptureFunction
      parameters:
        - $ref: '#/components/parameters/archiveservicesid'
        - $ref: '#/components/parameters/documentcapturefunctionid'
      responses:
        '200':
          $ref: '#/components/responses/DocumentCaptureFunction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ArchiveServices/{archiveservicesid}/DocumentMaintenanceFunction/{documentmaintenancefunctionid}/Notify':
    get:
      tags:
        - BQ - DocumentMaintenanceFunction
      summary: Notify Document Maintenance Function
      description: Notify Document Maintenance Function
      operationId: NotifyDocumentMaintenanceFunction
      parameters:
        - $ref: '#/components/parameters/archiveservicesid'
        - $ref: '#/components/parameters/documentmaintenancefunctionid'
      responses:
        '200':
          $ref: '#/components/responses/DocumentMaintenanceFunction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ArchiveServices/{archiveservicesid}/DocumentRetrievalFunction/{documentretrievalfunctionid}/Notify':
    get:
      tags:
        - BQ - DocumentRetrievalFunction
      summary: Notify Document Retrieval Function
      description: Notify Document Retrieval Function
      operationId: NotifyDocumentRetrievalFunction
      parameters:
        - $ref: '#/components/parameters/archiveservicesid'
        - $ref: '#/components/parameters/documentretrievalfunctionid'
      responses:
        '200':
          $ref: '#/components/responses/DocumentRetrievalFunction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ArchiveServices/{archiveservicesid}/DocumentCaptureFunction/{documentcapturefunctionid}/Request':
    put:
      tags:
        - BQ - DocumentCaptureFunction
      summary: Request Document Capture Function
      description: Request Document Capture Function
      operationId: RequestDocumentCaptureFunction
      parameters:
        - $ref: '#/components/parameters/archiveservicesid'
        - $ref: '#/components/parameters/documentcapturefunctionid'
      requestBody:
        $ref: '#/components/requestBodies/DocumentCaptureFunction'
      responses:
        '200':
          $ref: '#/components/responses/DocumentCaptureFunction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ArchiveServices/{archiveservicesid}/DocumentMaintenanceFunction/{documentmaintenancefunctionid}/Request':
    put:
      tags:
        - BQ - DocumentMaintenanceFunction
      summary: Request Document Maintenance Function
      description: Request Document Maintenance Function
      operationId: RequestDocumentMaintenanceFunction
      parameters:
        - $ref: '#/components/parameters/archiveservicesid'
        - $ref: '#/components/parameters/documentmaintenancefunctionid'
      requestBody:
        $ref: '#/components/requestBodies/DocumentMaintenanceFunction'
      responses:
        '200':
          $ref: '#/components/responses/DocumentMaintenanceFunction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ArchiveServices/{archiveservicesid}/DocumentRetrievalFunction/{documentretrievalfunctionid}/Request':
    put:
      tags:
        - BQ - DocumentRetrievalFunction
      summary: Request Document Retrieval Function
      description: Request Document Retrieval Function
      operationId: RequestDocumentRetrievalFunction
      parameters:
        - $ref: '#/components/parameters/archiveservicesid'
        - $ref: '#/components/parameters/documentretrievalfunctionid'
      requestBody:
        $ref: '#/components/requestBodies/DocumentRetrievalFunction'
      responses:
        '200':
          $ref: '#/components/responses/DocumentRetrievalFunction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ArchiveServices/{archiveservicesid}/DocumentCaptureFunction/{documentcapturefunctionid}/Retrieve':
    get:
      tags:
        - BQ - DocumentCaptureFunction
      summary: Retrieve Document Capture Function
      description: Retrieve Document Capture Function
      operationId: RetrieveDocumentCaptureFunction
      parameters:
        - $ref: '#/components/parameters/archiveservicesid'
        - $ref: '#/components/parameters/documentcapturefunctionid'
      responses:
        '200':
          $ref: '#/components/responses/DocumentCaptureFunction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ArchiveServices/{archiveservicesid}/DocumentMaintenanceFunction/{documentmaintenancefunctionid}/Retrieve':
    get:
      tags:
        - BQ - DocumentMaintenanceFunction
      summary: Retrieve Document Maintenance Function
      description: Retrieve Document Maintenance Function
      operationId: RetrieveDocumentMaintenanceFunction
      parameters:
        - $ref: '#/components/parameters/archiveservicesid'
        - $ref: '#/components/parameters/documentmaintenancefunctionid'
      responses:
        '200':
          $ref: '#/components/responses/DocumentMaintenanceFunction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ArchiveServices/{archiveservicesid}/DocumentRetrievalFunction/{documentretrievalfunctionid}/Retrieve':
    get:
      tags:
        - BQ - DocumentRetrievalFunction
      summary: Retrieve Document Retrieval Function
      description: Retrieve Document Retrieval Function
      operationId: RetrieveDocumentRetrievalFunction
      parameters:
        - $ref: '#/components/parameters/archiveservicesid'
        - $ref: '#/components/parameters/documentretrievalfunctionid'
      responses:
        '200':
          $ref: '#/components/responses/DocumentRetrievalFunction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ArchiveServices/{archiveservicesid}/DocumentCaptureFunction/{documentcapturefunctionid}/Update':
    put:
      tags:
        - BQ - DocumentCaptureFunction
      summary: Update Document Capture Function
      description: Update Document Capture Function
      operationId: UpdateDocumentCaptureFunction
      parameters:
        - $ref: '#/components/parameters/archiveservicesid'
        - $ref: '#/components/parameters/documentcapturefunctionid'
      requestBody:
        $ref: '#/components/requestBodies/DocumentCaptureFunction'
      responses:
        '200':
          $ref: '#/components/responses/DocumentCaptureFunction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ArchiveServices/{archiveservicesid}/DocumentMaintenanceFunction/{documentmaintenancefunctionid}/Update':
    put:
      tags:
        - BQ - DocumentMaintenanceFunction
      summary: Update Document Maintenance Function
      description: Update Document Maintenance Function
      operationId: UpdateDocumentMaintenanceFunction
      parameters:
        - $ref: '#/components/parameters/archiveservicesid'
        - $ref: '#/components/parameters/documentmaintenancefunctionid'
      requestBody:
        $ref: '#/components/requestBodies/DocumentMaintenanceFunction'
      responses:
        '200':
          $ref: '#/components/responses/DocumentMaintenanceFunction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ArchiveServices/{archiveservicesid}/DocumentRetrievalFunction/{documentretrievalfunctionid}/Update':
    put:
      tags:
        - BQ - DocumentRetrievalFunction
      summary: Update Document Retrieval Function
      description: Update Document Retrieval Function
      operationId: UpdateDocumentRetrievalFunction
      parameters:
        - $ref: '#/components/parameters/archiveservicesid'
        - $ref: '#/components/parameters/documentretrievalfunctionid'
      requestBody:
        $ref: '#/components/requestBodies/DocumentRetrievalFunction'
      responses:
        '200':
          $ref: '#/components/responses/DocumentRetrievalFunction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    condition:
      type: object
      properties:
        Condition:
          type: string
          description: "Condition is a premise upon which the fulfillment of an agreement depends \n\nGeneral and special arrangements, provisions, requirements, rules, specifications, and standards that form an integral part of an agreement or contract.\n\nRead more: http://www.businessdictionary.com/definition/terms-and-conditions.html\n\n"
          format: class
      description: The required status/situation and or tasks that need to be completed prior to the invocation of the feature
    schedule:
      type: object
      properties:
        ScheduleType:
          type: string
          description: ''
          format: string
      description: "The schedule and timing of the function ||\r\n| ||\r\n|"
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: ''
    businessservicetypevalues:
      type: object
      properties:
        Businessservicetypevalues:
          type: string
          description: ''
          format: enumeration
      description: ''
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: ''
    businessservice:
      type: object
      properties:
        BusinessServiceName:
          $ref: '#/components/schemas/name'
        BusinessServiceType:
          $ref: '#/components/schemas/businessservicetypevalues'
        BusinessServiceDescription:
          $ref: '#/components/schemas/text'
      description: The Document Capture Function specific Business Service
    duration:
      type: object
      properties:
        Duration:
          type: string
          description: 'A duration is the specification of a length of time without a fixed start or end time, expressed in Gregorian calendar time units (Year, Month, Week, Day) and Hours, Minutes or Seconds. (UN/CEFACT)'
          format: datatype
      description: The time the session was active
    datetime:
      type: object
      properties:
        DateTimeContent:
          type: string
          description: ''
          format: string
        TimeZoneCode:
          type: string
          description: ''
          format: string
        DaylightSavingIndicator:
          type: string
          description: ''
          format: string
      description: Key dates and times for the session
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: Period of time during which the status is valid.
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    partyidentificationtypevalues:
      enum:
        - LEI(LegalEntityIdentifier)
        - TaxIdentificationNumber
        - NationalRegistrationNumber
        - RegistrationAuthorityIdentification
        - PassportNumber
        - AlienRegistrationNumber
        - TaxExemptIdentificationNumber
        - ForeignInvestmentIdentityNumber
        - DriverLicenseNumber
        - CorporateIdentification
        - SocialSecurityNumber
        - IdentityCardNumber
        - NationalRegistrationIdentificationNumber
        - Concat
      type: string
      description: ">\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `TaxIdentificationNumber` - \r\n* `NationalRegistrationNumber` - \r\n* `RegistrationAuthorityIdentification` - \r\n* `PassportNumber` - \r\n* `AlienRegistrationNumber` - \r\n* `TaxExemptIdentificationNumber` - \r\n* `ForeignInvestmentIdentityNumber` - \r\n* `DriverLicenseNumber` - \r\n* `CorporateIdentification` - \r\n* `SocialSecurityNumber` - \r\n* `IdentityCardNumber` - \r\n* `NationalRegistrationIdentificationNumber` - \r\n* `Concat` - \r\n"
    value:
      type: object
      properties:
        Value:
          type: string
          description: 'A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)'
          format: datatype
      description: ''
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: "Party who plays a  specific role in the context of assigning a status. ||\r\n| ||\r\n|"
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: " ||\r\n|"
    sessiontypevalues:
      enum:
        - ContactHandlingSession
        - CustomerDialogueSession
        - ChannelOperatingSession
        - GatewayOperatingSession
        - CorrespondenceOperatingSession
        - DeviceOperatingSession
        - InterbankTransactionOperatingSession
        - InteractiveHelpOperatingSession
        - ACHOperatingSession
        - SwitchOperatingSession
      type: string
      description: ">\r\n* `ContactHandlingSession` - \r\n* `CustomerDialogueSession` - \r\n* `ChannelOperatingSession` - \r\n* `GatewayOperatingSession` - \r\n* `CorrespondenceOperatingSession` - \r\n* `DeviceOperatingSession` - \r\n* `InterbankTransactionOperatingSession` - \r\n* `InteractiveHelpOperatingSession` - \r\n* `ACHOperatingSession` - \r\n* `SwitchOperatingSession` - \r\n"
    sessiontype:
      type: object
      properties:
        SessionTypeName:
          $ref: '#/components/schemas/name'
        SessionType:
          $ref: '#/components/schemas/sessiontypevalues'
      description: "Specifies the classification of session like Customer Contact Session, Channel Operating Session, Device Operating Session, etc. ||\r\n|"
    session:
      type: object
      properties:
        SessionDuration:
          $ref: '#/components/schemas/duration'
        SessionDateTime:
          $ref: '#/components/schemas/datetime'
        SessionStatus:
          $ref: '#/components/schemas/status'
        SessionType:
          $ref: '#/components/schemas/sessiontype'
        SessionScheduel:
          $ref: '#/components/schemas/schedule'
      description: "Reference to Document Capture Function ||\r\n|"
    function:
      type: object
      properties:
        Function:
          type: string
          description: "A kind of action.\n\nFunctions as Behaviour Qualifier: The collection of operational services/functions offered by the operational facility."
          format: class
      description: Reference to Document Capture Function
    DocumentCaptureFunction:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        ArchiveOperatingSessionReference:
          $ref: '#/components/schemas/session'
        DocumentCaptureFunctionReference:
          $ref: '#/components/schemas/function'
        DocumentCaptureFunctionType:
          $ref: '#/components/schemas/text'
      description: An operational service or function supported within the Document Capture Function for doing Document Capture Function
    DocumentMaintenanceFunction:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        ArchiveOperatingSessionReference:
          $ref: '#/components/schemas/session'
        DocumentMaintenanceFunctionReference:
          $ref: '#/components/schemas/function'
        DocumentMaintenanceFunctionType:
          $ref: '#/components/schemas/text'
      description: An operational service or function supported within the Document Capture Function for doing Document Capture Function
    DocumentRetrievalFunction:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        ArchiveOperatingSessionReference:
          $ref: '#/components/schemas/session'
        DocumentRetrievalFunctionReference:
          $ref: '#/components/schemas/function'
        DocumentRetrievalFunctionType:
          $ref: '#/components/schemas/text'
      description: An operational service or function supported within the Document Capture Function for doing Document Capture Function
    event:
      type: object
      properties:
        EventType:
          type: string
          description: ''
          format: string
        EventDateTime:
          type: string
          description: ''
          format: string
        EventDescription:
          type: string
          description: ''
          format: string
        EventSource:
          type: string
          description: ''
          format: string
        EventLocation:
          type: string
          description: ''
          format: string
        EventAction:
          type: string
          description: ''
          format: string
        EventStatus:
          type: string
          description: ''
          format: string
        EventValue:
          type: string
          description: ''
          format: string
        EventValidityPeriod:
          type: string
          description: ''
          format: string
        EventIdentification:
          type: string
          description: ''
          format: string
      description: ''
    ArchiveServicesOutcome:
      type: object
      properties:
        ArchiveServicesIncident:
          $ref: '#/components/schemas/event'
        ArchiveServicesProvision:
          $ref: '#/components/schemas/text'
      description: An operational service or function supported within the Document Capture Function for doing Document Capture Function
    log:
      type: object
      properties:
        LogType:
          type: string
          description: ''
          format: string
        LogPeriod:
          type: string
          description: ''
          format: string
        LogDate:
          type: string
          description: Key dates associated with the log (e.g. start time).
          format: string
        LogIdentification:
          type: string
          description: ''
          format: string
      description: "Reference to the log of (usage) ativities/events  of Archive Operating Session ||\r\n|"
    servicetypevalues:
      enum:
        - AdministrativeService
        - BankingService
        - ITService
        - SystemService
        - BusinessService
      type: string
      description: ">\r\n* `AdministrativeService` - \r\n* `BankingService` - \r\n* `ITService` - \r\n* `SystemService` - \r\n* `BusinessService` - \r\n"
    servicetype:
      type: object
      properties:
        ServiceTypeName:
          $ref: '#/components/schemas/name'
        ServiceType:
          $ref: '#/components/schemas/servicetypevalues'
      description: "A Classification value that distinguishes between the type of services within Archive Operating Session ||\r\n|"
    systemconfigurationoption:
      type: object
      properties:
        SystemConfigurationOption:
          type: string
          description: "Options for configuring the system or the function/feature of system.\n"
          format: class
      description: "The configuration of Archive Operating Session ||\r\n|"
    ArchiveOperatingSession:
      type: object
      properties:
        ArchiveOperatingSessionSchedule:
          $ref: '#/components/schemas/schedule'
        ArchiveOperatingSessionStatus:
          $ref: '#/components/schemas/status'
        ArchiveOperatingSessionUsageLog:
          $ref: '#/components/schemas/log'
        ArchiveOperatingSessionAssociatedPartyReference:
          $ref: '#/components/schemas/involvedparty'
        ArchiveOperatingSessionServiceProviderReference:
          $ref: '#/components/schemas/involvedparty'
        ArchiveOperatingSessionType:
          $ref: '#/components/schemas/sessiontype'
        ArchiveOperatingSessionServiceProviderSchedule:
          $ref: '#/components/schemas/schedule'
        ArchiveOperatingSessionServiceType:
          $ref: '#/components/schemas/servicetype'
        ArchiveOperatingSessionServiceConfiguration:
          $ref: '#/components/schemas/systemconfigurationoption'
        ArchiveOperatingSessionReference:
          $ref: '#/components/schemas/session'
      description: 'Operate equipment and/or a largely automated facility within Archive Services. '
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ArchiveOperatingSession:
      description: ArchiveOperatingSession
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ArchiveOperatingSession'
    DocumentCaptureFunction:
      description: DocumentCaptureFunction
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DocumentCaptureFunction'
    DocumentMaintenanceFunction:
      description: DocumentMaintenanceFunction
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DocumentMaintenanceFunction'
    DocumentRetrievalFunction:
      description: DocumentRetrievalFunction
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DocumentRetrievalFunction'
  parameters:
    archiveservicesid:
      name: archiveservicesid
      in: path
      required: true
      style: simple
      schema:
        type: string
    documentcapturefunctionid:
      name: documentcapturefunctionid
      in: path
      required: true
      style: simple
      schema:
        type: string
    documentmaintenancefunctionid:
      name: documentmaintenancefunctionid
      in: path
      required: true
      style: simple
      schema:
        type: string
    documentretrievalfunctionid:
      name: documentretrievalfunctionid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    ArchiveOperatingSession:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ArchiveOperatingSession'
      required: true
    DocumentCaptureFunction:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DocumentCaptureFunction'
      required: true
    DocumentMaintenanceFunction:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DocumentMaintenanceFunction'
      required: true
    DocumentRetrievalFunction:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DocumentRetrievalFunction'
      required: true