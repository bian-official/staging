openapi: 3.0.1
info:
  title: Credit Card Position Keeping
  contact:
    name: BIAN
    url: https://bian.org
  version: 11.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/CreditCardPositionKeeping/11.0.0
paths:
  '/CreditCardPositionKeeping/{creditcardpositionkeepingid}/Capture':
    put:
      tags:
        - CR - CreditCardPositionLog
      summary: Capture Credit Card Position Log
      description: Capture Credit Card Position Log
      operationId: Capture
      parameters:
        - $ref: '#/components/parameters/creditcardpositionkeepingid'
      requestBody:
        $ref: '#/components/requestBodies/CreditCardPositionLog'
      responses:
        '200':
          $ref: '#/components/responses/CreditCardPositionLog'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CreditCardPositionKeeping/{creditcardpositionkeepingid}/Control':
    put:
      tags:
        - CR - CreditCardPositionLog
      summary: Control Credit Card Position Log
      description: Control Credit Card Position Log
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/creditcardpositionkeepingid'
      requestBody:
        $ref: '#/components/requestBodies/CreditCardPositionLog'
      responses:
        '200':
          $ref: '#/components/responses/CreditCardPositionLog'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /CreditCardPositionKeeping/Initiate:
    post:
      tags:
        - CR - CreditCardPositionLog
      summary: Initiate Credit Card Position Log
      description: Initiate Credit Card Position Log
      operationId: Initiate
      requestBody:
        $ref: '#/components/requestBodies/CreditCardPositionLog'
      responses:
        '200':
          $ref: '#/components/responses/CreditCardPositionLog'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CreditCardPositionKeeping/{creditcardpositionkeepingid}/Notify':
    get:
      tags:
        - CR - CreditCardPositionLog
      summary: Notify Credit Card Position Log
      description: Notify Credit Card Position Log
      operationId: Notify
      parameters:
        - $ref: '#/components/parameters/creditcardpositionkeepingid'
      responses:
        '200':
          $ref: '#/components/responses/CreditCardPositionLog'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CreditCardPositionKeeping/{creditcardpositionkeepingid}/Retrieve':
    get:
      tags:
        - CR - CreditCardPositionLog
      summary: Retrieve Credit Card Position Log
      description: Retrieve Credit Card Position Log
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/creditcardpositionkeepingid'
      responses:
        '200':
          $ref: '#/components/responses/CreditCardPositionLog'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CreditCardPositionKeeping/{creditcardpositionkeepingid}/Update':
    put:
      tags:
        - CR - CreditCardPositionLog
      summary: Update Credit Card Position Log
      description: Update Credit Card Position Log
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/creditcardpositionkeepingid'
      requestBody:
        $ref: '#/components/requestBodies/CreditCardPositionLog'
      responses:
        '200':
          $ref: '#/components/responses/CreditCardPositionLog'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CreditCardPositionKeeping/{creditcardpositionkeepingid}/CardTransactionEvent/{cardtransactioneventid}/Capture':
    put:
      tags:
        - BQ - CardTransactionEvent
      summary: Capture Card Transaction Event
      description: Capture Card Transaction Event
      operationId: CaptureCardTransactionEvent
      parameters:
        - $ref: '#/components/parameters/creditcardpositionkeepingid'
        - $ref: '#/components/parameters/cardtransactioneventid'
      requestBody:
        $ref: '#/components/requestBodies/CardTransactionEvent'
      responses:
        '200':
          $ref: '#/components/responses/CardTransactionEvent'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CreditCardPositionKeeping/{creditcardpositionkeepingid}/CardTransactionEvent/{cardtransactioneventid}/Notify':
    get:
      tags:
        - BQ - CardTransactionEvent
      summary: Notify Card Transaction Event
      description: Notify Card Transaction Event
      operationId: NotifyCardTransactionEvent
      parameters:
        - $ref: '#/components/parameters/creditcardpositionkeepingid'
        - $ref: '#/components/parameters/cardtransactioneventid'
      responses:
        '200':
          $ref: '#/components/responses/CardTransactionEvent'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CreditCardPositionKeeping/{creditcardpositionkeepingid}/CardTransactionEvent/{cardtransactioneventid}/Retrieve':
    get:
      tags:
        - BQ - CardTransactionEvent
      summary: Retrieve Card Transaction Event
      description: Retrieve Card Transaction Event
      operationId: RetrieveCardTransactionEvent
      parameters:
        - $ref: '#/components/parameters/creditcardpositionkeepingid'
        - $ref: '#/components/parameters/cardtransactioneventid'
      responses:
        '200':
          $ref: '#/components/responses/CardTransactionEvent'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CreditCardPositionKeeping/{creditcardpositionkeepingid}/CardTransactionEvent/{cardtransactioneventid}/Update':
    put:
      tags:
        - BQ - CardTransactionEvent
      summary: Update Card Transaction Event
      description: Update Card Transaction Event
      operationId: UpdateCardTransactionEvent
      parameters:
        - $ref: '#/components/parameters/creditcardpositionkeepingid'
        - $ref: '#/components/parameters/cardtransactioneventid'
      requestBody:
        $ref: '#/components/requestBodies/CardTransactionEvent'
      responses:
        '200':
          $ref: '#/components/responses/CardTransactionEvent'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    condition:
      type: object
      properties:
        Condition:
          type: string
          description: "Condition is a premise upon which the fulfillment of an agreement depends \n\nGeneral and special arrangements, provisions, requirements, rules, specifications, and standards that form an integral part of an agreement or contract.\n\nRead more: http://www.businessdictionary.com/definition/terms-and-conditions.html\n\n"
          format: class
      description: The required status/situation before the event is captured
    schedule:
      type: object
      properties:
        ScheduleType:
          type: string
          description: ''
          format: string
      description: The timing and key actions/milestones involved in capturing the event
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: ''
    businessservicetypevalues:
      type: object
      properties:
        Businessservicetypevalues:
          type: string
          description: ''
          format: enumeration
      description: ''
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: ''
    businessservice:
      type: object
      properties:
        BusinessServiceName:
          $ref: '#/components/schemas/name'
        BusinessServiceType:
          $ref: '#/components/schemas/businessservicetypevalues'
        BusinessServiceDescription:
          $ref: '#/components/schemas/text'
      description: The Card Transaction Event specific Business Service
    log:
      type: object
      properties:
        LogType:
          type: string
          description: ''
          format: string
        LogPeriod:
          type: string
          description: ''
          format: string
        LogDate:
          type: string
          description: Key dates associated with the log (e.g. start time).
          format: string
        LogIdentification:
          type: string
          description: ''
          format: string
      description: Reference to Card Transaction Event
    event:
      type: object
      properties:
        EventType:
          type: string
          description: ''
          format: string
        EventDateTime:
          type: string
          description: ''
          format: string
        EventDescription:
          type: string
          description: ''
          format: string
        EventSource:
          type: string
          description: ''
          format: string
        EventLocation:
          type: string
          description: ''
          format: string
        EventAction:
          type: string
          description: ''
          format: string
        EventStatus:
          type: string
          description: ''
          format: string
        EventValue:
          type: string
          description: ''
          format: string
        EventValidityPeriod:
          type: string
          description: ''
          format: string
        EventIdentification:
          type: string
          description: ''
          format: string
      description: Reference to Card Transaction Event
    CardTransactionEvent:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        CreditCardPositionLogReference:
          $ref: '#/components/schemas/log'
        CardTransactionEventReference:
          $ref: '#/components/schemas/event'
        CardTransactionEventType:
          $ref: '#/components/schemas/text'
      description: The Card Transaction Event is one of the specific types of events that is recorded in the Card Transaction Event
    CreditCardPositionKeepingOutcome:
      type: object
      properties:
        CreditCardPositionKeepingIncident:
          $ref: '#/components/schemas/event'
        CreditCardPositionKeepingLog:
          $ref: '#/components/schemas/log'
      description: The Card Transaction Event is one of the specific types of events that is recorded in the Card Transaction Event
    servicetype:
      type: object
      properties:
        ServiceTypeName:
          $ref: '#/components/schemas/name'
        ServiceType:
          type: string
          description: ''
          format: servicetypevalues
      description: ''
    service:
      type: object
      properties:
        ServiceName:
          $ref: '#/components/schemas/name'
        ServiceDescription:
          $ref: '#/components/schemas/text'
        ServiceType:
          $ref: '#/components/schemas/servicetype'
      description: A selected optional business service as subject matter of Credit Card Position Log
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\n"
    datetime:
      type: object
      properties:
        DateTimeContent:
          type: string
          description: ''
          format: string
        TimeZoneCode:
          type: string
          description: ''
          format: string
        DaylightSavingIndicator:
          type: string
          description: ''
          format: string
      description: ''
    value:
      type: object
      properties:
        Value:
          type: string
          description: 'A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)'
          format: datatype
      description: ''
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          type: string
          description: ''
          format: partyidentificationtypevalues
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
      description: ''
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\n* `Agreementinvolvement` - \n* `Partyinvolvement` - \n* `Arrangementinvolvement` - \n* `Designspecificationinvolvement` - \n* `Relationshipinvolvement` - \n* `Locationinvolvement` - \n* `Bankguaranteeinvolvement` - \n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: Reference to the party who is involved in Credit Card Position Log
    businessunit:
      type: object
      properties:
        BusinessFunction:
          type: string
          description: ''
          format: string
        Goal:
          type: string
          description: ''
          format: string
      description: Reference to the business unit which is involved in Credit Card Position Log
    position:
      type: object
      properties:
        PositionValue:
          type: string
          description: ''
          format: string
        PositionQuantity:
          type: string
          description: ''
          format: string
        PositionDate:
          type: string
          description: The date on which the state of something is calculated
          format: string
        PositionAmount:
          type: string
          description: ''
          format: string
      description: The position of Credit Card Position Log
    positiontype:
      type: object
      properties:
        PositionType:
          type: string
          description: 'A classification of the position. '
          format: class
      description: A classification value expressing the kind of position withing the Credit Card Position Log
    limittype:
      type: object
      properties:
        LimitTypeName:
          $ref: '#/components/schemas/name'
        LimitType:
          type: string
          description: ''
          format: limittypevalues
      description: Nature of the limit.
    currencycode:
      type: object
      properties:
        Currencycode:
          type: string
          description: "A code identifying a currency according to ISO-4217.\nA currency is a system of money in general use in a particular country.\n\nCode allocated to a currency, by a maintenance agency, under an international identification scheme as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\". Valid currency codes are registered with the ISO 4217 Maintenance Agency, and consist of three contiguous letters. (ISO20022)\n\n"
          format: datatype
      description: Currency unit used to specify the limit amount. (ISO20022)
    amount:
      type: object
      properties:
        AmountValue:
          type: string
          description: ''
          format: string
        AmountCurrency:
          $ref: '#/components/schemas/currencycode'
        DecimalPointPosition:
          type: string
          description: "Decimal point position starts calulating from the right\n"
          format: string
      description: 'Amount of money of the limit, expressed in a currency. (ISO20022)'
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: ''
    limitstatus:
      type: object
      properties:
        LimitStatus:
          $ref: '#/components/schemas/status'
        LimitStatusType:
          type: string
          description: ''
          format: limitstatustypevalues
      description: Current status of the limit.
    rate:
      type: object
      properties:
        RateValue:
          type: string
          description: ''
          format: string
        RateUnit:
          type: string
          description: "The unit of measure like Percentage or BPS\n\nBasis points (BPS) refers to a common unit of measure for interest rates and other percentages in finance."
          format: string
        RatePeriod:
          type: string
          description: ''
          format: string
        RateCapitalUnit:
          type: string
          description: ''
          format: string
      description: Specifies that the limit is a percentage of a related amount. (ISO20022)
    frequency:
      type: object
      properties:
        FrequencyCode:
          type: string
          description: ''
          format: frequencycodevalues
        FrequencyName:
          $ref: '#/components/schemas/name'
        FrequencyDefinition:
          $ref: '#/components/schemas/text'
      description: Specifies the periodicity linked to a limit for example the periodicity can indicate that the limit can be reached daily or monthly. (ISO20022)
    limitarrangement:
      type: object
      properties:
        LimitType:
          $ref: '#/components/schemas/limittype'
        LimitCurrency:
          $ref: '#/components/schemas/currencycode'
        LimitValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        LimitAmount:
          $ref: '#/components/schemas/amount'
        LimitStatus:
          $ref: '#/components/schemas/limitstatus'
        LimitRate:
          $ref: '#/components/schemas/rate'
        LimitFrequency:
          $ref: '#/components/schemas/frequency'
      description: Reference to the time limitation related to the position of Credit Card Position Log
    CreditCardPositionLog:
      type: object
      properties:
        CreditCardPositionLogParameterType:
          $ref: '#/components/schemas/text'
        CreditCardPositionLogSelectedOption:
          $ref: '#/components/schemas/service'
        CreditCardPositionLogType:
          $ref: '#/components/schemas/text'
        CreditCardPositionLogSchedule:
          $ref: '#/components/schemas/schedule'
        CreditCardPositionLogUsageLog:
          $ref: '#/components/schemas/log'
        CreditCardPositionLogUpdateLog:
          $ref: '#/components/schemas/log'
        CreditCardPositionLogAssociatedParty:
          $ref: '#/components/schemas/involvedparty'
        CreditCardPositionLogBusinessUnitReference:
          $ref: '#/components/schemas/businessunit'
        CreditCardPositionLogCustomerReference:
          $ref: '#/components/schemas/involvedparty'
        CreditCardPositionLogServiceConfiguration:
          $ref: '#/components/schemas/text'
        CreditCardPositionLogPosition:
          $ref: '#/components/schemas/position'
        CreditCardPositionLogPositionType:
          $ref: '#/components/schemas/positiontype'
        CreditCardPositionLogPositionLimitTime:
          $ref: '#/components/schemas/limitarrangement'
        CreditCardPositionLogReference:
          $ref: '#/components/schemas/log'
      description: 'Maintain a log of transactions or activity, typically a financial account/journal or a log of activity to support behavioral analysis within Credit Card Position Keeping. '
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    CreditCardPositionLog:
      description: CreditCardPositionLog
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreditCardPositionLog'
    CardTransactionEvent:
      description: CardTransactionEvent
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CardTransactionEvent'
  parameters:
    creditcardpositionkeepingid:
      name: creditcardpositionkeepingid
      in: path
      required: true
      style: simple
      schema:
        type: string
    cardtransactioneventid:
      name: cardtransactioneventid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    CreditCardPositionLog:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreditCardPositionLog'
      required: true
    CardTransactionEvent:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CardTransactionEvent'
      required: true