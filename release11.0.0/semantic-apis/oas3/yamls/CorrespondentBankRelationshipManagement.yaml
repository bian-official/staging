openapi: 3.0.1
info:
  title: Correspondent Bank Relationship Management
  description: 'This Service Domain manages correspondent bank relations, ensuring reciprocity and developing business where possible'
  contact:
    name: BIAN
    url: https://bian.org
  version: 11.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/CorrespondentBankRelationshipManagement/11.0.0
paths:
  '/CorrespondentBankRelationshipManagement/{correspondentbankrelationshipmanagementid}/Control':
    put:
      tags:
        - CR - CorrepondentBankRelationshipManagementPlan
      summary: Control Correpondent Bank Relationship Management Plan
      description: Control Correpondent Bank Relationship Management Plan
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/correspondentbankrelationshipmanagementid'
      requestBody:
        $ref: '#/components/requestBodies/ControlCorrepondentBankRelationshipManagementPlanRequest'
      responses:
        '200':
          $ref: '#/components/responses/ControlCorrepondentBankRelationshipManagementPlanResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /CorrespondentBankRelationshipManagement/Create:
    post:
      tags:
        - CR - CorrepondentBankRelationshipManagementPlan
      summary: Create Correpondent Bank Relationship Management Plan
      description: Create Correpondent Bank Relationship Management Plan
      operationId: Create
      requestBody:
        $ref: '#/components/requestBodies/CreateCorrepondentBankRelationshipManagementPlanRequest'
      responses:
        '200':
          $ref: '#/components/responses/CreateCorrepondentBankRelationshipManagementPlanResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankRelationshipManagement/{correspondentbankrelationshipmanagementid}/Exchange':
    put:
      tags:
        - CR - CorrepondentBankRelationshipManagementPlan
      summary: Exchange Correpondent Bank Relationship Management Plan
      description: Exchange Correpondent Bank Relationship Management Plan
      operationId: Exchange
      parameters:
        - $ref: '#/components/parameters/correspondentbankrelationshipmanagementid'
      requestBody:
        $ref: '#/components/requestBodies/ExchangeCorrepondentBankRelationshipManagementPlanRequest'
      responses:
        '200':
          $ref: '#/components/responses/ExchangeCorrepondentBankRelationshipManagementPlanResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankRelationshipManagement/{correspondentbankrelationshipmanagementid}/Grant':
    put:
      tags:
        - CR - CorrepondentBankRelationshipManagementPlan
      summary: Grant Correpondent Bank Relationship Management Plan
      description: Grant Correpondent Bank Relationship Management Plan
      operationId: Grant
      parameters:
        - $ref: '#/components/parameters/correspondentbankrelationshipmanagementid'
      requestBody:
        $ref: '#/components/requestBodies/GrantCorrepondentBankRelationshipManagementPlanRequest'
      responses:
        '200':
          $ref: '#/components/responses/GrantCorrepondentBankRelationshipManagementPlanResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankRelationshipManagement/{correspondentbankrelationshipmanagementid}/Notify':
    get:
      tags:
        - CR - CorrepondentBankRelationshipManagementPlan
      summary: Notify Correpondent Bank Relationship Management Plan
      description: Notify Correpondent Bank Relationship Management Plan
      operationId: Notify
      parameters:
        - $ref: '#/components/parameters/correspondentbankrelationshipmanagementid'
      responses:
        '200':
          $ref: '#/components/responses/NotifyCorrepondentBankRelationshipManagementPlanResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankRelationshipManagement/{correspondentbankrelationshipmanagementid}/Request':
    put:
      tags:
        - CR - CorrepondentBankRelationshipManagementPlan
      summary: Request Correpondent Bank Relationship Management Plan
      description: Request Correpondent Bank Relationship Management Plan
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/correspondentbankrelationshipmanagementid'
      requestBody:
        $ref: '#/components/requestBodies/RequestCorrepondentBankRelationshipManagementPlanRequest'
      responses:
        '200':
          $ref: '#/components/responses/RequestCorrepondentBankRelationshipManagementPlanResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankRelationshipManagement/{correspondentbankrelationshipmanagementid}/Retrieve':
    get:
      tags:
        - CR - CorrepondentBankRelationshipManagementPlan
      summary: Retrieve Correpondent Bank Relationship Management Plan
      description: Retrieve Correpondent Bank Relationship Management Plan
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/correspondentbankrelationshipmanagementid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveCorrepondentBankRelationshipManagementPlanResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankRelationshipManagement/{correspondentbankrelationshipmanagementid}/Update':
    put:
      tags:
        - CR - CorrepondentBankRelationshipManagementPlan
      summary: Update Correpondent Bank Relationship Management Plan
      description: Update Correpondent Bank Relationship Management Plan
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/correspondentbankrelationshipmanagementid'
      requestBody:
        $ref: '#/components/requestBodies/UpdateCorrepondentBankRelationshipManagementPlanRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateCorrepondentBankRelationshipManagementPlanResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankRelationshipManagement/{correspondentbankrelationshipmanagementid}/IncidentTroubleshootingOversightDuty/{incidenttroubleshootingoversightdutyid}/Exchange':
    put:
      tags:
        - BQ - IncidentTroubleshootingOversightDuty
      summary: Exchange Incident Troubleshooting Oversight Duty
      description: Exchange Incident Troubleshooting Oversight Duty
      operationId: ExchangeIncidentTroubleshootingOversightDuty
      parameters:
        - $ref: '#/components/parameters/correspondentbankrelationshipmanagementid'
        - $ref: '#/components/parameters/incidenttroubleshootingoversightdutyid'
      requestBody:
        $ref: '#/components/requestBodies/IncidentTroubleshootingOversightDuty'
      responses:
        '200':
          $ref: '#/components/responses/IncidentTroubleshootingOversightDuty'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankRelationshipManagement/{correspondentbankrelationshipmanagementid}/RelationshipDevelopmentDuty/{relationshipdevelopmentdutyid}/Exchange':
    put:
      tags:
        - BQ - RelationshipDevelopmentDuty
      summary: Exchange Relationship Development Duty
      description: Exchange Relationship Development Duty
      operationId: ExchangeRelationshipDevelopmentDuty
      parameters:
        - $ref: '#/components/parameters/correspondentbankrelationshipmanagementid'
        - $ref: '#/components/parameters/relationshipdevelopmentdutyid'
      requestBody:
        $ref: '#/components/requestBodies/RelationshipDevelopmentDuty'
      responses:
        '200':
          $ref: '#/components/responses/RelationshipDevelopmentDuty'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankRelationshipManagement/{correspondentbankrelationshipmanagementid}/RelationshipReciprocityAssessmentDuty/{relationshipreciprocityassessmentdutyid}/Exchange':
    put:
      tags:
        - BQ - RelationshipReciprocityAssessmentDuty
      summary: Exchange Relationship Reciprocity Assessment Duty
      description: Exchange Relationship Reciprocity Assessment Duty
      operationId: ExchangeRelationshipReciprocityAssessmentDuty
      parameters:
        - $ref: '#/components/parameters/correspondentbankrelationshipmanagementid'
        - $ref: '#/components/parameters/relationshipreciprocityassessmentdutyid'
      requestBody:
        $ref: '#/components/requestBodies/RelationshipReciprocityAssessmentDuty'
      responses:
        '200':
          $ref: '#/components/responses/RelationshipReciprocityAssessmentDuty'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankRelationshipManagement/{correspondentbankrelationshipmanagementid}/IncidentTroubleshootingOversightDuty/{incidenttroubleshootingoversightdutyid}/Grant':
    put:
      tags:
        - BQ - IncidentTroubleshootingOversightDuty
      summary: Grant Incident Troubleshooting Oversight Duty
      description: Grant Incident Troubleshooting Oversight Duty
      operationId: GrantIncidentTroubleshootingOversightDuty
      parameters:
        - $ref: '#/components/parameters/correspondentbankrelationshipmanagementid'
        - $ref: '#/components/parameters/incidenttroubleshootingoversightdutyid'
      requestBody:
        $ref: '#/components/requestBodies/IncidentTroubleshootingOversightDuty'
      responses:
        '200':
          $ref: '#/components/responses/IncidentTroubleshootingOversightDuty'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankRelationshipManagement/{correspondentbankrelationshipmanagementid}/RelationshipDevelopmentDuty/{relationshipdevelopmentdutyid}/Grant':
    put:
      tags:
        - BQ - RelationshipDevelopmentDuty
      summary: Grant Relationship Development Duty
      description: Grant Relationship Development Duty
      operationId: GrantRelationshipDevelopmentDuty
      parameters:
        - $ref: '#/components/parameters/correspondentbankrelationshipmanagementid'
        - $ref: '#/components/parameters/relationshipdevelopmentdutyid'
      requestBody:
        $ref: '#/components/requestBodies/RelationshipDevelopmentDuty'
      responses:
        '200':
          $ref: '#/components/responses/RelationshipDevelopmentDuty'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankRelationshipManagement/{correspondentbankrelationshipmanagementid}/RelationshipReciprocityAssessmentDuty/{relationshipreciprocityassessmentdutyid}/Grant':
    put:
      tags:
        - BQ - RelationshipReciprocityAssessmentDuty
      summary: Grant Relationship Reciprocity Assessment Duty
      description: Grant Relationship Reciprocity Assessment Duty
      operationId: GrantRelationshipReciprocityAssessmentDuty
      parameters:
        - $ref: '#/components/parameters/correspondentbankrelationshipmanagementid'
        - $ref: '#/components/parameters/relationshipreciprocityassessmentdutyid'
      requestBody:
        $ref: '#/components/requestBodies/RelationshipReciprocityAssessmentDuty'
      responses:
        '200':
          $ref: '#/components/responses/RelationshipReciprocityAssessmentDuty'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankRelationshipManagement/{correspondentbankrelationshipmanagementid}/IncidentTroubleshootingOversightDuty/{incidenttroubleshootingoversightdutyid}/Notify':
    get:
      tags:
        - BQ - IncidentTroubleshootingOversightDuty
      summary: Notify Incident Troubleshooting Oversight Duty
      description: Notify Incident Troubleshooting Oversight Duty
      operationId: NotifyIncidentTroubleshootingOversightDuty
      parameters:
        - $ref: '#/components/parameters/correspondentbankrelationshipmanagementid'
        - $ref: '#/components/parameters/incidenttroubleshootingoversightdutyid'
      responses:
        '200':
          $ref: '#/components/responses/IncidentTroubleshootingOversightDuty'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankRelationshipManagement/{correspondentbankrelationshipmanagementid}/RelationshipDevelopmentDuty/{relationshipdevelopmentdutyid}/Notify':
    get:
      tags:
        - BQ - RelationshipDevelopmentDuty
      summary: Notify Relationship Development Duty
      description: Notify Relationship Development Duty
      operationId: NotifyRelationshipDevelopmentDuty
      parameters:
        - $ref: '#/components/parameters/correspondentbankrelationshipmanagementid'
        - $ref: '#/components/parameters/relationshipdevelopmentdutyid'
      responses:
        '200':
          $ref: '#/components/responses/RelationshipDevelopmentDuty'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankRelationshipManagement/{correspondentbankrelationshipmanagementid}/RelationshipReciprocityAssessmentDuty/{relationshipreciprocityassessmentdutyid}/Notify':
    get:
      tags:
        - BQ - RelationshipReciprocityAssessmentDuty
      summary: Notify Relationship Reciprocity Assessment Duty
      description: Notify Relationship Reciprocity Assessment Duty
      operationId: NotifyRelationshipReciprocityAssessmentDuty
      parameters:
        - $ref: '#/components/parameters/correspondentbankrelationshipmanagementid'
        - $ref: '#/components/parameters/relationshipreciprocityassessmentdutyid'
      responses:
        '200':
          $ref: '#/components/responses/RelationshipReciprocityAssessmentDuty'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankRelationshipManagement/{correspondentbankrelationshipmanagementid}/IncidentTroubleshootingOversightDuty/{incidenttroubleshootingoversightdutyid}/Request':
    put:
      tags:
        - BQ - IncidentTroubleshootingOversightDuty
      summary: Request Incident Troubleshooting Oversight Duty
      description: Request Incident Troubleshooting Oversight Duty
      operationId: RequestIncidentTroubleshootingOversightDuty
      parameters:
        - $ref: '#/components/parameters/correspondentbankrelationshipmanagementid'
        - $ref: '#/components/parameters/incidenttroubleshootingoversightdutyid'
      requestBody:
        $ref: '#/components/requestBodies/IncidentTroubleshootingOversightDuty'
      responses:
        '200':
          $ref: '#/components/responses/IncidentTroubleshootingOversightDuty'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankRelationshipManagement/{correspondentbankrelationshipmanagementid}/RelationshipDevelopmentDuty/{relationshipdevelopmentdutyid}/Request':
    put:
      tags:
        - BQ - RelationshipDevelopmentDuty
      summary: Request Relationship Development Duty
      description: Request Relationship Development Duty
      operationId: RequestRelationshipDevelopmentDuty
      parameters:
        - $ref: '#/components/parameters/correspondentbankrelationshipmanagementid'
        - $ref: '#/components/parameters/relationshipdevelopmentdutyid'
      requestBody:
        $ref: '#/components/requestBodies/RelationshipDevelopmentDuty'
      responses:
        '200':
          $ref: '#/components/responses/RelationshipDevelopmentDuty'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankRelationshipManagement/{correspondentbankrelationshipmanagementid}/RelationshipReciprocityAssessmentDuty/{relationshipreciprocityassessmentdutyid}/Request':
    put:
      tags:
        - BQ - RelationshipReciprocityAssessmentDuty
      summary: Request Relationship Reciprocity Assessment Duty
      description: Request Relationship Reciprocity Assessment Duty
      operationId: RequestRelationshipReciprocityAssessmentDuty
      parameters:
        - $ref: '#/components/parameters/correspondentbankrelationshipmanagementid'
        - $ref: '#/components/parameters/relationshipreciprocityassessmentdutyid'
      requestBody:
        $ref: '#/components/requestBodies/RelationshipReciprocityAssessmentDuty'
      responses:
        '200':
          $ref: '#/components/responses/RelationshipReciprocityAssessmentDuty'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankRelationshipManagement/{correspondentbankrelationshipmanagementid}/IncidentTroubleshootingOversightDuty/{incidenttroubleshootingoversightdutyid}/Retrieve':
    get:
      tags:
        - BQ - IncidentTroubleshootingOversightDuty
      summary: Retrieve Incident Troubleshooting Oversight Duty
      description: Retrieve Incident Troubleshooting Oversight Duty
      operationId: RetrieveIncidentTroubleshootingOversightDuty
      parameters:
        - $ref: '#/components/parameters/correspondentbankrelationshipmanagementid'
        - $ref: '#/components/parameters/incidenttroubleshootingoversightdutyid'
      responses:
        '200':
          $ref: '#/components/responses/IncidentTroubleshootingOversightDuty'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankRelationshipManagement/{correspondentbankrelationshipmanagementid}/RelationshipDevelopmentDuty/{relationshipdevelopmentdutyid}/Retrieve':
    get:
      tags:
        - BQ - RelationshipDevelopmentDuty
      summary: Retrieve Relationship Development Duty
      description: Retrieve Relationship Development Duty
      operationId: RetrieveRelationshipDevelopmentDuty
      parameters:
        - $ref: '#/components/parameters/correspondentbankrelationshipmanagementid'
        - $ref: '#/components/parameters/relationshipdevelopmentdutyid'
      responses:
        '200':
          $ref: '#/components/responses/RelationshipDevelopmentDuty'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankRelationshipManagement/{correspondentbankrelationshipmanagementid}/RelationshipReciprocityAssessmentDuty/{relationshipreciprocityassessmentdutyid}/Retrieve':
    get:
      tags:
        - BQ - RelationshipReciprocityAssessmentDuty
      summary: Retrieve Relationship Reciprocity Assessment Duty
      description: Retrieve Relationship Reciprocity Assessment Duty
      operationId: RetrieveRelationshipReciprocityAssessmentDuty
      parameters:
        - $ref: '#/components/parameters/correspondentbankrelationshipmanagementid'
        - $ref: '#/components/parameters/relationshipreciprocityassessmentdutyid'
      responses:
        '200':
          $ref: '#/components/responses/RelationshipReciprocityAssessmentDuty'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankRelationshipManagement/{correspondentbankrelationshipmanagementid}/IncidentTroubleshootingOversightDuty/{incidenttroubleshootingoversightdutyid}/Update':
    put:
      tags:
        - BQ - IncidentTroubleshootingOversightDuty
      summary: Update Incident Troubleshooting Oversight Duty
      description: Update Incident Troubleshooting Oversight Duty
      operationId: UpdateIncidentTroubleshootingOversightDuty
      parameters:
        - $ref: '#/components/parameters/correspondentbankrelationshipmanagementid'
        - $ref: '#/components/parameters/incidenttroubleshootingoversightdutyid'
      requestBody:
        $ref: '#/components/requestBodies/IncidentTroubleshootingOversightDuty'
      responses:
        '200':
          $ref: '#/components/responses/IncidentTroubleshootingOversightDuty'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankRelationshipManagement/{correspondentbankrelationshipmanagementid}/RelationshipDevelopmentDuty/{relationshipdevelopmentdutyid}/Update':
    put:
      tags:
        - BQ - RelationshipDevelopmentDuty
      summary: Update Relationship Development Duty
      description: Update Relationship Development Duty
      operationId: UpdateRelationshipDevelopmentDuty
      parameters:
        - $ref: '#/components/parameters/correspondentbankrelationshipmanagementid'
        - $ref: '#/components/parameters/relationshipdevelopmentdutyid'
      requestBody:
        $ref: '#/components/requestBodies/RelationshipDevelopmentDuty'
      responses:
        '200':
          $ref: '#/components/responses/RelationshipDevelopmentDuty'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorrespondentBankRelationshipManagement/{correspondentbankrelationshipmanagementid}/RelationshipReciprocityAssessmentDuty/{relationshipreciprocityassessmentdutyid}/Update':
    put:
      tags:
        - BQ - RelationshipReciprocityAssessmentDuty
      summary: Update Relationship Reciprocity Assessment Duty
      description: Update Relationship Reciprocity Assessment Duty
      operationId: UpdateRelationshipReciprocityAssessmentDuty
      parameters:
        - $ref: '#/components/parameters/correspondentbankrelationshipmanagementid'
        - $ref: '#/components/parameters/relationshipreciprocityassessmentdutyid'
      requestBody:
        $ref: '#/components/requestBodies/RelationshipReciprocityAssessmentDuty'
      responses:
        '200':
          $ref: '#/components/responses/RelationshipReciprocityAssessmentDuty'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    condition:
      type: object
      properties:
        Condition:
          type: string
          description: "Condition is a premise upon which the fulfillment of an agreement depends \n\nGeneral and special arrangements, provisions, requirements, rules, specifications, and standards that form an integral part of an agreement or contract.\n\nRead more: http://www.businessdictionary.com/definition/terms-and-conditions.html\n\n"
          format: class
      description: The required status/situation before the duty/obligation can be met
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: Name by which a party is known and which is usually used to identify that party. (ISO20022)
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    datetime:
      type: object
      properties:
        DateTimeContent:
          type: string
          description: ''
          format: string
        TimeZoneCode:
          type: string
          description: ''
          format: string
        DaylightSavingIndicator:
          type: string
          description: ''
          format: string
      description: ''
    partyidentificationtypevalues:
      enum:
        - LEI(LegalEntityIdentifier)
        - TaxIdentificationNumber
        - NationalRegistrationNumber
        - RegistrationAuthorityIdentification
        - PassportNumber
        - AlienRegistrationNumber
        - TaxExemptIdentificationNumber
        - ForeignInvestmentIdentityNumber
        - DriverLicenseNumber
        - CorporateIdentification
        - SocialSecurityNumber
        - IdentityCardNumber
        - NationalRegistrationIdentificationNumber
        - Concat
      type: string
      description: ">\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `TaxIdentificationNumber` - \r\n* `NationalRegistrationNumber` - \r\n* `RegistrationAuthorityIdentification` - \r\n* `PassportNumber` - \r\n* `AlienRegistrationNumber` - \r\n* `TaxExemptIdentificationNumber` - \r\n* `ForeignInvestmentIdentityNumber` - \r\n* `DriverLicenseNumber` - \r\n* `CorporateIdentification` - \r\n* `SocialSecurityNumber` - \r\n* `IdentityCardNumber` - \r\n* `NationalRegistrationIdentificationNumber` - \r\n* `Concat` - \r\n"
    value:
      type: object
      properties:
        Value:
          type: string
          description: 'A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)'
          format: datatype
      description: ''
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
      description: ''
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: " ||\r\n|"
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: "The operating unit/employee responsible for undertaking the duty ||\r\n|"
    schedule:
      type: object
      properties:
        ScheduleType:
          type: string
          description: ''
          format: string
      description: The timing and key actions/milestones involved in fulfilling the duty
    businessservicetypevalues:
      type: object
      properties:
        Businessservicetypevalues:
          type: string
          description: ''
          format: enumeration
      description: ''
    businessservice:
      type: object
      properties:
        BusinessServiceName:
          $ref: '#/components/schemas/name'
        BusinessServiceType:
          $ref: '#/components/schemas/businessservicetypevalues'
        BusinessServiceDescription:
          $ref: '#/components/schemas/text'
      description: The Incident Troubleshooting Oversight Duty specific Business Service
    goal:
      type: object
      properties:
        GoalType:
          type: string
          description: The type of goal
          format: string
        GoalDefinition:
          type: string
          description: 'A definition of the goal, including the intended actions required to achieve the goal'
          format: string
        GoalOrganisation:
          type: string
          description: Identifies the interested parties and their roles and responsibilities for the specific actions supporting the achievement of the goal
          format: ''
        GoalResult:
          type: string
          description: 'Assessment of how the work is progressing towards achieving the goal, including projections of likely outcomes'
          format: string
      description: ''
    budgettypevalues:
      enum:
        - FinancialBudget
        - ResourceBudget
        - OperatingBudget
      type: string
      description: ">\r\n* `FinancialBudget` - \r\n* `ResourceBudget` - \r\n* `OperatingBudget` - \r\n"
    budgettype:
      type: object
      properties:
        BudgetTypeName:
          $ref: '#/components/schemas/name'
        BudgetType:
          $ref: '#/components/schemas/budgettypevalues'
      description: "A Classification value that specifies the type of Budget ||\r\n|"
    currencycode:
      type: object
      properties:
        Currencycode:
          type: string
          description: "A code identifying a currency according to ISO-4217.\nA currency is a system of money in general use in a particular country.\n\nCode allocated to a currency, by a maintenance agency, under an international identification scheme as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\". Valid currency codes are registered with the ISO 4217 Maintenance Agency, and consist of three contiguous letters. (ISO20022)\n\n"
          format: datatype
      description: ''
    amount:
      type: object
      properties:
        AmountValue:
          type: string
          description: ''
          format: string
        AmountCurrency:
          $ref: '#/components/schemas/currencycode'
        DecimalPointPosition:
          type: string
          description: "Decimal point position starts calulating from the right\n"
          format: string
      description: " ||\r\n|"
    budgetarrangement:
      type: object
      properties:
        BudgetType:
          $ref: '#/components/schemas/budgettype'
        BudgetAmount:
          $ref: '#/components/schemas/amount'
      description: 'An arrangement which is specifying an estimate of costs, revenues, and resources over a specified period, reflecting a reading of future financial conditions and goals. (adapted from Business Dictionary)'
    plannedaction:
      type: object
      properties:
        PlannedAction:
          type: string
          description: 'An action that is arranged in a plan for doing or achieving something '
          format: class
      description: 'An action that is arranged in a plan for doing or achieving something '
    plantypevalues:
      enum:
        - AdministrativePlan
        - ManagementPlan
        - StratgyPlan
        - FinancialPlan
      type: string
      description: ">\r\n* `AdministrativePlan` - \r\n* `ManagementPlan` - \r\n* `StratgyPlan` - \r\n* `FinancialPlan` - \r\n"
    plantype:
      type: object
      properties:
        PlanTypeName:
          $ref: '#/components/schemas/name'
        PlanType:
          $ref: '#/components/schemas/plantypevalues'
      description: "A Classification value that specifies the type of Plan ||\r\n|"
    plan:
      type: object
      properties:
        PlanGoal:
          $ref: '#/components/schemas/goal'
        PlanBudget:
          $ref: '#/components/schemas/budgetarrangement'
        PlannedAction:
          $ref: '#/components/schemas/plannedaction'
        PlanType:
          $ref: '#/components/schemas/plantype'
        PlanOrganisation:
          type: string
          description: ''
          format: string
        PlanValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PlanDescription:
          $ref: '#/components/schemas/text'
      description: "Reference to Incident Troubleshooting Oversight Duty ||\r\n|"
    IncidentTroubleshootingOversightDuty:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        BusinessUnitEmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        CorrepondentBankRelationshipManagementPlanReference:
          $ref: '#/components/schemas/plan'
        IncidentTroubleshootingOversightDutyReference:
          $ref: '#/components/schemas/plannedaction'
        IncidentTroubleshootingOversightDutyType:
          $ref: '#/components/schemas/text'
      description: The Incident Troubleshooting Oversight Duty is a specific role or responsibility that is one aspect of Incident Troubleshooting Oversight Duty
    RelationshipDevelopmentDuty:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        BusinessUnitEmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        CorrepondentBankRelationshipManagementPlanReference:
          $ref: '#/components/schemas/plan'
        RelationshipDevelopmentDutyReference:
          $ref: '#/components/schemas/plannedaction'
        RelationshipDevelopmentDutyType:
          $ref: '#/components/schemas/text'
      description: The Incident Troubleshooting Oversight Duty is a specific role or responsibility that is one aspect of Incident Troubleshooting Oversight Duty
    RelationshipReciprocityAssessmentDuty:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        BusinessUnitEmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        CorrepondentBankRelationshipManagementPlanReference:
          $ref: '#/components/schemas/plan'
        RelationshipReciprocityAssessmentDutyReference:
          $ref: '#/components/schemas/plannedaction'
        RelationshipReciprocityAssessmentDutyType:
          $ref: '#/components/schemas/text'
      description: The Incident Troubleshooting Oversight Duty is a specific role or responsibility that is one aspect of Incident Troubleshooting Oversight Duty
    analysistypevalues:
      enum:
        - PerformanceAnalysis
        - ActivityAnalysis
      type: string
      description: ">\r\n* `PerformanceAnalysis` - \r\n* `ActivityAnalysis` - \r\n"
    financialdocumenttypevalues:
      enum:
        - Meteredserviceinvoice
        - Creditnoterelatedtofinancialadjustment
        - Debitnoterelatedtofinancialadjustment
        - Commercialinvoice
        - Creditnote
        - Debitnote
        - Hireinvoice
        - Selfbilledinvoice
        - Remittanceadvicemessage
        - Relatedpaymentinstruction
        - Commercialcontract
        - Foreignexchangedealreference
        - Statementofaccount
        - Dispatchadvice
        - Purchaseorder
        - Structuredcommunicationreference
        - Billoflading
        - Voucher
        - Accountreceivableopenitem
        - Tradeservicesutilitytransaction
        - Cashierreceipt
        - Customerreceipt
        - Journal
        - Salereceipt
      type: string
      description: ">\r\n* `Meteredserviceinvoice` - Document is an invoice claiming payment for the supply of metered services, for example gas or electricity supplied to a fixed meter.\r\n* `Creditnoterelatedtofinancialadjustment` - Document is a credit note for the final amount settled for a commercial transaction.\r\n* `Debitnoterelatedtofinancialadjustment` - Document is a debit note for the final amount settled for a commercial transaction.\r\n* `Commercialinvoice` - Document is an invoice.\r\n* `Creditnote` - Document is a credit note.\r\n* `Debitnote` - Document is a debit note.\r\n* `Hireinvoice` - Document is an invoice for the hiring of human resources or renting goods or equipment.\r\n* `Selfbilledinvoice` - Document is an invoice issued by the debtor.\r\n* `Remittanceadvicemessage` - Document is a remittance advice sent separately from the current transaction.\r\n* `Relatedpaymentinstruction` - Document is a linked payment instruction to which the current payment instruction is related, for example, in a cover scenario.\r\n* `Commercialcontract` - Document is an agreement between the parties, stipulating the terms and conditions of the delivery of goods or services.\r\n* `Foreignexchangedealreference` - Document is a pre-agreed or pre-arranged foreign exchange transaction to which the payment transaction refers.\r\n* `Statementofaccount` - Document is a statement of the transactions posted to the debtor's account at the supplier.\r\n* `Dispatchadvice` - Document is a dispatch advice.\r\n* `Purchaseorder` - Document is a purchase order.\r\n* `Structuredcommunicationreference` - Document is a structured communication reference provided by the creditor to identify the referred transaction.\r\n* `Billoflading` - Document is a shipping notice.\r\n* `Voucher` - Document is an electronic payment document.\r\n* `Accountreceivableopenitem` - Document is a payment that applies to a specific source document.\r\n* `Tradeservicesutilitytransaction` - Document is a transaction identifier as assigned by the Trade Services Utility.\r\n* `Cashierreceipt` - When the Sale system print the Cashier copy of the Payment receipt.\r\n* `Customerreceipt` - When the Sale System requires   the POI system to print the Customer receipt.\r\n* `Journal` - When the POI or the Sale System wants to store a message on the journal printer or electronic journal of the Sale Terminal (it is sometimes a Sale Logging/Journal Printer).\r\n* `Salereceipt` - When the Sale System requires the POI system to print the Sale receipt.\r\n"
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: 'Status of the document (e.g. delivered, paid, etc.). ISO20022'
    documentdatetimetypevalues:
      enum:
        - CreationDate
        - CapturingDate
        - VersionDate
        - ValueDate
        - IssueDate
      type: string
      description: ">\r\n* `CreationDate` - \r\n* `CapturingDate` - \r\n* `VersionDate` - \r\n* `ValueDate` - \r\n* `IssueDate` - \r\n"
    document:
      type: object
      properties:
        DocumentIdentifer:
          $ref: '#/components/schemas/identifier'
        DocumentVersion:
          type: string
          description: ''
          format: number
        DocumentType:
          $ref: '#/components/schemas/financialdocumenttypevalues'
        DocumentStatus:
          $ref: '#/components/schemas/status'
        DocumentDateTime:
          $ref: '#/components/schemas/datetime'
        DocumentName:
          $ref: '#/components/schemas/name'
        DocumentDateTimeType:
          $ref: '#/components/schemas/documentdatetimetypevalues'
        DocumentPurpose:
          $ref: '#/components/schemas/text'
        DocumentFormat:
          $ref: '#/components/schemas/text'
        DocumentSubject:
          $ref: '#/components/schemas/text'
        DocumentDescription:
          $ref: '#/components/schemas/text'
        DocumentValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
      description: ''
    analysis:
      type: object
      properties:
        AnalysisType:
          $ref: '#/components/schemas/analysistypevalues'
        AnalysisResult:
          $ref: '#/components/schemas/text'
        AnalysisPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        AnalysisDocument:
          $ref: '#/components/schemas/document'
        AnalysisDateTime:
          $ref: '#/components/schemas/datetime'
        AnalysisSpecification:
          $ref: '#/components/schemas/text'
      description: ''
    task:
      type: object
      properties:
        Task:
          type: string
          format: datatype
      description: ''
    project:
      type: object
      properties:
        ProjectName:
          type: string
          description: The name of project
          format: string
        ProjectType:
          type: string
          description: A classification of the project
          format: string
        ProjectDescription:
          type: string
          description: 'A description of the scope, goal and make-up of the project'
          format: string
        ProjectOrganisation:
          type: string
          description: ''
          format: string
        ProjectSchedule:
          type: string
          description: ''
          format: string
        ProjectDateTime:
          type: string
          description: ''
          format: string
      description: ''
    CorrespondentBankRelationshipManagementOutcome:
      type: object
      properties:
        CorrespondentBankRelationshipManagementPerformanceAnalysis:
          $ref: '#/components/schemas/analysis'
        CorrespondentBankRelationshipManagementActivityAnalysis:
          $ref: '#/components/schemas/analysis'
        CorrespondentBankRelationshipManagementCharter:
          $ref: '#/components/schemas/plan'
        CorrespondentBankRelationshipManagementTask:
          $ref: '#/components/schemas/task'
        CorrespondentBankRelationshipManagementProject:
          $ref: '#/components/schemas/project'
      description: The Incident Troubleshooting Oversight Duty is a specific role or responsibility that is one aspect of Incident Troubleshooting Oversight Duty
    assignment:
      type: object
      properties:
        SubjectMatter:
          type: string
        PartyInvolvement:
          type: string
        PartyReference:
          type: string
      description: "The assignment of a required activity to a responsibe party in Correpondent Bank Relationship Management Plan ||\r\n|"
    actiontypevalues:
      enum:
        - Initiate
        - Execute
        - Create
        - Transfer
        - Pay
        - Deliver
        - Apply
        - Calculate
      type: string
      description: ">\r\n* `Initiate` - \r\n* `Execute` - \r\n* `Create` - \r\n* `Transfer` - \r\n* `Pay` - \r\n* `Deliver` - \r\n* `Apply` - \r\n* `Calculate` - \r\n"
    action:
      type: object
      properties:
        ActionType:
          $ref: '#/components/schemas/actiontypevalues'
      description: ''
    arrangementlifecyclestatustypevalues:
      enum:
        - Requested
        - Accepted
        - Fulfilled
        - Offered
        - Proposed
        - Terminated
        - Cancelled
      type: string
      description: ">\r\n* `Requested` - \r\n* `Accepted` - \r\n* `Fulfilled` - \r\n* `Offered` - \r\n* `Proposed` - \r\n* `Terminated` - \r\n* `Cancelled` - \r\n"
    arrangementlifecyclestatus:
      type: object
      properties:
        ArrangementLifecycleStatus:
          $ref: '#/components/schemas/status'
        ArrangementLifecycleStatusType:
          $ref: '#/components/schemas/arrangementlifecyclestatustypevalues'
      description: 'A characteristic of arrangement which refers to the LifecycleStatus of arrangement (e.g., requested, proposed, offered, accepted, cancelled, terminated, fulfilled, etc.)'
    subject:
      type: object
      properties:
        Subject:
          type: string
          description: A thing that is discussed or dealt whit in agreement/arrangement about doing or not doing (as action) something.
          format: class
      description: ''
    arrangementtypevalues:
      enum:
        - SweepArrangement
        - WithdrawalArrangement
        - DepositArrangement
        - InterestArrangement
        - FeeArrangement
        - LienArrangement
        - InformationArrangement
        - PaymentServiceArrangement
        - EntitlementArrangement
        - PeriodArrangement
        - CollateralArrangement
        - LimitArrangement
        - AccessArrangement
        - CardPaymentArrangement
        - StandingOrderArrangement
        - OverdraftArrangement
        - RepaymentArrangement
        - StatementArrangement
        - CreditTransferArrangement
        - ProductAndServiceArrangement
        - FactoringArrangement
        - RolloverArrangement
      type: string
      description: ">\r\n* `SweepArrangement` - An arrangement into which is promised for the set-up and execution of structured sweeps to and from the facility to a linked account.\r\n* `WithdrawalArrangement` - An arrangement into which is promised to deliver Withdraw Service  to take fund out of an account. \r\n* `DepositArrangement` - An arrangement into which is promised to deliver Deposit Service  to place funds into an account for safekeeping. \r\n* `InterestArrangement` - An arrangement into which is promised to apply a pricing element expressed in a percentage  to a principal amount.\r\n* `FeeArrangement` - An arrangement into which is promised to apply a charge for services rendered. \r\n* `LienArrangement` - An arrangement into which is promised for placing a lien or block on the account for a specified purpose, amount, and period. \r\n* `InformationArrangement` - An arrangement concerning the information the bank will provide about the agreement/account\r\n* `PaymentServiceArrangement` - An arrangement into which is promised to deliver a specific payment service including regular payments, standing orders, direct debits and bill pay instructions. \r\n* `EntitlementArrangement` - Right or obligation linked to the involvement of a party in an agreement\r\n* `PeriodArrangement` - \r\n* `CollateralArrangement` - An arrangement into which is promised for handling the oversight of the allocation, valuation and administration of collateral associated with the facility. \r\n* `LimitArrangement` - An arrangement to limit something\ne.g., the number of transaction per week, the amount of money allowed to withdraw per week/day and etc. \r\n* `AccessArrangement` - An arrangement that allows or restricts the access to a service or product, channel or device through a specific access point\r\n* `CardPaymentArrangement` - An arrangement into which is promised to deliver Card payment Service to execute payment transactions through a payment card, including online payments. \r\n* `StandingOrderArrangement` - An arrangement into which is promised to deliver Standing Order Service to make regular transfers on given dates to a named beneﬁciary. \r\n* `OverdraftArrangement` - An arrangement into which is promised to deliver Overdraft Service  that allows fund transfer even if there is no provision on the account. \r\n* `RepaymentArrangement` - An arrangement into which is promised for paying back money previously borrowed from a lender. \r\n* `StatementArrangement` - An arrangement into which is promised to deliver a reporting service on payment transactions registered on an account. \r\n* `CreditTransferArrangement` - An arrangement into which is promised to allow a payer to transfer fund to a beneficiary. \r\n* `ProductAndServiceArrangement` - \r\n* `FactoringArrangement` - \r\n* `RolloverArrangement` - Arrangement stipulating the modalities for an automatic renewal of the agreement\n\ni.e. the replacement of the agreement with a new one without renewed negociation and witout explicit agreement of the customer \r\n"
    arrangement:
      type: object
      properties:
        ArrangementAction:
          $ref: '#/components/schemas/action'
        ArrangementStartDate:
          $ref: '#/components/schemas/datetime'
        ArrangementEndDate:
          $ref: '#/components/schemas/datetime'
        ArrangementStatus:
          $ref: '#/components/schemas/arrangementlifecyclestatus'
        ArrangementSubjectMatter:
          $ref: '#/components/schemas/subject'
        Arrangementtype:
          $ref: '#/components/schemas/arrangementtypevalues'
      description: "The set of management responsibilities defined in Correpondent Bank Relationship Management Plan ||\r\n|"
    accountbalancetypevalues:
      enum:
        - OpeningBalance
        - ClosingBalance
        - AvailableBalance
        - ReserveBalance
        - CurrentBalance
        - LedgerBalance
        - FreeBalance
        - PrincipalBalance
      type: string
      description: ">\r\n* `OpeningBalance` - \r\n* `ClosingBalance` - \r\n* `AvailableBalance` - \r\n* `ReserveBalance` - \r\n* `CurrentBalance` - \r\n* `LedgerBalance` - \r\n* `FreeBalance` - \r\n* `PrincipalBalance` - \r\n"
    accountbalance:
      type: object
      properties:
        AccountBalance:
          $ref: '#/components/schemas/amount'
        AccountBalanceType:
          $ref: '#/components/schemas/accountbalancetypevalues'
        AccounBalanceDate:
          $ref: '#/components/schemas/datetime'
      description: "Balance of budget which is arranged whitin Correpondent Bank Relationship Management Plan ||\r\n|"
    CorrepondentBankRelationshipManagementPlan:
      type: object
      properties:
        CorrepondentBankRelationshipManagementPlanType:
          $ref: '#/components/schemas/plantype'
        CorrepondentBankRelationshipManagementPlanReference:
          $ref: '#/components/schemas/plan'
        CorrepondentBankRelationshipManagementPlanBudgetType:
          $ref: '#/components/schemas/budgettype'
        CorrepondentBankRelationshipManagementPlanBudget:
          $ref: '#/components/schemas/amount'
        CorrepondentBankRelationshipManagementPlanAssignment:
          $ref: '#/components/schemas/assignment'
        CorrepondentBankRelationshipManagementPlanDuty:
          $ref: '#/components/schemas/arrangement'
        CorrepondentBankRelationshipManagementPlanDescription:
          $ref: '#/components/schemas/text'
        CorrepondentBankRelationshipManagementPlanBudgetBalance:
          $ref: '#/components/schemas/accountbalance'
        CorrepondentBankRelationshipManagementPlanAssociatedParty:
          $ref: '#/components/schemas/involvedparty'
        CorrepondentBankRelationshipManagementPlanSubjectMatter:
          type: string
          description: The subject matter of Correpondent Bank Relationship Management Plan
          format: object
      description: 'Oversee the working of a business unit, assign work, manage against a plan and troubleshoot issues within Correspondent Bank Relationship Management.'
    ControlCorrepondentBankRelationshipManagementPlanRequest:
      type: object
      properties:
        CorrepondentBankRelationshipManagementPlan:
          type: object
          properties:
            CorrepondentBankRelationshipManagementPlanType:
              $ref: '#/components/schemas/plantype'
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            CorrepondentBankRelationshipManagementPlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            CorrepondentBankRelationshipManagementPlanAssignment:
              $ref: '#/components/schemas/assignment'
            CorrepondentBankRelationshipManagementPlanDuty:
              $ref: '#/components/schemas/arrangement'
            CorrepondentBankRelationshipManagementPlanDescription:
              $ref: '#/components/schemas/text'
            CorrepondentBankRelationshipManagementPlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            CorrepondentBankRelationshipManagementPlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            CorrepondentBankRelationshipManagementPlanSubjectMatter:
              type: string
              description: "\r\n"
              format: object
      description: 'Input: Control Correpondent Bank Relationship Management Plan'
    ControlCorrepondentBankRelationshipManagementPlanResponse:
      type: object
      properties:
        CorrepondentBankRelationshipManagementPlan:
          type: object
          properties:
            CorrepondentBankRelationshipManagementPlanType:
              $ref: '#/components/schemas/plantype'
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            CorrepondentBankRelationshipManagementPlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            CorrepondentBankRelationshipManagementPlanAssignment:
              $ref: '#/components/schemas/assignment'
            CorrepondentBankRelationshipManagementPlanDuty:
              $ref: '#/components/schemas/arrangement'
            CorrepondentBankRelationshipManagementPlanDescription:
              $ref: '#/components/schemas/text'
            CorrepondentBankRelationshipManagementPlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            CorrepondentBankRelationshipManagementPlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            CorrepondentBankRelationshipManagementPlanSubjectMatter:
              type: string
              description: "\r\n"
              format: object
      description: 'Output: Control Correpondent Bank Relationship Management Plan'
    CreateCorrepondentBankRelationshipManagementPlanRequest:
      type: object
      properties:
        CorrepondentBankRelationshipManagementPlan:
          type: object
          properties:
            CorrepondentBankRelationshipManagementPlanType:
              $ref: '#/components/schemas/plantype'
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            CorrepondentBankRelationshipManagementPlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            CorrepondentBankRelationshipManagementPlanAssignment:
              $ref: '#/components/schemas/assignment'
            CorrepondentBankRelationshipManagementPlanDuty:
              $ref: '#/components/schemas/arrangement'
            CorrepondentBankRelationshipManagementPlanDescription:
              $ref: '#/components/schemas/text'
            CorrepondentBankRelationshipManagementPlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            CorrepondentBankRelationshipManagementPlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            CorrepondentBankRelationshipManagementPlanSubjectMatter:
              type: string
              description: "\r\n"
              format: object
      description: 'Input: Create Correpondent Bank Relationship Management Plan'
    CreateCorrepondentBankRelationshipManagementPlanResponse:
      type: object
      properties:
        CorrepondentBankRelationshipManagementPlan:
          type: object
          properties:
            CorrepondentBankRelationshipManagementPlanType:
              $ref: '#/components/schemas/plantype'
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            CorrepondentBankRelationshipManagementPlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            CorrepondentBankRelationshipManagementPlanAssignment:
              $ref: '#/components/schemas/assignment'
            CorrepondentBankRelationshipManagementPlanDuty:
              $ref: '#/components/schemas/arrangement'
            CorrepondentBankRelationshipManagementPlanDescription:
              $ref: '#/components/schemas/text'
            CorrepondentBankRelationshipManagementPlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            CorrepondentBankRelationshipManagementPlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            CorrepondentBankRelationshipManagementPlanSubjectMatter:
              type: string
              description: "\r\n"
              format: object
      description: 'Output: Create Correpondent Bank Relationship Management Plan'
    ExchangeCorrepondentBankRelationshipManagementPlanRequest:
      type: object
      properties:
        CorrepondentBankRelationshipManagementPlan:
          type: object
          properties:
            CorrepondentBankRelationshipManagementPlanType:
              $ref: '#/components/schemas/plantype'
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            CorrepondentBankRelationshipManagementPlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            CorrepondentBankRelationshipManagementPlanAssignment:
              $ref: '#/components/schemas/assignment'
            CorrepondentBankRelationshipManagementPlanDuty:
              $ref: '#/components/schemas/arrangement'
            CorrepondentBankRelationshipManagementPlanDescription:
              $ref: '#/components/schemas/text'
            CorrepondentBankRelationshipManagementPlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            CorrepondentBankRelationshipManagementPlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            CorrepondentBankRelationshipManagementPlanSubjectMatter:
              type: string
              description: "\r\n"
              format: object
      description: 'Input: Exchange Correpondent Bank Relationship Management Plan'
    ExchangeCorrepondentBankRelationshipManagementPlanResponse:
      type: object
      properties:
        CorrepondentBankRelationshipManagementPlan:
          type: object
          properties:
            CorrepondentBankRelationshipManagementPlanType:
              $ref: '#/components/schemas/plantype'
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            CorrepondentBankRelationshipManagementPlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            CorrepondentBankRelationshipManagementPlanAssignment:
              $ref: '#/components/schemas/assignment'
            CorrepondentBankRelationshipManagementPlanDuty:
              $ref: '#/components/schemas/arrangement'
            CorrepondentBankRelationshipManagementPlanDescription:
              $ref: '#/components/schemas/text'
            CorrepondentBankRelationshipManagementPlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            CorrepondentBankRelationshipManagementPlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            CorrepondentBankRelationshipManagementPlanSubjectMatter:
              type: string
              description: "\r\n"
              format: object
      description: 'Output: Exchange Correpondent Bank Relationship Management Plan'
    GrantCorrepondentBankRelationshipManagementPlanRequest:
      type: object
      properties:
        CorrepondentBankRelationshipManagementPlan:
          type: object
          properties:
            CorrepondentBankRelationshipManagementPlanType:
              $ref: '#/components/schemas/plantype'
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            CorrepondentBankRelationshipManagementPlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            CorrepondentBankRelationshipManagementPlanAssignment:
              $ref: '#/components/schemas/assignment'
            CorrepondentBankRelationshipManagementPlanDuty:
              $ref: '#/components/schemas/arrangement'
            CorrepondentBankRelationshipManagementPlanDescription:
              $ref: '#/components/schemas/text'
            CorrepondentBankRelationshipManagementPlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            CorrepondentBankRelationshipManagementPlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            CorrepondentBankRelationshipManagementPlanSubjectMatter:
              type: string
              description: "\r\n"
              format: object
      description: 'Input: Grant Correpondent Bank Relationship Management Plan'
    GrantCorrepondentBankRelationshipManagementPlanResponse:
      type: object
      properties:
        CorrepondentBankRelationshipManagementPlan:
          type: object
          properties:
            CorrepondentBankRelationshipManagementPlanType:
              $ref: '#/components/schemas/plantype'
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            CorrepondentBankRelationshipManagementPlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            CorrepondentBankRelationshipManagementPlanAssignment:
              $ref: '#/components/schemas/assignment'
            CorrepondentBankRelationshipManagementPlanDuty:
              $ref: '#/components/schemas/arrangement'
            CorrepondentBankRelationshipManagementPlanDescription:
              $ref: '#/components/schemas/text'
            CorrepondentBankRelationshipManagementPlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            CorrepondentBankRelationshipManagementPlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            CorrepondentBankRelationshipManagementPlanSubjectMatter:
              type: string
              description: "\r\n"
              format: object
      description: 'Output: Grant Correpondent Bank Relationship Management Plan'
    NotifyCorrepondentBankRelationshipManagementPlanRequest:
      type: object
      properties:
        CorrepondentBankRelationshipManagementPlan:
          type: object
          properties:
            CorrepondentBankRelationshipManagementPlanType:
              $ref: '#/components/schemas/plantype'
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            CorrepondentBankRelationshipManagementPlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            CorrepondentBankRelationshipManagementPlanAssignment:
              $ref: '#/components/schemas/assignment'
            CorrepondentBankRelationshipManagementPlanDuty:
              $ref: '#/components/schemas/arrangement'
            CorrepondentBankRelationshipManagementPlanDescription:
              $ref: '#/components/schemas/text'
            CorrepondentBankRelationshipManagementPlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            CorrepondentBankRelationshipManagementPlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            CorrepondentBankRelationshipManagementPlanSubjectMatter:
              type: string
              description: "\r\n"
              format: object
      description: 'Input: Notify Correpondent Bank Relationship Management Plan'
    NotifyCorrepondentBankRelationshipManagementPlanResponse:
      type: object
      properties:
        CorrepondentBankRelationshipManagementPlan:
          type: object
          properties:
            CorrepondentBankRelationshipManagementPlanType:
              $ref: '#/components/schemas/plantype'
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            CorrepondentBankRelationshipManagementPlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            CorrepondentBankRelationshipManagementPlanAssignment:
              $ref: '#/components/schemas/assignment'
            CorrepondentBankRelationshipManagementPlanDuty:
              $ref: '#/components/schemas/arrangement'
            CorrepondentBankRelationshipManagementPlanDescription:
              $ref: '#/components/schemas/text'
            CorrepondentBankRelationshipManagementPlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            CorrepondentBankRelationshipManagementPlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            CorrepondentBankRelationshipManagementPlanSubjectMatter:
              type: string
              description: "\r\n"
              format: object
      description: 'Output: Notify Correpondent Bank Relationship Management Plan'
    RequestCorrepondentBankRelationshipManagementPlanRequest:
      type: object
      properties:
        CorrepondentBankRelationshipManagementPlan:
          type: object
          properties:
            CorrepondentBankRelationshipManagementPlanType:
              $ref: '#/components/schemas/plantype'
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            CorrepondentBankRelationshipManagementPlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            CorrepondentBankRelationshipManagementPlanAssignment:
              $ref: '#/components/schemas/assignment'
            CorrepondentBankRelationshipManagementPlanDuty:
              $ref: '#/components/schemas/arrangement'
            CorrepondentBankRelationshipManagementPlanDescription:
              $ref: '#/components/schemas/text'
            CorrepondentBankRelationshipManagementPlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            CorrepondentBankRelationshipManagementPlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            CorrepondentBankRelationshipManagementPlanSubjectMatter:
              type: string
              description: "\r\n"
              format: object
      description: 'Input: Request Correpondent Bank Relationship Management Plan'
    RequestCorrepondentBankRelationshipManagementPlanResponse:
      type: object
      properties:
        CorrepondentBankRelationshipManagementPlan:
          type: object
          properties:
            CorrepondentBankRelationshipManagementPlanType:
              $ref: '#/components/schemas/plantype'
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            CorrepondentBankRelationshipManagementPlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            CorrepondentBankRelationshipManagementPlanAssignment:
              $ref: '#/components/schemas/assignment'
            CorrepondentBankRelationshipManagementPlanDuty:
              $ref: '#/components/schemas/arrangement'
            CorrepondentBankRelationshipManagementPlanDescription:
              $ref: '#/components/schemas/text'
            CorrepondentBankRelationshipManagementPlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            CorrepondentBankRelationshipManagementPlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            CorrepondentBankRelationshipManagementPlanSubjectMatter:
              type: string
              description: "\r\n"
              format: object
      description: 'Output: Request Correpondent Bank Relationship Management Plan'
    RetrieveCorrepondentBankRelationshipManagementPlanRequest:
      type: object
      properties:
        CorrepondentBankRelationshipManagementPlan:
          type: object
          properties:
            CorrepondentBankRelationshipManagementPlanType:
              $ref: '#/components/schemas/plantype'
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            CorrepondentBankRelationshipManagementPlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            CorrepondentBankRelationshipManagementPlanAssignment:
              $ref: '#/components/schemas/assignment'
            CorrepondentBankRelationshipManagementPlanDuty:
              $ref: '#/components/schemas/arrangement'
            CorrepondentBankRelationshipManagementPlanDescription:
              $ref: '#/components/schemas/text'
            CorrepondentBankRelationshipManagementPlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            CorrepondentBankRelationshipManagementPlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            CorrepondentBankRelationshipManagementPlanSubjectMatter:
              type: string
              description: "\r\n"
              format: object
      description: 'Input: Retrieve Correpondent Bank Relationship Management Plan'
    RetrieveCorrepondentBankRelationshipManagementPlanResponse:
      type: object
      properties:
        CorrepondentBankRelationshipManagementPlan:
          type: object
          properties:
            CorrepondentBankRelationshipManagementPlanType:
              $ref: '#/components/schemas/plantype'
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            CorrepondentBankRelationshipManagementPlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            CorrepondentBankRelationshipManagementPlanAssignment:
              $ref: '#/components/schemas/assignment'
            CorrepondentBankRelationshipManagementPlanDuty:
              $ref: '#/components/schemas/arrangement'
            CorrepondentBankRelationshipManagementPlanDescription:
              $ref: '#/components/schemas/text'
            CorrepondentBankRelationshipManagementPlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            CorrepondentBankRelationshipManagementPlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            CorrepondentBankRelationshipManagementPlanSubjectMatter:
              type: string
              description: "\r\n"
              format: object
      description: 'Output: Retrieve Correpondent Bank Relationship Management Plan'
    UpdateCorrepondentBankRelationshipManagementPlanRequest:
      type: object
      properties:
        CorrepondentBankRelationshipManagementPlan:
          type: object
          properties:
            CorrepondentBankRelationshipManagementPlanType:
              $ref: '#/components/schemas/plantype'
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            CorrepondentBankRelationshipManagementPlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            CorrepondentBankRelationshipManagementPlanAssignment:
              $ref: '#/components/schemas/assignment'
            CorrepondentBankRelationshipManagementPlanDuty:
              $ref: '#/components/schemas/arrangement'
            CorrepondentBankRelationshipManagementPlanDescription:
              $ref: '#/components/schemas/text'
            CorrepondentBankRelationshipManagementPlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            CorrepondentBankRelationshipManagementPlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            CorrepondentBankRelationshipManagementPlanSubjectMatter:
              type: string
              description: "\r\n"
              format: object
      description: 'Input: Update Correpondent Bank Relationship Management Plan'
    UpdateCorrepondentBankRelationshipManagementPlanResponse:
      type: object
      properties:
        CorrepondentBankRelationshipManagementPlan:
          type: object
          properties:
            CorrepondentBankRelationshipManagementPlanType:
              $ref: '#/components/schemas/plantype'
            CorrepondentBankRelationshipManagementPlanReference:
              $ref: '#/components/schemas/plan'
            CorrepondentBankRelationshipManagementPlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            CorrepondentBankRelationshipManagementPlanAssignment:
              $ref: '#/components/schemas/assignment'
            CorrepondentBankRelationshipManagementPlanDuty:
              $ref: '#/components/schemas/arrangement'
            CorrepondentBankRelationshipManagementPlanDescription:
              $ref: '#/components/schemas/text'
            CorrepondentBankRelationshipManagementPlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            CorrepondentBankRelationshipManagementPlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            CorrepondentBankRelationshipManagementPlanSubjectMatter:
              type: string
              description: "\r\n"
              format: object
      description: 'Output: Update Correpondent Bank Relationship Management Plan'
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ControlCorrepondentBankRelationshipManagementPlanResponse:
      description: ControlCorrepondentBankRelationshipManagementPlanResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ControlCorrepondentBankRelationshipManagementPlanResponse'
    CreateCorrepondentBankRelationshipManagementPlanResponse:
      description: CreateCorrepondentBankRelationshipManagementPlanResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateCorrepondentBankRelationshipManagementPlanResponse'
    ExchangeCorrepondentBankRelationshipManagementPlanResponse:
      description: ExchangeCorrepondentBankRelationshipManagementPlanResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExchangeCorrepondentBankRelationshipManagementPlanResponse'
    GrantCorrepondentBankRelationshipManagementPlanResponse:
      description: GrantCorrepondentBankRelationshipManagementPlanResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GrantCorrepondentBankRelationshipManagementPlanResponse'
    NotifyCorrepondentBankRelationshipManagementPlanResponse:
      description: NotifyCorrepondentBankRelationshipManagementPlanResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotifyCorrepondentBankRelationshipManagementPlanResponse'
    RequestCorrepondentBankRelationshipManagementPlanResponse:
      description: RequestCorrepondentBankRelationshipManagementPlanResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestCorrepondentBankRelationshipManagementPlanResponse'
    RetrieveCorrepondentBankRelationshipManagementPlanResponse:
      description: RetrieveCorrepondentBankRelationshipManagementPlanResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveCorrepondentBankRelationshipManagementPlanResponse'
    UpdateCorrepondentBankRelationshipManagementPlanResponse:
      description: UpdateCorrepondentBankRelationshipManagementPlanResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateCorrepondentBankRelationshipManagementPlanResponse'
    IncidentTroubleshootingOversightDuty:
      description: IncidentTroubleshootingOversightDuty
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IncidentTroubleshootingOversightDuty'
    RelationshipDevelopmentDuty:
      description: RelationshipDevelopmentDuty
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RelationshipDevelopmentDuty'
    RelationshipReciprocityAssessmentDuty:
      description: RelationshipReciprocityAssessmentDuty
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RelationshipReciprocityAssessmentDuty'
  parameters:
    correspondentbankrelationshipmanagementid:
      name: correspondentbankrelationshipmanagementid
      in: path
      required: true
      style: simple
      schema:
        type: string
    incidenttroubleshootingoversightdutyid:
      name: incidenttroubleshootingoversightdutyid
      in: path
      required: true
      style: simple
      schema:
        type: string
    relationshipdevelopmentdutyid:
      name: relationshipdevelopmentdutyid
      in: path
      required: true
      style: simple
      schema:
        type: string
    relationshipreciprocityassessmentdutyid:
      name: relationshipreciprocityassessmentdutyid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    ControlCorrepondentBankRelationshipManagementPlanRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ControlCorrepondentBankRelationshipManagementPlanRequest'
      required: true
    CreateCorrepondentBankRelationshipManagementPlanRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateCorrepondentBankRelationshipManagementPlanRequest'
      required: true
    ExchangeCorrepondentBankRelationshipManagementPlanRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExchangeCorrepondentBankRelationshipManagementPlanRequest'
      required: true
    GrantCorrepondentBankRelationshipManagementPlanRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GrantCorrepondentBankRelationshipManagementPlanRequest'
      required: true
    RequestCorrepondentBankRelationshipManagementPlanRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestCorrepondentBankRelationshipManagementPlanRequest'
      required: true
    UpdateCorrepondentBankRelationshipManagementPlanRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateCorrepondentBankRelationshipManagementPlanRequest'
      required: true
    IncidentTroubleshootingOversightDuty:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IncidentTroubleshootingOversightDuty'
      required: true
    RelationshipDevelopmentDuty:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RelationshipDevelopmentDuty'
      required: true
    RelationshipReciprocityAssessmentDuty:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RelationshipReciprocityAssessmentDuty'
      required: true