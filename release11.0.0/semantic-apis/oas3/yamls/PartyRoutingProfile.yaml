openapi: 3.0.1
info:
  title: Party Routing Profile
  description: 'This service domain maintains a small profile of key indicators for a customer that is referenced during customer interactions to facilitate routing, servicing and product/service fulfillment decisions. This can include status (such as account in arrears), ratings (such as high value customer) and alerts (such possible fraud activity detected)'
  contact:
    name: BIAN
    url: https://bian.org
  version: 11.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/PartyRoutingProfile/11.0.0
paths:
  /PartyRoutingProfile/Initiate:
    post:
      tags:
        - CR - PartyState
      summary: InCR Initiate profile state monitoring for a party
      description: InCR Initiate profile state monitoring for a party
      operationId: Initiate
      requestBody:
        $ref: '#/components/requestBodies/PartyState'
      responses:
        '200':
          $ref: '#/components/responses/PartyState'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyRoutingProfile/{partyroutingprofileid}/Update':
    put:
      tags:
        - CR - PartyState
      summary: UpCR Update monitoring for a party
      description: UpCR Update monitoring for a party
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/partyroutingprofileid'
      requestBody:
        $ref: '#/components/requestBodies/PartyState'
      responses:
        '200':
          $ref: '#/components/responses/PartyState'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyRoutingProfile/{partyroutingprofileid}/Execute':
    put:
      tags:
        - CR - PartyState
      summary: ExCR Execute an automated action for a monitored party (e.g. refresh)
      description: ExCR Execute an automated action for a monitored party (e.g. refresh)
      operationId: Execute
      parameters:
        - $ref: '#/components/parameters/partyroutingprofileid'
      requestBody:
        $ref: '#/components/requestBodies/PartyState'
      responses:
        '200':
          $ref: '#/components/responses/PartyState'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyRoutingProfile/{partyroutingprofileid}/Request':
    put:
      tags:
        - CR - PartyState
      summary: RqCR Request manual intervention for a monitored party (e.g. review settings)
      description: RqCR Request manual intervention for a monitored party (e.g. review settings)
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/partyroutingprofileid'
      requestBody:
        $ref: '#/components/requestBodies/PartyState'
      responses:
        '200':
          $ref: '#/components/responses/PartyState'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyRoutingProfile/{partyroutingprofileid}/Retrieve':
    get:
      tags:
        - CR - PartyState
      summary: ReCR Retrieve details about the monitored party state
      description: ReCR Retrieve details about the monitored party state
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/partyroutingprofileid'
      responses:
        '200':
          $ref: '#/components/responses/RetrievePartyStateResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyRoutingProfile/{partyroutingprofileid}/Status/{statusid}/Update':
    put:
      tags:
        - BQ - Status
      summary: UpBQ Update status measures for a monitored party
      description: UpBQ Update status measures for a monitored party
      operationId: UpdateStatus
      parameters:
        - $ref: '#/components/parameters/partyroutingprofileid'
        - $ref: '#/components/parameters/statusid'
      requestBody:
        $ref: '#/components/requestBodies/UpdateStatusRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateStatusResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyRoutingProfile/{partyroutingprofileid}/Status/{statusid}/Capture':
    put:
      tags:
        - BQ - Status
      summary: CaBQ Capture status measures for a monitored party
      description: CaBQ Capture status measures for a monitored party
      operationId: CaptureStatus
      parameters:
        - $ref: '#/components/parameters/partyroutingprofileid'
        - $ref: '#/components/parameters/statusid'
      requestBody:
        $ref: '#/components/requestBodies/CaptureStatusRequest'
      responses:
        '200':
          $ref: '#/components/responses/CaptureStatusResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyRoutingProfile/{partyroutingprofileid}/Status/{statusid}/Retrieve':
    get:
      tags:
        - BQ - Status
      summary: ReBQ Retrieve details about status measures for a party
      description: ReBQ Retrieve details about status measures for a party
      operationId: RetrieveStatus
      parameters:
        - $ref: '#/components/parameters/partyroutingprofileid'
        - $ref: '#/components/parameters/statusid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveStatusResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyRoutingProfile/{partyroutingprofileid}/Rating/{ratingid}/Update':
    put:
      tags:
        - BQ - Rating
      summary: UpBQ Update rating measures for a monitored party
      description: UpBQ Update rating measures for a monitored party
      operationId: UpdateRating
      parameters:
        - $ref: '#/components/parameters/partyroutingprofileid'
        - $ref: '#/components/parameters/ratingid'
      requestBody:
        $ref: '#/components/requestBodies/UpdateRatingRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateRatingResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyRoutingProfile/{partyroutingprofileid}/Rating/{ratingid}/Capture':
    put:
      tags:
        - BQ - Rating
      summary: CaBQ Capture rating measures for a monitored party
      description: CaBQ Capture rating measures for a monitored party
      operationId: CaptureRating
      parameters:
        - $ref: '#/components/parameters/partyroutingprofileid'
        - $ref: '#/components/parameters/ratingid'
      requestBody:
        $ref: '#/components/requestBodies/CaptureRatingRequest'
      responses:
        '200':
          $ref: '#/components/responses/CaptureRatingResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyRoutingProfile/{partyroutingprofileid}/Rating/{ratingid}/Retrieve':
    get:
      tags:
        - BQ - Rating
      summary: ReBQ Retrieve details about rating measures for a party
      description: ReBQ Retrieve details about rating measures for a party
      operationId: RetrieveRating
      parameters:
        - $ref: '#/components/parameters/partyroutingprofileid'
        - $ref: '#/components/parameters/ratingid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveRatingResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyRoutingProfile/{partyroutingprofileid}/Alert/{alertid}/Update':
    put:
      tags:
        - BQ - Alert
      summary: UpBQ Update alerts for a monitored party
      description: UpBQ Update alerts for a monitored party
      operationId: UpdateAlert
      parameters:
        - $ref: '#/components/parameters/partyroutingprofileid'
        - $ref: '#/components/parameters/alertid'
      requestBody:
        $ref: '#/components/requestBodies/UpdateAlertRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateAlertResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyRoutingProfile/{partyroutingprofileid}/Alert/{alertid}/Capture':
    put:
      tags:
        - BQ - Alert
      summary: CaBQ Capture alerts for a monitored party
      description: CaBQ Capture alerts for a monitored party
      operationId: CaptureAlert
      parameters:
        - $ref: '#/components/parameters/partyroutingprofileid'
        - $ref: '#/components/parameters/alertid'
      requestBody:
        $ref: '#/components/requestBodies/CaptureAlertRequest'
      responses:
        '200':
          $ref: '#/components/responses/CaptureAlertResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyRoutingProfile/{partyroutingprofileid}/Alert/{alertid}/Retrieve':
    get:
      tags:
        - BQ - Alert
      summary: ReBQ Retrieve details about alerts for a party
      description: ReBQ Retrieve details about alerts for a party
      operationId: RetrieveAlert
      parameters:
        - $ref: '#/components/parameters/partyroutingprofileid'
        - $ref: '#/components/parameters/alertid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveAlertResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    date:
      type: object
      properties:
        DateContent:
          type: string
          description: ''
          format: string
      description: Indication when the alert value is updated and time until given value applies/is relevant as appropriate
    Alert:
      type: object
      properties:
        CustomerRelationshipAlertType:
          type: string
          description: Defines the type of alert (e.g. detected potential fraud)
          format: string
        CustomerRelationshipAlert:
          type: string
          description: The maintained alert value (historical values may be retained as appropriate)
          format: string
        CustomerRelationshipAlertNarrative:
          type: string
          description: Explanation/description for given alert value if necessary
          format: string
        CustomerRelationshipAlertValidFromToDate:
          $ref: '#/components/schemas/date'
      description: "A collection of information feeds/measures that can be used to track the status of one or more items/entitites\n\nExamples: Composite position, Customer alert"
    Rating:
      type: object
      properties:
        CustomerRelationshipRatingType:
          type: string
          description: Defines the type of rating (e.g. credit rating)
          format: string
        CustomerRelationshipRating:
          type: string
          description: The maintained rating value (historical values may be retained as appropriate)
          format: string
        CustomerRelationshipRatingNarrative:
          type: string
          description: Explanation/description for given rating value if necessary
          format: string
        CustomerRelationshipRatingValidFromToDate:
          $ref: '#/components/schemas/date'
      description: "A collection of information feeds/measures that can be used to track the status of one or more items/entitites\n\nExamples: Composite position, Customer alert"
    Status:
      type: object
      properties:
        CustomerRelationshipStatusType:
          type: string
          description: Defines the type of status (e.g. account in distress)
          format: string
        CustomerRelationshipStatus:
          type: string
          description: The maintained state value (historical values may be retained as appropriate)
          format: string
        CustomerRelationshipStatusNarrative:
          type: string
          description: Explanation/description for given status value if necessary
          format: string
        CustomerRelationshipStatusValidFromToDate:
          $ref: '#/components/schemas/date'
      description: "A collection of information feeds/measures that can be used to track the status of one or more items/entitites\n\nExamples: Composite position, Customer alert"
    PartyState:
      type: object
      properties:
        CustomerReference:
          type: string
          description: Reference to the customer for the profile
          format: object
      description: 'Monitor and define the status/rating of some entity within Customer Profile. '
    RetrievePartyStateResponse:
      type: object
      properties:
        PartyState:
          type: object
          properties:
            CustomerReference:
              type: string
              description: "\r\n"
              format: object
      description: 'Output: ReCR Retrieve details about the monitored party state'
    UpdateStatusRequest:
      type: object
      properties:
        Status:
          type: object
          properties:
            CustomerRelationshipStatusType:
              type: string
              description: "\r\n"
              format: string
            CustomerRelationshipStatusNarrative:
              type: string
              description: "\r\n"
              format: string
            CustomerRelationshipStatusValidFromToDate:
              $ref: '#/components/schemas/date'
      description: 'Input: UpBQ Update status measures for a monitored party'
    UpdateStatusResponse:
      type: object
      properties:
        Status:
          type: object
          properties:
            CustomerRelationshipStatusType:
              type: string
              description: "\r\n"
              format: string
            CustomerRelationshipStatusNarrative:
              type: string
              description: "\r\n"
              format: string
            CustomerRelationshipStatusValidFromToDate:
              $ref: '#/components/schemas/date'
      description: 'Output: UpBQ Update status measures for a monitored party'
    CaptureStatusRequest:
      type: object
      properties:
        Status:
          type: object
          properties:
            CustomerRelationshipStatusType:
              type: string
              description: "\r\n"
              format: string
            CustomerRelationshipStatusNarrative:
              type: string
              description: "\r\n"
              format: string
            CustomerRelationshipStatusValidFromToDate:
              $ref: '#/components/schemas/date'
      description: 'Input: CaBQ Capture status measures for a monitored party'
    CaptureStatusResponse:
      type: object
      properties:
        Status:
          type: object
          properties:
            CustomerRelationshipStatusValidFromToDate:
              $ref: '#/components/schemas/date'
      description: 'Output: CaBQ Capture status measures for a monitored party'
    RetrieveStatusResponse:
      type: object
      properties:
        Status:
          type: object
          properties:
            CustomerRelationshipStatusType:
              type: string
              description: "\r\n"
              format: string
            CustomerRelationshipStatusNarrative:
              type: string
              description: "\r\n"
              format: string
            CustomerRelationshipStatusValidFromToDate:
              $ref: '#/components/schemas/date'
      description: 'Output: ReBQ Retrieve details about status measures for a party'
    UpdateRatingRequest:
      type: object
      properties:
        Rating:
          type: object
          properties:
            CustomerRelationshipRatingType:
              type: string
              description: "\r\n"
              format: string
            CustomerRelationshipRatingNarrative:
              type: string
              description: "\r\n"
              format: string
            CustomerRelationshipRatingValidFromToDate:
              $ref: '#/components/schemas/date'
      description: 'Input: UpBQ Update rating measures for a monitored party'
    UpdateRatingResponse:
      type: object
      properties:
        Rating:
          type: object
          properties:
            CustomerRelationshipRatingType:
              type: string
              description: "\r\n"
              format: string
            CustomerRelationshipRatingNarrative:
              type: string
              description: "\r\n"
              format: string
            CustomerRelationshipRatingValidFromToDate:
              $ref: '#/components/schemas/date'
      description: 'Output: UpBQ Update rating measures for a monitored party'
    CaptureRatingRequest:
      type: object
      properties:
        Rating:
          type: object
          properties:
            CustomerRelationshipRatingType:
              type: string
              description: "\r\n"
              format: string
            CustomerRelationshipRatingNarrative:
              type: string
              description: "\r\n"
              format: string
            CustomerRelationshipRatingValidFromToDate:
              $ref: '#/components/schemas/date'
      description: 'Input: CaBQ Capture rating measures for a monitored party'
    CaptureRatingResponse:
      type: object
      properties:
        Rating:
          type: object
          properties:
            CustomerRelationshipRatingValidFromToDate:
              $ref: '#/components/schemas/date'
      description: 'Output: CaBQ Capture rating measures for a monitored party'
    RetrieveRatingResponse:
      type: object
      properties:
        Rating:
          type: object
          properties:
            CustomerRelationshipRatingType:
              type: string
              description: "\r\n"
              format: string
            CustomerRelationshipRatingNarrative:
              type: string
              description: "\r\n"
              format: string
            CustomerRelationshipRatingValidFromToDate:
              $ref: '#/components/schemas/date'
      description: 'Output: ReBQ Retrieve details about rating measures for a party'
    UpdateAlertRequest:
      type: object
      properties:
        Alert:
          type: object
          properties:
            CustomerRelationshipAlertType:
              type: string
              description: "\r\n"
              format: string
            CustomerRelationshipAlertNarrative:
              type: string
              description: "\r\n"
              format: string
            CustomerRelationshipAlertValidFromToDate:
              $ref: '#/components/schemas/date'
      description: 'Input: UpBQ Update alerts for a monitored party'
    UpdateAlertResponse:
      type: object
      properties:
        Alert:
          type: object
          properties:
            CustomerRelationshipAlertType:
              type: string
              description: "\r\n"
              format: string
            CustomerRelationshipAlertNarrative:
              type: string
              description: "\r\n"
              format: string
            CustomerRelationshipAlertValidFromToDate:
              $ref: '#/components/schemas/date'
      description: 'Output: UpBQ Update alerts for a monitored party'
    CaptureAlertRequest:
      type: object
      properties:
        Alert:
          type: object
          properties:
            CustomerRelationshipAlertType:
              type: string
              description: "\r\n"
              format: string
            CustomerRelationshipAlertNarrative:
              type: string
              description: "\r\n"
              format: string
            CustomerRelationshipAlertValidFromToDate:
              $ref: '#/components/schemas/date'
      description: 'Input: CaBQ Capture alerts for a monitored party'
    CaptureAlertResponse:
      type: object
      properties:
        Alert:
          type: object
          properties:
            CustomerRelationshipAlertValidFromToDate:
              $ref: '#/components/schemas/date'
      description: 'Output: CaBQ Capture alerts for a monitored party'
    RetrieveAlertResponse:
      type: object
      properties:
        Alert:
          type: object
          properties:
            CustomerRelationshipAlertType:
              type: string
              description: "\r\n"
              format: string
            CustomerRelationshipAlertNarrative:
              type: string
              description: "\r\n"
              format: string
            CustomerRelationshipAlertValidFromToDate:
              $ref: '#/components/schemas/date'
      description: 'Output: ReBQ Retrieve details about alerts for a party'
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    PartyState:
      description: PartyState
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PartyState'
    RetrievePartyStateResponse:
      description: RetrievePartyStateResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrievePartyStateResponse'
    UpdateStatusResponse:
      description: UpdateStatusResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateStatusResponse'
    CaptureStatusResponse:
      description: CaptureStatusResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CaptureStatusResponse'
    RetrieveStatusResponse:
      description: RetrieveStatusResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveStatusResponse'
    UpdateRatingResponse:
      description: UpdateRatingResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateRatingResponse'
    CaptureRatingResponse:
      description: CaptureRatingResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CaptureRatingResponse'
    RetrieveRatingResponse:
      description: RetrieveRatingResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveRatingResponse'
    UpdateAlertResponse:
      description: UpdateAlertResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateAlertResponse'
    CaptureAlertResponse:
      description: CaptureAlertResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CaptureAlertResponse'
    RetrieveAlertResponse:
      description: RetrieveAlertResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveAlertResponse'
  parameters:
    partyroutingprofileid:
      name: partyroutingprofileid
      in: path
      required: true
      style: simple
      schema:
        type: string
    statusid:
      name: statusid
      in: path
      required: true
      style: simple
      schema:
        type: string
    ratingid:
      name: ratingid
      in: path
      required: true
      style: simple
      schema:
        type: string
    alertid:
      name: alertid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    PartyState:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PartyState'
      required: true
    UpdateStatusRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateStatusRequest'
      required: true
    CaptureStatusRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CaptureStatusRequest'
      required: true
    UpdateRatingRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateRatingRequest'
      required: true
    CaptureRatingRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CaptureRatingRequest'
      required: true
    UpdateAlertRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateAlertRequest'
      required: true
    CaptureAlertRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CaptureAlertRequest'
      required: true