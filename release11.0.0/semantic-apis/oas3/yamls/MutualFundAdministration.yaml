openapi: 3.0.1
info:
  title: Mutual Fund Administration
  description: The Mutual Fund Administration Service Domain handles all aspects of the set-up and operation of mutual funds that can be offered to the bank's general (non-accredited) customers
  contact:
    name: BIAN
    url: https://bian.org
  version: 11.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/MutualFundAdministration/11.0.0
paths:
  '/MutualFundAdministration/{mutualfundadministrationid}/Control':
    put:
      tags:
        - CR - MutualFundAdministrativePlan
      summary: Control Mutual Fund Administrative Plan
      description: Control Mutual Fund Administrative Plan
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
      requestBody:
        $ref: '#/components/requestBodies/ControlMutualFundAdministrativePlanRequest'
      responses:
        '200':
          $ref: '#/components/responses/ControlMutualFundAdministrativePlanResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /MutualFundAdministration/Create:
    post:
      tags:
        - CR - MutualFundAdministrativePlan
      summary: Create Mutual Fund Administrative Plan
      description: Create Mutual Fund Administrative Plan
      operationId: Create
      requestBody:
        $ref: '#/components/requestBodies/CreateMutualFundAdministrativePlanRequest'
      responses:
        '200':
          $ref: '#/components/responses/CreateMutualFundAdministrativePlanResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/Exchange':
    put:
      tags:
        - CR - MutualFundAdministrativePlan
      summary: Exchange Mutual Fund Administrative Plan
      description: Exchange Mutual Fund Administrative Plan
      operationId: Exchange
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
      requestBody:
        $ref: '#/components/requestBodies/ExchangeMutualFundAdministrativePlanRequest'
      responses:
        '200':
          $ref: '#/components/responses/ExchangeMutualFundAdministrativePlanResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/Grant':
    put:
      tags:
        - CR - MutualFundAdministrativePlan
      summary: Grant Mutual Fund Administrative Plan
      description: Grant Mutual Fund Administrative Plan
      operationId: Grant
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
      requestBody:
        $ref: '#/components/requestBodies/GrantMutualFundAdministrativePlanRequest'
      responses:
        '200':
          $ref: '#/components/responses/GrantMutualFundAdministrativePlanResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/Notify':
    get:
      tags:
        - CR - MutualFundAdministrativePlan
      summary: Notify Mutual Fund Administrative Plan
      description: Notify Mutual Fund Administrative Plan
      operationId: Notify
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
      responses:
        '200':
          $ref: '#/components/responses/NotifyMutualFundAdministrativePlanResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/Request':
    put:
      tags:
        - CR - MutualFundAdministrativePlan
      summary: Request Mutual Fund Administrative Plan
      description: Request Mutual Fund Administrative Plan
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
      requestBody:
        $ref: '#/components/requestBodies/RequestMutualFundAdministrativePlanRequest'
      responses:
        '200':
          $ref: '#/components/responses/RequestMutualFundAdministrativePlanResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/Retrieve':
    get:
      tags:
        - CR - MutualFundAdministrativePlan
      summary: Retrieve Mutual Fund Administrative Plan
      description: Retrieve Mutual Fund Administrative Plan
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveMutualFundAdministrativePlanResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/Update':
    put:
      tags:
        - CR - MutualFundAdministrativePlan
      summary: Update Mutual Fund Administrative Plan
      description: Update Mutual Fund Administrative Plan
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
      requestBody:
        $ref: '#/components/requestBodies/UpdateMutualFundAdministrativePlanRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateMutualFundAdministrativePlanResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundAccountingRoutine/{fundaccountingroutineid}/Exchange':
    put:
      tags:
        - BQ - FundAccountingRoutine
      summary: Exchange Fund Accounting Routine
      description: Exchange Fund Accounting Routine
      operationId: ExchangeFundAccountingRoutine
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundaccountingroutineid'
      requestBody:
        $ref: '#/components/requestBodies/FundAccountingRoutine'
      responses:
        '200':
          $ref: '#/components/responses/FundAccountingRoutine'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundDevelopmentRoutine/{funddevelopmentroutineid}/Exchange':
    put:
      tags:
        - BQ - FundDevelopmentRoutine
      summary: Exchange Fund Development Routine
      description: Exchange Fund Development Routine
      operationId: ExchangeFundDevelopmentRoutine
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/funddevelopmentroutineid'
      requestBody:
        $ref: '#/components/requestBodies/FundDevelopmentRoutine'
      responses:
        '200':
          $ref: '#/components/responses/FundDevelopmentRoutine'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundEnrolmentRoutine/{fundenrolmentroutineid}/Exchange':
    put:
      tags:
        - BQ - FundEnrolmentRoutine
      summary: Exchange Fund Enrolment Routine
      description: Exchange Fund Enrolment Routine
      operationId: ExchangeFundEnrolmentRoutine
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundenrolmentroutineid'
      requestBody:
        $ref: '#/components/requestBodies/FundEnrolmentRoutine'
      responses:
        '200':
          $ref: '#/components/responses/FundEnrolmentRoutine'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundFinancialReportingRoutine/{fundfinancialreportingroutineid}/Exchange':
    put:
      tags:
        - BQ - FundFinancialReportingRoutine
      summary: Exchange Fund Financial Reporting Routine
      description: Exchange Fund Financial Reporting Routine
      operationId: ExchangeFundFinancialReportingRoutine
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundfinancialreportingroutineid'
      requestBody:
        $ref: '#/components/requestBodies/FundFinancialReportingRoutine'
      responses:
        '200':
          $ref: '#/components/responses/FundFinancialReportingRoutine'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundInflowsandOutflowRoutine/{fundinflowsandoutflowroutineid}/Exchange':
    put:
      tags:
        - BQ - FundInflowsandOutflowRoutine
      summary: Exchange Fund Inflows and Outflow Routine
      description: Exchange Fund Inflows and Outflow Routine
      operationId: ExchangeFundInflowsandOutflowRoutine
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundinflowsandoutflowroutineid'
      requestBody:
        $ref: '#/components/requestBodies/FundInflowsandOutflowRoutine'
      responses:
        '200':
          $ref: '#/components/responses/FundInflowsandOutflowRoutine'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundInvestor_MiddleandBackOfficeServiceRoutine/{fundinvestor_middleandbackofficeserviceroutineid}/Exchange':
    put:
      tags:
        - BQ - FundInvestor_MiddleandBackOfficeServiceRoutine
      summary: 'Exchange Fund Investor, Middle and Back Office Service Routine'
      description: 'Exchange Fund Investor, Middle and Back Office Service Routine'
      operationId: ExchangeFundInvestor_MiddleandBackOfficeServiceRoutine
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundinvestor_middleandbackofficeserviceroutineid'
      requestBody:
        $ref: '#/components/requestBodies/FundInvestor_MiddleandBackOfficeServiceRoutine'
      responses:
        '200':
          $ref: '#/components/responses/FundInvestor_MiddleandBackOfficeServiceRoutine'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundManagementFeeRoutine/{fundmanagementfeeroutineid}/Exchange':
    put:
      tags:
        - BQ - FundManagementFeeRoutine
      summary: Exchange Fund Management Fee Routine
      description: Exchange Fund Management Fee Routine
      operationId: ExchangeFundManagementFeeRoutine
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundmanagementfeeroutineid'
      requestBody:
        $ref: '#/components/requestBodies/FundManagementFeeRoutine'
      responses:
        '200':
          $ref: '#/components/responses/FundManagementFeeRoutine'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundTaxAdministrationRoutine/{fundtaxadministrationroutineid}/Exchange':
    put:
      tags:
        - BQ - FundTaxAdministrationRoutine
      summary: Exchange Fund Tax Administration Routine
      description: Exchange Fund Tax Administration Routine
      operationId: ExchangeFundTaxAdministrationRoutine
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundtaxadministrationroutineid'
      requestBody:
        $ref: '#/components/requestBodies/FundTaxAdministrationRoutine'
      responses:
        '200':
          $ref: '#/components/responses/FundTaxAdministrationRoutine'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundAccountingRoutine/{fundaccountingroutineid}/Grant':
    put:
      tags:
        - BQ - FundAccountingRoutine
      summary: Grant Fund Accounting Routine
      description: Grant Fund Accounting Routine
      operationId: GrantFundAccountingRoutine
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundaccountingroutineid'
      requestBody:
        $ref: '#/components/requestBodies/FundAccountingRoutine'
      responses:
        '200':
          $ref: '#/components/responses/FundAccountingRoutine'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundDevelopmentRoutine/{funddevelopmentroutineid}/Grant':
    put:
      tags:
        - BQ - FundDevelopmentRoutine
      summary: Grant Fund Development Routine
      description: Grant Fund Development Routine
      operationId: GrantFundDevelopmentRoutine
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/funddevelopmentroutineid'
      requestBody:
        $ref: '#/components/requestBodies/FundDevelopmentRoutine'
      responses:
        '200':
          $ref: '#/components/responses/FundDevelopmentRoutine'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundEnrolmentRoutine/{fundenrolmentroutineid}/Grant':
    put:
      tags:
        - BQ - FundEnrolmentRoutine
      summary: Grant Fund Enrolment Routine
      description: Grant Fund Enrolment Routine
      operationId: GrantFundEnrolmentRoutine
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundenrolmentroutineid'
      requestBody:
        $ref: '#/components/requestBodies/FundEnrolmentRoutine'
      responses:
        '200':
          $ref: '#/components/responses/FundEnrolmentRoutine'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundFinancialReportingRoutine/{fundfinancialreportingroutineid}/Grant':
    put:
      tags:
        - BQ - FundFinancialReportingRoutine
      summary: Grant Fund Financial Reporting Routine
      description: Grant Fund Financial Reporting Routine
      operationId: GrantFundFinancialReportingRoutine
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundfinancialreportingroutineid'
      requestBody:
        $ref: '#/components/requestBodies/FundFinancialReportingRoutine'
      responses:
        '200':
          $ref: '#/components/responses/FundFinancialReportingRoutine'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundInflowsandOutflowRoutine/{fundinflowsandoutflowroutineid}/Grant':
    put:
      tags:
        - BQ - FundInflowsandOutflowRoutine
      summary: Grant Fund Inflows and Outflow Routine
      description: Grant Fund Inflows and Outflow Routine
      operationId: GrantFundInflowsandOutflowRoutine
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundinflowsandoutflowroutineid'
      requestBody:
        $ref: '#/components/requestBodies/FundInflowsandOutflowRoutine'
      responses:
        '200':
          $ref: '#/components/responses/FundInflowsandOutflowRoutine'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundInvestor_MiddleandBackOfficeServiceRoutine/{fundinvestor_middleandbackofficeserviceroutineid}/Grant':
    put:
      tags:
        - BQ - FundInvestor_MiddleandBackOfficeServiceRoutine
      summary: 'Grant Fund Investor, Middle and Back Office Service Routine'
      description: 'Grant Fund Investor, Middle and Back Office Service Routine'
      operationId: GrantFundInvestor_MiddleandBackOfficeServiceRoutine
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundinvestor_middleandbackofficeserviceroutineid'
      requestBody:
        $ref: '#/components/requestBodies/FundInvestor_MiddleandBackOfficeServiceRoutine'
      responses:
        '200':
          $ref: '#/components/responses/FundInvestor_MiddleandBackOfficeServiceRoutine'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundManagementFeeRoutine/{fundmanagementfeeroutineid}/Grant':
    put:
      tags:
        - BQ - FundManagementFeeRoutine
      summary: Grant Fund Management Fee Routine
      description: Grant Fund Management Fee Routine
      operationId: GrantFundManagementFeeRoutine
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundmanagementfeeroutineid'
      requestBody:
        $ref: '#/components/requestBodies/FundManagementFeeRoutine'
      responses:
        '200':
          $ref: '#/components/responses/FundManagementFeeRoutine'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundTaxAdministrationRoutine/{fundtaxadministrationroutineid}/Grant':
    put:
      tags:
        - BQ - FundTaxAdministrationRoutine
      summary: Grant Fund Tax Administration Routine
      description: Grant Fund Tax Administration Routine
      operationId: GrantFundTaxAdministrationRoutine
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundtaxadministrationroutineid'
      requestBody:
        $ref: '#/components/requestBodies/FundTaxAdministrationRoutine'
      responses:
        '200':
          $ref: '#/components/responses/FundTaxAdministrationRoutine'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundAccountingRoutine/{fundaccountingroutineid}/Notify':
    get:
      tags:
        - BQ - FundAccountingRoutine
      summary: Notify Fund Accounting Routine
      description: Notify Fund Accounting Routine
      operationId: NotifyFundAccountingRoutine
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundaccountingroutineid'
      responses:
        '200':
          $ref: '#/components/responses/FundAccountingRoutine'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundDevelopmentRoutine/{funddevelopmentroutineid}/Notify':
    get:
      tags:
        - BQ - FundDevelopmentRoutine
      summary: Notify Fund Development Routine
      description: Notify Fund Development Routine
      operationId: NotifyFundDevelopmentRoutine
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/funddevelopmentroutineid'
      responses:
        '200':
          $ref: '#/components/responses/FundDevelopmentRoutine'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundEnrolmentRoutine/{fundenrolmentroutineid}/Notify':
    get:
      tags:
        - BQ - FundEnrolmentRoutine
      summary: Notify Fund Enrolment Routine
      description: Notify Fund Enrolment Routine
      operationId: NotifyFundEnrolmentRoutine
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundenrolmentroutineid'
      responses:
        '200':
          $ref: '#/components/responses/FundEnrolmentRoutine'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundFinancialReportingRoutine/{fundfinancialreportingroutineid}/Notify':
    get:
      tags:
        - BQ - FundFinancialReportingRoutine
      summary: Notify Fund Financial Reporting Routine
      description: Notify Fund Financial Reporting Routine
      operationId: NotifyFundFinancialReportingRoutine
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundfinancialreportingroutineid'
      responses:
        '200':
          $ref: '#/components/responses/FundFinancialReportingRoutine'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundInflowsandOutflowRoutine/{fundinflowsandoutflowroutineid}/Notify':
    get:
      tags:
        - BQ - FundInflowsandOutflowRoutine
      summary: Notify Fund Inflows and Outflow Routine
      description: Notify Fund Inflows and Outflow Routine
      operationId: NotifyFundInflowsandOutflowRoutine
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundinflowsandoutflowroutineid'
      responses:
        '200':
          $ref: '#/components/responses/FundInflowsandOutflowRoutine'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundInvestor_MiddleandBackOfficeServiceRoutine/{fundinvestor_middleandbackofficeserviceroutineid}/Notify':
    get:
      tags:
        - BQ - FundInvestor_MiddleandBackOfficeServiceRoutine
      summary: 'Notify Fund Investor, Middle and Back Office Service Routine'
      description: 'Notify Fund Investor, Middle and Back Office Service Routine'
      operationId: NotifyFundInvestor_MiddleandBackOfficeServiceRoutine
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundinvestor_middleandbackofficeserviceroutineid'
      responses:
        '200':
          $ref: '#/components/responses/FundInvestor_MiddleandBackOfficeServiceRoutine'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundManagementFeeRoutine/{fundmanagementfeeroutineid}/Notify':
    get:
      tags:
        - BQ - FundManagementFeeRoutine
      summary: Notify Fund Management Fee Routine
      description: Notify Fund Management Fee Routine
      operationId: NotifyFundManagementFeeRoutine
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundmanagementfeeroutineid'
      responses:
        '200':
          $ref: '#/components/responses/FundManagementFeeRoutine'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundTaxAdministrationRoutine/{fundtaxadministrationroutineid}/Notify':
    get:
      tags:
        - BQ - FundTaxAdministrationRoutine
      summary: Notify Fund Tax Administration Routine
      description: Notify Fund Tax Administration Routine
      operationId: NotifyFundTaxAdministrationRoutine
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundtaxadministrationroutineid'
      responses:
        '200':
          $ref: '#/components/responses/FundTaxAdministrationRoutine'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundAccountingRoutine/{fundaccountingroutineid}/Request':
    put:
      tags:
        - BQ - FundAccountingRoutine
      summary: Request Fund Accounting Routine
      description: Request Fund Accounting Routine
      operationId: RequestFundAccountingRoutine
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundaccountingroutineid'
      requestBody:
        $ref: '#/components/requestBodies/FundAccountingRoutine'
      responses:
        '200':
          $ref: '#/components/responses/FundAccountingRoutine'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundDevelopmentRoutine/{funddevelopmentroutineid}/Request':
    put:
      tags:
        - BQ - FundDevelopmentRoutine
      summary: Request Fund Development Routine
      description: Request Fund Development Routine
      operationId: RequestFundDevelopmentRoutine
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/funddevelopmentroutineid'
      requestBody:
        $ref: '#/components/requestBodies/FundDevelopmentRoutine'
      responses:
        '200':
          $ref: '#/components/responses/FundDevelopmentRoutine'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundEnrolmentRoutine/{fundenrolmentroutineid}/Request':
    put:
      tags:
        - BQ - FundEnrolmentRoutine
      summary: Request Fund Enrolment Routine
      description: Request Fund Enrolment Routine
      operationId: RequestFundEnrolmentRoutine
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundenrolmentroutineid'
      requestBody:
        $ref: '#/components/requestBodies/FundEnrolmentRoutine'
      responses:
        '200':
          $ref: '#/components/responses/FundEnrolmentRoutine'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundFinancialReportingRoutine/{fundfinancialreportingroutineid}/Request':
    put:
      tags:
        - BQ - FundFinancialReportingRoutine
      summary: Request Fund Financial Reporting Routine
      description: Request Fund Financial Reporting Routine
      operationId: RequestFundFinancialReportingRoutine
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundfinancialreportingroutineid'
      requestBody:
        $ref: '#/components/requestBodies/FundFinancialReportingRoutine'
      responses:
        '200':
          $ref: '#/components/responses/FundFinancialReportingRoutine'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundInflowsandOutflowRoutine/{fundinflowsandoutflowroutineid}/Request':
    put:
      tags:
        - BQ - FundInflowsandOutflowRoutine
      summary: Request Fund Inflows and Outflow Routine
      description: Request Fund Inflows and Outflow Routine
      operationId: RequestFundInflowsandOutflowRoutine
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundinflowsandoutflowroutineid'
      requestBody:
        $ref: '#/components/requestBodies/FundInflowsandOutflowRoutine'
      responses:
        '200':
          $ref: '#/components/responses/FundInflowsandOutflowRoutine'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundInvestor_MiddleandBackOfficeServiceRoutine/{fundinvestor_middleandbackofficeserviceroutineid}/Request':
    put:
      tags:
        - BQ - FundInvestor_MiddleandBackOfficeServiceRoutine
      summary: 'Request Fund Investor, Middle and Back Office Service Routine'
      description: 'Request Fund Investor, Middle and Back Office Service Routine'
      operationId: RequestFundInvestor_MiddleandBackOfficeServiceRoutine
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundinvestor_middleandbackofficeserviceroutineid'
      requestBody:
        $ref: '#/components/requestBodies/FundInvestor_MiddleandBackOfficeServiceRoutine'
      responses:
        '200':
          $ref: '#/components/responses/FundInvestor_MiddleandBackOfficeServiceRoutine'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundManagementFeeRoutine/{fundmanagementfeeroutineid}/Request':
    put:
      tags:
        - BQ - FundManagementFeeRoutine
      summary: Request Fund Management Fee Routine
      description: Request Fund Management Fee Routine
      operationId: RequestFundManagementFeeRoutine
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundmanagementfeeroutineid'
      requestBody:
        $ref: '#/components/requestBodies/FundManagementFeeRoutine'
      responses:
        '200':
          $ref: '#/components/responses/FundManagementFeeRoutine'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundTaxAdministrationRoutine/{fundtaxadministrationroutineid}/Request':
    put:
      tags:
        - BQ - FundTaxAdministrationRoutine
      summary: Request Fund Tax Administration Routine
      description: Request Fund Tax Administration Routine
      operationId: RequestFundTaxAdministrationRoutine
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundtaxadministrationroutineid'
      requestBody:
        $ref: '#/components/requestBodies/FundTaxAdministrationRoutine'
      responses:
        '200':
          $ref: '#/components/responses/FundTaxAdministrationRoutine'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundAccountingRoutine/{fundaccountingroutineid}/Retrieve':
    get:
      tags:
        - BQ - FundAccountingRoutine
      summary: Retrieve Fund Accounting Routine
      description: Retrieve Fund Accounting Routine
      operationId: RetrieveFundAccountingRoutine
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundaccountingroutineid'
      responses:
        '200':
          $ref: '#/components/responses/FundAccountingRoutine'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundDevelopmentRoutine/{funddevelopmentroutineid}/Retrieve':
    get:
      tags:
        - BQ - FundDevelopmentRoutine
      summary: Retrieve Fund Development Routine
      description: Retrieve Fund Development Routine
      operationId: RetrieveFundDevelopmentRoutine
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/funddevelopmentroutineid'
      responses:
        '200':
          $ref: '#/components/responses/FundDevelopmentRoutine'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundEnrolmentRoutine/{fundenrolmentroutineid}/Retrieve':
    get:
      tags:
        - BQ - FundEnrolmentRoutine
      summary: Retrieve Fund Enrolment Routine
      description: Retrieve Fund Enrolment Routine
      operationId: RetrieveFundEnrolmentRoutine
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundenrolmentroutineid'
      responses:
        '200':
          $ref: '#/components/responses/FundEnrolmentRoutine'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundFinancialReportingRoutine/{fundfinancialreportingroutineid}/Retrieve':
    get:
      tags:
        - BQ - FundFinancialReportingRoutine
      summary: Retrieve Fund Financial Reporting Routine
      description: Retrieve Fund Financial Reporting Routine
      operationId: RetrieveFundFinancialReportingRoutine
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundfinancialreportingroutineid'
      responses:
        '200':
          $ref: '#/components/responses/FundFinancialReportingRoutine'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundInflowsandOutflowRoutine/{fundinflowsandoutflowroutineid}/Retrieve':
    get:
      tags:
        - BQ - FundInflowsandOutflowRoutine
      summary: Retrieve Fund Inflows and Outflow Routine
      description: Retrieve Fund Inflows and Outflow Routine
      operationId: RetrieveFundInflowsandOutflowRoutine
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundinflowsandoutflowroutineid'
      responses:
        '200':
          $ref: '#/components/responses/FundInflowsandOutflowRoutine'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundInvestor_MiddleandBackOfficeServiceRoutine/{fundinvestor_middleandbackofficeserviceroutineid}/Retrieve':
    get:
      tags:
        - BQ - FundInvestor_MiddleandBackOfficeServiceRoutine
      summary: 'Retrieve Fund Investor, Middle and Back Office Service Routine'
      description: 'Retrieve Fund Investor, Middle and Back Office Service Routine'
      operationId: RetrieveFundInvestor_MiddleandBackOfficeServiceRoutine
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundinvestor_middleandbackofficeserviceroutineid'
      responses:
        '200':
          $ref: '#/components/responses/FundInvestor_MiddleandBackOfficeServiceRoutine'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundManagementFeeRoutine/{fundmanagementfeeroutineid}/Retrieve':
    get:
      tags:
        - BQ - FundManagementFeeRoutine
      summary: Retrieve Fund Management Fee Routine
      description: Retrieve Fund Management Fee Routine
      operationId: RetrieveFundManagementFeeRoutine
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundmanagementfeeroutineid'
      responses:
        '200':
          $ref: '#/components/responses/FundManagementFeeRoutine'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundTaxAdministrationRoutine/{fundtaxadministrationroutineid}/Retrieve':
    get:
      tags:
        - BQ - FundTaxAdministrationRoutine
      summary: Retrieve Fund Tax Administration Routine
      description: Retrieve Fund Tax Administration Routine
      operationId: RetrieveFundTaxAdministrationRoutine
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundtaxadministrationroutineid'
      responses:
        '200':
          $ref: '#/components/responses/FundTaxAdministrationRoutine'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundAccountingRoutine/{fundaccountingroutineid}/Update':
    put:
      tags:
        - BQ - FundAccountingRoutine
      summary: Update Fund Accounting Routine
      description: Update Fund Accounting Routine
      operationId: UpdateFundAccountingRoutine
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundaccountingroutineid'
      requestBody:
        $ref: '#/components/requestBodies/FundAccountingRoutine'
      responses:
        '200':
          $ref: '#/components/responses/FundAccountingRoutine'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundDevelopmentRoutine/{funddevelopmentroutineid}/Update':
    put:
      tags:
        - BQ - FundDevelopmentRoutine
      summary: Update Fund Development Routine
      description: Update Fund Development Routine
      operationId: UpdateFundDevelopmentRoutine
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/funddevelopmentroutineid'
      requestBody:
        $ref: '#/components/requestBodies/FundDevelopmentRoutine'
      responses:
        '200':
          $ref: '#/components/responses/FundDevelopmentRoutine'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundEnrolmentRoutine/{fundenrolmentroutineid}/Update':
    put:
      tags:
        - BQ - FundEnrolmentRoutine
      summary: Update Fund Enrolment Routine
      description: Update Fund Enrolment Routine
      operationId: UpdateFundEnrolmentRoutine
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundenrolmentroutineid'
      requestBody:
        $ref: '#/components/requestBodies/FundEnrolmentRoutine'
      responses:
        '200':
          $ref: '#/components/responses/FundEnrolmentRoutine'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundFinancialReportingRoutine/{fundfinancialreportingroutineid}/Update':
    put:
      tags:
        - BQ - FundFinancialReportingRoutine
      summary: Update Fund Financial Reporting Routine
      description: Update Fund Financial Reporting Routine
      operationId: UpdateFundFinancialReportingRoutine
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundfinancialreportingroutineid'
      requestBody:
        $ref: '#/components/requestBodies/FundFinancialReportingRoutine'
      responses:
        '200':
          $ref: '#/components/responses/FundFinancialReportingRoutine'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundInflowsandOutflowRoutine/{fundinflowsandoutflowroutineid}/Update':
    put:
      tags:
        - BQ - FundInflowsandOutflowRoutine
      summary: Update Fund Inflows and Outflow Routine
      description: Update Fund Inflows and Outflow Routine
      operationId: UpdateFundInflowsandOutflowRoutine
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundinflowsandoutflowroutineid'
      requestBody:
        $ref: '#/components/requestBodies/FundInflowsandOutflowRoutine'
      responses:
        '200':
          $ref: '#/components/responses/FundInflowsandOutflowRoutine'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundInvestor_MiddleandBackOfficeServiceRoutine/{fundinvestor_middleandbackofficeserviceroutineid}/Update':
    put:
      tags:
        - BQ - FundInvestor_MiddleandBackOfficeServiceRoutine
      summary: 'Update Fund Investor, Middle and Back Office Service Routine'
      description: 'Update Fund Investor, Middle and Back Office Service Routine'
      operationId: UpdateFundInvestor_MiddleandBackOfficeServiceRoutine
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundinvestor_middleandbackofficeserviceroutineid'
      requestBody:
        $ref: '#/components/requestBodies/FundInvestor_MiddleandBackOfficeServiceRoutine'
      responses:
        '200':
          $ref: '#/components/responses/FundInvestor_MiddleandBackOfficeServiceRoutine'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundManagementFeeRoutine/{fundmanagementfeeroutineid}/Update':
    put:
      tags:
        - BQ - FundManagementFeeRoutine
      summary: Update Fund Management Fee Routine
      description: Update Fund Management Fee Routine
      operationId: UpdateFundManagementFeeRoutine
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundmanagementfeeroutineid'
      requestBody:
        $ref: '#/components/requestBodies/FundManagementFeeRoutine'
      responses:
        '200':
          $ref: '#/components/responses/FundManagementFeeRoutine'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MutualFundAdministration/{mutualfundadministrationid}/FundTaxAdministrationRoutine/{fundtaxadministrationroutineid}/Update':
    put:
      tags:
        - BQ - FundTaxAdministrationRoutine
      summary: Update Fund Tax Administration Routine
      description: Update Fund Tax Administration Routine
      operationId: UpdateFundTaxAdministrationRoutine
      parameters:
        - $ref: '#/components/parameters/mutualfundadministrationid'
        - $ref: '#/components/parameters/fundtaxadministrationroutineid'
      requestBody:
        $ref: '#/components/requestBodies/FundTaxAdministrationRoutine'
      responses:
        '200':
          $ref: '#/components/responses/FundTaxAdministrationRoutine'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    condition:
      type: object
      properties:
        Condition:
          type: string
          description: "Condition is a premise upon which the fulfillment of an agreement depends \n\nGeneral and special arrangements, provisions, requirements, rules, specifications, and standards that form an integral part of an agreement or contract.\n\nRead more: http://www.businessdictionary.com/definition/terms-and-conditions.html\n\n"
          format: class
      description: The required status/situation before the routine can be undertaken
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: Name by which a party is known and which is usually used to identify that party. (ISO20022)
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    datetime:
      type: object
      properties:
        DateTimeContent:
          type: string
          description: ''
          format: string
        TimeZoneCode:
          type: string
          description: ''
          format: string
        DaylightSavingIndicator:
          type: string
          description: ''
          format: string
      description: ''
    partyidentificationtypevalues:
      enum:
        - LEI(LegalEntityIdentifier)
        - TaxIdentificationNumber
        - NationalRegistrationNumber
        - RegistrationAuthorityIdentification
        - PassportNumber
        - AlienRegistrationNumber
        - TaxExemptIdentificationNumber
        - ForeignInvestmentIdentityNumber
        - DriverLicenseNumber
        - CorporateIdentification
        - SocialSecurityNumber
        - IdentityCardNumber
        - NationalRegistrationIdentificationNumber
        - Concat
      type: string
      description: ">\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `TaxIdentificationNumber` - \r\n* `NationalRegistrationNumber` - \r\n* `RegistrationAuthorityIdentification` - \r\n* `PassportNumber` - \r\n* `AlienRegistrationNumber` - \r\n* `TaxExemptIdentificationNumber` - \r\n* `ForeignInvestmentIdentityNumber` - \r\n* `DriverLicenseNumber` - \r\n* `CorporateIdentification` - \r\n* `SocialSecurityNumber` - \r\n* `IdentityCardNumber` - \r\n* `NationalRegistrationIdentificationNumber` - \r\n* `Concat` - \r\n"
    value:
      type: object
      properties:
        Value:
          type: string
          description: 'A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)'
          format: datatype
      description: ''
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
      description: ''
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: " ||\r\n|"
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: "The operating unit/employee responsible for performing the routine ||\r\n|"
    schedule:
      type: object
      properties:
        ScheduleType:
          type: string
          description: ''
          format: string
      description: The timing and key actions/milestones involved in completing the routine
    businessservicetypevalues:
      type: object
      properties:
        Businessservicetypevalues:
          type: string
          description: ''
          format: enumeration
      description: ''
    businessservice:
      type: object
      properties:
        BusinessServiceName:
          $ref: '#/components/schemas/name'
        BusinessServiceType:
          $ref: '#/components/schemas/businessservicetypevalues'
        BusinessServiceDescription:
          $ref: '#/components/schemas/text'
      description: 'The Fund Investor, Middle and Back Office Service Routine specific Business Service'
    goal:
      type: object
      properties:
        GoalType:
          type: string
          description: The type of goal
          format: string
        GoalDefinition:
          type: string
          description: 'A definition of the goal, including the intended actions required to achieve the goal'
          format: string
        GoalOrganisation:
          type: string
          description: Identifies the interested parties and their roles and responsibilities for the specific actions supporting the achievement of the goal
          format: ''
        GoalResult:
          type: string
          description: 'Assessment of how the work is progressing towards achieving the goal, including projections of likely outcomes'
          format: string
      description: ''
    budgettypevalues:
      enum:
        - FinancialBudget
        - ResourceBudget
        - OperatingBudget
      type: string
      description: ">\r\n* `FinancialBudget` - \r\n* `ResourceBudget` - \r\n* `OperatingBudget` - \r\n"
    budgettype:
      type: object
      properties:
        BudgetTypeName:
          $ref: '#/components/schemas/name'
        BudgetType:
          $ref: '#/components/schemas/budgettypevalues'
      description: "A Classification value that specifies the type of Budget ||\r\n|"
    currencycode:
      type: object
      properties:
        Currencycode:
          type: string
          description: "A code identifying a currency according to ISO-4217.\nA currency is a system of money in general use in a particular country.\n\nCode allocated to a currency, by a maintenance agency, under an international identification scheme as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\". Valid currency codes are registered with the ISO 4217 Maintenance Agency, and consist of three contiguous letters. (ISO20022)\n\n"
          format: datatype
      description: ''
    amount:
      type: object
      properties:
        AmountValue:
          type: string
          description: ''
          format: string
        AmountCurrency:
          $ref: '#/components/schemas/currencycode'
        DecimalPointPosition:
          type: string
          description: "Decimal point position starts calulating from the right\n"
          format: string
      description: " ||\r\n|"
    budgetarrangement:
      type: object
      properties:
        BudgetType:
          $ref: '#/components/schemas/budgettype'
        BudgetAmount:
          $ref: '#/components/schemas/amount'
      description: 'An arrangement which is specifying an estimate of costs, revenues, and resources over a specified period, reflecting a reading of future financial conditions and goals. (adapted from Business Dictionary)'
    plannedaction:
      type: object
      properties:
        PlannedAction:
          type: string
          description: 'An action that is arranged in a plan for doing or achieving something '
          format: class
      description: 'An action that is arranged in a plan for doing or achieving something '
    plantypevalues:
      enum:
        - AdministrativePlan
        - ManagementPlan
        - StratgyPlan
        - FinancialPlan
      type: string
      description: ">\r\n* `AdministrativePlan` - \r\n* `ManagementPlan` - \r\n* `StratgyPlan` - \r\n* `FinancialPlan` - \r\n"
    plantype:
      type: object
      properties:
        PlanTypeName:
          $ref: '#/components/schemas/name'
        PlanType:
          $ref: '#/components/schemas/plantypevalues'
      description: "A Classification value that specifies the type of Plan ||\r\n|"
    plan:
      type: object
      properties:
        PlanGoal:
          $ref: '#/components/schemas/goal'
        PlanBudget:
          $ref: '#/components/schemas/budgetarrangement'
        PlannedAction:
          $ref: '#/components/schemas/plannedaction'
        PlanType:
          $ref: '#/components/schemas/plantype'
        PlanOrganisation:
          type: string
          description: ''
          format: string
        PlanValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PlanDescription:
          $ref: '#/components/schemas/text'
      description: "Reference to Fund Investor, Middle and Back Office Service Routine ||\r\n|"
    FundInvestor_MiddleandBackOfficeServiceRoutine:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        BusinessUnitEmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        MutualFundAdministrativePlanReference:
          $ref: '#/components/schemas/plan'
        FundInvestor_MiddleandBackOfficeServiceRoutineReference:
          $ref: '#/components/schemas/plannedaction'
        FundInvestor_MiddleandBackOfficeServiceRoutineType:
          $ref: '#/components/schemas/text'
      description: 'The Fund Investor, Middle and Back Office Service Routine is an activity that is performed as one aspect of carrying out the Fund Investor, Middle and Back Office Service Routine'
    FundManagementFeeRoutine:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        BusinessUnitEmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        MutualFundAdministrativePlanReference:
          $ref: '#/components/schemas/plan'
        FundManagementFeeRoutineReference:
          $ref: '#/components/schemas/plannedaction'
        FundManagementFeeRoutineType:
          $ref: '#/components/schemas/text'
      description: 'The Fund Investor, Middle and Back Office Service Routine is an activity that is performed as one aspect of carrying out the Fund Investor, Middle and Back Office Service Routine'
    FundInflowsandOutflowRoutine:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        BusinessUnitEmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        MutualFundAdministrativePlanReference:
          $ref: '#/components/schemas/plan'
        FundInflowsandOutflowRoutineReference:
          $ref: '#/components/schemas/plannedaction'
        FundInflowsandOutflowRoutineType:
          $ref: '#/components/schemas/text'
      description: 'The Fund Investor, Middle and Back Office Service Routine is an activity that is performed as one aspect of carrying out the Fund Investor, Middle and Back Office Service Routine'
    FundAccountingRoutine:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        BusinessUnitEmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        MutualFundAdministrativePlanReference:
          $ref: '#/components/schemas/plan'
        FundAccountingRoutineReference:
          $ref: '#/components/schemas/plannedaction'
        FundAccountingRoutineType:
          $ref: '#/components/schemas/text'
      description: 'The Fund Investor, Middle and Back Office Service Routine is an activity that is performed as one aspect of carrying out the Fund Investor, Middle and Back Office Service Routine'
    FundEnrolmentRoutine:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        BusinessUnitEmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        MutualFundAdministrativePlanReference:
          $ref: '#/components/schemas/plan'
        FundEnrolmentRoutineReference:
          $ref: '#/components/schemas/plannedaction'
        FundEnrolmentRoutineType:
          $ref: '#/components/schemas/text'
      description: 'The Fund Investor, Middle and Back Office Service Routine is an activity that is performed as one aspect of carrying out the Fund Investor, Middle and Back Office Service Routine'
    FundDevelopmentRoutine:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        BusinessUnitEmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        MutualFundAdministrativePlanReference:
          $ref: '#/components/schemas/plan'
        FundDevelopmentRoutineReference:
          $ref: '#/components/schemas/plannedaction'
        FundDevelopmentRoutineType:
          $ref: '#/components/schemas/text'
      description: 'The Fund Investor, Middle and Back Office Service Routine is an activity that is performed as one aspect of carrying out the Fund Investor, Middle and Back Office Service Routine'
    FundFinancialReportingRoutine:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        BusinessUnitEmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        MutualFundAdministrativePlanReference:
          $ref: '#/components/schemas/plan'
        FundFinancialReportingRoutineReference:
          $ref: '#/components/schemas/plannedaction'
        FundFinancialReportingRoutineType:
          $ref: '#/components/schemas/text'
      description: 'The Fund Investor, Middle and Back Office Service Routine is an activity that is performed as one aspect of carrying out the Fund Investor, Middle and Back Office Service Routine'
    FundTaxAdministrationRoutine:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        BusinessUnitEmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        MutualFundAdministrativePlanReference:
          $ref: '#/components/schemas/plan'
        FundTaxAdministrationRoutineReference:
          $ref: '#/components/schemas/plannedaction'
        FundTaxAdministrationRoutineType:
          $ref: '#/components/schemas/text'
      description: 'The Fund Investor, Middle and Back Office Service Routine is an activity that is performed as one aspect of carrying out the Fund Investor, Middle and Back Office Service Routine'
    analysistypevalues:
      enum:
        - PerformanceAnalysis
        - ActivityAnalysis
      type: string
      description: ">\r\n* `PerformanceAnalysis` - \r\n* `ActivityAnalysis` - \r\n"
    financialdocumenttypevalues:
      enum:
        - Meteredserviceinvoice
        - Creditnoterelatedtofinancialadjustment
        - Debitnoterelatedtofinancialadjustment
        - Commercialinvoice
        - Creditnote
        - Debitnote
        - Hireinvoice
        - Selfbilledinvoice
        - Remittanceadvicemessage
        - Relatedpaymentinstruction
        - Commercialcontract
        - Foreignexchangedealreference
        - Statementofaccount
        - Dispatchadvice
        - Purchaseorder
        - Structuredcommunicationreference
        - Billoflading
        - Voucher
        - Accountreceivableopenitem
        - Tradeservicesutilitytransaction
        - Cashierreceipt
        - Customerreceipt
        - Journal
        - Salereceipt
      type: string
      description: ">\r\n* `Meteredserviceinvoice` - Document is an invoice claiming payment for the supply of metered services, for example gas or electricity supplied to a fixed meter.\r\n* `Creditnoterelatedtofinancialadjustment` - Document is a credit note for the final amount settled for a commercial transaction.\r\n* `Debitnoterelatedtofinancialadjustment` - Document is a debit note for the final amount settled for a commercial transaction.\r\n* `Commercialinvoice` - Document is an invoice.\r\n* `Creditnote` - Document is a credit note.\r\n* `Debitnote` - Document is a debit note.\r\n* `Hireinvoice` - Document is an invoice for the hiring of human resources or renting goods or equipment.\r\n* `Selfbilledinvoice` - Document is an invoice issued by the debtor.\r\n* `Remittanceadvicemessage` - Document is a remittance advice sent separately from the current transaction.\r\n* `Relatedpaymentinstruction` - Document is a linked payment instruction to which the current payment instruction is related, for example, in a cover scenario.\r\n* `Commercialcontract` - Document is an agreement between the parties, stipulating the terms and conditions of the delivery of goods or services.\r\n* `Foreignexchangedealreference` - Document is a pre-agreed or pre-arranged foreign exchange transaction to which the payment transaction refers.\r\n* `Statementofaccount` - Document is a statement of the transactions posted to the debtor's account at the supplier.\r\n* `Dispatchadvice` - Document is a dispatch advice.\r\n* `Purchaseorder` - Document is a purchase order.\r\n* `Structuredcommunicationreference` - Document is a structured communication reference provided by the creditor to identify the referred transaction.\r\n* `Billoflading` - Document is a shipping notice.\r\n* `Voucher` - Document is an electronic payment document.\r\n* `Accountreceivableopenitem` - Document is a payment that applies to a specific source document.\r\n* `Tradeservicesutilitytransaction` - Document is a transaction identifier as assigned by the Trade Services Utility.\r\n* `Cashierreceipt` - When the Sale system print the Cashier copy of the Payment receipt.\r\n* `Customerreceipt` - When the Sale System requires   the POI system to print the Customer receipt.\r\n* `Journal` - When the POI or the Sale System wants to store a message on the journal printer or electronic journal of the Sale Terminal (it is sometimes a Sale Logging/Journal Printer).\r\n* `Salereceipt` - When the Sale System requires the POI system to print the Sale receipt.\r\n"
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: 'Status of the document (e.g. delivered, paid, etc.). ISO20022'
    documentdatetimetypevalues:
      enum:
        - CreationDate
        - CapturingDate
        - VersionDate
        - ValueDate
        - IssueDate
      type: string
      description: ">\r\n* `CreationDate` - \r\n* `CapturingDate` - \r\n* `VersionDate` - \r\n* `ValueDate` - \r\n* `IssueDate` - \r\n"
    document:
      type: object
      properties:
        DocumentIdentifer:
          $ref: '#/components/schemas/identifier'
        DocumentVersion:
          type: string
          description: ''
          format: number
        DocumentType:
          $ref: '#/components/schemas/financialdocumenttypevalues'
        DocumentStatus:
          $ref: '#/components/schemas/status'
        DocumentDateTime:
          $ref: '#/components/schemas/datetime'
        DocumentName:
          $ref: '#/components/schemas/name'
        DocumentDateTimeType:
          $ref: '#/components/schemas/documentdatetimetypevalues'
        DocumentPurpose:
          $ref: '#/components/schemas/text'
        DocumentFormat:
          $ref: '#/components/schemas/text'
        DocumentSubject:
          $ref: '#/components/schemas/text'
        DocumentDescription:
          $ref: '#/components/schemas/text'
        DocumentValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
      description: ''
    analysis:
      type: object
      properties:
        AnalysisType:
          $ref: '#/components/schemas/analysistypevalues'
        AnalysisResult:
          $ref: '#/components/schemas/text'
        AnalysisPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        AnalysisDocument:
          $ref: '#/components/schemas/document'
        AnalysisDateTime:
          $ref: '#/components/schemas/datetime'
        AnalysisSpecification:
          $ref: '#/components/schemas/text'
      description: ''
    actiontypevalues:
      enum:
        - Initiate
        - Execute
        - Create
        - Transfer
        - Pay
        - Deliver
        - Apply
        - Calculate
      type: string
      description: ">\r\n* `Initiate` - \r\n* `Execute` - \r\n* `Create` - \r\n* `Transfer` - \r\n* `Pay` - \r\n* `Deliver` - \r\n* `Apply` - \r\n* `Calculate` - \r\n"
    action:
      type: object
      properties:
        ActionType:
          $ref: '#/components/schemas/actiontypevalues'
      description: ''
    arrangementlifecyclestatustypevalues:
      enum:
        - Requested
        - Accepted
        - Fulfilled
        - Offered
        - Proposed
        - Terminated
        - Cancelled
      type: string
      description: ">\r\n* `Requested` - \r\n* `Accepted` - \r\n* `Fulfilled` - \r\n* `Offered` - \r\n* `Proposed` - \r\n* `Terminated` - \r\n* `Cancelled` - \r\n"
    arrangementlifecyclestatus:
      type: object
      properties:
        ArrangementLifecycleStatus:
          $ref: '#/components/schemas/status'
        ArrangementLifecycleStatusType:
          $ref: '#/components/schemas/arrangementlifecyclestatustypevalues'
      description: 'A characteristic of arrangement which refers to the LifecycleStatus of arrangement (e.g., requested, proposed, offered, accepted, cancelled, terminated, fulfilled, etc.)'
    subject:
      type: object
      properties:
        Subject:
          type: string
          description: A thing that is discussed or dealt whit in agreement/arrangement about doing or not doing (as action) something.
          format: class
      description: ''
    arrangementtypevalues:
      enum:
        - SweepArrangement
        - WithdrawalArrangement
        - DepositArrangement
        - InterestArrangement
        - FeeArrangement
        - LienArrangement
        - InformationArrangement
        - PaymentServiceArrangement
        - EntitlementArrangement
        - PeriodArrangement
        - CollateralArrangement
        - LimitArrangement
        - AccessArrangement
        - CardPaymentArrangement
        - StandingOrderArrangement
        - OverdraftArrangement
        - RepaymentArrangement
        - StatementArrangement
        - CreditTransferArrangement
        - ProductAndServiceArrangement
        - FactoringArrangement
        - RolloverArrangement
      type: string
      description: ">\r\n* `SweepArrangement` - An arrangement into which is promised for the set-up and execution of structured sweeps to and from the facility to a linked account.\r\n* `WithdrawalArrangement` - An arrangement into which is promised to deliver Withdraw Service  to take fund out of an account. \r\n* `DepositArrangement` - An arrangement into which is promised to deliver Deposit Service  to place funds into an account for safekeeping. \r\n* `InterestArrangement` - An arrangement into which is promised to apply a pricing element expressed in a percentage  to a principal amount.\r\n* `FeeArrangement` - An arrangement into which is promised to apply a charge for services rendered. \r\n* `LienArrangement` - An arrangement into which is promised for placing a lien or block on the account for a specified purpose, amount, and period. \r\n* `InformationArrangement` - An arrangement concerning the information the bank will provide about the agreement/account\r\n* `PaymentServiceArrangement` - An arrangement into which is promised to deliver a specific payment service including regular payments, standing orders, direct debits and bill pay instructions. \r\n* `EntitlementArrangement` - Right or obligation linked to the involvement of a party in an agreement\r\n* `PeriodArrangement` - \r\n* `CollateralArrangement` - An arrangement into which is promised for handling the oversight of the allocation, valuation and administration of collateral associated with the facility. \r\n* `LimitArrangement` - An arrangement to limit something\ne.g., the number of transaction per week, the amount of money allowed to withdraw per week/day and etc. \r\n* `AccessArrangement` - An arrangement that allows or restricts the access to a service or product, channel or device through a specific access point\r\n* `CardPaymentArrangement` - An arrangement into which is promised to deliver Card payment Service to execute payment transactions through a payment card, including online payments. \r\n* `StandingOrderArrangement` - An arrangement into which is promised to deliver Standing Order Service to make regular transfers on given dates to a named beneﬁciary. \r\n* `OverdraftArrangement` - An arrangement into which is promised to deliver Overdraft Service  that allows fund transfer even if there is no provision on the account. \r\n* `RepaymentArrangement` - An arrangement into which is promised for paying back money previously borrowed from a lender. \r\n* `StatementArrangement` - An arrangement into which is promised to deliver a reporting service on payment transactions registered on an account. \r\n* `CreditTransferArrangement` - An arrangement into which is promised to allow a payer to transfer fund to a beneficiary. \r\n* `ProductAndServiceArrangement` - \r\n* `FactoringArrangement` - \r\n* `RolloverArrangement` - Arrangement stipulating the modalities for an automatic renewal of the agreement\n\ni.e. the replacement of the agreement with a new one without renewed negociation and witout explicit agreement of the customer \r\n"
    arrangement:
      type: object
      properties:
        ArrangementAction:
          $ref: '#/components/schemas/action'
        ArrangementStartDate:
          $ref: '#/components/schemas/datetime'
        ArrangementEndDate:
          $ref: '#/components/schemas/datetime'
        ArrangementStatus:
          $ref: '#/components/schemas/arrangementlifecyclestatus'
        ArrangementSubjectMatter:
          $ref: '#/components/schemas/subject'
        Arrangementtype:
          $ref: '#/components/schemas/arrangementtypevalues'
      description: " ||\r\n|"
    MutualFundAdministrationOutcome:
      type: object
      properties:
        MutualFundAdministrationPerformanceAnalysis:
          $ref: '#/components/schemas/analysis'
        MutualFundAdministrationActivityAnalysis:
          $ref: '#/components/schemas/analysis'
        MutualFundAdministrationAdministrativePlan:
          $ref: '#/components/schemas/plan'
        MutualFundAdministrationAdministrationTask:
          $ref: '#/components/schemas/arrangement'
      description: 'The Fund Investor, Middle and Back Office Service Routine is an activity that is performed as one aspect of carrying out the Fund Investor, Middle and Back Office Service Routine'
    assignment:
      type: object
      properties:
        SubjectMatter:
          type: string
        PartyInvolvement:
          type: string
        PartyReference:
          type: string
      description: "The assignment of a required activity to a responsibe party in Mutual Fund Administrative Plan ||\r\n|"
    accountbalancetypevalues:
      enum:
        - OpeningBalance
        - ClosingBalance
        - AvailableBalance
        - ReserveBalance
        - CurrentBalance
        - LedgerBalance
        - FreeBalance
        - PrincipalBalance
      type: string
      description: ">\r\n* `OpeningBalance` - \r\n* `ClosingBalance` - \r\n* `AvailableBalance` - \r\n* `ReserveBalance` - \r\n* `CurrentBalance` - \r\n* `LedgerBalance` - \r\n* `FreeBalance` - \r\n* `PrincipalBalance` - \r\n"
    accountbalance:
      type: object
      properties:
        AccountBalance:
          $ref: '#/components/schemas/amount'
        AccountBalanceType:
          $ref: '#/components/schemas/accountbalancetypevalues'
        AccounBalanceDate:
          $ref: '#/components/schemas/datetime'
      description: "Balance of budget which is arranged whitin Mutual Fund Administrative Plan ||\r\n|"
    MutualFundAdministrativePlan:
      type: object
      properties:
        MutualFundAdministrativePlanBudgetType:
          $ref: '#/components/schemas/budgettype'
        MutualFundAdministrativePlanBudget:
          $ref: '#/components/schemas/amount'
        MutualFundAdministrativePlanAssignment:
          $ref: '#/components/schemas/assignment'
        MutualFundAdministrativePlanDuty:
          $ref: '#/components/schemas/arrangement'
        MutualFundAdministrativePlanAssociatedParty:
          $ref: '#/components/schemas/involvedparty'
        MutualFundAdministrativePlanBudgetBalance:
          $ref: '#/components/schemas/accountbalance'
        MutualFundAdministrativePlanSubjectMatter:
          type: string
          description: The subject matter of Mutual Fund Administrative Plan
          format: object
        MutualFundAdministrativePlanType:
          $ref: '#/components/schemas/plantype'
        MutualFundAdministrativePlanReference:
          $ref: '#/components/schemas/plan'
        MutualFundAdministrativePlanDescription:
          $ref: '#/components/schemas/text'
      description: 'Handle and assign the day to day activities, capture time, costs and income for an operational unit within Mutual Fund Administration. '
    ControlMutualFundAdministrativePlanRequest:
      type: object
      properties:
        MutualFundAdministrativePlan:
          type: object
          properties:
            MutualFundAdministrativePlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            MutualFundAdministrativePlanAssignment:
              $ref: '#/components/schemas/assignment'
            MutualFundAdministrativePlanDuty:
              $ref: '#/components/schemas/arrangement'
            MutualFundAdministrativePlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            MutualFundAdministrativePlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            MutualFundAdministrativePlanSubjectMatter:
              type: string
              description: "\r\n"
              format: object
            MutualFundAdministrativePlanType:
              $ref: '#/components/schemas/plantype'
            MutualFundAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            MutualFundAdministrativePlanDescription:
              $ref: '#/components/schemas/text'
      description: 'Input: Control Mutual Fund Administrative Plan'
    ControlMutualFundAdministrativePlanResponse:
      type: object
      properties:
        MutualFundAdministrativePlan:
          type: object
          properties:
            MutualFundAdministrativePlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            MutualFundAdministrativePlanAssignment:
              $ref: '#/components/schemas/assignment'
            MutualFundAdministrativePlanDuty:
              $ref: '#/components/schemas/arrangement'
            MutualFundAdministrativePlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            MutualFundAdministrativePlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            MutualFundAdministrativePlanSubjectMatter:
              type: string
              description: "\r\n"
              format: object
            MutualFundAdministrativePlanType:
              $ref: '#/components/schemas/plantype'
            MutualFundAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            MutualFundAdministrativePlanDescription:
              $ref: '#/components/schemas/text'
      description: 'Output: Control Mutual Fund Administrative Plan'
    CreateMutualFundAdministrativePlanRequest:
      type: object
      properties:
        MutualFundAdministrativePlan:
          type: object
          properties:
            MutualFundAdministrativePlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            MutualFundAdministrativePlanAssignment:
              $ref: '#/components/schemas/assignment'
            MutualFundAdministrativePlanDuty:
              $ref: '#/components/schemas/arrangement'
            MutualFundAdministrativePlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            MutualFundAdministrativePlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            MutualFundAdministrativePlanSubjectMatter:
              type: string
              description: "\r\n"
              format: object
            MutualFundAdministrativePlanType:
              $ref: '#/components/schemas/plantype'
            MutualFundAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            MutualFundAdministrativePlanDescription:
              $ref: '#/components/schemas/text'
      description: 'Input: Create Mutual Fund Administrative Plan'
    CreateMutualFundAdministrativePlanResponse:
      type: object
      properties:
        MutualFundAdministrativePlan:
          type: object
          properties:
            MutualFundAdministrativePlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            MutualFundAdministrativePlanAssignment:
              $ref: '#/components/schemas/assignment'
            MutualFundAdministrativePlanDuty:
              $ref: '#/components/schemas/arrangement'
            MutualFundAdministrativePlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            MutualFundAdministrativePlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            MutualFundAdministrativePlanSubjectMatter:
              type: string
              description: "\r\n"
              format: object
            MutualFundAdministrativePlanType:
              $ref: '#/components/schemas/plantype'
            MutualFundAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            MutualFundAdministrativePlanDescription:
              $ref: '#/components/schemas/text'
      description: 'Output: Create Mutual Fund Administrative Plan'
    ExchangeMutualFundAdministrativePlanRequest:
      type: object
      properties:
        MutualFundAdministrativePlan:
          type: object
          properties:
            MutualFundAdministrativePlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            MutualFundAdministrativePlanAssignment:
              $ref: '#/components/schemas/assignment'
            MutualFundAdministrativePlanDuty:
              $ref: '#/components/schemas/arrangement'
            MutualFundAdministrativePlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            MutualFundAdministrativePlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            MutualFundAdministrativePlanSubjectMatter:
              type: string
              description: "\r\n"
              format: object
            MutualFundAdministrativePlanType:
              $ref: '#/components/schemas/plantype'
            MutualFundAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            MutualFundAdministrativePlanDescription:
              $ref: '#/components/schemas/text'
      description: 'Input: Exchange Mutual Fund Administrative Plan'
    ExchangeMutualFundAdministrativePlanResponse:
      type: object
      properties:
        MutualFundAdministrativePlan:
          type: object
          properties:
            MutualFundAdministrativePlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            MutualFundAdministrativePlanAssignment:
              $ref: '#/components/schemas/assignment'
            MutualFundAdministrativePlanDuty:
              $ref: '#/components/schemas/arrangement'
            MutualFundAdministrativePlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            MutualFundAdministrativePlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            MutualFundAdministrativePlanSubjectMatter:
              type: string
              description: "\r\n"
              format: object
            MutualFundAdministrativePlanType:
              $ref: '#/components/schemas/plantype'
            MutualFundAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            MutualFundAdministrativePlanDescription:
              $ref: '#/components/schemas/text'
      description: 'Output: Exchange Mutual Fund Administrative Plan'
    GrantMutualFundAdministrativePlanRequest:
      type: object
      properties:
        MutualFundAdministrativePlan:
          type: object
          properties:
            MutualFundAdministrativePlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            MutualFundAdministrativePlanAssignment:
              $ref: '#/components/schemas/assignment'
            MutualFundAdministrativePlanDuty:
              $ref: '#/components/schemas/arrangement'
            MutualFundAdministrativePlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            MutualFundAdministrativePlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            MutualFundAdministrativePlanSubjectMatter:
              type: string
              description: "\r\n"
              format: object
            MutualFundAdministrativePlanType:
              $ref: '#/components/schemas/plantype'
            MutualFundAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            MutualFundAdministrativePlanDescription:
              $ref: '#/components/schemas/text'
      description: 'Input: Grant Mutual Fund Administrative Plan'
    GrantMutualFundAdministrativePlanResponse:
      type: object
      properties:
        MutualFundAdministrativePlan:
          type: object
          properties:
            MutualFundAdministrativePlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            MutualFundAdministrativePlanAssignment:
              $ref: '#/components/schemas/assignment'
            MutualFundAdministrativePlanDuty:
              $ref: '#/components/schemas/arrangement'
            MutualFundAdministrativePlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            MutualFundAdministrativePlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            MutualFundAdministrativePlanSubjectMatter:
              type: string
              description: "\r\n"
              format: object
            MutualFundAdministrativePlanType:
              $ref: '#/components/schemas/plantype'
            MutualFundAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            MutualFundAdministrativePlanDescription:
              $ref: '#/components/schemas/text'
      description: 'Output: Grant Mutual Fund Administrative Plan'
    NotifyMutualFundAdministrativePlanRequest:
      type: object
      properties:
        MutualFundAdministrativePlan:
          type: object
          properties:
            MutualFundAdministrativePlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            MutualFundAdministrativePlanAssignment:
              $ref: '#/components/schemas/assignment'
            MutualFundAdministrativePlanDuty:
              $ref: '#/components/schemas/arrangement'
            MutualFundAdministrativePlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            MutualFundAdministrativePlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            MutualFundAdministrativePlanSubjectMatter:
              type: string
              description: "\r\n"
              format: object
            MutualFundAdministrativePlanType:
              $ref: '#/components/schemas/plantype'
            MutualFundAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            MutualFundAdministrativePlanDescription:
              $ref: '#/components/schemas/text'
      description: 'Input: Notify Mutual Fund Administrative Plan'
    NotifyMutualFundAdministrativePlanResponse:
      type: object
      properties:
        MutualFundAdministrativePlan:
          type: object
          properties:
            MutualFundAdministrativePlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            MutualFundAdministrativePlanAssignment:
              $ref: '#/components/schemas/assignment'
            MutualFundAdministrativePlanDuty:
              $ref: '#/components/schemas/arrangement'
            MutualFundAdministrativePlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            MutualFundAdministrativePlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            MutualFundAdministrativePlanSubjectMatter:
              type: string
              description: "\r\n"
              format: object
            MutualFundAdministrativePlanType:
              $ref: '#/components/schemas/plantype'
            MutualFundAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            MutualFundAdministrativePlanDescription:
              $ref: '#/components/schemas/text'
      description: 'Output: Notify Mutual Fund Administrative Plan'
    RequestMutualFundAdministrativePlanRequest:
      type: object
      properties:
        MutualFundAdministrativePlan:
          type: object
          properties:
            MutualFundAdministrativePlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            MutualFundAdministrativePlanAssignment:
              $ref: '#/components/schemas/assignment'
            MutualFundAdministrativePlanDuty:
              $ref: '#/components/schemas/arrangement'
            MutualFundAdministrativePlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            MutualFundAdministrativePlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            MutualFundAdministrativePlanSubjectMatter:
              type: string
              description: "\r\n"
              format: object
            MutualFundAdministrativePlanType:
              $ref: '#/components/schemas/plantype'
            MutualFundAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            MutualFundAdministrativePlanDescription:
              $ref: '#/components/schemas/text'
      description: 'Input: Request Mutual Fund Administrative Plan'
    RequestMutualFundAdministrativePlanResponse:
      type: object
      properties:
        MutualFundAdministrativePlan:
          type: object
          properties:
            MutualFundAdministrativePlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            MutualFundAdministrativePlanAssignment:
              $ref: '#/components/schemas/assignment'
            MutualFundAdministrativePlanDuty:
              $ref: '#/components/schemas/arrangement'
            MutualFundAdministrativePlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            MutualFundAdministrativePlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            MutualFundAdministrativePlanSubjectMatter:
              type: string
              description: "\r\n"
              format: object
            MutualFundAdministrativePlanType:
              $ref: '#/components/schemas/plantype'
            MutualFundAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            MutualFundAdministrativePlanDescription:
              $ref: '#/components/schemas/text'
      description: 'Output: Request Mutual Fund Administrative Plan'
    RetrieveMutualFundAdministrativePlanRequest:
      type: object
      properties:
        MutualFundAdministrativePlan:
          type: object
          properties:
            MutualFundAdministrativePlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            MutualFundAdministrativePlanAssignment:
              $ref: '#/components/schemas/assignment'
            MutualFundAdministrativePlanDuty:
              $ref: '#/components/schemas/arrangement'
            MutualFundAdministrativePlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            MutualFundAdministrativePlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            MutualFundAdministrativePlanSubjectMatter:
              type: string
              description: "\r\n"
              format: object
            MutualFundAdministrativePlanType:
              $ref: '#/components/schemas/plantype'
            MutualFundAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            MutualFundAdministrativePlanDescription:
              $ref: '#/components/schemas/text'
      description: 'Input: Retrieve Mutual Fund Administrative Plan'
    RetrieveMutualFundAdministrativePlanResponse:
      type: object
      properties:
        MutualFundAdministrativePlan:
          type: object
          properties:
            MutualFundAdministrativePlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            MutualFundAdministrativePlanAssignment:
              $ref: '#/components/schemas/assignment'
            MutualFundAdministrativePlanDuty:
              $ref: '#/components/schemas/arrangement'
            MutualFundAdministrativePlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            MutualFundAdministrativePlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            MutualFundAdministrativePlanSubjectMatter:
              type: string
              description: "\r\n"
              format: object
            MutualFundAdministrativePlanType:
              $ref: '#/components/schemas/plantype'
            MutualFundAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            MutualFundAdministrativePlanDescription:
              $ref: '#/components/schemas/text'
      description: 'Output: Retrieve Mutual Fund Administrative Plan'
    UpdateMutualFundAdministrativePlanRequest:
      type: object
      properties:
        MutualFundAdministrativePlan:
          type: object
          properties:
            MutualFundAdministrativePlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            MutualFundAdministrativePlanAssignment:
              $ref: '#/components/schemas/assignment'
            MutualFundAdministrativePlanDuty:
              $ref: '#/components/schemas/arrangement'
            MutualFundAdministrativePlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            MutualFundAdministrativePlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            MutualFundAdministrativePlanSubjectMatter:
              type: string
              description: "\r\n"
              format: object
            MutualFundAdministrativePlanType:
              $ref: '#/components/schemas/plantype'
            MutualFundAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            MutualFundAdministrativePlanDescription:
              $ref: '#/components/schemas/text'
      description: 'Input: Update Mutual Fund Administrative Plan'
    UpdateMutualFundAdministrativePlanResponse:
      type: object
      properties:
        MutualFundAdministrativePlan:
          type: object
          properties:
            MutualFundAdministrativePlanBudgetType:
              $ref: '#/components/schemas/budgettype'
            MutualFundAdministrativePlanAssignment:
              $ref: '#/components/schemas/assignment'
            MutualFundAdministrativePlanDuty:
              $ref: '#/components/schemas/arrangement'
            MutualFundAdministrativePlanAssociatedParty:
              $ref: '#/components/schemas/involvedparty'
            MutualFundAdministrativePlanBudgetBalance:
              $ref: '#/components/schemas/accountbalance'
            MutualFundAdministrativePlanSubjectMatter:
              type: string
              description: "\r\n"
              format: object
            MutualFundAdministrativePlanType:
              $ref: '#/components/schemas/plantype'
            MutualFundAdministrativePlanReference:
              $ref: '#/components/schemas/plan'
            MutualFundAdministrativePlanDescription:
              $ref: '#/components/schemas/text'
      description: 'Output: Update Mutual Fund Administrative Plan'
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ControlMutualFundAdministrativePlanResponse:
      description: ControlMutualFundAdministrativePlanResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ControlMutualFundAdministrativePlanResponse'
    CreateMutualFundAdministrativePlanResponse:
      description: CreateMutualFundAdministrativePlanResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateMutualFundAdministrativePlanResponse'
    ExchangeMutualFundAdministrativePlanResponse:
      description: ExchangeMutualFundAdministrativePlanResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExchangeMutualFundAdministrativePlanResponse'
    GrantMutualFundAdministrativePlanResponse:
      description: GrantMutualFundAdministrativePlanResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GrantMutualFundAdministrativePlanResponse'
    NotifyMutualFundAdministrativePlanResponse:
      description: NotifyMutualFundAdministrativePlanResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotifyMutualFundAdministrativePlanResponse'
    RequestMutualFundAdministrativePlanResponse:
      description: RequestMutualFundAdministrativePlanResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestMutualFundAdministrativePlanResponse'
    RetrieveMutualFundAdministrativePlanResponse:
      description: RetrieveMutualFundAdministrativePlanResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveMutualFundAdministrativePlanResponse'
    UpdateMutualFundAdministrativePlanResponse:
      description: UpdateMutualFundAdministrativePlanResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateMutualFundAdministrativePlanResponse'
    FundAccountingRoutine:
      description: FundAccountingRoutine
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FundAccountingRoutine'
    FundDevelopmentRoutine:
      description: FundDevelopmentRoutine
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FundDevelopmentRoutine'
    FundEnrolmentRoutine:
      description: FundEnrolmentRoutine
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FundEnrolmentRoutine'
    FundFinancialReportingRoutine:
      description: FundFinancialReportingRoutine
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FundFinancialReportingRoutine'
    FundInflowsandOutflowRoutine:
      description: FundInflowsandOutflowRoutine
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FundInflowsandOutflowRoutine'
    FundInvestor_MiddleandBackOfficeServiceRoutine:
      description: FundInvestor_MiddleandBackOfficeServiceRoutine
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FundInvestor_MiddleandBackOfficeServiceRoutine'
    FundManagementFeeRoutine:
      description: FundManagementFeeRoutine
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FundManagementFeeRoutine'
    FundTaxAdministrationRoutine:
      description: FundTaxAdministrationRoutine
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FundTaxAdministrationRoutine'
  parameters:
    mutualfundadministrationid:
      name: mutualfundadministrationid
      in: path
      required: true
      style: simple
      schema:
        type: string
    fundaccountingroutineid:
      name: fundaccountingroutineid
      in: path
      required: true
      style: simple
      schema:
        type: string
    funddevelopmentroutineid:
      name: funddevelopmentroutineid
      in: path
      required: true
      style: simple
      schema:
        type: string
    fundenrolmentroutineid:
      name: fundenrolmentroutineid
      in: path
      required: true
      style: simple
      schema:
        type: string
    fundfinancialreportingroutineid:
      name: fundfinancialreportingroutineid
      in: path
      required: true
      style: simple
      schema:
        type: string
    fundinflowsandoutflowroutineid:
      name: fundinflowsandoutflowroutineid
      in: path
      required: true
      style: simple
      schema:
        type: string
    fundinvestor_middleandbackofficeserviceroutineid:
      name: fundinvestor_middleandbackofficeserviceroutineid
      in: path
      required: true
      style: simple
      schema:
        type: string
    fundmanagementfeeroutineid:
      name: fundmanagementfeeroutineid
      in: path
      required: true
      style: simple
      schema:
        type: string
    fundtaxadministrationroutineid:
      name: fundtaxadministrationroutineid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    ControlMutualFundAdministrativePlanRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ControlMutualFundAdministrativePlanRequest'
      required: true
    CreateMutualFundAdministrativePlanRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateMutualFundAdministrativePlanRequest'
      required: true
    ExchangeMutualFundAdministrativePlanRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExchangeMutualFundAdministrativePlanRequest'
      required: true
    GrantMutualFundAdministrativePlanRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GrantMutualFundAdministrativePlanRequest'
      required: true
    RequestMutualFundAdministrativePlanRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestMutualFundAdministrativePlanRequest'
      required: true
    UpdateMutualFundAdministrativePlanRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateMutualFundAdministrativePlanRequest'
      required: true
    FundAccountingRoutine:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FundAccountingRoutine'
      required: true
    FundDevelopmentRoutine:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FundDevelopmentRoutine'
      required: true
    FundEnrolmentRoutine:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FundEnrolmentRoutine'
      required: true
    FundFinancialReportingRoutine:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FundFinancialReportingRoutine'
      required: true
    FundInflowsandOutflowRoutine:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FundInflowsandOutflowRoutine'
      required: true
    FundInvestor_MiddleandBackOfficeServiceRoutine:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FundInvestor_MiddleandBackOfficeServiceRoutine'
      required: true
    FundManagementFeeRoutine:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FundManagementFeeRoutine'
      required: true
    FundTaxAdministrationRoutine:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FundTaxAdministrationRoutine'
      required: true