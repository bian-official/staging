openapi: 3.0.1
info:
  title: Internal Bank Account
  description: This Service Domain manages the banking-related accounts that are not owned by customers. These are not general ledger accounts. Typical examples are holding accounts and mirror accounts.
  contact:
    name: BIAN
    url: https://bian.org
  version: 11.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/InternalBankAccount/11.0.0
paths:
  '/InternalBankAccount/{internalbankaccountid}/Capture':
    put:
      tags:
        - CR - InternalBankAccountLog
      summary: Capture Internal Bank Account Log
      description: Capture Internal Bank Account Log
      operationId: Capture
      parameters:
        - $ref: '#/components/parameters/internalbankaccountid'
      requestBody:
        $ref: '#/components/requestBodies/InternalBankAccountLog'
      responses:
        '200':
          $ref: '#/components/responses/InternalBankAccountLog'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/InternalBankAccount/{internalbankaccountid}/Control':
    put:
      tags:
        - CR - InternalBankAccountLog
      summary: Control Internal Bank Account Log
      description: Control Internal Bank Account Log
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/internalbankaccountid'
      requestBody:
        $ref: '#/components/requestBodies/InternalBankAccountLog'
      responses:
        '200':
          $ref: '#/components/responses/InternalBankAccountLog'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/InternalBankAccount/{internalbankaccountid}/Notify':
    get:
      tags:
        - CR - InternalBankAccountLog
      summary: Notify Internal Bank Account Log
      description: Notify Internal Bank Account Log
      operationId: Notify
      parameters:
        - $ref: '#/components/parameters/internalbankaccountid'
      responses:
        '200':
          $ref: '#/components/responses/InternalBankAccountLog'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: "A Classification value that distinguishes between business service events logged within Internal Bank Account Log ||\r\n| ||\r\n| ||\r\n|"
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: ''
    servicetypevalues:
      enum:
        - AdministrativeService
        - BankingService
        - ITService
        - SystemService
        - BusinessService
      type: string
      description: ">\r\n* `AdministrativeService` - \r\n* `BankingService` - \r\n* `ITService` - \r\n* `SystemService` - \r\n* `BusinessService` - \r\n"
    servicetype:
      type: object
      properties:
        ServiceTypeName:
          $ref: '#/components/schemas/name'
        ServiceType:
          $ref: '#/components/schemas/servicetypevalues'
      description: ''
    service:
      type: object
      properties:
        ServiceName:
          $ref: '#/components/schemas/name'
        ServiceDescription:
          $ref: '#/components/schemas/text'
        ServiceType:
          $ref: '#/components/schemas/servicetype'
      description: "A selected optional business service as subject matter of Internal Bank Account Log ||\r\n|"
    schedule:
      type: object
      properties:
        ScheduleType:
          type: string
          description: ''
          format: string
      description: "Timetable to track Internal Bank Account Log ||\r\n|"
    log:
      type: object
      properties:
        LogType:
          type: string
          description: ''
          format: string
        LogPeriod:
          type: string
          description: ''
          format: string
        LogDate:
          type: string
          description: Key dates associated with the log (e.g. start time).
          format: string
        LogIdentification:
          type: string
          description: ''
          format: string
      description: "Reference to the log of (usage) ativities/events  of Internal Bank Account Log ||\r\n| ||\r\n| ||\r\n|"
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    datetime:
      type: object
      properties:
        DateTimeContent:
          type: string
          description: ''
          format: string
        TimeZoneCode:
          type: string
          description: ''
          format: string
        DaylightSavingIndicator:
          type: string
          description: ''
          format: string
      description: ''
    partyidentificationtypevalues:
      enum:
        - LEI(LegalEntityIdentifier)
        - TaxIdentificationNumber
        - NationalRegistrationNumber
        - RegistrationAuthorityIdentification
        - PassportNumber
        - AlienRegistrationNumber
        - TaxExemptIdentificationNumber
        - ForeignInvestmentIdentityNumber
        - DriverLicenseNumber
        - CorporateIdentification
        - SocialSecurityNumber
        - IdentityCardNumber
        - NationalRegistrationIdentificationNumber
        - Concat
      type: string
      description: ">\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `TaxIdentificationNumber` - \r\n* `NationalRegistrationNumber` - \r\n* `RegistrationAuthorityIdentification` - \r\n* `PassportNumber` - \r\n* `AlienRegistrationNumber` - \r\n* `TaxExemptIdentificationNumber` - \r\n* `ForeignInvestmentIdentityNumber` - \r\n* `DriverLicenseNumber` - \r\n* `CorporateIdentification` - \r\n* `SocialSecurityNumber` - \r\n* `IdentityCardNumber` - \r\n* `NationalRegistrationIdentificationNumber` - \r\n* `Concat` - \r\n"
    value:
      type: object
      properties:
        Value:
          type: string
          description: 'A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)'
          format: datatype
      description: ''
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
      description: ''
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: "Reference to the party who is involved in Internal Bank Account Log ||\r\n| ||\r\n|"
    businessunit:
      type: object
      properties:
        BusinessFunction:
          type: string
          description: ''
          format: string
        Goal:
          type: string
          description: ''
          format: string
      description: "Reference to the business unit which is involved in Internal Bank Account Log ||\r\n|"
    position:
      type: object
      properties:
        PositionValue:
          type: string
          description: ''
          format: string
        PositionQuantity:
          type: string
          description: ''
          format: string
        PositionDate:
          type: string
          description: The date on which the state of something is calculated
          format: string
        PositionAmount:
          type: string
          description: ''
          format: string
      description: "The position of Internal Bank Account Log ||\r\n|"
    positiontype:
      type: object
      properties:
        PositionType:
          type: string
          description: 'A classification of the position. '
          format: class
      description: "A classification value expressing the kind of position withing the Internal Bank Account Log ||\r\n|"
    limittypevalues:
      type: object
      properties:
        LimitTypeValues:
          type: string
          format: enumeration
      description: ''
    limittype:
      type: object
      properties:
        LimitTypeName:
          $ref: '#/components/schemas/name'
        LimitType:
          $ref: '#/components/schemas/limittypevalues'
      description: Nature of the limit.
    currencycode:
      type: object
      properties:
        Currencycode:
          type: string
          description: "A code identifying a currency according to ISO-4217.\nA currency is a system of money in general use in a particular country.\n\nCode allocated to a currency, by a maintenance agency, under an international identification scheme as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\". Valid currency codes are registered with the ISO 4217 Maintenance Agency, and consist of three contiguous letters. (ISO20022)\n\n"
          format: datatype
      description: Currency unit used to specify the limit amount. (ISO20022)
    amount:
      type: object
      properties:
        AmountValue:
          type: string
          description: ''
          format: string
        AmountCurrency:
          $ref: '#/components/schemas/currencycode'
        DecimalPointPosition:
          type: string
          description: "Decimal point position starts calulating from the right\n"
          format: string
      description: 'Amount of money of the limit, expressed in a currency. (ISO20022)'
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: ''
    limitstatustypevalues:
      enum:
        - Requested
        - Deleted
        - Disabled
        - Enabled
      type: string
      description: ">\r\n* `Requested` - \r\n* `Deleted` - \r\n* `Disabled` - \r\n* `Enabled` - \r\n"
    limitstatus:
      type: object
      properties:
        LimitStatus:
          $ref: '#/components/schemas/status'
        LimitStatusType:
          $ref: '#/components/schemas/limitstatustypevalues'
      description: Current status of the limit.
    rate:
      type: object
      properties:
        RateValue:
          type: string
          description: ''
          format: string
        RateUnit:
          type: string
          description: "The unit of measure like Percentage or BPS\n\nBasis points (BPS) refers to a common unit of measure for interest rates and other percentages in finance."
          format: string
        RatePeriod:
          type: string
          description: ''
          format: string
        RateCapitalUnit:
          type: string
          description: ''
          format: string
      description: Specifies that the limit is a percentage of a related amount. (ISO20022)
    frequencycodevalues:
      enum:
        - Upfront
        - Weekly
        - Overnight
        - TriggeredByMovement
        - Hourly
        - TenDays
        - Quarterly
        - Adhoc
        - Annual
        - Monthly
        - Rate
        - Fortnightly
        - IntraDay
        - Daily
        - OnCreditEvent
        - SemiAnnual
        - Never
        - OnExpiry
      type: string
      description: ">\r\n* `Upfront` - \r\n* `Weekly` - \r\n* `Overnight` - \r\n* `TriggeredByMovement` - \r\n* `Hourly` - \r\n* `TenDays` - \r\n* `Quarterly` - \r\n* `Adhoc` - \r\n* `Annual` - \r\n* `Monthly` - \r\n* `Rate` - \r\n* `Fortnightly` - \r\n* `IntraDay` - \r\n* `Daily` - \r\n* `OnCreditEvent` - \r\n* `SemiAnnual` - \r\n* `Never` - \r\n* `OnExpiry` - \r\n"
    frequency:
      type: object
      properties:
        FrequencyCode:
          $ref: '#/components/schemas/frequencycodevalues'
        FrequencyName:
          $ref: '#/components/schemas/name'
        FrequencyDefinition:
          $ref: '#/components/schemas/text'
      description: Specifies the periodicity linked to a limit for example the periodicity can indicate that the limit can be reached daily or monthly. (ISO20022)
    limitarrangement:
      type: object
      properties:
        LimitType:
          $ref: '#/components/schemas/limittype'
        LimitCurrency:
          $ref: '#/components/schemas/currencycode'
        LimitValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        LimitAmount:
          $ref: '#/components/schemas/amount'
        LimitStatus:
          $ref: '#/components/schemas/limitstatus'
        LimitRate:
          $ref: '#/components/schemas/rate'
        LimitFrequency:
          $ref: '#/components/schemas/frequency'
      description: "Reference to the time limitation related to the position of Internal Bank Account Log ||\r\n|"
    InternalBankAccountLog:
      type: object
      properties:
        InternalBankAccountLogParameterType:
          $ref: '#/components/schemas/text'
        InternalBankAccountLogSelectedOption:
          $ref: '#/components/schemas/service'
        InternalBankAccountLogType:
          $ref: '#/components/schemas/text'
        InternalBankAccountLogSchedule:
          $ref: '#/components/schemas/schedule'
        InternalBankAccountLogUsageLog:
          $ref: '#/components/schemas/log'
        InternalBankAccountLogUpdateLog:
          $ref: '#/components/schemas/log'
        InternalBankAccountLogAssociatedParty:
          $ref: '#/components/schemas/involvedparty'
        InternalBankAccountLogBusinessUnitReference:
          $ref: '#/components/schemas/businessunit'
        InternalBankAccountLogCustomerReference:
          $ref: '#/components/schemas/involvedparty'
        InternalBankAccountLogServiceConfiguration:
          $ref: '#/components/schemas/text'
        InternalBankAccountLogPosition:
          $ref: '#/components/schemas/position'
        InternalBankAccountLogPositionType:
          $ref: '#/components/schemas/positiontype'
        InternalBankAccountLogPositionLimitTime:
          $ref: '#/components/schemas/limitarrangement'
        InternalBankAccountLogReference:
          $ref: '#/components/schemas/log'
      description: 'Maintain a log of transactions or activity, typically a financial account/journal or a log of activity to support behavioral analysis within Internal Bank Account. '
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalBankAccountLog:
      description: InternalBankAccountLog
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InternalBankAccountLog'
  parameters:
    internalbankaccountid:
      name: internalbankaccountid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    InternalBankAccountLog:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InternalBankAccountLog'
      required: true