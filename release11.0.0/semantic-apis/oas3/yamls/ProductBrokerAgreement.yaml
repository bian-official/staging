openapi: 3.0.1
info:
  title: Product Broker Agreement
  contact:
    name: BIAN
    url: https://bian.org
  version: 11.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/ProductBrokerAgreement/11.0.0
paths:
  /ProductBrokerAgreement/Evaluate:
    post:
      tags:
        - CR - BrokerAgreement
      summary: EvCR Establish a product broker agreement (evaluate applicable rules)
      description: EvCR Establish a product broker agreement (evaluate applicable rules)
      operationId: Evaluate
      requestBody:
        $ref: '#/components/requestBodies/EvaluateBrokerAgreementRequest'
      responses:
        '200':
          $ref: '#/components/responses/EvaluateBrokerAgreementResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductBrokerAgreement/{productbrokeragreementid}/Update':
    put:
      tags:
        - CR - BrokerAgreement
      summary: UpCR Update details of an active product broker agreement
      description: UpCR Update details of an active product broker agreement
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/productbrokeragreementid'
      requestBody:
        $ref: '#/components/requestBodies/BrokerAgreement'
      responses:
        '200':
          $ref: '#/components/responses/BrokerAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductBrokerAgreement/{productbrokeragreementid}/Retrieve':
    get:
      tags:
        - CR - BrokerAgreement
      summary: ReCR Retrieve details about a broker agreement
      description: ReCR Retrieve details about a broker agreement
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/productbrokeragreementid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveBrokerAgreementResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductBrokerAgreement/{productbrokeragreementid}/LegalTerms/{legaltermsid}/Evaluate':
    post:
      tags:
        - BQ - LegalTerms
      summary: EvBQ Establish the legal terms for a broker agreement
      description: EvBQ Establish the legal terms for a broker agreement
      operationId: EvaluateLegalTerms
      parameters:
        - $ref: '#/components/parameters/productbrokeragreementid'
        - $ref: '#/components/parameters/legaltermsid'
      requestBody:
        $ref: '#/components/requestBodies/EvaluateLegalTermsRequest'
      responses:
        '200':
          $ref: '#/components/responses/EvaluateLegalTermsResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductBrokerAgreement/{productbrokeragreementid}/LegalTerms/{legaltermsid}/Update':
    put:
      tags:
        - BQ - LegalTerms
      summary: UpBQ Update the legal terms for a broker agreement
      description: UpBQ Update the legal terms for a broker agreement
      operationId: UpdateLegalTerms
      parameters:
        - $ref: '#/components/parameters/productbrokeragreementid'
        - $ref: '#/components/parameters/legaltermsid'
      requestBody:
        $ref: '#/components/requestBodies/UpdateLegalTermsRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateLegalTermsResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductBrokerAgreement/{productbrokeragreementid}/LegalTerms/{legaltermsid}/Retrieve':
    get:
      tags:
        - BQ - LegalTerms
      summary: ReBQ Retrieve details about the legal terms of an agreement
      description: ReBQ Retrieve details about the legal terms of an agreement
      operationId: RetrieveLegalTerms
      parameters:
        - $ref: '#/components/parameters/productbrokeragreementid'
        - $ref: '#/components/parameters/legaltermsid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveLegalTermsResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductBrokerAgreement/{productbrokeragreementid}/RegulatoryTerms/{regulatorytermsid}/Evaluate':
    post:
      tags:
        - BQ - RegulatoryTerms
      summary: EvBQ Establish the regulatory terms for a broker agreement
      description: EvBQ Establish the regulatory terms for a broker agreement
      operationId: EvaluateRegulatoryTerms
      parameters:
        - $ref: '#/components/parameters/productbrokeragreementid'
        - $ref: '#/components/parameters/regulatorytermsid'
      requestBody:
        $ref: '#/components/requestBodies/EvaluateRegulatoryTermsRequest'
      responses:
        '200':
          $ref: '#/components/responses/EvaluateRegulatoryTermsResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductBrokerAgreement/{productbrokeragreementid}/RegulatoryTerms/{regulatorytermsid}/Update':
    put:
      tags:
        - BQ - RegulatoryTerms
      summary: UpBQ Update the regulatory terms for a broker agreement
      description: UpBQ Update the regulatory terms for a broker agreement
      operationId: UpdateRegulatoryTerms
      parameters:
        - $ref: '#/components/parameters/productbrokeragreementid'
        - $ref: '#/components/parameters/regulatorytermsid'
      requestBody:
        $ref: '#/components/requestBodies/UpdateRegulatoryTermsRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateRegulatoryTermsResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductBrokerAgreement/{productbrokeragreementid}/RegulatoryTerms/{regulatorytermsid}/Retrieve':
    get:
      tags:
        - BQ - RegulatoryTerms
      summary: ReBQ Retrieve details about the regulatory terms of an agreement
      description: ReBQ Retrieve details about the regulatory terms of an agreement
      operationId: RetrieveRegulatoryTerms
      parameters:
        - $ref: '#/components/parameters/productbrokeragreementid'
        - $ref: '#/components/parameters/regulatorytermsid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveRegulatoryTermsResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductBrokerAgreement/{productbrokeragreementid}/PolicyTerms/{policytermsid}/Evaluate':
    post:
      tags:
        - BQ - PolicyTerms
      summary: EvBQ Establish the corporate policy terms for a broker agreement
      description: EvBQ Establish the corporate policy terms for a broker agreement
      operationId: EvaluatePolicyTerms
      parameters:
        - $ref: '#/components/parameters/productbrokeragreementid'
        - $ref: '#/components/parameters/policytermsid'
      requestBody:
        $ref: '#/components/requestBodies/EvaluatePolicyTermsRequest'
      responses:
        '200':
          $ref: '#/components/responses/EvaluatePolicyTermsResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductBrokerAgreement/{productbrokeragreementid}/PolicyTerms/{policytermsid}/Update':
    put:
      tags:
        - BQ - PolicyTerms
      summary: UpBQ Update the corporate policy terms for a broker agreement
      description: UpBQ Update the corporate policy terms for a broker agreement
      operationId: UpdatePolicyTerms
      parameters:
        - $ref: '#/components/parameters/productbrokeragreementid'
        - $ref: '#/components/parameters/policytermsid'
      requestBody:
        $ref: '#/components/requestBodies/UpdatePolicyTermsRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdatePolicyTermsResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductBrokerAgreement/{productbrokeragreementid}/PolicyTerms/{policytermsid}/Retrieve':
    get:
      tags:
        - BQ - PolicyTerms
      summary: ReBQ Retrieve details about the corporate policy terms of an agreement
      description: ReBQ Retrieve details about the corporate policy terms of an agreement
      operationId: RetrievePolicyTerms
      parameters:
        - $ref: '#/components/parameters/productbrokeragreementid'
        - $ref: '#/components/parameters/policytermsid'
      responses:
        '200':
          $ref: '#/components/responses/RetrievePolicyTermsResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    PolicyTerms:
      type: object
      properties:
        BankPolicy-RuleType:
          type: string
          description: The type of bank policy referenced (e.g. staff certification)
          format: string
        ApplicableBankPolicy-RuleReference:
          type: string
          description: Reference to the bank's policies or rules
          format: object
        ApplicableBankPolicy-RuleInterpretation:
          type: string
          description: Explanation or interpretation of the policy or rule as applied
          format: string
      description: "A collection of terms (within some jurisdiction) that can be selected and configured to define a contract /agreement\n\nExamples: Required disclosures"
    LegalTerms:
      type: object
      properties:
        Jurisdiction:
          type: string
          description: The legal jurisdiction
          format: string
        ApplicableLawReference:
          type: string
          description: Reference to any legal requirements
          format: object
        ApplicableLawInterpretation:
          type: string
          description: Explanation or interpretation of the law as applied
          format: string
      description: "A collection of terms (within some jurisdiction) that can be selected and configured to define a contract /agreement\n\nExamples: Required disclosures"
    RegulatoryTerms:
      type: object
      properties:
        RegulatoryAuthority:
          type: string
          description: The applicable regulatory authority
          format: string
        ApplicableRegulationReference:
          type: string
          description: Reference to any regulatory requirements
          format: object
        ApplicableRegulationInterpretation:
          type: string
          description: Explanation or interpretation of the regulation as applied
          format: string
      description: "A collection of terms (within some jurisdiction) that can be selected and configured to define a contract /agreement\n\nExamples: Required disclosures"
    BrokerAgreement:
      type: object
      properties:
        PartyReference:
          type: string
          description: Reference to the broker organization
          format: object
        AgreementType:
          type: string
          description: 'The type of agreement (e.g. service provider, product alliance)'
          format: string
        AgreementJurisdiction:
          type: string
          description: The contractual jurisdiction or coverage of the agreement (e.g. "governed by State")
          format: string
        AgreementValidFromToDate:
          type: string
          description: The term of the agreement
          format: date
        AgreementSignaturesResponsibleParties:
          type: string
          description: Reference to signatories
          format: string
        DocumentDirectoryEntryInstanceReference:
          type: string
          description: Reference to any associated documents
          format: object
      description: "Maintain the terms and conditions that apply to a commercial relationship within Product Broker Agreement.\n\n\n"
    EvaluateBrokerAgreementRequest:
      type: object
      properties:
        BrokerAgreement:
          type: object
          properties:
            PartyReference:
              type: string
              description: "\n"
              format: object
            AgreementType:
              type: string
              description: "\n"
              format: string
            AgreementValidFromToDate:
              type: string
              description: "\n"
              format: date
            AgreementSignaturesResponsibleParties:
              type: string
              description: "\n"
              format: string
            DocumentDirectoryEntryInstanceReference:
              type: string
              description: "\n"
              format: object
      description: 'Input: EvCR Establish a product broker agreement (evaluate applicable rules)'
    EvaluateBrokerAgreementResponse:
      type: object
      properties:
        BrokerAgreement:
          type: object
          properties:
            AgreementJurisdiction:
              type: string
              description: "\n"
              format: string
            AgreementValidFromToDate:
              type: string
              description: "\n"
              format: date
            AgreementSignaturesResponsibleParties:
              type: string
              description: "\n"
              format: string
            DocumentDirectoryEntryInstanceReference:
              type: string
              description: "\n"
              format: object
      description: 'Output: EvCR Establish a product broker agreement (evaluate applicable rules)'
    RetrieveBrokerAgreementResponse:
      type: object
      properties:
        BrokerAgreement:
          type: object
          properties:
            PartyReference:
              type: string
              description: "\n"
              format: object
            AgreementType:
              type: string
              description: "\n"
              format: string
            AgreementJurisdiction:
              type: string
              description: "\n"
              format: string
            AgreementValidFromToDate:
              type: string
              description: "\n"
              format: date
            AgreementSignaturesResponsibleParties:
              type: string
              description: "\n"
              format: string
            DocumentDirectoryEntryInstanceReference:
              type: string
              description: "\n"
              format: object
      description: 'Output: ReCR Retrieve details about a broker agreement'
    EvaluateLegalTermsRequest:
      type: object
      properties:
        BrokerAgreement:
          type: object
          properties:
            PartyReference:
              type: string
              description: "\n"
              format: object
            AgreementType:
              type: string
              description: "\n"
              format: string
            AgreementJurisdiction:
              type: string
              description: "\n"
              format: string
            AgreementValidFromToDate:
              type: string
              description: "\n"
              format: date
            AgreementSignaturesResponsibleParties:
              type: string
              description: "\n"
              format: string
            DocumentDirectoryEntryInstanceReference:
              type: string
              description: "\n"
              format: object
        LegalTerms:
          type: object
          properties:
            ApplicableLawReference:
              type: string
              description: "\n"
              format: object
      description: 'Input: EvBQ Establish the legal terms for a broker agreement'
    EvaluateLegalTermsResponse:
      type: object
      properties:
        LegalTerms:
          type: object
          properties:
            ApplicableLawInterpretation:
              type: string
              description: "\n"
              format: string
      description: 'Output: EvBQ Establish the legal terms for a broker agreement'
    UpdateLegalTermsRequest:
      type: object
      properties:
        LegalTerms:
          type: object
          properties:
            Jurisdiction:
              type: string
              description: "\n"
              format: string
            ApplicableLawReference:
              type: string
              description: "\n"
              format: object
      description: 'Input: UpBQ Update the legal terms for a broker agreement'
    UpdateLegalTermsResponse:
      type: object
      properties:
        LegalTerms:
          type: object
          properties:
            Jurisdiction:
              type: string
              description: "\n"
              format: string
            ApplicableLawReference:
              type: string
              description: "\n"
              format: object
      description: 'Output: UpBQ Update the legal terms for a broker agreement'
    RetrieveLegalTermsResponse:
      type: object
      properties:
        BrokerAgreement:
          type: object
          properties:
            PartyReference:
              type: string
              description: "\n"
              format: object
            AgreementType:
              type: string
              description: "\n"
              format: string
            AgreementJurisdiction:
              type: string
              description: "\n"
              format: string
            AgreementValidFromToDate:
              type: string
              description: "\n"
              format: date
            AgreementSignaturesResponsibleParties:
              type: string
              description: "\n"
              format: string
            DocumentDirectoryEntryInstanceReference:
              type: string
              description: "\n"
              format: object
        LegalTerms:
          type: object
          properties:
            ApplicableLawReference:
              type: string
              description: "\n"
              format: object
            ApplicableLawInterpretation:
              type: string
              description: "\n"
              format: string
      description: 'Output: ReBQ Retrieve details about the legal terms of an agreement'
    EvaluateRegulatoryTermsRequest:
      type: object
      properties:
        BrokerAgreement:
          type: object
          properties:
            PartyReference:
              type: string
              description: "\n"
              format: object
            AgreementType:
              type: string
              description: "\n"
              format: string
            AgreementJurisdiction:
              type: string
              description: "\n"
              format: string
            AgreementValidFromToDate:
              type: string
              description: "\n"
              format: date
            AgreementSignaturesResponsibleParties:
              type: string
              description: "\n"
              format: string
            DocumentDirectoryEntryInstanceReference:
              type: string
              description: "\n"
              format: object
        RegulatoryTerms:
          type: object
          properties:
            RegulatoryAuthority:
              type: string
              description: "\n"
              format: string
            ApplicableRegulationReference:
              type: string
              description: "\n"
              format: object
      description: 'Input: EvBQ Establish the regulatory terms for a broker agreement'
    EvaluateRegulatoryTermsResponse:
      type: object
      properties:
        RegulatoryTerms:
          type: object
          properties:
            ApplicableRegulationInterpretation:
              type: string
              description: "\n"
              format: string
      description: 'Output: EvBQ Establish the regulatory terms for a broker agreement'
    UpdateRegulatoryTermsRequest:
      type: object
      properties:
        RegulatoryTerms:
          type: object
          properties:
            RegulatoryAuthority:
              type: string
              description: "\n"
              format: string
            ApplicableRegulationReference:
              type: string
              description: "\n"
              format: object
      description: 'Input: UpBQ Update the regulatory terms for a broker agreement'
    UpdateRegulatoryTermsResponse:
      type: object
      properties:
        RegulatoryTerms:
          type: object
          properties:
            RegulatoryAuthority:
              type: string
              description: "\n"
              format: string
            ApplicableRegulationReference:
              type: string
              description: "\n"
              format: object
      description: 'Output: UpBQ Update the regulatory terms for a broker agreement'
    RetrieveRegulatoryTermsResponse:
      type: object
      properties:
        BrokerAgreement:
          type: object
          properties:
            PartyReference:
              type: string
              description: "\n"
              format: object
            AgreementType:
              type: string
              description: "\n"
              format: string
            AgreementJurisdiction:
              type: string
              description: "\n"
              format: string
            AgreementValidFromToDate:
              type: string
              description: "\n"
              format: date
            AgreementSignaturesResponsibleParties:
              type: string
              description: "\n"
              format: string
            DocumentDirectoryEntryInstanceReference:
              type: string
              description: "\n"
              format: object
        RegulatoryTerms:
          type: object
          properties:
            RegulatoryAuthority:
              type: string
              description: "\n"
              format: string
            ApplicableRegulationReference:
              type: string
              description: "\n"
              format: object
            ApplicableRegulationInterpretation:
              type: string
              description: "\n"
              format: string
      description: 'Output: ReBQ Retrieve details about the regulatory terms of an agreement'
    EvaluatePolicyTermsRequest:
      type: object
      properties:
        BrokerAgreement:
          type: object
          properties:
            PartyReference:
              type: string
              description: "\n"
              format: object
            AgreementType:
              type: string
              description: "\n"
              format: string
            AgreementJurisdiction:
              type: string
              description: "\n"
              format: string
            AgreementValidFromToDate:
              type: string
              description: "\n"
              format: date
            AgreementSignaturesResponsibleParties:
              type: string
              description: "\n"
              format: string
            DocumentDirectoryEntryInstanceReference:
              type: string
              description: "\n"
              format: object
        PolicyTerms:
          type: object
          properties:
            BankPolicy-RuleType:
              type: string
              description: "\n"
              format: string
            ApplicableBankPolicy-RuleReference:
              type: string
              description: "\n"
              format: object
      description: 'Input: EvBQ Establish the corporate policy terms for a broker agreement'
    EvaluatePolicyTermsResponse:
      type: object
      properties:
        PolicyTerms:
          type: object
          properties:
            ApplicableBankPolicy-RuleInterpretation:
              type: string
              description: "\n"
              format: string
      description: 'Output: EvBQ Establish the corporate policy terms for a broker agreement'
    UpdatePolicyTermsRequest:
      type: object
      properties:
        PolicyTerms:
          type: object
          properties:
            BankPolicy-RuleType:
              type: string
              description: "\n"
              format: string
            ApplicableBankPolicy-RuleReference:
              type: string
              description: "\n"
              format: object
      description: 'Input: UpBQ Update the corporate policy terms for a broker agreement'
    UpdatePolicyTermsResponse:
      type: object
      properties:
        PolicyTerms:
          type: object
          properties:
            BankPolicy-RuleType:
              type: string
              description: "\n"
              format: string
            ApplicableBankPolicy-RuleReference:
              type: string
              description: "\n"
              format: object
      description: 'Output: UpBQ Update the corporate policy terms for a broker agreement'
    RetrievePolicyTermsResponse:
      type: object
      properties:
        BrokerAgreement:
          type: object
          properties:
            PartyReference:
              type: string
              description: "\n"
              format: object
            AgreementType:
              type: string
              description: "\n"
              format: string
            AgreementJurisdiction:
              type: string
              description: "\n"
              format: string
            AgreementValidFromToDate:
              type: string
              description: "\n"
              format: date
            AgreementSignaturesResponsibleParties:
              type: string
              description: "\n"
              format: string
            DocumentDirectoryEntryInstanceReference:
              type: string
              description: "\n"
              format: object
        PolicyTerms:
          type: object
          properties:
            BankPolicy-RuleType:
              type: string
              description: "\n"
              format: string
            ApplicableBankPolicy-RuleReference:
              type: string
              description: "\n"
              format: object
            ApplicableBankPolicy-RuleInterpretation:
              type: string
              description: "\n"
              format: string
      description: 'Output: ReBQ Retrieve details about the corporate policy terms of an agreement'
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    EvaluateBrokerAgreementResponse:
      description: EvaluateBrokerAgreementResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EvaluateBrokerAgreementResponse'
    BrokerAgreement:
      description: BrokerAgreement
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BrokerAgreement'
    RetrieveBrokerAgreementResponse:
      description: RetrieveBrokerAgreementResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveBrokerAgreementResponse'
    EvaluateLegalTermsResponse:
      description: EvaluateLegalTermsResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EvaluateLegalTermsResponse'
    UpdateLegalTermsResponse:
      description: UpdateLegalTermsResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateLegalTermsResponse'
    RetrieveLegalTermsResponse:
      description: RetrieveLegalTermsResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveLegalTermsResponse'
    EvaluateRegulatoryTermsResponse:
      description: EvaluateRegulatoryTermsResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EvaluateRegulatoryTermsResponse'
    UpdateRegulatoryTermsResponse:
      description: UpdateRegulatoryTermsResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateRegulatoryTermsResponse'
    RetrieveRegulatoryTermsResponse:
      description: RetrieveRegulatoryTermsResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveRegulatoryTermsResponse'
    EvaluatePolicyTermsResponse:
      description: EvaluatePolicyTermsResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EvaluatePolicyTermsResponse'
    UpdatePolicyTermsResponse:
      description: UpdatePolicyTermsResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdatePolicyTermsResponse'
    RetrievePolicyTermsResponse:
      description: RetrievePolicyTermsResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrievePolicyTermsResponse'
  parameters:
    productbrokeragreementid:
      name: productbrokeragreementid
      in: path
      required: true
      style: simple
      schema:
        type: string
    legaltermsid:
      name: legaltermsid
      in: path
      required: true
      style: simple
      schema:
        type: string
    regulatorytermsid:
      name: regulatorytermsid
      in: path
      required: true
      style: simple
      schema:
        type: string
    policytermsid:
      name: policytermsid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    EvaluateBrokerAgreementRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EvaluateBrokerAgreementRequest'
      required: true
    BrokerAgreement:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BrokerAgreement'
      required: true
    EvaluateLegalTermsRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EvaluateLegalTermsRequest'
      required: true
    UpdateLegalTermsRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateLegalTermsRequest'
      required: true
    EvaluateRegulatoryTermsRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EvaluateRegulatoryTermsRequest'
      required: true
    UpdateRegulatoryTermsRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateRegulatoryTermsRequest'
      required: true
    EvaluatePolicyTermsRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EvaluatePolicyTermsRequest'
      required: true
    UpdatePolicyTermsRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdatePolicyTermsRequest'
      required: true