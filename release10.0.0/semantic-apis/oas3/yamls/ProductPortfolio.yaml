openapi: 3.0.1
info:
  title: Product Portfolio
  description: Maintain a portfolio of analytical views of the product portfolio to support product profitability and performance analysis
  version: 10.0.0
servers:
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/B154/ProductPortfolio/10.0.0
paths:
  /ProductPortfolio/Evaluate:
    post:
      tags:
      - CR - ProductPortfolioAnalysis
      summary: EvCR Evaluate product portfolio performance
      description: EvCR Evaluate product portfolio performance
      operationId: Evaluate
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/EvaluateProductPortfolioAnalysisRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductPortfolioAnalysis'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductPortfolio/{productportfolioId}/Update:
    put:
      tags:
      - CR - ProductPortfolioAnalysis
      summary: UpCR Update settings or content for product portfolio analysis activity
      description: UpCR Update settings or content for product portfolio analysis activity
      operationId: Update
      parameters:
      - $ref: '#/components/parameters/ProductPortfolioID'
      requestBody:
        $ref: '#/components/requestBodies/ProductPortfolioAnalysis'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductPortfolioAnalysis'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductPortfolio/{productportfolioId}/Request:
    put:
      tags:
      - CR - ProductPortfolioAnalysis
      summary: RqCR Request manual intervention in the product portfolio analysis activity
      description: RqCR Request manual intervention in the product portfolio analysis activity
      operationId: Request
      parameters:
      - $ref: '#/components/parameters/ProductPortfolioID'
      requestBody:
        $ref: '#/components/requestBodies/RequestProductPortfolioAnalysisRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductPortfolioAnalysis'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductPortfolio/{productportfolioId}/Retrieve:
    get:
      tags:
      - CR - ProductPortfolioAnalysis
      summary: ReCR Retrieve details about product portfolio analysis activity
      description: ReCR Retrieve details about product portfolio analysis activity
      operationId: Retrieve
      parameters:
      - $ref: '#/components/parameters/ProductPortfolioID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductPortfolioAnalysis'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductPortfolio/{productportfolioId}/PerformanceAnalysis/Evaluate:
    post:
      tags:
      - BQ - PerformanceAnalysis
      summary: EvBQ Evaluate product performance using a specific type of analysis
      description: EvBQ Evaluate product performance using a specific type of analysis
      operationId: EvaluatePerformanceAnalysis
      parameters:
      - $ref: '#/components/parameters/ProductPortfolioID'
      requestBody:
        $ref: '#/components/requestBodies/EvaluatePerformanceAnalysisRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvaluatePerformanceAnalysisResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductPortfolio/{productportfolioId}/PerformanceAnalysis/{performanceanalysisId}/Update:
    put:
      tags:
      - BQ - PerformanceAnalysis
      summary: UpBQ Update details of a specific product performance analysis
      description: UpBQ Update details of a specific product performance analysis
      operationId: UpdatePerformanceAnalysis
      parameters:
      - $ref: '#/components/parameters/ProductPortfolioID'
      - $ref: '#/components/parameters/PerformanceAnalysisID'
      requestBody:
        $ref: '#/components/requestBodies/PerformanceAnalysis'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerformanceAnalysis'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductPortfolio/{productportfolioId}/PerformanceAnalysis/{performanceanalysisId}/Execute:
    put:
      tags:
      - BQ - PerformanceAnalysis
      summary: ExBQ Execute an automated action against on-going analysis
      description: ExBQ Execute an automated action against on-going analysis
      operationId: ExecutePerformanceAnalysis
      parameters:
      - $ref: '#/components/parameters/ProductPortfolioID'
      - $ref: '#/components/parameters/PerformanceAnalysisID'
      requestBody:
        $ref: '#/components/requestBodies/PerformanceAnalysis'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerformanceAnalysis'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductPortfolio/{productportfolioId}/PerformanceAnalysis/{performanceanalysisId}/Request:
    put:
      tags:
      - BQ - PerformanceAnalysis
      summary: RqBQ Request manual intervention to on-going analysis
      description: RqBQ Request manual intervention to on-going analysis
      operationId: RequestPerformanceAnalysis
      parameters:
      - $ref: '#/components/parameters/ProductPortfolioID'
      - $ref: '#/components/parameters/PerformanceAnalysisID'
      requestBody:
        $ref: '#/components/requestBodies/PerformanceAnalysis'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerformanceAnalysis'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductPortfolio/{productportfolioId}/PerformanceAnalysis/{performanceanalysisId}/Retrieve:
    get:
      tags:
      - BQ - PerformanceAnalysis
      summary: ReBQ Retrieve details about a specific product performance analysis
      description: ReBQ Retrieve details about a specific product performance analysis
      operationId: RetrievePerformanceAnalysis
      parameters:
      - $ref: '#/components/parameters/ProductPortfolioID'
      - $ref: '#/components/parameters/PerformanceAnalysisID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerformanceAnalysis'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    ProductPortfolioAnalysis:
      type: object
      properties:
        ProductPortfolioMake-up:
          type: string
        ProductType:
          type: string
        ProductTypeDefinition:
          type: string
        ProductPortfolioPerformanceGoals:
          type: string
        ProductPortfolioAnalysisSchedule:
          type: string
        ProductPortfolioAnalysisReport:
          type: string
        ProductAnalysisType:
          type: string
        ProductAnalysisResult:
          type: string
        ProductAnalysisReportingDate:
          type: string
        DocumentDirectoryEntryInstanceReference:
          type: object
    PerformanceAnalysis:
      type: object
      properties:
        ProductPerformanceAnalysisType:
          type: string
        ProductPerformanceAnalysisTask:
          type: string
        ProductPerformanceRequestSpecification:
          type: string
        ProductPerformanceModelReference:
          type: object
        ProductPerformanceProductandServiceActivityReport:
          type: string
        ProductPerformanceFinancialMarketResearchReport:
          type: string
        ProductPerformanceWorkProducts:
          type: string
        ProductPerformanceRequestResult:
          type: string
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
        status:
          type: string
        message:
          type: string
    EvaluateProductPortfolioAnalysisRequest:
      type: object
      properties:
        ProductPortfolioAnalysis:
          type: object
          properties:
            ProductPortfolioMake-up:
              type: string
            ProductType:
              type: string
            ProductTypeDefinition:
              type: string
            ProductPortfolioPerformanceGoals:
              type: string
            ProductPortfolioAnalysisSchedule:
              type: string
            ProductPortfolioAnalysisReport:
              type: string
            ProductAnalysisType:
              type: string
            ProductAnalysisReportingDate:
              type: string
    RequestProductPortfolioAnalysisRequest:
      type: object
      properties:
        ProductPortfolioAnalysis:
          type: object
          properties:
            ProductPortfolioMake-up:
              type: string
            ProductType:
              type: string
            ProductTypeDefinition:
              type: string
            ProductPortfolioPerformanceGoals:
              type: string
            ProductPortfolioAnalysisSchedule:
              type: string
            ProductPortfolioAnalysisReport:
              type: string
            ProductAnalysisType:
              type: string
            ProductAnalysisReportingDate:
              type: string
    EvaluatePerformanceAnalysisRequest:
      type: object
      properties:
        ProductPortfolioAnalysis:
          type: object
          properties:
            ProductPortfolioAnalysisSchedule:
              type: string
            ProductPortfolioAnalysisReport:
              type: string
            ProductAnalysisType:
              type: string
            ProductAnalysisResult:
              type: string
            ProductAnalysisReportingDate:
              type: string
            DocumentDirectoryEntryInstanceReference:
              type: object
        PerformanceAnalysis:
          type: object
          properties:
            ProductPerformanceAnalysisType:
              type: string
            ProductPerformanceAnalysisTask:
              type: string
            ProductPerformanceRequestSpecification:
              type: string
            ProductPerformanceModelReference:
              type: object
            ProductPerformanceProductandServiceActivityReport:
              type: string
            ProductPerformanceFinancialMarketResearchReport:
              type: string
            ProductPerformanceWorkProducts:
              type: string
    EvaluatePerformanceAnalysisResponse:
      type: object
      properties:
        ProductPortfolioAnalysis:
          type: object
          properties:
            ProductPortfolioAnalysisSchedule:
              type: string
            ProductPortfolioAnalysisReport:
              type: string
            ProductAnalysisType:
              type: string
            ProductAnalysisResult:
              type: string
            ProductAnalysisReportingDate:
              type: string
            DocumentDirectoryEntryInstanceReference:
              type: object
        PerformanceAnalysis:
          type: object
          properties:
            ProductPerformanceAnalysisType:
              type: string
            ProductPerformanceAnalysisTask:
              type: string
            ProductPerformanceRequestSpecification:
              type: string
            ProductPerformanceModelReference:
              type: object
            ProductPerformanceProductandServiceActivityReport:
              type: string
            ProductPerformanceFinancialMarketResearchReport:
              type: string
            ProductPerformanceWorkProducts:
              type: string
            ProductPerformanceRequestResult:
              type: string
  parameters:
    ProductPortfolioID:
      name: productportfolioId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    PerformanceAnalysisID:
      name: performanceanalysisId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
  requestBodies:
    EvaluateProductPortfolioAnalysisRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EvaluateProductPortfolioAnalysisRequest'
    ProductPortfolioAnalysis:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProductPortfolioAnalysis'
    RequestProductPortfolioAnalysisRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestProductPortfolioAnalysisRequest'
    EvaluatePerformanceAnalysisRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EvaluatePerformanceAnalysisRequest'
    PerformanceAnalysis:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PerformanceAnalysis'
  responses:
    HTTPError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    BadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequestsError:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
...
