openapi: 3.0.1
info:
  title: Accounts Receivable
  description: This service domain handles accounts receivable for invoices issue by the bank to customers and partners. It includes follow-up and resolution activity for delayed/missed payments
  version: 10.0.0
servers:
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/B154/AccountsReceivable/10.0.0
paths:
  /AccountsReceivable/{accountsreceivableId}/Control:
    put:
      tags:
      - CR - AccountsReceivableProcedure
      summary: CoCR Control the processing of Accounts Receivable Procedure
      description: CoCR Control the processing of Accounts Receivable Procedure
      operationId: Control
      parameters:
      - $ref: '#/components/parameters/AccountsReceivableID'
      requestBody:
        $ref: '#/components/requestBodies/ControlAccountsReceivableProcedureRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ControlAccountsReceivableProcedureResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /AccountsReceivable/{accountsreceivableId}/Exchange:
    put:
      tags:
      - CR - AccountsReceivableProcedure
      summary: EcCR Accept, verify, etc. aspects of Accounts Receivable Procedure processing
      description: EcCR Accept, verify, etc. aspects of Accounts Receivable Procedure processing
      operationId: Exchange
      parameters:
      - $ref: '#/components/parameters/AccountsReceivableID'
      requestBody:
        $ref: '#/components/requestBodies/ExchangeAccountsReceivableProcedureRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExchangeAccountsReceivableProcedureResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /AccountsReceivable/{accountsreceivableId}/Execute:
    put:
      tags:
      - CR - AccountsReceivableProcedure
      summary: ExCR Execute an available automated action for Accounts Receivable Procedure
      description: ExCR Execute an available automated action for Accounts Receivable Procedure
      operationId: Execute
      parameters:
      - $ref: '#/components/parameters/AccountsReceivableID'
      requestBody:
        $ref: '#/components/requestBodies/ExecuteAccountsReceivableProcedureRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecuteAccountsReceivableProcedureResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /AccountsReceivable/Initiate:
    post:
      tags:
      - CR - AccountsReceivableProcedure
      summary: InCR Instantiate a new Accounts Receivable Procedure
      description: InCR Instantiate a new Accounts Receivable Procedure
      operationId: Initiate
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/InitiateAccountsReceivableProcedureRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitiateAccountsReceivableProcedureResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /AccountsReceivable/{accountsreceivableId}/Retrieve:
    get:
      tags:
      - CR - AccountsReceivableProcedure
      summary: ReCR Retrieve details about any aspect of Accounts Receivable Procedure
      description: ReCR Retrieve details about any aspect of Accounts Receivable Procedure
      operationId: Retrieve
      parameters:
      - $ref: '#/components/parameters/AccountsReceivableID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveAccountsReceivableProcedureResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /AccountsReceivable/{accountsreceivableId}/Request:
    put:
      tags:
      - CR - AccountsReceivableProcedure
      summary: RqCR Request manual intervention or a decision with respect to Accounts Receivable Procedure
      description: RqCR Request manual intervention or a decision with respect to Accounts Receivable Procedure
      operationId: Request
      parameters:
      - $ref: '#/components/parameters/AccountsReceivableID'
      requestBody:
        $ref: '#/components/requestBodies/RequestAccountsReceivableProcedureRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestAccountsReceivableProcedureResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /AccountsReceivable/{accountsreceivableId}/Update:
    put:
      tags:
      - CR - AccountsReceivableProcedure
      summary: UpCR Update details relating to Accounts Receivable Procedure
      description: UpCR Update details relating to Accounts Receivable Procedure
      operationId: Update
      parameters:
      - $ref: '#/components/parameters/AccountsReceivableID'
      requestBody:
        $ref: '#/components/requestBodies/UpdateAccountsReceivableProcedureRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAccountsReceivableProcedureResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /AccountsReceivable/{accountsreceivableId}/CustomerNegotiation/{customernegotiationId}/Exchange:
    put:
      tags:
      - BQ - CustomerNegotiation
      summary: EcBQ Accept, verify, etc. aspects of Customer Negotiation processing
      description: EcBQ Accept, verify, etc. aspects of Customer Negotiation processing
      operationId: ExchangeCustomerNegotiation
      parameters:
      - $ref: '#/components/parameters/AccountsReceivableID'
      - $ref: '#/components/parameters/CustomerNegotiationID'
      requestBody:
        $ref: '#/components/requestBodies/CustomerNegotiation'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerNegotiation'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /AccountsReceivable/{accountsreceivableId}/ReceivablesEvaluation/{receivablesevaluationId}/Exchange:
    put:
      tags:
      - BQ - ReceivablesEvaluation
      summary: EcBQ Accept, verify, etc. aspects of Receivables Evaluation processing
      description: EcBQ Accept, verify, etc. aspects of Receivables Evaluation processing
      operationId: ExchangeReceivablesEvaluation
      parameters:
      - $ref: '#/components/parameters/AccountsReceivableID'
      - $ref: '#/components/parameters/ReceivablesEvaluationID'
      requestBody:
        $ref: '#/components/requestBodies/ExchangeReceivablesEvaluationRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExchangeReceivablesEvaluationResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /AccountsReceivable/{accountsreceivableId}/CustomerNegotiation/Initiate:
    post:
      tags:
      - BQ - CustomerNegotiation
      summary: InBQ Instantiate a new Customer Negotiation
      description: InBQ Instantiate a new Customer Negotiation
      operationId: InitiateCustomerNegotiation
      parameters:
      - $ref: '#/components/parameters/AccountsReceivableID'
      requestBody:
        $ref: '#/components/requestBodies/CustomerNegotiation'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerNegotiation'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /AccountsReceivable/{accountsreceivableId}/Payment/Initiate:
    post:
      tags:
      - BQ - Payment
      summary: InBQ Instantiate a new Payment
      description: InBQ Instantiate a new Payment
      operationId: InitiatePayment
      parameters:
      - $ref: '#/components/parameters/AccountsReceivableID'
      requestBody:
        $ref: '#/components/requestBodies/Payment'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /AccountsReceivable/{accountsreceivableId}/ReceivablesEvaluation/Initiate:
    post:
      tags:
      - BQ - ReceivablesEvaluation
      summary: InBQ Instantiate a new Receivables Evaluation
      description: InBQ Instantiate a new Receivables Evaluation
      operationId: InitiateReceivablesEvaluation
      parameters:
      - $ref: '#/components/parameters/AccountsReceivableID'
      requestBody:
        $ref: '#/components/requestBodies/InitiateReceivablesEvaluationRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitiateReceivablesEvaluationResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /AccountsReceivable/{accountsreceivableId}/Resolution/Initiate:
    post:
      tags:
      - BQ - Resolution
      summary: InBQ Instantiate a new Resolution
      description: InBQ Instantiate a new Resolution
      operationId: InitiateResolution
      parameters:
      - $ref: '#/components/parameters/AccountsReceivableID'
      requestBody:
        $ref: '#/components/requestBodies/Resolution'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resolution'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /AccountsReceivable/{accountsreceivableId}/CustomerNegotiation/{customernegotiationId}/Retrieve:
    get:
      tags:
      - BQ - CustomerNegotiation
      summary: ReBQ Retrieve details about any aspect of Customer Negotiation
      description: ReBQ Retrieve details about any aspect of Customer Negotiation
      operationId: RetrieveCustomerNegotiation
      parameters:
      - $ref: '#/components/parameters/AccountsReceivableID'
      - $ref: '#/components/parameters/CustomerNegotiationID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerNegotiation'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /AccountsReceivable/{accountsreceivableId}/Payment/{paymentId}/Retrieve:
    get:
      tags:
      - BQ - Payment
      summary: ReBQ Retrieve details about any aspect of Payment
      description: ReBQ Retrieve details about any aspect of Payment
      operationId: RetrievePayment
      parameters:
      - $ref: '#/components/parameters/AccountsReceivableID'
      - $ref: '#/components/parameters/PaymentID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /AccountsReceivable/{accountsreceivableId}/ReceivablesEvaluation/{receivablesevaluationId}/Retrieve:
    get:
      tags:
      - BQ - ReceivablesEvaluation
      summary: ReBQ Retrieve details about any aspect of Receivables Evaluation
      description: ReBQ Retrieve details about any aspect of Receivables Evaluation
      operationId: RetrieveReceivablesEvaluation
      parameters:
      - $ref: '#/components/parameters/AccountsReceivableID'
      - $ref: '#/components/parameters/ReceivablesEvaluationID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveReceivablesEvaluationResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /AccountsReceivable/{accountsreceivableId}/Resolution/{resolutionId}/Retrieve:
    get:
      tags:
      - BQ - Resolution
      summary: ReBQ Retrieve details about any aspect of Resolution
      description: ReBQ Retrieve details about any aspect of Resolution
      operationId: RetrieveResolution
      parameters:
      - $ref: '#/components/parameters/AccountsReceivableID'
      - $ref: '#/components/parameters/ResolutionID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resolution'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /AccountsReceivable/{accountsreceivableId}/CustomerNegotiation/{customernegotiationId}/Request:
    put:
      tags:
      - BQ - CustomerNegotiation
      summary: RqBQ Request manual intervention or a decision with respect to Customer Negotiation
      description: RqBQ Request manual intervention or a decision with respect to Customer Negotiation
      operationId: RequestCustomerNegotiation
      parameters:
      - $ref: '#/components/parameters/AccountsReceivableID'
      - $ref: '#/components/parameters/CustomerNegotiationID'
      requestBody:
        $ref: '#/components/requestBodies/CustomerNegotiation'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerNegotiation'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /AccountsReceivable/{accountsreceivableId}/CustomerNegotiation/{customernegotiationId}/Update:
    put:
      tags:
      - BQ - CustomerNegotiation
      summary: UpBQ Update details relating to Customer Negotiation
      description: UpBQ Update details relating to Customer Negotiation
      operationId: UpdateCustomerNegotiation
      parameters:
      - $ref: '#/components/parameters/AccountsReceivableID'
      - $ref: '#/components/parameters/CustomerNegotiationID'
      requestBody:
        $ref: '#/components/requestBodies/CustomerNegotiation'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerNegotiation'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /AccountsReceivable/{accountsreceivableId}/Payment/{paymentId}/Update:
    put:
      tags:
      - BQ - Payment
      summary: UpBQ Update details relating to Payment
      description: UpBQ Update details relating to Payment
      operationId: UpdatePayment
      parameters:
      - $ref: '#/components/parameters/AccountsReceivableID'
      - $ref: '#/components/parameters/PaymentID'
      requestBody:
        $ref: '#/components/requestBodies/Payment'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /AccountsReceivable/{accountsreceivableId}/ReceivablesEvaluation/{receivablesevaluationId}/Update:
    put:
      tags:
      - BQ - ReceivablesEvaluation
      summary: UpBQ Update details relating to Receivables Evaluation
      description: UpBQ Update details relating to Receivables Evaluation
      operationId: UpdateReceivablesEvaluation
      parameters:
      - $ref: '#/components/parameters/AccountsReceivableID'
      - $ref: '#/components/parameters/ReceivablesEvaluationID'
      requestBody:
        $ref: '#/components/requestBodies/UpdateReceivablesEvaluationRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateReceivablesEvaluationResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /AccountsReceivable/{accountsreceivableId}/Resolution/{resolutionId}/Update:
    put:
      tags:
      - BQ - Resolution
      summary: UpBQ Update details relating to Resolution
      description: UpBQ Update details relating to Resolution
      operationId: UpdateResolution
      parameters:
      - $ref: '#/components/parameters/AccountsReceivableID'
      - $ref: '#/components/parameters/ResolutionID'
      requestBody:
        $ref: '#/components/requestBodies/Resolution'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resolution'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    AccountsReceivableProcedure:
      type: object
      properties:
        AccountsReceivableProcedureParameterType:
          type: string
        AccountsReceivableProcedureSelectedOption:
          type: string
        AccountsReceivableProcedureRequest:
          type: string
        AccountsReceivableProcedureSchedule:
          type: string
        AccountsReceivableProcedureStatus:
          type: string
        AccountsReceivableProcedureReference:
          type: object
        AccountsReceivableProcedureBusinessUnitReference:
          type: object
        AccountsReceivableProcedureServiceProviderReference:
          type: object
        AccountsReceivableProcedureFinancialFacilityReference:
          type: object
        AccountsReceivableProcedureEmployeeReference:
          type: object
        AccountsReceivableProcedureCustomerReference:
          type: object
        AccountsReceivableProcedureType:
          type: string
        AccountsReceivableProcedureServiceProviderSchedule:
          type: string
        AccountsReceivableProcedureServiceType:
          type: string
        AccountsReceivableProcedureProductandServiceType:
          type: string
        AccountsReceivableProcedureProductandServiceInstance:
          type: string
        AccountsReceivableProcedureTransactionType:
          type: string
        AccountsReceivableProcedureTransaction:
          type: string
        AccountsReceivableProcedureFinancialTransactionArrangement:
          type: string
        AccountsReceivableProcedureCustomerAgreementReference:
          type: object
    Resolution:
      type: object
      properties:
        ResolutionPreconditions:
          type: string
        ResolutionBusinessUnit/EmployeeReference:
          type: object
        ResolutionWorkSchedule:
          type: string
        BusinessService:
          type: object
        ResolutionPostconditions:
          type: string
        ResolutionServiceType:
          type: string
        ResolutionServiceDescription:
          type: string
        ResolutionServiceInputsandOuputs:
          type: string
        ResolutionServiceWorkProduct:
          type: string
        ResolutionServiceName:
          type: string
    CustomerNegotiation:
      type: object
      properties:
        CustomerNegotiationPreconditions:
          type: string
        CustomerNegotiationBusinessUnit/EmployeeReference:
          type: object
        CustomerNegotiationWorkSchedule:
          type: string
        PaymentNegotation:
          type: object
        CustomerNegotiationPostconditions:
          type: string
        CustomerNegotiationPaymentNegotationServiceType:
          type: string
        CustomerNegotiationPaymentNegotationServiceDescription:
          type: string
        CustomerNegotiationPaymentNegotationServiceInputsandOuputs:
          type: string
        CustomerNegotiationPaymentNegotationServiceWorkProduct:
          type: string
        CustomerNegotiationPaymentNegotationServiceName:
          type: string
    AccountsReceivableOutcome:
      type: object
      properties:
        AccountsReceivableWorkProduct:
          type: string
        AccountsReceivableProcedure:
          type: string
    Payment:
      type: object
      properties:
        PaymentPreconditions:
          type: string
        PaymentBusinessUnit/EmployeeReference:
          type: object
        PaymentWorkSchedule:
          type: string
        BusinessService:
          type: object
        PaymentPostconditions:
          type: string
        PaymentServiceType:
          type: string
        PaymentServiceDescription:
          type: string
        PaymentServiceInputsandOuputs:
          type: string
        PaymentServiceWorkProduct:
          type: string
        PaymentServiceName:
          type: string
    ReceivablesEvaluation:
      type: object
      properties:
        ReceivablesEvaluationPreconditions:
          type: string
        ReceivablesEvaluationBusinessUnit/EmployeeReference:
          type: object
        ReceivablesEvaluationWorkSchedule:
          type: string
        ReceivablesEvaluation:
          type: object
        ReceivablesEvaluationPostconditions:
          type: string
        ReceivablesEvaluationReceivablesEvaluationServiceType:
          type: string
        ReceivablesEvaluationReceivablesEvaluationServiceDescription:
          type: string
        ReceivablesEvaluationReceivablesEvaluationServiceInputsandOuputs:
          type: string
        ReceivablesEvaluationReceivablesEvaluationServiceWorkProduct:
          type: string
        ReceivablesEvaluationReceivablesEvaluationServiceName:
          type: string
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
        status:
          type: string
        message:
          type: string
    ControlAccountsReceivableProcedureRequest:
      type: object
      properties:
        AccountsReceivableProcedure:
          type: object
          properties:
            AccountsReceivableProcedureParameterType:
              type: string
            AccountsReceivableProcedureSelectedOption:
              type: string
            AccountsReceivableProcedureRequest:
              type: string
            AccountsReceivableProcedureSchedule:
              type: string
            AccountsReceivableProcedureStatus:
              type: string
            AccountsReceivableProcedureReference:
              type: object
            AccountsReceivableProcedureBusinessUnitReference:
              type: object
            AccountsReceivableProcedureServiceProviderReference:
              type: object
            AccountsReceivableProcedureFinancialFacilityReference:
              type: object
            AccountsReceivableProcedureEmployeeReference:
              type: object
            AccountsReceivableProcedureCustomerReference:
              type: object
            AccountsReceivableProcedureType:
              type: string
            AccountsReceivableProcedureServiceProviderSchedule:
              type: string
            AccountsReceivableProcedureServiceType:
              type: string
            AccountsReceivableProcedureProductandServiceType:
              type: string
            AccountsReceivableProcedureProductandServiceInstance:
              type: string
            AccountsReceivableProcedureTransactionType:
              type: string
            AccountsReceivableProcedureFinancialTransactionArrangement:
              type: string
            AccountsReceivableProcedureCustomerAgreementReference:
              type: object
    ControlAccountsReceivableProcedureResponse:
      type: object
      properties:
        AccountsReceivableProcedure:
          type: object
          properties:
            AccountsReceivableProcedureParameterType:
              type: string
            AccountsReceivableProcedureSelectedOption:
              type: string
            AccountsReceivableProcedureRequest:
              type: string
            AccountsReceivableProcedureSchedule:
              type: string
            AccountsReceivableProcedureStatus:
              type: string
    ExchangeAccountsReceivableProcedureRequest:
      type: object
      properties:
        AccountsReceivableProcedure:
          type: object
          properties:
            AccountsReceivableProcedureParameterType:
              type: string
            AccountsReceivableProcedureSelectedOption:
              type: string
            AccountsReceivableProcedureRequest:
              type: string
            AccountsReceivableProcedureSchedule:
              type: string
            AccountsReceivableProcedureStatus:
              type: string
            AccountsReceivableProcedureReference:
              type: object
            AccountsReceivableProcedureBusinessUnitReference:
              type: object
            AccountsReceivableProcedureServiceProviderReference:
              type: object
            AccountsReceivableProcedureFinancialFacilityReference:
              type: object
            AccountsReceivableProcedureEmployeeReference:
              type: object
            AccountsReceivableProcedureCustomerReference:
              type: object
            AccountsReceivableProcedureType:
              type: string
            AccountsReceivableProcedureServiceProviderSchedule:
              type: string
            AccountsReceivableProcedureServiceType:
              type: string
            AccountsReceivableProcedureProductandServiceType:
              type: string
            AccountsReceivableProcedureProductandServiceInstance:
              type: string
            AccountsReceivableProcedureTransactionType:
              type: string
            AccountsReceivableProcedureFinancialTransactionArrangement:
              type: string
            AccountsReceivableProcedureCustomerAgreementReference:
              type: object
    ExchangeAccountsReceivableProcedureResponse:
      type: object
      properties:
        AccountsReceivableProcedure:
          type: object
          properties:
            AccountsReceivableProcedureParameterType:
              type: string
            AccountsReceivableProcedureSelectedOption:
              type: string
            AccountsReceivableProcedureRequest:
              type: string
            AccountsReceivableProcedureSchedule:
              type: string
            AccountsReceivableProcedureStatus:
              type: string
    ExecuteAccountsReceivableProcedureRequest:
      type: object
      properties:
        AccountsReceivableProcedure:
          type: object
          properties:
            AccountsReceivableProcedureParameterType:
              type: string
            AccountsReceivableProcedureSelectedOption:
              type: string
            AccountsReceivableProcedureRequest:
              type: string
            AccountsReceivableProcedureSchedule:
              type: string
            AccountsReceivableProcedureStatus:
              type: string
            AccountsReceivableProcedureReference:
              type: object
            AccountsReceivableProcedureBusinessUnitReference:
              type: object
            AccountsReceivableProcedureServiceProviderReference:
              type: object
            AccountsReceivableProcedureFinancialFacilityReference:
              type: object
            AccountsReceivableProcedureEmployeeReference:
              type: object
            AccountsReceivableProcedureCustomerReference:
              type: object
            AccountsReceivableProcedureType:
              type: string
            AccountsReceivableProcedureServiceProviderSchedule:
              type: string
            AccountsReceivableProcedureServiceType:
              type: string
            AccountsReceivableProcedureProductandServiceType:
              type: string
            AccountsReceivableProcedureProductandServiceInstance:
              type: string
            AccountsReceivableProcedureTransactionType:
              type: string
            AccountsReceivableProcedureFinancialTransactionArrangement:
              type: string
            AccountsReceivableProcedureCustomerAgreementReference:
              type: object
    ExecuteAccountsReceivableProcedureResponse:
      type: object
      properties:
        AccountsReceivableProcedure:
          type: object
          properties:
            AccountsReceivableProcedureParameterType:
              type: string
            AccountsReceivableProcedureSelectedOption:
              type: string
            AccountsReceivableProcedureRequest:
              type: string
            AccountsReceivableProcedureSchedule:
              type: string
            AccountsReceivableProcedureStatus:
              type: string
    InitiateAccountsReceivableProcedureRequest:
      type: object
      properties:
        AccountsReceivableProcedure:
          type: object
          properties:
            AccountsReceivableProcedureParameterType:
              type: string
            AccountsReceivableProcedureSelectedOption:
              type: string
            AccountsReceivableProcedureRequest:
              type: string
            AccountsReceivableProcedureSchedule:
              type: string
            AccountsReceivableProcedureStatus:
              type: string
            AccountsReceivableProcedureReference:
              type: object
            AccountsReceivableProcedureBusinessUnitReference:
              type: object
            AccountsReceivableProcedureServiceProviderReference:
              type: object
            AccountsReceivableProcedureFinancialFacilityReference:
              type: object
            AccountsReceivableProcedureEmployeeReference:
              type: object
            AccountsReceivableProcedureCustomerReference:
              type: object
            AccountsReceivableProcedureType:
              type: string
            AccountsReceivableProcedureServiceProviderSchedule:
              type: string
            AccountsReceivableProcedureServiceType:
              type: string
            AccountsReceivableProcedureProductandServiceType:
              type: string
            AccountsReceivableProcedureProductandServiceInstance:
              type: string
            AccountsReceivableProcedureTransactionType:
              type: string
            AccountsReceivableProcedureFinancialTransactionArrangement:
              type: string
            AccountsReceivableProcedureCustomerAgreementReference:
              type: object
    InitiateAccountsReceivableProcedureResponse:
      type: object
      properties:
        AccountsReceivableProcedure:
          type: object
          properties:
            AccountsReceivableProcedureParameterType:
              type: string
            AccountsReceivableProcedureSelectedOption:
              type: string
            AccountsReceivableProcedureRequest:
              type: string
            AccountsReceivableProcedureSchedule:
              type: string
            AccountsReceivableProcedureStatus:
              type: string
    RetrieveAccountsReceivableProcedureResponse:
      type: object
      properties:
        AccountsReceivableProcedure:
          type: object
          properties:
            AccountsReceivableProcedureParameterType:
              type: string
            AccountsReceivableProcedureSelectedOption:
              type: string
            AccountsReceivableProcedureRequest:
              type: string
            AccountsReceivableProcedureSchedule:
              type: string
            AccountsReceivableProcedureStatus:
              type: string
            AccountsReceivableProcedureReference:
              type: object
            AccountsReceivableProcedureBusinessUnitReference:
              type: object
            AccountsReceivableProcedureServiceProviderReference:
              type: object
            AccountsReceivableProcedureFinancialFacilityReference:
              type: object
            AccountsReceivableProcedureEmployeeReference:
              type: object
            AccountsReceivableProcedureCustomerReference:
              type: object
            AccountsReceivableProcedureType:
              type: string
            AccountsReceivableProcedureServiceProviderSchedule:
              type: string
            AccountsReceivableProcedureServiceType:
              type: string
            AccountsReceivableProcedureProductandServiceType:
              type: string
            AccountsReceivableProcedureProductandServiceInstance:
              type: string
            AccountsReceivableProcedureTransactionType:
              type: string
            AccountsReceivableProcedureFinancialTransactionArrangement:
              type: string
            AccountsReceivableProcedureCustomerAgreementReference:
              type: object
    RequestAccountsReceivableProcedureRequest:
      type: object
      properties:
        AccountsReceivableProcedure:
          type: object
          properties:
            AccountsReceivableProcedureParameterType:
              type: string
            AccountsReceivableProcedureSelectedOption:
              type: string
            AccountsReceivableProcedureRequest:
              type: string
            AccountsReceivableProcedureSchedule:
              type: string
            AccountsReceivableProcedureStatus:
              type: string
            AccountsReceivableProcedureReference:
              type: object
            AccountsReceivableProcedureBusinessUnitReference:
              type: object
            AccountsReceivableProcedureServiceProviderReference:
              type: object
            AccountsReceivableProcedureFinancialFacilityReference:
              type: object
            AccountsReceivableProcedureEmployeeReference:
              type: object
            AccountsReceivableProcedureCustomerReference:
              type: object
            AccountsReceivableProcedureType:
              type: string
            AccountsReceivableProcedureServiceProviderSchedule:
              type: string
            AccountsReceivableProcedureServiceType:
              type: string
            AccountsReceivableProcedureProductandServiceType:
              type: string
            AccountsReceivableProcedureProductandServiceInstance:
              type: string
            AccountsReceivableProcedureTransactionType:
              type: string
            AccountsReceivableProcedureFinancialTransactionArrangement:
              type: string
            AccountsReceivableProcedureCustomerAgreementReference:
              type: object
    RequestAccountsReceivableProcedureResponse:
      type: object
      properties:
        AccountsReceivableProcedure:
          type: object
          properties:
            AccountsReceivableProcedureParameterType:
              type: string
            AccountsReceivableProcedureSelectedOption:
              type: string
            AccountsReceivableProcedureRequest:
              type: string
            AccountsReceivableProcedureSchedule:
              type: string
            AccountsReceivableProcedureStatus:
              type: string
    UpdateAccountsReceivableProcedureRequest:
      type: object
      properties:
        AccountsReceivableProcedure:
          type: object
          properties:
            AccountsReceivableProcedureParameterType:
              type: string
            AccountsReceivableProcedureSelectedOption:
              type: string
            AccountsReceivableProcedureRequest:
              type: string
            AccountsReceivableProcedureSchedule:
              type: string
            AccountsReceivableProcedureStatus:
              type: string
            AccountsReceivableProcedureReference:
              type: object
            AccountsReceivableProcedureBusinessUnitReference:
              type: object
            AccountsReceivableProcedureServiceProviderReference:
              type: object
            AccountsReceivableProcedureFinancialFacilityReference:
              type: object
            AccountsReceivableProcedureEmployeeReference:
              type: object
            AccountsReceivableProcedureCustomerReference:
              type: object
            AccountsReceivableProcedureType:
              type: string
            AccountsReceivableProcedureServiceProviderSchedule:
              type: string
            AccountsReceivableProcedureServiceType:
              type: string
            AccountsReceivableProcedureProductandServiceType:
              type: string
            AccountsReceivableProcedureProductandServiceInstance:
              type: string
            AccountsReceivableProcedureTransactionType:
              type: string
            AccountsReceivableProcedureFinancialTransactionArrangement:
              type: string
            AccountsReceivableProcedureCustomerAgreementReference:
              type: object
    UpdateAccountsReceivableProcedureResponse:
      type: object
      properties:
        AccountsReceivableProcedure:
          type: object
          properties:
            AccountsReceivableProcedureParameterType:
              type: string
            AccountsReceivableProcedureSelectedOption:
              type: string
            AccountsReceivableProcedureRequest:
              type: string
            AccountsReceivableProcedureSchedule:
              type: string
            AccountsReceivableProcedureStatus:
              type: string
    ExchangeReceivablesEvaluationRequest:
      type: object
      properties:
        ReceivablesEvaluation:
          type: object
          properties:
            ReceivablesEvaluationPreconditions:
              type: string
            ReceivablesEvaluationBusinessUnitOrEmployeeReference:
              type: object
            ReceivablesEvaluationWorkSchedule:
              type: string
            ReceivablesEvaluationPostconditions:
              type: string
            ReceivablesEvaluationReceivablesEvaluationServiceType:
              type: string
            ReceivablesEvaluationReceivablesEvaluationServiceDescription:
              type: string
            ReceivablesEvaluationReceivablesEvaluationServiceInputsandOuputs:
              type: string
            ReceivablesEvaluationReceivablesEvaluationServiceWorkProduct:
              type: string
            ReceivablesEvaluationReceivablesEvaluationServiceName:
              type: string
    ExchangeReceivablesEvaluationResponse:
      type: object
      properties:
        ReceivablesEvaluation:
          type: object
          properties:
            ReceivablesEvaluationPreconditions:
              type: string
            ReceivablesEvaluationBusinessUnitOrEmployeeReference:
              type: object
            ReceivablesEvaluationWorkSchedule:
              type: string
            ReceivablesEvaluationPostconditions:
              type: string
            ReceivablesEvaluationReceivablesEvaluationServiceType:
              type: string
            ReceivablesEvaluationReceivablesEvaluationServiceDescription:
              type: string
            ReceivablesEvaluationReceivablesEvaluationServiceInputsandOuputs:
              type: string
            ReceivablesEvaluationReceivablesEvaluationServiceWorkProduct:
              type: string
            ReceivablesEvaluationReceivablesEvaluationServiceName:
              type: string
    InitiateReceivablesEvaluationRequest:
      type: object
      properties:
        ReceivablesEvaluation:
          type: object
          properties:
            ReceivablesEvaluationPreconditions:
              type: string
            ReceivablesEvaluationBusinessUnitOrEmployeeReference:
              type: object
            ReceivablesEvaluationWorkSchedule:
              type: string
            ReceivablesEvaluationPostconditions:
              type: string
            ReceivablesEvaluationReceivablesEvaluationServiceType:
              type: string
            ReceivablesEvaluationReceivablesEvaluationServiceDescription:
              type: string
            ReceivablesEvaluationReceivablesEvaluationServiceInputsandOuputs:
              type: string
            ReceivablesEvaluationReceivablesEvaluationServiceWorkProduct:
              type: string
            ReceivablesEvaluationReceivablesEvaluationServiceName:
              type: string
    InitiateReceivablesEvaluationResponse:
      type: object
      properties:
        ReceivablesEvaluation:
          type: object
          properties:
            ReceivablesEvaluationPreconditions:
              type: string
            ReceivablesEvaluationBusinessUnitOrEmployeeReference:
              type: object
            ReceivablesEvaluationWorkSchedule:
              type: string
            ReceivablesEvaluationPostconditions:
              type: string
            ReceivablesEvaluationReceivablesEvaluationServiceType:
              type: string
            ReceivablesEvaluationReceivablesEvaluationServiceDescription:
              type: string
            ReceivablesEvaluationReceivablesEvaluationServiceInputsandOuputs:
              type: string
            ReceivablesEvaluationReceivablesEvaluationServiceWorkProduct:
              type: string
            ReceivablesEvaluationReceivablesEvaluationServiceName:
              type: string
    RetrieveReceivablesEvaluationResponse:
      type: object
      properties:
        ReceivablesEvaluation:
          type: object
          properties:
            ReceivablesEvaluationPreconditions:
              type: string
            ReceivablesEvaluationBusinessUnitOrEmployeeReference:
              type: object
            ReceivablesEvaluationWorkSchedule:
              type: string
            ReceivablesEvaluationPostconditions:
              type: string
            ReceivablesEvaluationReceivablesEvaluationServiceType:
              type: string
            ReceivablesEvaluationReceivablesEvaluationServiceDescription:
              type: string
            ReceivablesEvaluationReceivablesEvaluationServiceInputsandOuputs:
              type: string
            ReceivablesEvaluationReceivablesEvaluationServiceWorkProduct:
              type: string
            ReceivablesEvaluationReceivablesEvaluationServiceName:
              type: string
    UpdateReceivablesEvaluationRequest:
      type: object
      properties:
        ReceivablesEvaluation:
          type: object
          properties:
            ReceivablesEvaluationPreconditions:
              type: string
            ReceivablesEvaluationBusinessUnitOrEmployeeReference:
              type: object
            ReceivablesEvaluationWorkSchedule:
              type: string
            ReceivablesEvaluationPostconditions:
              type: string
            ReceivablesEvaluationReceivablesEvaluationServiceType:
              type: string
            ReceivablesEvaluationReceivablesEvaluationServiceDescription:
              type: string
            ReceivablesEvaluationReceivablesEvaluationServiceInputsandOuputs:
              type: string
            ReceivablesEvaluationReceivablesEvaluationServiceWorkProduct:
              type: string
            ReceivablesEvaluationReceivablesEvaluationServiceName:
              type: string
    UpdateReceivablesEvaluationResponse:
      type: object
      properties:
        ReceivablesEvaluation:
          type: object
          properties:
            ReceivablesEvaluationPreconditions:
              type: string
            ReceivablesEvaluationBusinessUnitOrEmployeeReference:
              type: object
            ReceivablesEvaluationWorkSchedule:
              type: string
            ReceivablesEvaluationPostconditions:
              type: string
            ReceivablesEvaluationReceivablesEvaluationServiceType:
              type: string
            ReceivablesEvaluationReceivablesEvaluationServiceDescription:
              type: string
            ReceivablesEvaluationReceivablesEvaluationServiceInputsandOuputs:
              type: string
            ReceivablesEvaluationReceivablesEvaluationServiceWorkProduct:
              type: string
            ReceivablesEvaluationReceivablesEvaluationServiceName:
              type: string
  parameters:
    AccountsReceivableID:
      name: accountsreceivableId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    ResolutionID:
      name: resolutionId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    CustomerNegotiationID:
      name: customernegotiationId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    AccountsReceivableOutcomeID:
      name: accountsreceivableoutcomeId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    PaymentID:
      name: paymentId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    ReceivablesEvaluationID:
      name: receivablesevaluationId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
  requestBodies:
    ControlAccountsReceivableProcedureRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ControlAccountsReceivableProcedureRequest'
    ExchangeAccountsReceivableProcedureRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExchangeAccountsReceivableProcedureRequest'
    ExecuteAccountsReceivableProcedureRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExecuteAccountsReceivableProcedureRequest'
    InitiateAccountsReceivableProcedureRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateAccountsReceivableProcedureRequest'
    RequestAccountsReceivableProcedureRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestAccountsReceivableProcedureRequest'
    UpdateAccountsReceivableProcedureRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateAccountsReceivableProcedureRequest'
    CustomerNegotiation:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerNegotiation'
    ExchangeReceivablesEvaluationRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExchangeReceivablesEvaluationRequest'
    Payment:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Payment'
    InitiateReceivablesEvaluationRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateReceivablesEvaluationRequest'
    Resolution:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Resolution'
    UpdateReceivablesEvaluationRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateReceivablesEvaluationRequest'
  responses:
    HTTPError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    BadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequestsError:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
...
