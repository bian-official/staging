openapi: 3.0.1
info:
  title: Collections
  description: Handles the liquidation of assets to offset the losses for problem accounts
  version: 10.0.0
servers:
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/B154/Collections/10.0.0
paths:
  /Collections/{collectionsId}/Control:
    put:
      tags:
      - CR - CollateralAssetLiquidationProcedure
      summary: CoCR Control the processing of Collateral Asset Liquidation Procedure
      description: CoCR Control the processing of Collateral Asset Liquidation Procedure
      operationId: Control
      parameters:
      - $ref: '#/components/parameters/CollectionsID'
      requestBody:
        $ref: '#/components/requestBodies/CollateralAssetLiquidationProcedure'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollateralAssetLiquidationProcedure'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Collections/{collectionsId}/Exchange:
    put:
      tags:
      - CR - CollateralAssetLiquidationProcedure
      summary: EcCR Accept, verify, etc. aspects of Collateral Asset Liquidation Procedure processing
      description: EcCR Accept, verify, etc. aspects of Collateral Asset Liquidation Procedure processing
      operationId: Exchange
      parameters:
      - $ref: '#/components/parameters/CollectionsID'
      requestBody:
        $ref: '#/components/requestBodies/CollateralAssetLiquidationProcedure'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollateralAssetLiquidationProcedure'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Collections/{collectionsId}/Execute:
    put:
      tags:
      - CR - CollateralAssetLiquidationProcedure
      summary: ExCR Execute an available automated action for Collateral Asset Liquidation Procedure
      description: ExCR Execute an available automated action for Collateral Asset Liquidation Procedure
      operationId: Execute
      parameters:
      - $ref: '#/components/parameters/CollectionsID'
      requestBody:
        $ref: '#/components/requestBodies/CollateralAssetLiquidationProcedure'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollateralAssetLiquidationProcedure'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Collections/Initiate:
    post:
      tags:
      - CR - CollateralAssetLiquidationProcedure
      summary: InCR Instantiate a new Collateral Asset Liquidation Procedure
      description: InCR Instantiate a new Collateral Asset Liquidation Procedure
      operationId: Initiate
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/CollateralAssetLiquidationProcedure'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollateralAssetLiquidationProcedure'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Collections/{collectionsId}/Retrieve:
    get:
      tags:
      - CR - CollateralAssetLiquidationProcedure
      summary: ReCR Retrieve details about any aspect of Collateral Asset Liquidation Procedure
      description: ReCR Retrieve details about any aspect of Collateral Asset Liquidation Procedure
      operationId: Retrieve
      parameters:
      - $ref: '#/components/parameters/CollectionsID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollateralAssetLiquidationProcedure'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Collections/{collectionsId}/Request:
    put:
      tags:
      - CR - CollateralAssetLiquidationProcedure
      summary: RqCR Request manual intervention or a decision with respect to Collateral Asset Liquidation Procedure
      description: RqCR Request manual intervention or a decision with respect to Collateral Asset Liquidation Procedure
      operationId: Request
      parameters:
      - $ref: '#/components/parameters/CollectionsID'
      requestBody:
        $ref: '#/components/requestBodies/CollateralAssetLiquidationProcedure'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollateralAssetLiquidationProcedure'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Collections/{collectionsId}/Update:
    put:
      tags:
      - CR - CollateralAssetLiquidationProcedure
      summary: UpCR Update details relating to Collateral Asset Liquidation Procedure
      description: UpCR Update details relating to Collateral Asset Liquidation Procedure
      operationId: Update
      parameters:
      - $ref: '#/components/parameters/CollectionsID'
      requestBody:
        $ref: '#/components/requestBodies/CollateralAssetLiquidationProcedure'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollateralAssetLiquidationProcedure'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Collections/{collectionsId}/CollateralLiquidation/{collateralliquidationId}/Exchange:
    put:
      tags:
      - BQ - CollateralLiquidation
      summary: EcBQ Accept, verify, etc. aspects of Collateral Liquidation processing
      description: EcBQ Accept, verify, etc. aspects of Collateral Liquidation processing
      operationId: ExchangeCollateralLiquidation
      parameters:
      - $ref: '#/components/parameters/CollectionsID'
      - $ref: '#/components/parameters/CollateralLiquidationID'
      requestBody:
        $ref: '#/components/requestBodies/CollateralLiquidation'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollateralLiquidation'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Collections/{collectionsId}/CollateralValuation/{collateralvaluationId}/Exchange:
    put:
      tags:
      - BQ - CollateralValuation
      summary: EcBQ Accept, verify, etc. aspects of Collateral Valuation processing
      description: EcBQ Accept, verify, etc. aspects of Collateral Valuation processing
      operationId: ExchangeCollateralValuation
      parameters:
      - $ref: '#/components/parameters/CollectionsID'
      - $ref: '#/components/parameters/CollateralValuationID'
      requestBody:
        $ref: '#/components/requestBodies/CollateralValuation'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollateralValuation'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Collections/{collectionsId}/DebtFactoring/{debtfactoringId}/Exchange:
    put:
      tags:
      - BQ - DebtFactoring
      summary: EcBQ Accept, verify, etc. aspects of Debt Factoring processing
      description: EcBQ Accept, verify, etc. aspects of Debt Factoring processing
      operationId: ExchangeDebtFactoring
      parameters:
      - $ref: '#/components/parameters/CollectionsID'
      - $ref: '#/components/parameters/DebtFactoringID'
      requestBody:
        $ref: '#/components/requestBodies/DebtFactoring'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DebtFactoring'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Collections/{collectionsId}/CollateralLiquidation/Initiate:
    post:
      tags:
      - BQ - CollateralLiquidation
      summary: InBQ Instantiate a new Collateral Liquidation
      description: InBQ Instantiate a new Collateral Liquidation
      operationId: InitiateCollateralLiquidation
      parameters:
      - $ref: '#/components/parameters/CollectionsID'
      requestBody:
        $ref: '#/components/requestBodies/CollateralLiquidation'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollateralLiquidation'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Collections/{collectionsId}/CollateralValuation/Initiate:
    post:
      tags:
      - BQ - CollateralValuation
      summary: InBQ Instantiate a new Collateral Valuation
      description: InBQ Instantiate a new Collateral Valuation
      operationId: InitiateCollateralValuation
      parameters:
      - $ref: '#/components/parameters/CollectionsID'
      requestBody:
        $ref: '#/components/requestBodies/CollateralValuation'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollateralValuation'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Collections/{collectionsId}/CollectionsAssessment/Initiate:
    post:
      tags:
      - BQ - CollectionsAssessment
      summary: InBQ Instantiate a new Collections Assessment
      description: InBQ Instantiate a new Collections Assessment
      operationId: InitiateCollectionsAssessment
      parameters:
      - $ref: '#/components/parameters/CollectionsID'
      requestBody:
        $ref: '#/components/requestBodies/CollectionsAssessment'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionsAssessment'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Collections/{collectionsId}/DebtFactoring/Initiate:
    post:
      tags:
      - BQ - DebtFactoring
      summary: InBQ Instantiate a new Debt Factoring
      description: InBQ Instantiate a new Debt Factoring
      operationId: InitiateDebtFactoring
      parameters:
      - $ref: '#/components/parameters/CollectionsID'
      requestBody:
        $ref: '#/components/requestBodies/DebtFactoring'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DebtFactoring'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Collections/{collectionsId}/CollateralLiquidation/{collateralliquidationId}/Retrieve:
    get:
      tags:
      - BQ - CollateralLiquidation
      summary: ReBQ Retrieve details about any aspect of Collateral Liquidation
      description: ReBQ Retrieve details about any aspect of Collateral Liquidation
      operationId: RetrieveCollateralLiquidation
      parameters:
      - $ref: '#/components/parameters/CollectionsID'
      - $ref: '#/components/parameters/CollateralLiquidationID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollateralLiquidation'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Collections/{collectionsId}/CollateralValuation/{collateralvaluationId}/Retrieve:
    get:
      tags:
      - BQ - CollateralValuation
      summary: ReBQ Retrieve details about any aspect of Collateral Valuation
      description: ReBQ Retrieve details about any aspect of Collateral Valuation
      operationId: RetrieveCollateralValuation
      parameters:
      - $ref: '#/components/parameters/CollectionsID'
      - $ref: '#/components/parameters/CollateralValuationID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollateralValuation'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Collections/{collectionsId}/CollectionsAccountUpdate/{collectionsaccountupdateId}/Retrieve:
    get:
      tags:
      - BQ - CollectionsAccountUpdate
      summary: ReBQ Retrieve details about any aspect of Collections Account Update
      description: ReBQ Retrieve details about any aspect of Collections Account Update
      operationId: RetrieveCollectionsAccountUpdate
      parameters:
      - $ref: '#/components/parameters/CollectionsID'
      - $ref: '#/components/parameters/CollectionsAccountUpdateID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionsAccountUpdate'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Collections/{collectionsId}/CollectionsAssessment/{collectionsassessmentId}/Retrieve:
    get:
      tags:
      - BQ - CollectionsAssessment
      summary: ReBQ Retrieve details about any aspect of Collections Assessment
      description: ReBQ Retrieve details about any aspect of Collections Assessment
      operationId: RetrieveCollectionsAssessment
      parameters:
      - $ref: '#/components/parameters/CollectionsID'
      - $ref: '#/components/parameters/CollectionsAssessmentID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionsAssessment'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Collections/{collectionsId}/DebtFactoring/{debtfactoringId}/Retrieve:
    get:
      tags:
      - BQ - DebtFactoring
      summary: ReBQ Retrieve details about any aspect of Debt Factoring
      description: ReBQ Retrieve details about any aspect of Debt Factoring
      operationId: RetrieveDebtFactoring
      parameters:
      - $ref: '#/components/parameters/CollectionsID'
      - $ref: '#/components/parameters/DebtFactoringID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DebtFactoring'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Collections/{collectionsId}/CollateralLiquidation/{collateralliquidationId}/Update:
    put:
      tags:
      - BQ - CollateralLiquidation
      summary: UpBQ Update details relating to Collateral Liquidation
      description: UpBQ Update details relating to Collateral Liquidation
      operationId: UpdateCollateralLiquidation
      parameters:
      - $ref: '#/components/parameters/CollectionsID'
      - $ref: '#/components/parameters/CollateralLiquidationID'
      requestBody:
        $ref: '#/components/requestBodies/CollateralLiquidation'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollateralLiquidation'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Collections/{collectionsId}/CollateralValuation/{collateralvaluationId}/Update:
    put:
      tags:
      - BQ - CollateralValuation
      summary: UpBQ Update details relating to Collateral Valuation
      description: UpBQ Update details relating to Collateral Valuation
      operationId: UpdateCollateralValuation
      parameters:
      - $ref: '#/components/parameters/CollectionsID'
      - $ref: '#/components/parameters/CollateralValuationID'
      requestBody:
        $ref: '#/components/requestBodies/CollateralValuation'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollateralValuation'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Collections/{collectionsId}/CollectionsAccountUpdate/{collectionsaccountupdateId}/Update:
    put:
      tags:
      - BQ - CollectionsAccountUpdate
      summary: UpBQ Update details relating to Collections Account Update
      description: UpBQ Update details relating to Collections Account Update
      operationId: UpdateCollectionsAccountUpdate
      parameters:
      - $ref: '#/components/parameters/CollectionsID'
      - $ref: '#/components/parameters/CollectionsAccountUpdateID'
      requestBody:
        $ref: '#/components/requestBodies/CollectionsAccountUpdate'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionsAccountUpdate'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Collections/{collectionsId}/CollectionsAssessment/{collectionsassessmentId}/Update:
    put:
      tags:
      - BQ - CollectionsAssessment
      summary: UpBQ Update details relating to Collections Assessment
      description: UpBQ Update details relating to Collections Assessment
      operationId: UpdateCollectionsAssessment
      parameters:
      - $ref: '#/components/parameters/CollectionsID'
      - $ref: '#/components/parameters/CollectionsAssessmentID'
      requestBody:
        $ref: '#/components/requestBodies/CollectionsAssessment'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionsAssessment'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Collections/{collectionsId}/DebtFactoring/{debtfactoringId}/Update:
    put:
      tags:
      - BQ - DebtFactoring
      summary: UpBQ Update details relating to Debt Factoring
      description: UpBQ Update details relating to Debt Factoring
      operationId: UpdateDebtFactoring
      parameters:
      - $ref: '#/components/parameters/CollectionsID'
      - $ref: '#/components/parameters/DebtFactoringID'
      requestBody:
        $ref: '#/components/requestBodies/DebtFactoring'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DebtFactoring'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    CollateralAssetLiquidationProcedure:
      type: object
      properties:
        CollateralAssetLiquidationProcedureParameterType:
          type: string
        CollateralAssetLiquidationProcedureSelectedOption:
          type: string
        CollateralAssetLiquidationProcedureRequest:
          type: string
        CollateralAssetLiquidationProcedureSchedule:
          type: string
        CollateralAssetLiquidationProcedureStatus:
          type: string
        CollateralAssetLiquidationProcedureReference:
          type: object
        CollateralAssetLiquidationProcedureBusinessUnitReference:
          type: object
        CollateralAssetLiquidationProcedureServiceProviderReference:
          type: object
        CollateralAssetLiquidationProcedureFinancialFacilityReference:
          type: object
        CollateralAssetLiquidationProcedureEmployeeReference:
          type: object
        CollateralAssetLiquidationProcedureCustomerReference:
          type: object
        CollateralAssetLiquidationProcedureType:
          type: string
        CollateralAssetLiquidationProcedureServiceProviderSchedule:
          type: string
        CollateralAssetLiquidationProcedureServiceType:
          type: string
        CollateralAssetLiquidationProcedureProductandServiceType:
          type: string
        CollateralAssetLiquidationProcedureProductandServiceInstance:
          type: string
        CollateralAssetLiquidationProcedureTransactionType:
          type: string
        CollateralAssetLiquidationProcedureTransaction:
          type: string
        CollateralAssetLiquidationProcedureFinancialTransactionArrangement:
          type: string
        CollateralAssetLiquidationProcedureCustomerAgreementReference:
          type: object
    CollateralValuation:
      type: object
      properties:
        CollateralValuationPreconditions:
          type: string
        CollateralValuationBusinessUnit/EmployeeReference:
          type: object
        CollateralValuationWorkSchedule:
          type: string
        CollateralValuation:
          type: object
        CollateralValuationPostconditions:
          type: string
        CollateralValuationCollateralValuationServiceType:
          type: string
        CollateralValuationCollateralValuationServiceDescription:
          type: string
        CollateralValuationCollateralValuationServiceInputsandOuputs:
          type: string
        CollateralValuationCollateralValuationServiceWorkProduct:
          type: string
        CollateralValuationCollateralValuationServiceName:
          type: string
    CollectionsAssessment:
      type: object
      properties:
        CollectionsAssessmentPreconditions:
          type: string
        CollectionsAssessmentBusinessUnit/EmployeeReference:
          type: object
        CollectionsAssessmentWorkSchedule:
          type: string
        CollectionsAssessment:
          type: object
        CollectionsAssessmentPostconditions:
          type: string
        CollectionsAssessmentCollectionsAssessmentServiceType:
          type: string
        CollectionsAssessmentCollectionsAssessmentServiceDescription:
          type: string
        CollectionsAssessmentCollectionsAssessmentServiceInputsandOuputs:
          type: string
        CollectionsAssessmentCollectionsAssessmentServiceWorkProduct:
          type: string
        CollectionsAssessmentCollectionsAssessmentServiceName:
          type: string
    DebtFactoring:
      type: object
      properties:
        DebtFactoringPreconditions:
          type: string
        DebtFactoringBusinessUnit/EmployeeReference:
          type: object
        DebtFactoringWorkSchedule:
          type: string
        Factoring:
          type: object
        DebtFactoringPostconditions:
          type: string
        DebtFactoringFactoringServiceType:
          type: string
        DebtFactoringFactoringServiceDescription:
          type: string
        DebtFactoringFactoringServiceInputsandOuputs:
          type: string
        DebtFactoringFactoringServiceWorkProduct:
          type: string
        DebtFactoringFactoringServiceName:
          type: string
    CollectionsOutcome:
      type: object
      properties:
        CollectionsWorkProduct:
          type: string
        CollectionsProcedure:
          type: string
    CollateralLiquidation:
      type: object
      properties:
        CollateralLiquidationPreconditions:
          type: string
        CollateralLiquidationBusinessUnit/EmployeeReference:
          type: object
        CollateralLiquidationWorkSchedule:
          type: string
        CollateralLiquidation:
          type: object
        CollateralLiquidationPostconditions:
          type: string
        CollateralLiquidationCollateralLiquidationServiceType:
          type: string
        CollateralLiquidationCollateralLiquidationServiceDescription:
          type: string
        CollateralLiquidationCollateralLiquidationServiceInputsandOuputs:
          type: string
        CollateralLiquidationCollateralLiquidationServiceWorkProduct:
          type: string
        CollateralLiquidationCollateralLiquidationServiceName:
          type: string
    CollectionsAccountUpdate:
      type: object
      properties:
        CollectionsAccountUpdatePreconditions:
          type: string
        CollectionsAccountUpdateBusinessUnit/EmployeeReference:
          type: object
        CollectionsAccountUpdateWorkSchedule:
          type: string
        CollectionsAccountUpdate:
          type: object
        CollectionsAccountUpdatePostconditions:
          type: string
        CollectionsAccountUpdateCollectionsAccountUpdateServiceType:
          type: string
        CollectionsAccountUpdateCollectionsAccountUpdateServiceDescription:
          type: string
        CollectionsAccountUpdateCollectionsAccountUpdateServiceInputsandOuputs:
          type: string
        CollectionsAccountUpdateCollectionsAccountUpdateServiceWorkProduct:
          type: string
        CollectionsAccountUpdateCollectionsAccountUpdateServiceName:
          type: string
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
        status:
          type: string
        message:
          type: string
  parameters:
    CollectionsID:
      name: collectionsId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    CollateralValuationID:
      name: collateralvaluationId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    CollectionsAssessmentID:
      name: collectionsassessmentId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    DebtFactoringID:
      name: debtfactoringId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    CollectionsOutcomeID:
      name: collectionsoutcomeId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    CollateralLiquidationID:
      name: collateralliquidationId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    CollectionsAccountUpdateID:
      name: collectionsaccountupdateId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
  requestBodies:
    CollateralAssetLiquidationProcedure:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CollateralAssetLiquidationProcedure'
    CollateralLiquidation:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CollateralLiquidation'
    CollateralValuation:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CollateralValuation'
    DebtFactoring:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DebtFactoring'
    CollectionsAssessment:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CollectionsAssessment'
    CollectionsAccountUpdate:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CollectionsAccountUpdate'
  responses:
    HTTPError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    BadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequestsError:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
...
