openapi: 3.0.1
info:
  title: Market Research
  description: This service domain handles the capture of market research from multiple external sources. This can include live feeds, analysis and reports in any form. The information is classified/catalogued and stored for retrieval.
  version: 10.0.0
servers:
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/B154/MarketResearch/10.0.0
paths:
  /MarketResearch/Register:
    post:
      tags:
      - CR - GeneralMarketResearchDirectoryEntry
      summary: InCR Register or establish a market research viewpoint
      description: InCR Register or establish a market research viewpoint
      operationId: Register
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/GeneralMarketResearchDirectoryEntry'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMarketResearchDirectoryEntry'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /MarketResearch/{marketresearchId}/Update:
    put:
      tags:
      - CR - GeneralMarketResearchDirectoryEntry
      summary: UpCR Update the details or make-up of a market research viewpoint
      description: UpCR Update the details or make-up of a market research viewpoint
      operationId: Update
      parameters:
      - $ref: '#/components/parameters/MarketResearchID'
      requestBody:
        $ref: '#/components/requestBodies/GeneralMarketResearchDirectoryEntry'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMarketResearchDirectoryEntry'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /MarketResearch/{marketresearchId}/Execute:
    put:
      tags:
      - CR - GeneralMarketResearchDirectoryEntry
      summary: ExCR Automatically extract details of a maintained market research viewpoint
      description: ExCR Automatically extract details of a maintained market research viewpoint
      operationId: Execute
      parameters:
      - $ref: '#/components/parameters/MarketResearchID'
      requestBody:
        $ref: '#/components/requestBodies/GeneralMarketResearchDirectoryEntry'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMarketResearchDirectoryEntry'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /MarketResearch/{marketresearchId}/Request:
    put:
      tags:
      - CR - GeneralMarketResearchDirectoryEntry
      summary: RqCR Request a viewpoint is refreshed or adjusted in some manner
      description: RqCR Request a viewpoint is refreshed or adjusted in some manner
      operationId: Request
      parameters:
      - $ref: '#/components/parameters/MarketResearchID'
      requestBody:
        $ref: '#/components/requestBodies/GeneralMarketResearchDirectoryEntry'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMarketResearchDirectoryEntry'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /MarketResearch/{marketresearchId}/Retrieve:
    get:
      tags:
      - CR - GeneralMarketResearchDirectoryEntry
      summary: ReCR Retrieve details about and the content of a maintained market research viewpoint
      description: ReCR Retrieve details about and the content of a maintained market research viewpoint
      operationId: Retrieve
      parameters:
      - $ref: '#/components/parameters/MarketResearchID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMarketResearchDirectoryEntry'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    GeneralMarketResearchDirectoryEntry:
      type: object
      properties:
        GeneralMarketResearchViewpointType:
          type: string
        GeneralMarketResearchViewpointDescription:
          type: string
        ReferencedMarketResearchRecord:
          type: string
        MarketResearchReportTypeReference:
          type: string
        MarketResearchReportTypeDefinition:
          type: string
        MarketResearchReportVersionOrPeriod:
          type: string
        MarketResearchReport:
          type: string
        GeneralMarketResearchViewpointUsage:
          type: string
        MarketResearchReportRequest:
          type: string
        EmployeeOrBusinessUnitReference:
          type: object
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
        status:
          type: string
        message:
          type: string
  parameters:
    MarketResearchID:
      name: marketresearchId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
  requestBodies:
    GeneralMarketResearchDirectoryEntry:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GeneralMarketResearchDirectoryEntry'
  responses:
    HTTPError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    BadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequestsError:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
...
