openapi: 3.0.1
info:
  title: Investment Portfolio Planning
  description: Agree the policies and required make-up of an investment portfolio and ensure all required bank and regulatory terms and conditions are addressed
  version: 10.0.0
servers:
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/B154/InvestmentPortfolioPlanning/10.0.0
paths:
  /InvestmentPortfolioPlanning/Evaluate:
    post:
      tags:
      - CR - ManagedInvestmentPortfolioAgreement
      summary: EvCR Establish a managed investment portfolio agreement
      description: EvCR Establish a managed investment portfolio agreement
      operationId: Evaluate
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/ManagedInvestmentPortfolioAgreement'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedInvestmentPortfolioAgreement'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /InvestmentPortfolioPlanning/{investmentportfolioplanningId}/Update:
    put:
      tags:
      - CR - ManagedInvestmentPortfolioAgreement
      summary: UpCR Update details of an active managed investment portfolio agreement
      description: UpCR Update details of an active managed investment portfolio agreement
      operationId: Update
      parameters:
      - $ref: '#/components/parameters/InvestmentPortfolioPlanningID'
      requestBody:
        $ref: '#/components/requestBodies/ManagedInvestmentPortfolioAgreement'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedInvestmentPortfolioAgreement'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /InvestmentPortfolioPlanning/{investmentportfolioplanningId}/Request:
    put:
      tags:
      - CR - ManagedInvestmentPortfolioAgreement
      summary: RqCR Request review that proposed activity is compatible with the agreement
      description: RqCR Request review that proposed activity is compatible with the agreement
      operationId: Request
      parameters:
      - $ref: '#/components/parameters/InvestmentPortfolioPlanningID'
      requestBody:
        $ref: '#/components/requestBodies/ManagedInvestmentPortfolioAgreement'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedInvestmentPortfolioAgreement'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /InvestmentPortfolioPlanning/{investmentportfolioplanningId}/Retrieve:
    get:
      tags:
      - CR - ManagedInvestmentPortfolioAgreement
      summary: ReCR Retrieve details about a managed investment portfolio agreement
      description: ReCR Retrieve details about a managed investment portfolio agreement
      operationId: Retrieve
      parameters:
      - $ref: '#/components/parameters/InvestmentPortfolioPlanningID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedInvestmentPortfolioAgreement'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /InvestmentPortfolioPlanning/{investmentportfolioplanningId}/InvestmentTerms/Evaluate:
    post:
      tags:
      - BQ - InvestmentTerms
      summary: EvBQ Establish the specific terms/conditions making up the investment agreement
      description: EvBQ Establish the specific terms/conditions making up the investment agreement
      operationId: EvaluateInvestmentTerms
      parameters:
      - $ref: '#/components/parameters/InvestmentPortfolioPlanningID'
      requestBody:
        $ref: '#/components/requestBodies/InvestmentTerms'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvestmentTerms'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /InvestmentPortfolioPlanning/{investmentportfolioplanningId}/InvestmentTerms/{investmenttermsId}/Update:
    put:
      tags:
      - BQ - InvestmentTerms
      summary: UpBQ Update the terms/conditions for an investment agreement
      description: UpBQ Update the terms/conditions for an investment agreement
      operationId: UpdateInvestmentTerms
      parameters:
      - $ref: '#/components/parameters/InvestmentPortfolioPlanningID'
      - $ref: '#/components/parameters/InvestmentTermsID'
      requestBody:
        $ref: '#/components/requestBodies/InvestmentTerms'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvestmentTerms'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /InvestmentPortfolioPlanning/{investmentportfolioplanningId}/InvestmentTerms/{investmenttermsId}/Request:
    put:
      tags:
      - BQ - InvestmentTerms
      summary: RqBQ Request check of a proposed activity is compatible with a specific term of the agreement
      description: RqBQ Request check of a proposed activity is compatible with a specific term of the agreement
      operationId: RequestInvestmentTerms
      parameters:
      - $ref: '#/components/parameters/InvestmentPortfolioPlanningID'
      - $ref: '#/components/parameters/InvestmentTermsID'
      requestBody:
        $ref: '#/components/requestBodies/InvestmentTerms'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvestmentTerms'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /InvestmentPortfolioPlanning/{investmentportfolioplanningId}/InvestmentTerms/{investmenttermsId}/Retrieve:
    get:
      tags:
      - BQ - InvestmentTerms
      summary: ReBQ Retrieve details about the specific terms of an agreement
      description: ReBQ Retrieve details about the specific terms of an agreement
      operationId: RetrieveInvestmentTerms
      parameters:
      - $ref: '#/components/parameters/InvestmentPortfolioPlanningID'
      - $ref: '#/components/parameters/InvestmentTermsID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvestmentTerms'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    ManagedInvestmentPortfolioAgreement:
      type: object
      properties:
        CustomerReference:
          type: object
        LegalEntityReference:
          type: object
        InvestmentPortfolioInstanceReference:
          type: object
        InvestmentPortfolioAgreementType:
          type: string
        InvestmentPortfolioAgreementJurisdiction:
          type: string
        InvestmentPortfolioAgreementValidFromOrToDate:
          type: string
        InvestmentPortfolioAgreementSignatoriesOrResponsibleParties:
          type: string
        DocumentDirectoryEntryInstanceReference:
          type: object
        CustomerAgreementInstanceReference:
          type: object
        PartyRelationshipProcedureInstanceReference:
          type: object
        ManagedInvestmentPortfolioAgreement:
          type: string
    InvestmentTerms:
      type: object
      properties:
        InvestmentPortfolioAgreementTermType:
          type: string
        InvestmentPortfolioAgreementTermDescription:
          type: string
        InvestmentPortfolioAgreementTermConstraints:
          type: string
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
        status:
          type: string
        message:
          type: string
  parameters:
    InvestmentPortfolioPlanningID:
      name: investmentportfolioplanningId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    InvestmentTermsID:
      name: investmenttermsId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
  requestBodies:
    ManagedInvestmentPortfolioAgreement:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ManagedInvestmentPortfolioAgreement'
    InvestmentTerms:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvestmentTerms'
  responses:
    HTTPError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    BadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequestsError:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
...
