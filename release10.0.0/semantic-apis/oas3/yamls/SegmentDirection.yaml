openapi: 3.0.1
info:
  title: Segment Direction
  description: Define market segments and develop and assess performance against the segment plan's performance goals
  version: 10.0.0
servers:
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/B154/SegmentDirection/10.0.0
paths:
  /SegmentDirection/Create:
    post:
      tags:
      - CR - SegmentStrategy
      summary: CrCR Create a segment strategy for the associated division
      description: CrCR Create a segment strategy for the associated division
      operationId: Create
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/SegmentStrategy'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SegmentStrategy'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SegmentDirection/{segmentdirectionId}/Update:
    put:
      tags:
      - CR - SegmentStrategy
      summary: UpCR Update details of the segment strategy
      description: UpCR Update details of the segment strategy
      operationId: Update
      parameters:
      - $ref: '#/components/parameters/SegmentDirectionID'
      requestBody:
        $ref: '#/components/requestBodies/SegmentStrategy'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SegmentStrategy'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SegmentDirection/{segmentdirectionId}/Capture:
    put:
      tags:
      - CR - SegmentStrategy
      summary: CaCR Capture activity details related to implementation of the strategy
      description: CaCR Capture activity details related to implementation of the strategy
      operationId: Capture
      parameters:
      - $ref: '#/components/parameters/SegmentDirectionID'
      requestBody:
        $ref: '#/components/requestBodies/SegmentStrategy'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SegmentStrategy'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SegmentDirection/{segmentdirectionId}/Request:
    put:
      tags:
      - CR - SegmentStrategy
      summary: RqCR Request manual intervention
      description: RqCR Request manual intervention
      operationId: Request
      parameters:
      - $ref: '#/components/parameters/SegmentDirectionID'
      requestBody:
        $ref: '#/components/requestBodies/SegmentStrategy'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SegmentStrategy'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SegmentDirection/{segmentdirectionId}/Retrieve:
    get:
      tags:
      - CR - SegmentStrategy
      summary: ReCR Retrieve details relating to the strategy and any supporting activities
      description: ReCR Retrieve details relating to the strategy and any supporting activities
      operationId: Retrieve
      parameters:
      - $ref: '#/components/parameters/SegmentDirectionID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SegmentStrategy'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SegmentDirection/{segmentdirectionId}/Initiative/Create:
    post:
      tags:
      - BQ - Initiative
      summary: CrBQ Create/instigate a supporting segment initiative
      description: CrBQ Create/instigate a supporting segment initiative
      operationId: CreateInitiative
      parameters:
      - $ref: '#/components/parameters/SegmentDirectionID'
      requestBody:
        $ref: '#/components/requestBodies/CreateInitiativeRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateInitiativeResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SegmentDirection/{segmentdirectionId}/Initiative/{initiativeId}/Update:
    put:
      tags:
      - BQ - Initiative
      summary: UpBQ Update details for a segment initiative
      description: UpBQ Update details for a segment initiative
      operationId: UpdateInitiative
      parameters:
      - $ref: '#/components/parameters/SegmentDirectionID'
      - $ref: '#/components/parameters/InitiativeID'
      requestBody:
        $ref: '#/components/requestBodies/Initiative'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Initiative'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SegmentDirection/{segmentdirectionId}/Initiative/{initiativeId}/Capture:
    put:
      tags:
      - BQ - Initiative
      summary: CaBQ Capture activity details for a segment initiative
      description: CaBQ Capture activity details for a segment initiative
      operationId: CaptureInitiative
      parameters:
      - $ref: '#/components/parameters/SegmentDirectionID'
      - $ref: '#/components/parameters/InitiativeID'
      requestBody:
        $ref: '#/components/requestBodies/Initiative'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Initiative'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SegmentDirection/{segmentdirectionId}/Initiative/{initiativeId}/Request:
    put:
      tags:
      - BQ - Initiative
      summary: RqBQ Request manual intervention into a segment initiative
      description: RqBQ Request manual intervention into a segment initiative
      operationId: RequestInitiative
      parameters:
      - $ref: '#/components/parameters/SegmentDirectionID'
      - $ref: '#/components/parameters/InitiativeID'
      requestBody:
        $ref: '#/components/requestBodies/Initiative'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Initiative'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SegmentDirection/{segmentdirectionId}/Initiative/{initiativeId}/Retrieve:
    get:
      tags:
      - BQ - Initiative
      summary: ReBQ Retrieve details about a segment initiative
      description: ReBQ Retrieve details about a segment initiative
      operationId: RetrieveInitiative
      parameters:
      - $ref: '#/components/parameters/SegmentDirectionID'
      - $ref: '#/components/parameters/InitiativeID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Initiative'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    SegmentStrategy:
      type: object
      properties:
        SegmentStrategyPeriod:
          type: string
        SegmentStrategyPoliciesAndGuidelines:
          type: string
        SegmentStrategyOrganization:
          type: string
        SegmentStrategyBudget:
          type: string
        SegmentStrategySchedule:
          type: string
        SegmentGoalRecord:
          type: string
        SegmentGoalType:
          type: string
        SegmentGoalDefinition:
          type: string
        SegmentGoalOrganization:
          type: string
        SegmentGoalResult:
          type: string
    Initiative:
      type: object
      properties:
        SegmentInitiativeBusinessUnitReference:
          type: object
        SegmentInitiativeType:
          type: string
        SegmentInitiativeDescription:
          type: string
        SegmentInitiativeSchedule:
          type: string
        SegmentInitiativeWorkProducts:
          type: string
        SegmentInitiativeResult:
          type: string
        DocumentDirectoryEntryInstanceReference:
          type: object
        CorrespondenceInstanceReference:
          type: object
        DateType:
          type: string
        Date:
          type: string
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
        status:
          type: string
        message:
          type: string
    CreateInitiativeRequest:
      type: object
      properties:
        SegmentStrategy:
          type: object
          properties:
            SegmentStrategyPeriod:
              type: string
            SegmentStrategyPoliciesAndGuidelines:
              type: string
            SegmentStrategyOrganization:
              type: string
            SegmentStrategyBudget:
              type: string
            SegmentStrategySchedule:
              type: string
            SegmentGoalRecord:
              type: string
            SegmentGoalType:
              type: string
            SegmentGoalDefinition:
              type: string
            SegmentGoalOrganization:
              type: string
            SegmentGoalResult:
              type: string
        Initiative:
          type: object
          properties:
            SegmentInitiativeBusinessUnitReference:
              type: object
            SegmentInitiativeType:
              type: string
            SegmentInitiativeDescription:
              type: string
            SegmentInitiativeSchedule:
              type: string
            DateType:
              type: string
    CreateInitiativeResponse:
      type: object
      properties:
        SegmentStrategy:
          type: object
          properties:
            SegmentStrategyPeriod:
              type: string
            SegmentStrategyPoliciesAndGuidelines:
              type: string
            SegmentStrategyOrganization:
              type: string
            SegmentStrategyBudget:
              type: string
            SegmentStrategySchedule:
              type: string
            SegmentGoalRecord:
              type: string
            SegmentGoalType:
              type: string
            SegmentGoalDefinition:
              type: string
            SegmentGoalOrganization:
              type: string
            SegmentGoalResult:
              type: string
        Initiative:
          type: object
          properties:
            SegmentInitiativeBusinessUnitReference:
              type: object
            SegmentInitiativeType:
              type: string
            SegmentInitiativeDescription:
              type: string
            SegmentInitiativeSchedule:
              type: string
            SegmentInitiativeWorkProducts:
              type: string
            SegmentInitiativeResult:
              type: string
            DocumentDirectoryEntryInstanceReference:
              type: object
            CorrespondenceInstanceReference:
              type: object
            DateType:
              type: string
  parameters:
    SegmentDirectionID:
      name: segmentdirectionId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    InitiativeID:
      name: initiativeId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
  requestBodies:
    SegmentStrategy:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SegmentStrategy'
    CreateInitiativeRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateInitiativeRequest'
    Initiative:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Initiative'
  responses:
    HTTPError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    BadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequestsError:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
...
