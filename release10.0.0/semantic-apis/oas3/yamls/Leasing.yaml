openapi: 3.0.1
info:
  title: Leasing
  description: The leasing products enables customers to finance equipment purchases using the leased item as collateral when necessary
  version: 10.0.0
servers:
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/B154/Leasing/10.0.0
paths:
  /Leasing/{leasingId}/Control:
    put:
      tags:
      - CR - LeasingFacility
      summary: CoCR Control the processing of Leasing Facility
      description: CoCR Control the processing of Leasing Facility
      operationId: Control
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      requestBody:
        $ref: '#/components/requestBodies/LeasingFacility'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeasingFacility'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Exchange:
    put:
      tags:
      - CR - LeasingFacility
      summary: EcCR Accept, verify, etc. aspects of Leasing Facility processing
      description: EcCR Accept, verify, etc. aspects of Leasing Facility processing
      operationId: Exchange
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      requestBody:
        $ref: '#/components/requestBodies/LeasingFacility'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeasingFacility'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Execute:
    put:
      tags:
      - CR - LeasingFacility
      summary: ExCR Execute an available automated action for Leasing Facility
      description: ExCR Execute an available automated action for Leasing Facility
      operationId: Execute
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      requestBody:
        $ref: '#/components/requestBodies/LeasingFacility'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeasingFacility'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/Initiate:
    post:
      tags:
      - CR - LeasingFacility
      summary: InCR Instantiate a new Leasing Facility
      description: InCR Instantiate a new Leasing Facility
      operationId: Initiate
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/LeasingFacility'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeasingFacility'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Retrieve:
    get:
      tags:
      - CR - LeasingFacility
      summary: ReCR Retrieve details about any aspect of Leasing Facility
      description: ReCR Retrieve details about any aspect of Leasing Facility
      operationId: Retrieve
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeasingFacility'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Request:
    put:
      tags:
      - CR - LeasingFacility
      summary: RqCR Request manual intervention or a decision with respect to Leasing Facility
      description: RqCR Request manual intervention or a decision with respect to Leasing Facility
      operationId: Request
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      requestBody:
        $ref: '#/components/requestBodies/LeasingFacility'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeasingFacility'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Update:
    put:
      tags:
      - CR - LeasingFacility
      summary: UpCR Update details relating to Leasing Facility
      description: UpCR Update details relating to Leasing Facility
      operationId: Update
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      requestBody:
        $ref: '#/components/requestBodies/LeasingFacility'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeasingFacility'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Fees/{feesId}/Exchange:
    put:
      tags:
      - BQ - Fees
      summary: EcBQ Accept, verify, etc. aspects of Fees processing
      description: EcBQ Accept, verify, etc. aspects of Fees processing
      operationId: ExchangeFees
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      - $ref: '#/components/parameters/FeesID'
      requestBody:
        $ref: '#/components/requestBodies/Fees'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fees'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Lien/{lienId}/Exchange:
    put:
      tags:
      - BQ - Lien
      summary: EcBQ Accept, verify, etc. aspects of Lien processing
      description: EcBQ Accept, verify, etc. aspects of Lien processing
      operationId: ExchangeLien
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      - $ref: '#/components/parameters/LienID'
      requestBody:
        $ref: '#/components/requestBodies/Lien'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lien'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Payments/{paymentsId}/Exchange:
    put:
      tags:
      - BQ - Payments
      summary: EcBQ Accept, verify, etc. aspects of Payments processing
      description: EcBQ Accept, verify, etc. aspects of Payments processing
      operationId: ExchangePayments
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      - $ref: '#/components/parameters/PaymentsID'
      requestBody:
        $ref: '#/components/requestBodies/Payments'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payments'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Sweep/{sweepId}/Exchange:
    put:
      tags:
      - BQ - Sweep
      summary: EcBQ Accept, verify, etc. aspects of Sweep processing
      description: EcBQ Accept, verify, etc. aspects of Sweep processing
      operationId: ExchangeSweep
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      - $ref: '#/components/parameters/SweepID'
      requestBody:
        $ref: '#/components/requestBodies/Sweep'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sweep'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Collateral/Initiate:
    post:
      tags:
      - BQ - Collateral
      summary: InBQ Instantiate a new Collateral
      description: InBQ Instantiate a new Collateral
      operationId: InitiateCollateral
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      requestBody:
        $ref: '#/components/requestBodies/Collateral'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collateral'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/CorporateAction/Initiate:
    post:
      tags:
      - BQ - CorporateAction
      summary: InBQ Instantiate a new Corporate Action
      description: InBQ Instantiate a new Corporate Action
      operationId: InitiateCorporateAction
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      requestBody:
        $ref: '#/components/requestBodies/CorporateAction'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CorporateAction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Deposits/Initiate:
    post:
      tags:
      - BQ - Deposits
      summary: InBQ Instantiate a new Deposits
      description: InBQ Instantiate a new Deposits
      operationId: InitiateDeposits
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      requestBody:
        $ref: '#/components/requestBodies/Deposits'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deposits'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Fees/Initiate:
    post:
      tags:
      - BQ - Fees
      summary: InBQ Instantiate a new Fees
      description: InBQ Instantiate a new Fees
      operationId: InitiateFees
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      requestBody:
        $ref: '#/components/requestBodies/Fees'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fees'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/FinancialInstrument/Initiate:
    post:
      tags:
      - BQ - FinancialInstrument
      summary: InBQ Instantiate a new Financial Instrument
      description: InBQ Instantiate a new Financial Instrument
      operationId: InitiateFinancialInstrument
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      requestBody:
        $ref: '#/components/requestBodies/FinancialInstrument'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinancialInstrument'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/IssuedDevice/Initiate:
    post:
      tags:
      - BQ - IssuedDevice
      summary: InBQ Instantiate a new Issued Device
      description: InBQ Instantiate a new Issued Device
      operationId: InitiateIssuedDevice
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      requestBody:
        $ref: '#/components/requestBodies/IssuedDevice'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssuedDevice'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Lien/Initiate:
    post:
      tags:
      - BQ - Lien
      summary: InBQ Instantiate a new Lien
      description: InBQ Instantiate a new Lien
      operationId: InitiateLien
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      requestBody:
        $ref: '#/components/requestBodies/Lien'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lien'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Payments/Initiate:
    post:
      tags:
      - BQ - Payments
      summary: InBQ Instantiate a new Payments
      description: InBQ Instantiate a new Payments
      operationId: InitiatePayments
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      requestBody:
        $ref: '#/components/requestBodies/Payments'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payments'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Sweep/Initiate:
    post:
      tags:
      - BQ - Sweep
      summary: InBQ Instantiate a new Sweep
      description: InBQ Instantiate a new Sweep
      operationId: InitiateSweep
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      requestBody:
        $ref: '#/components/requestBodies/Sweep'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sweep'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Withdrawals/Initiate:
    post:
      tags:
      - BQ - Withdrawals
      summary: InBQ Instantiate a new Withdrawals
      description: InBQ Instantiate a new Withdrawals
      operationId: InitiateWithdrawals
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      requestBody:
        $ref: '#/components/requestBodies/Withdrawals'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Withdrawals'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Collateral/{collateralId}/Retrieve:
    get:
      tags:
      - BQ - Collateral
      summary: ReBQ Retrieve details about any aspect of Collateral
      description: ReBQ Retrieve details about any aspect of Collateral
      operationId: RetrieveCollateral
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      - $ref: '#/components/parameters/CollateralID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collateral'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/CorporateAction/{corporateactionId}/Retrieve:
    get:
      tags:
      - BQ - CorporateAction
      summary: ReBQ Retrieve details about any aspect of Corporate Action
      description: ReBQ Retrieve details about any aspect of Corporate Action
      operationId: RetrieveCorporateAction
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      - $ref: '#/components/parameters/CorporateActionID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CorporateAction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Deposits/{depositsId}/Retrieve:
    get:
      tags:
      - BQ - Deposits
      summary: ReBQ Retrieve details about any aspect of Deposits
      description: ReBQ Retrieve details about any aspect of Deposits
      operationId: RetrieveDeposits
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      - $ref: '#/components/parameters/DepositsID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deposits'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Fees/{feesId}/Retrieve:
    get:
      tags:
      - BQ - Fees
      summary: ReBQ Retrieve details about any aspect of Fees
      description: ReBQ Retrieve details about any aspect of Fees
      operationId: RetrieveFees
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      - $ref: '#/components/parameters/FeesID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fees'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/FinancialInstrument/{financialinstrumentId}/Retrieve:
    get:
      tags:
      - BQ - FinancialInstrument
      summary: ReBQ Retrieve details about any aspect of Financial Instrument
      description: ReBQ Retrieve details about any aspect of Financial Instrument
      operationId: RetrieveFinancialInstrument
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      - $ref: '#/components/parameters/FinancialInstrumentID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinancialInstrument'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Interest/{interestId}/Retrieve:
    get:
      tags:
      - BQ - Interest
      summary: ReBQ Retrieve details about any aspect of Interest
      description: ReBQ Retrieve details about any aspect of Interest
      operationId: RetrieveInterest
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      - $ref: '#/components/parameters/InterestID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interest'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/IssuedDevice/{issueddeviceId}/Retrieve:
    get:
      tags:
      - BQ - IssuedDevice
      summary: ReBQ Retrieve details about any aspect of Issued Device
      description: ReBQ Retrieve details about any aspect of Issued Device
      operationId: RetrieveIssuedDevice
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      - $ref: '#/components/parameters/IssuedDeviceID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssuedDevice'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Lien/{lienId}/Retrieve:
    get:
      tags:
      - BQ - Lien
      summary: ReBQ Retrieve details about any aspect of Lien
      description: ReBQ Retrieve details about any aspect of Lien
      operationId: RetrieveLien
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      - $ref: '#/components/parameters/LienID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lien'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Payments/{paymentsId}/Retrieve:
    get:
      tags:
      - BQ - Payments
      summary: ReBQ Retrieve details about any aspect of Payments
      description: ReBQ Retrieve details about any aspect of Payments
      operationId: RetrievePayments
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      - $ref: '#/components/parameters/PaymentsID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payments'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Sweep/{sweepId}/Retrieve:
    get:
      tags:
      - BQ - Sweep
      summary: ReBQ Retrieve details about any aspect of Sweep
      description: ReBQ Retrieve details about any aspect of Sweep
      operationId: RetrieveSweep
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      - $ref: '#/components/parameters/SweepID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sweep'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Withdrawals/{withdrawalsId}/Retrieve:
    get:
      tags:
      - BQ - Withdrawals
      summary: ReBQ Retrieve details about any aspect of Withdrawals
      description: ReBQ Retrieve details about any aspect of Withdrawals
      operationId: RetrieveWithdrawals
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      - $ref: '#/components/parameters/WithdrawalsID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Withdrawals'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Collateral/{collateralId}/Request:
    put:
      tags:
      - BQ - Collateral
      summary: RqBQ Request manual intervention or a decision with respect to Collateral
      description: RqBQ Request manual intervention or a decision with respect to Collateral
      operationId: RequestCollateral
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      - $ref: '#/components/parameters/CollateralID'
      requestBody:
        $ref: '#/components/requestBodies/Collateral'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collateral'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Fees/{feesId}/Request:
    put:
      tags:
      - BQ - Fees
      summary: RqBQ Request manual intervention or a decision with respect to Fees
      description: RqBQ Request manual intervention or a decision with respect to Fees
      operationId: RequestFees
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      - $ref: '#/components/parameters/FeesID'
      requestBody:
        $ref: '#/components/requestBodies/Fees'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fees'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Collateral/{collateralId}/Update:
    put:
      tags:
      - BQ - Collateral
      summary: UpBQ Update details relating to Collateral
      description: UpBQ Update details relating to Collateral
      operationId: UpdateCollateral
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      - $ref: '#/components/parameters/CollateralID'
      requestBody:
        $ref: '#/components/requestBodies/Collateral'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collateral'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/CorporateAction/{corporateactionId}/Update:
    put:
      tags:
      - BQ - CorporateAction
      summary: UpBQ Update details relating to Corporate Action
      description: UpBQ Update details relating to Corporate Action
      operationId: UpdateCorporateAction
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      - $ref: '#/components/parameters/CorporateActionID'
      requestBody:
        $ref: '#/components/requestBodies/CorporateAction'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CorporateAction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Deposits/{depositsId}/Update:
    put:
      tags:
      - BQ - Deposits
      summary: UpBQ Update details relating to Deposits
      description: UpBQ Update details relating to Deposits
      operationId: UpdateDeposits
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      - $ref: '#/components/parameters/DepositsID'
      requestBody:
        $ref: '#/components/requestBodies/Deposits'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deposits'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Fees/{feesId}/Update:
    put:
      tags:
      - BQ - Fees
      summary: UpBQ Update details relating to Fees
      description: UpBQ Update details relating to Fees
      operationId: UpdateFees
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      - $ref: '#/components/parameters/FeesID'
      requestBody:
        $ref: '#/components/requestBodies/Fees'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fees'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/FinancialInstrument/{financialinstrumentId}/Update:
    put:
      tags:
      - BQ - FinancialInstrument
      summary: UpBQ Update details relating to Financial Instrument
      description: UpBQ Update details relating to Financial Instrument
      operationId: UpdateFinancialInstrument
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      - $ref: '#/components/parameters/FinancialInstrumentID'
      requestBody:
        $ref: '#/components/requestBodies/FinancialInstrument'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinancialInstrument'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Interest/{interestId}/Update:
    put:
      tags:
      - BQ - Interest
      summary: UpBQ Update details relating to Interest
      description: UpBQ Update details relating to Interest
      operationId: UpdateInterest
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      - $ref: '#/components/parameters/InterestID'
      requestBody:
        $ref: '#/components/requestBodies/Interest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interest'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/IssuedDevice/{issueddeviceId}/Update:
    put:
      tags:
      - BQ - IssuedDevice
      summary: UpBQ Update details relating to Issued Device
      description: UpBQ Update details relating to Issued Device
      operationId: UpdateIssuedDevice
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      - $ref: '#/components/parameters/IssuedDeviceID'
      requestBody:
        $ref: '#/components/requestBodies/IssuedDevice'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssuedDevice'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Lien/{lienId}/Update:
    put:
      tags:
      - BQ - Lien
      summary: UpBQ Update details relating to Lien
      description: UpBQ Update details relating to Lien
      operationId: UpdateLien
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      - $ref: '#/components/parameters/LienID'
      requestBody:
        $ref: '#/components/requestBodies/Lien'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lien'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Payments/{paymentsId}/Update:
    put:
      tags:
      - BQ - Payments
      summary: UpBQ Update details relating to Payments
      description: UpBQ Update details relating to Payments
      operationId: UpdatePayments
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      - $ref: '#/components/parameters/PaymentsID'
      requestBody:
        $ref: '#/components/requestBodies/Payments'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payments'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Sweep/{sweepId}/Update:
    put:
      tags:
      - BQ - Sweep
      summary: UpBQ Update details relating to Sweep
      description: UpBQ Update details relating to Sweep
      operationId: UpdateSweep
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      - $ref: '#/components/parameters/SweepID'
      requestBody:
        $ref: '#/components/requestBodies/Sweep'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sweep'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Leasing/{leasingId}/Withdrawals/{withdrawalsId}/Update:
    put:
      tags:
      - BQ - Withdrawals
      summary: UpBQ Update details relating to Withdrawals
      description: UpBQ Update details relating to Withdrawals
      operationId: UpdateWithdrawals
      parameters:
      - $ref: '#/components/parameters/LeasingID'
      - $ref: '#/components/parameters/WithdrawalsID'
      requestBody:
        $ref: '#/components/requestBodies/Withdrawals'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Withdrawals'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    LeasingFacility:
      type: object
      properties:
        LeasingFacilityParameterType:
          type: string
        LeasingFacilitySelectedOption:
          type: string
        LeasingFacilityType:
          type: string
        LeasingFacilityReference:
          type: object
        LeasingFacilitySchedule:
          type: string
        LeasingFacilityStatus:
          type: string
        LeasingFacilityCurrency:
          type: string
        LeasingFacilityRegulationReference:
          type: object
        LeasingFacilityRegulationType:
          type: string
        LeasingFacilityJurisdiction:
          type: string
        LeasingFacilityBookingLocation:
          type: string
        LeasingFacilityAccountType:
          type: string
        LeasingFacilityAccountReference:
          type: object
    Fees:
      type: object
      properties:
        FeesPreconditions:
          type: string
        FeesFeatureSchedule:
          type: string
        BusinessService:
          type: object
        FeesPostconditions:
          type: string
        FeesServiceType:
          type: string
        FeesServiceDescription:
          type: string
        FeesServiceInputsandOuputs:
          type: string
        FeesServiceWorkProduct:
          type: string
        FeesServiceName:
          type: string
    FinancialAccounting:
      type: object
      properties:
        FinancialAccountingPreconditions:
          type: string
        FinancialAccountingFeatureSchedule:
          type: string
        FinancialAccounting:
          type: object
        FinancialAccountingPostconditions:
          type: string
        FinancialAccountingFinancialAccountingServiceType:
          type: string
        FinancialAccountingFinancialAccountingServiceDescription:
          type: string
        FinancialAccountingFinancialAccountingServiceInputsandOuputs:
          type: string
        FinancialAccountingFinancialAccountingServiceWorkProduct:
          type: string
        FinancialAccountingFinancialAccountingServiceName:
          type: string
    Deposits:
      type: object
      properties:
        DepositsPreconditions:
          type: string
        DepositsFeatureSchedule:
          type: string
        DepositProcessing:
          type: object
        DepositsPostconditions:
          type: string
        DepositsDepositProcessingServiceType:
          type: string
        DepositsDepositProcessingServiceDescription:
          type: string
        DepositsDepositProcessingServiceInputsandOuputs:
          type: string
        DepositsDepositProcessingServiceWorkProduct:
          type: string
        DepositsDepositProcessingServiceName:
          type: string
    IssuedDevice:
      type: object
      properties:
        IssuedDevicePreconditions:
          type: string
        IssuedDeviceFeatureSchedule:
          type: string
        BusinessService:
          type: object
        IssuedDevicePostconditions:
          type: string
        IssuedDeviceServiceType:
          type: string
        IssuedDeviceServiceDescription:
          type: string
        IssuedDeviceServiceInputsandOuputs:
          type: string
        IssuedDeviceServiceWorkProduct:
          type: string
        IssuedDeviceServiceName:
          type: string
    ClearingandSettlement:
      type: object
      properties:
        CorrespondentBankClearingArrangementReference:
          type: object
        CorrespondentBankClearingArrangementClearingInstructions:
          type: string
        CorrespondentBankClearingArrangementSettlementInstructions:
          type: string
        MirrorNostroAccountReference:
          type: object
        ClearingTransaction:
          type: string
        SettlementTransaction:
          type: string
    Sweep:
      type: object
      properties:
        SweepPreconditions:
          type: string
        SweepFeatureSchedule:
          type: string
        BusinessService:
          type: object
        SweepPostconditions:
          type: string
        SweepServiceType:
          type: string
        SweepServiceDescription:
          type: string
        SweepServiceInputsandOuputs:
          type: string
        SweepServiceWorkProduct:
          type: string
        SweepServiceName:
          type: string
    Interest:
      type: object
      properties:
        InterestPreconditions:
          type: string
        InterestFeatureSchedule:
          type: string
        BusinessService:
          type: object
        InterestPostconditions:
          type: string
        InterestServiceType:
          type: string
        InterestServiceDescription:
          type: string
        InterestServiceInputsandOuputs:
          type: string
        InterestServiceWorkProduct:
          type: string
        InterestServiceName:
          type: string
    FinancialInstrument:
      type: object
      properties:
        FinancialInstrumentPreconditions:
          type: string
        FinancialInstrumentFeatureSchedule:
          type: string
        FinancialInstrument:
          type: object
        FinancialInstrumentPostconditions:
          type: string
        FinancialInstrumentFinancialInstrumentServiceType:
          type: string
        FinancialInstrumentFinancialInstrumentServiceDescription:
          type: string
        FinancialInstrumentFinancialInstrumentServiceInputsandOuputs:
          type: string
        FinancialInstrumentFinancialInstrumentServiceWorkProduct:
          type: string
        FinancialInstrumentFinancialInstrumentServiceName:
          type: string
    Withdrawals:
      type: object
      properties:
        WithdrawalsPreconditions:
          type: string
        WithdrawalsFeatureSchedule:
          type: string
        WithdrawalProcessing:
          type: object
        WithdrawalsPostconditions:
          type: string
        WithdrawalsWithdrawalProcessingServiceType:
          type: string
        WithdrawalsWithdrawalProcessingServiceDescription:
          type: string
        WithdrawalsWithdrawalProcessingServiceInputsandOuputs:
          type: string
        WithdrawalsWithdrawalProcessingServiceWorkProduct:
          type: string
        WithdrawalsWithdrawalProcessingServiceName:
          type: string
    Lien:
      type: object
      properties:
        LienPreconditions:
          type: string
        LienFeatureSchedule:
          type: string
        BusinessService:
          type: object
        LienPostconditions:
          type: string
        LienServiceType:
          type: string
        LienServiceDescription:
          type: string
        LienServiceInputsandOuputs:
          type: string
        LienServiceWorkProduct:
          type: string
        LienServiceName:
          type: string
    Payments:
      type: object
      properties:
        PaymentsPreconditions:
          type: string
        PaymentsFeatureSchedule:
          type: string
        BusinessService:
          type: object
        PaymentsPostconditions:
          type: string
        PaymentsServiceType:
          type: string
        PaymentsServiceDescription:
          type: string
        PaymentsServiceInputsandOuputs:
          type: string
        PaymentsServiceWorkProduct:
          type: string
        PaymentsServiceName:
          type: string
    LeasingOutcome:
      type: object
      properties:
        LeasingFinancialFacility:
          type: string
        LeasingWorkProduct:
          type: string
    Collateral:
      type: object
      properties:
        CollateralPreconditions:
          type: string
        CollateralFeatureSchedule:
          type: string
        BusinessService:
          type: object
        CollateralPostconditions:
          type: string
        CollateralServiceType:
          type: string
        CollateralServiceDescription:
          type: string
        CollateralServiceInputsandOuputs:
          type: string
        CollateralServiceWorkProduct:
          type: string
        CollateralServiceName:
          type: string
    CorporateAction:
      type: object
      properties:
        CorporateActionPreconditions:
          type: string
        CorporateActionFeatureSchedule:
          type: string
        BS-CorporateActionProcessing:
          type: object
        CorporateActionPostconditions:
          type: string
        CorporateActionBS-CorporateActionProcessingServiceType:
          type: string
        CorporateActionBS-CorporateActionProcessingServiceDescription:
          type: string
        CorporateActionBS-CorporateActionProcessingServiceInputsandOuputs:
          type: string
        CorporateActionBS-CorporateActionProcessingServiceWorkProduct:
          type: string
        CorporateActionBS-CorporateActionProcessingServiceName:
          type: string
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
        status:
          type: string
        message:
          type: string
  parameters:
    LeasingID:
      name: leasingId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    FeesID:
      name: feesId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    FinancialAccountingID:
      name: financialaccountingId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    DepositsID:
      name: depositsId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    IssuedDeviceID:
      name: issueddeviceId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    ClearingandSettlementID:
      name: clearingandsettlementId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    SweepID:
      name: sweepId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    InterestID:
      name: interestId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    FinancialInstrumentID:
      name: financialinstrumentId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    WithdrawalsID:
      name: withdrawalsId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    LienID:
      name: lienId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    PaymentsID:
      name: paymentsId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    LeasingOutcomeID:
      name: leasingoutcomeId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    CollateralID:
      name: collateralId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    CorporateActionID:
      name: corporateactionId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
  requestBodies:
    LeasingFacility:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LeasingFacility'
    Fees:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Fees'
    Lien:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Lien'
    Payments:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Payments'
    Sweep:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Sweep'
    Collateral:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Collateral'
    CorporateAction:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CorporateAction'
    Deposits:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Deposits'
    FinancialInstrument:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FinancialInstrument'
    IssuedDevice:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IssuedDevice'
    Withdrawals:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Withdrawals'
    Interest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Interest'
  responses:
    HTTPError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    BadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequestsError:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
...
