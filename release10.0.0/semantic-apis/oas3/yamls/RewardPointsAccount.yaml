openapi: 3.0.1
info:
  title: Reward Points Account
  description: Administer the booking and remittance of rewards points
  version: 10.0.0
servers:
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/B154/RewardPointsAccount/10.0.0
paths:
  /RewardPointsAccount/{rewardpointsaccountId}/Capture:
    put:
      tags:
      - CR - RewardPointsLog
      summary: CaCR Capture Reward Points Log activity or event related information
      description: CaCR Capture Reward Points Log activity or event related information
      operationId: Capture
      parameters:
      - $ref: '#/components/parameters/RewardPointsAccountID'
      requestBody:
        $ref: '#/components/requestBodies/RewardPointsLog'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardPointsLog'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /RewardPointsAccount/{rewardpointsaccountId}/Control:
    put:
      tags:
      - CR - RewardPointsLog
      summary: CoCR Control the processing of Reward Points Log
      description: CoCR Control the processing of Reward Points Log
      operationId: Control
      parameters:
      - $ref: '#/components/parameters/RewardPointsAccountID'
      requestBody:
        $ref: '#/components/requestBodies/RewardPointsLog'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardPointsLog'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /RewardPointsAccount/{rewardpointsaccountId}/Exchange:
    put:
      tags:
      - CR - RewardPointsLog
      summary: EcCR Accept, verify, etc. aspects of Reward Points Log processing
      description: EcCR Accept, verify, etc. aspects of Reward Points Log processing
      operationId: Exchange
      parameters:
      - $ref: '#/components/parameters/RewardPointsAccountID'
      requestBody:
        $ref: '#/components/requestBodies/RewardPointsLog'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardPointsLog'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /RewardPointsAccount/{rewardpointsaccountId}/Grant:
    put:
      tags:
      - CR - RewardPointsLog
      summary: GrCR Obtain permission to act in relation to Reward Points Log
      description: GrCR Obtain permission to act in relation to Reward Points Log
      operationId: Grant
      parameters:
      - $ref: '#/components/parameters/RewardPointsAccountID'
      requestBody:
        $ref: '#/components/requestBodies/RewardPointsLog'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardPointsLog'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /RewardPointsAccount/Initiate:
    post:
      tags:
      - CR - RewardPointsLog
      summary: InCR Instantiate a new Reward Points Log
      description: InCR Instantiate a new Reward Points Log
      operationId: Initiate
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/RewardPointsLog'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardPointsLog'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /RewardPointsAccount/{rewardpointsaccountId}/Retrieve:
    get:
      tags:
      - CR - RewardPointsLog
      summary: ReCR Retrieve details about any aspect of Reward Points Log
      description: ReCR Retrieve details about any aspect of Reward Points Log
      operationId: Retrieve
      parameters:
      - $ref: '#/components/parameters/RewardPointsAccountID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardPointsLog'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /RewardPointsAccount/{rewardpointsaccountId}/Request:
    put:
      tags:
      - CR - RewardPointsLog
      summary: RqCR Request manual intervention or a decision with respect to Reward Points Log
      description: RqCR Request manual intervention or a decision with respect to Reward Points Log
      operationId: Request
      parameters:
      - $ref: '#/components/parameters/RewardPointsAccountID'
      requestBody:
        $ref: '#/components/requestBodies/RewardPointsLog'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardPointsLog'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /RewardPointsAccount/{rewardpointsaccountId}/Update:
    put:
      tags:
      - CR - RewardPointsLog
      summary: UpCR Update details relating to Reward Points Log
      description: UpCR Update details relating to Reward Points Log
      operationId: Update
      parameters:
      - $ref: '#/components/parameters/RewardPointsAccountID'
      requestBody:
        $ref: '#/components/requestBodies/RewardPointsLog'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardPointsLog'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /RewardPointsAccount/{rewardpointsaccountId}/Capture/{captureId}/Capture:
    put:
      tags:
      - BQ - Capture
      summary: CaBQ Capture Capture activity or event related information
      description: CaBQ Capture Capture activity or event related information
      operationId: CaptureCapture
      parameters:
      - $ref: '#/components/parameters/RewardPointsAccountID'
      - $ref: '#/components/parameters/CaptureID'
      requestBody:
        $ref: '#/components/requestBodies/Capture'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Capture'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /RewardPointsAccount/{rewardpointsaccountId}/Expiration/{expirationId}/Capture:
    put:
      tags:
      - BQ - Expiration
      summary: CaBQ Capture Expiration activity or event related information
      description: CaBQ Capture Expiration activity or event related information
      operationId: CaptureExpiration
      parameters:
      - $ref: '#/components/parameters/RewardPointsAccountID'
      - $ref: '#/components/parameters/ExpirationID'
      requestBody:
        $ref: '#/components/requestBodies/Expiration'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expiration'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /RewardPointsAccount/{rewardpointsaccountId}/Capture/Initiate:
    post:
      tags:
      - BQ - Capture
      summary: InBQ Instantiate a new Capture
      description: InBQ Instantiate a new Capture
      operationId: InitiateCapture
      parameters:
      - $ref: '#/components/parameters/RewardPointsAccountID'
      requestBody:
        $ref: '#/components/requestBodies/Capture'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Capture'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /RewardPointsAccount/{rewardpointsaccountId}/Expiration/Initiate:
    post:
      tags:
      - BQ - Expiration
      summary: InBQ Instantiate a new Expiration
      description: InBQ Instantiate a new Expiration
      operationId: InitiateExpiration
      parameters:
      - $ref: '#/components/parameters/RewardPointsAccountID'
      requestBody:
        $ref: '#/components/requestBodies/Expiration'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expiration'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /RewardPointsAccount/{rewardpointsaccountId}/Capture/{captureId}/Retrieve:
    get:
      tags:
      - BQ - Capture
      summary: ReBQ Retrieve details about any aspect of Capture
      description: ReBQ Retrieve details about any aspect of Capture
      operationId: RetrieveCapture
      parameters:
      - $ref: '#/components/parameters/RewardPointsAccountID'
      - $ref: '#/components/parameters/CaptureID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Capture'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /RewardPointsAccount/{rewardpointsaccountId}/Expiration/{expirationId}/Retrieve:
    get:
      tags:
      - BQ - Expiration
      summary: ReBQ Retrieve details about any aspect of Expiration
      description: ReBQ Retrieve details about any aspect of Expiration
      operationId: RetrieveExpiration
      parameters:
      - $ref: '#/components/parameters/RewardPointsAccountID'
      - $ref: '#/components/parameters/ExpirationID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expiration'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /RewardPointsAccount/{rewardpointsaccountId}/Capture/{captureId}/Update:
    put:
      tags:
      - BQ - Capture
      summary: UpBQ Update details relating to Capture
      description: UpBQ Update details relating to Capture
      operationId: UpdateCapture
      parameters:
      - $ref: '#/components/parameters/RewardPointsAccountID'
      - $ref: '#/components/parameters/CaptureID'
      requestBody:
        $ref: '#/components/requestBodies/Capture'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Capture'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /RewardPointsAccount/{rewardpointsaccountId}/Expiration/{expirationId}/Update:
    put:
      tags:
      - BQ - Expiration
      summary: UpBQ Update details relating to Expiration
      description: UpBQ Update details relating to Expiration
      operationId: UpdateExpiration
      parameters:
      - $ref: '#/components/parameters/RewardPointsAccountID'
      - $ref: '#/components/parameters/ExpirationID'
      requestBody:
        $ref: '#/components/requestBodies/Expiration'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expiration'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    RewardPointsLog:
      type: object
      properties:
        RewardPointsLogParameterType:
          type: string
        RewardPointsLogSelectedOption:
          type: string
        RewardPointsLogType:
          type: string
        RewardPointsLogSchedule:
          type: string
        RewardPointsLogUsageLog:
          type: string
        RewardPointsLogUpdateLog:
          type: string
        RewardPointsLogReference:
          type: object
        RewardPointsLogBusinessUnitReference:
          type: object
        RewardPointsLogCustomerReference:
          type: object
        RewardPointsLogServiceConfiguration:
          type: string
        RewardPointsLogPosition:
          type: string
        RewardPointsLogPositionType:
          type: string
        RewardPointsLogPositionLimitTime:
          type: string
    Expiration:
      type: object
      properties:
        ExpirationPreconditions:
          type: string
        ExpirationEventSchedule:
          type: string
        LogEventExpiration:
          type: object
        ExpirationPostconditions:
          type: string
        ExpirationLogEventExpirationServiceType:
          type: string
        ExpirationLogEventExpirationServiceDescription:
          type: string
        ExpirationLogEventExpirationServiceInputsandOuputs:
          type: string
        ExpirationLogEventExpirationServiceWorkProduct:
          type: string
        ExpirationLogEventExpirationServiceName:
          type: string
    RewardPointsAccountOutcome:
      type: object
      properties:
        RewardPointsAccountIncident:
          type: string
        RewardPointsAccountLog:
          type: string
    Capture:
      type: object
      properties:
        CapturePreconditions:
          type: string
        CaptureEventSchedule:
          type: string
        BusinessService:
          type: object
        CapturePostconditions:
          type: string
        CaptureServiceType:
          type: string
        CaptureServiceDescription:
          type: string
        CaptureServiceInputsandOuputs:
          type: string
        CaptureServiceWorkProduct:
          type: string
        CaptureServiceName:
          type: string
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
        status:
          type: string
        message:
          type: string
  parameters:
    RewardPointsAccountID:
      name: rewardpointsaccountId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    ExpirationID:
      name: expirationId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    RewardPointsAccountOutcomeID:
      name: rewardpointsaccountoutcomeId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    CaptureID:
      name: captureId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
  requestBodies:
    RewardPointsLog:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RewardPointsLog'
    Capture:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Capture'
    Expiration:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Expiration'
  responses:
    HTTPError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    BadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequestsError:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
...
