openapi: 3.0.1
info:
  title: Session Dialogue
  description: This service domain handles/structures the customer narrative during an interactive session. It consolidates and presents pertinent customer information and provides servicing guidelines with standard dialogue/scripting as appropriate. It can include the capability to provoke questions to capture key relationship and sales triggers. It also ensures the correct sequencing, dialogue content and actions are performed/initiated during the customer interaction. It may further leverage the session by passing on customer notifications, status updates and triggering sales/marketing efforts.
  version: 10.0.0
servers:
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/B154/SessionDialogue/10.0.0
paths:
  /SessionDialogue/Initiate:
    post:
      tags:
      - CR - CustomerContactSessionProcedure
      summary: InCR Initiate a customer dialogue
      description: InCR Initiate a customer dialogue
      operationId: Initiate
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/InitiateCustomerContactSessionProcedureRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitiateCustomerContactSessionProcedureResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SessionDialogue/{sessiondialogueId}/Update:
    put:
      tags:
      - CR - CustomerContactSessionProcedure
      summary: UpCR Update details of a customer dialogue
      description: UpCR Update details of a customer dialogue
      operationId: Update
      parameters:
      - $ref: '#/components/parameters/SessionDialogueID'
      requestBody:
        $ref: '#/components/requestBodies/UpdateCustomerContactSessionProcedureRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCustomerContactSessionProcedureResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SessionDialogue/{sessiondialogueId}/Execute:
    put:
      tags:
      - CR - CustomerContactSessionProcedure
      summary: ExCR Execute an automated task (e.g. self service offer process)
      description: ExCR Execute an automated task (e.g. self service offer process)
      operationId: Execute
      parameters:
      - $ref: '#/components/parameters/SessionDialogueID'
      requestBody:
        $ref: '#/components/requestBodies/ExecuteCustomerContactSessionProcedureRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecuteCustomerContactSessionProcedureResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SessionDialogue/{sessiondialogueId}/Request:
    put:
      tags:
      - CR - CustomerContactSessionProcedure
      summary: RqCR Request manual intervention (e.g. request servicing support)
      description: RqCR Request manual intervention (e.g. request servicing support)
      operationId: Request
      parameters:
      - $ref: '#/components/parameters/SessionDialogueID'
      requestBody:
        $ref: '#/components/requestBodies/RequestCustomerContactSessionProcedureRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestCustomerContactSessionProcedureResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SessionDialogue/{sessiondialogueId}/Retrieve:
    get:
      tags:
      - CR - CustomerContactSessionProcedure
      summary: ReCR Retrieve details about a customer dialogue
      description: ReCR Retrieve details about a customer dialogue
      operationId: Retrieve
      parameters:
      - $ref: '#/components/parameters/SessionDialogueID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveCustomerContactSessionProcedureResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SessionDialogue/{sessiondialogueId}/Query/Initiate:
    post:
      tags:
      - BQ - Query
      summary: InBQ Initiate customer query handling
      description: InBQ Initiate customer query handling
      operationId: InitiateQuery
      parameters:
      - $ref: '#/components/parameters/SessionDialogueID'
      requestBody:
        $ref: '#/components/requestBodies/InitiateQueryRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitiateQueryResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SessionDialogue/{sessiondialogueId}/Query/{queryId}/Update:
    put:
      tags:
      - BQ - Query
      summary: UpBQ Update details for query handling
      description: UpBQ Update details for query handling
      operationId: UpdateQuery
      parameters:
      - $ref: '#/components/parameters/SessionDialogueID'
      - $ref: '#/components/parameters/QueryID'
      requestBody:
        $ref: '#/components/requestBodies/UpdateQueryRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateQueryResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SessionDialogue/{sessiondialogueId}/Query/{queryId}/Retrieve:
    get:
      tags:
      - BQ - Query
      summary: ReBQ Retrieve details about query handling
      description: ReBQ Retrieve details about query handling
      operationId: RetrieveQuery
      parameters:
      - $ref: '#/components/parameters/SessionDialogueID'
      - $ref: '#/components/parameters/QueryID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveQueryResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SessionDialogue/{sessiondialogueId}/Authentication/{authenticationId}/Update:
    put:
      tags:
      - BQ - Authentication
      summary: UpBQ Update details for authentication processing
      description: UpBQ Update details for authentication processing
      operationId: UpdateAuthentication
      parameters:
      - $ref: '#/components/parameters/SessionDialogueID'
      - $ref: '#/components/parameters/AuthenticationID'
      requestBody:
        $ref: '#/components/requestBodies/UpdateAuthenticationRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAuthenticationResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SessionDialogue/{sessiondialogueId}/Authentication/{authenticationId}/Retrieve:
    get:
      tags:
      - BQ - Authentication
      summary: ReBQ Retrieve details about authentication processing
      description: ReBQ Retrieve details about authentication processing
      operationId: RetrieveAuthentication
      parameters:
      - $ref: '#/components/parameters/SessionDialogueID'
      - $ref: '#/components/parameters/AuthenticationID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveAuthenticationResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SessionDialogue/{sessiondialogueId}/Sales/Initiate:
    post:
      tags:
      - BQ - Sales
      summary: InBQ Initiate customer sales handling
      description: InBQ Initiate customer sales handling
      operationId: InitiateSales
      parameters:
      - $ref: '#/components/parameters/SessionDialogueID'
      requestBody:
        $ref: '#/components/requestBodies/InitiateSalesRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitiateSalesResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SessionDialogue/{sessiondialogueId}/Sales/{salesId}/Update:
    put:
      tags:
      - BQ - Sales
      summary: UpBQ Update details for sales handling
      description: UpBQ Update details for sales handling
      operationId: UpdateSales
      parameters:
      - $ref: '#/components/parameters/SessionDialogueID'
      - $ref: '#/components/parameters/SalesID'
      requestBody:
        $ref: '#/components/requestBodies/UpdateSalesRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSalesResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SessionDialogue/{sessiondialogueId}/Sales/{salesId}/Retrieve:
    get:
      tags:
      - BQ - Sales
      summary: ReBQ Retrieve details about sales handling
      description: ReBQ Retrieve details about sales handling
      operationId: RetrieveSales
      parameters:
      - $ref: '#/components/parameters/SessionDialogueID'
      - $ref: '#/components/parameters/SalesID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveSalesResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SessionDialogue/{sessiondialogueId}/Offer/Initiate:
    post:
      tags:
      - BQ - Offer
      summary: InBQ Initiate customer offer handling
      description: InBQ Initiate customer offer handling
      operationId: InitiateOffer
      parameters:
      - $ref: '#/components/parameters/SessionDialogueID'
      requestBody:
        $ref: '#/components/requestBodies/InitiateOfferRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitiateOfferResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SessionDialogue/{sessiondialogueId}/Offer/{offerId}/Update:
    put:
      tags:
      - BQ - Offer
      summary: UpBQ Update details for offer handling
      description: UpBQ Update details for offer handling
      operationId: UpdateOffer
      parameters:
      - $ref: '#/components/parameters/SessionDialogueID'
      - $ref: '#/components/parameters/OfferID'
      requestBody:
        $ref: '#/components/requestBodies/UpdateOfferRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateOfferResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SessionDialogue/{sessiondialogueId}/Offer/{offerId}/Retrieve:
    get:
      tags:
      - BQ - Offer
      summary: ReBQ Retrieve details about offer handling
      description: ReBQ Retrieve details about offer handling
      operationId: RetrieveOffer
      parameters:
      - $ref: '#/components/parameters/SessionDialogueID'
      - $ref: '#/components/parameters/OfferID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveOfferResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SessionDialogue/{sessiondialogueId}/ProductorService/Initiate:
    post:
      tags:
      - BQ - ProductorService
      summary: InBQ Initiate customer product/service handling
      description: InBQ Initiate customer product/service handling
      operationId: InitiateProductorService
      parameters:
      - $ref: '#/components/parameters/SessionDialogueID'
      requestBody:
        $ref: '#/components/requestBodies/InitiateProductorServiceRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitiateProductorServiceResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SessionDialogue/{sessiondialogueId}/ProductorService/{productorserviceId}/Update:
    put:
      tags:
      - BQ - ProductorService
      summary: UpBQ Update details for product/service handling
      description: UpBQ Update details for product/service handling
      operationId: UpdateProductorService
      parameters:
      - $ref: '#/components/parameters/SessionDialogueID'
      - $ref: '#/components/parameters/ProductorServiceID'
      requestBody:
        $ref: '#/components/requestBodies/UpdateProductorServiceRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProductorServiceResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SessionDialogue/{sessiondialogueId}/ProductorService/{productorserviceId}/Retrieve:
    get:
      tags:
      - BQ - ProductorService
      summary: ReBQ Retrieve details about product/service handling
      description: ReBQ Retrieve details about product/service handling
      operationId: RetrieveProductorService
      parameters:
      - $ref: '#/components/parameters/SessionDialogueID'
      - $ref: '#/components/parameters/ProductorServiceID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveProductorServiceResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SessionDialogue/{sessiondialogueId}/Case/Initiate:
    post:
      tags:
      - BQ - Case
      summary: InBQ Initiate customer case handling
      description: InBQ Initiate customer case handling
      operationId: InitiateCase
      parameters:
      - $ref: '#/components/parameters/SessionDialogueID'
      requestBody:
        $ref: '#/components/requestBodies/InitiateCaseRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitiateCaseResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SessionDialogue/{sessiondialogueId}/Case/{caseId}/Update:
    put:
      tags:
      - BQ - Case
      summary: UpBQ Update details for case handling
      description: UpBQ Update details for case handling
      operationId: UpdateCase
      parameters:
      - $ref: '#/components/parameters/SessionDialogueID'
      - $ref: '#/components/parameters/CaseID'
      requestBody:
        $ref: '#/components/requestBodies/UpdateCaseRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCaseResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SessionDialogue/{sessiondialogueId}/Case/{caseId}/Retrieve:
    get:
      tags:
      - BQ - Case
      summary: ReBQ Retrieve details about case handling
      description: ReBQ Retrieve details about case handling
      operationId: RetrieveCase
      parameters:
      - $ref: '#/components/parameters/SessionDialogueID'
      - $ref: '#/components/parameters/CaseID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveCaseResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SessionDialogue/{sessiondialogueId}/Order/Initiate:
    post:
      tags:
      - BQ - Order
      summary: InBQ Initiate customer order handling
      description: InBQ Initiate customer order handling
      operationId: InitiateOrder
      parameters:
      - $ref: '#/components/parameters/SessionDialogueID'
      requestBody:
        $ref: '#/components/requestBodies/InitiateOrderRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitiateOrderResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SessionDialogue/{sessiondialogueId}/Order/{orderId}/Update:
    put:
      tags:
      - BQ - Order
      summary: UpBQ Update details for order handling
      description: UpBQ Update details for order handling
      operationId: UpdateOrder
      parameters:
      - $ref: '#/components/parameters/SessionDialogueID'
      - $ref: '#/components/parameters/OrderID'
      requestBody:
        $ref: '#/components/requestBodies/UpdateOrderRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateOrderResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SessionDialogue/{sessiondialogueId}/Order/{orderId}/Retrieve:
    get:
      tags:
      - BQ - Order
      summary: ReBQ Retrieve details about order handling
      description: ReBQ Retrieve details about order handling
      operationId: RetrieveOrder
      parameters:
      - $ref: '#/components/parameters/SessionDialogueID'
      - $ref: '#/components/parameters/OrderID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveOrderResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SessionDialogue/{sessiondialogueId}/Intelligence/Initiate:
    post:
      tags:
      - BQ - Intelligence
      summary: InBQ Initiate customer insight capture
      description: InBQ Initiate customer insight capture
      operationId: InitiateIntelligence
      parameters:
      - $ref: '#/components/parameters/SessionDialogueID'
      requestBody:
        $ref: '#/components/requestBodies/InitiateIntelligenceRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitiateIntelligenceResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SessionDialogue/{sessiondialogueId}/Intelligence/{intelligenceId}/Update:
    put:
      tags:
      - BQ - Intelligence
      summary: UpBQ Update details for customer insight capture
      description: UpBQ Update details for customer insight capture
      operationId: UpdateIntelligence
      parameters:
      - $ref: '#/components/parameters/SessionDialogueID'
      - $ref: '#/components/parameters/IntelligenceID'
      requestBody:
        $ref: '#/components/requestBodies/UpdateIntelligenceRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateIntelligenceResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SessionDialogue/{sessiondialogueId}/Intelligence/{intelligenceId}/Retrieve:
    get:
      tags:
      - BQ - Intelligence
      summary: ReBQ Retrieve details about customer insight capture
      description: ReBQ Retrieve details about customer insight capture
      operationId: RetrieveIntelligence
      parameters:
      - $ref: '#/components/parameters/SessionDialogueID'
      - $ref: '#/components/parameters/IntelligenceID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveIntelligenceResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SessionDialogue/{sessiondialogueId}/History/{historyId}/Update:
    put:
      tags:
      - BQ - History
      summary: UpBQ Update details for customer history recording
      description: UpBQ Update details for customer history recording
      operationId: UpdateHistory
      parameters:
      - $ref: '#/components/parameters/SessionDialogueID'
      - $ref: '#/components/parameters/HistoryID'
      requestBody:
        $ref: '#/components/requestBodies/UpdateHistoryRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateHistoryResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SessionDialogue/{sessiondialogueId}/History/{historyId}/Retrieve:
    get:
      tags:
      - BQ - History
      summary: ReBQ Retrieve details about customer history recording
      description: ReBQ Retrieve details about customer history recording
      operationId: RetrieveHistory
      parameters:
      - $ref: '#/components/parameters/SessionDialogueID'
      - $ref: '#/components/parameters/HistoryID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveHistoryResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    CustomerContactSessionProcedure:
      type: object
      properties:
        CustomerReference:
          type: object
        EmployeeReference:
          type: object
        ServicingPositionReference:
          type: object
        SessionMechanism:
          type: string
        SessionStartOrEndTime:
          type: string
        SessionDialogueRecord:
          type: string
        SessionDialogueType:
          type: string
        SessionDialogueScript:
          type: string
        SessionDialogueLogReference:
          type: object
        SessionDialogueLog:
          type: string
        SessionDialogueResult:
          type: string
    Case:
      type: object
      properties:
        ProductInstanceReference:
          type: object
        CustomerCaseType:
          type: string
        CaseTaskResult:
          type: string
    Query:
      type: object
      properties:
        QueryType:
          type: string
        QueryTaskResult:
          type: string
    Intelligence:
      type: object
      properties:
        IntelligenceRecord:
          type: string
        CustomerInsightType:
          type: string
        CustomerInsight:
          type: string
        InsightTaskResult:
          type: string
    Order:
      type: object
      properties:
        OrderType:
          type: string
        OrderTaskRecord:
          type: string
        OrderTaskWorkProducts:
          type: string
        OrderTaskWorkResult:
          type: string
    Offer:
      type: object
      properties:
        ProductandServiceType:
          type: string
        OfferTaskResult:
          type: string
    History:
      type: object
      properties:
        HistoryTaskResult:
          type: string
    Sales:
      type: object
      properties:
        ProductandServiceType:
          type: string
        ProductandServiceProperties:
          type: string
        SalesTaskResult:
          type: string
    ProductorService:
      type: object
      properties:
        ProductInstanceReference:
          type: object
        ProductandServiceTaskResult:
          type: string
    Authentication:
      type: object
      properties:
        RequiredAuthenticationLevel:
          type: string
        AuthenticationTaskResult:
          type: string
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
        status:
          type: string
        message:
          type: string
    InitiateCustomerContactSessionProcedureRequest:
      type: object
      properties:
        CustomerContactSessionProcedure:
          type: object
          properties:
            CustomerReference:
              type: object
            EmployeeReference:
              type: object
            ServicingPositionReference:
              type: object
            SessionMechanism:
              type: string
            SessionStartOrEndTime:
              type: string
            SessionDialogueRecord:
              type: string
            SessionDialogueType:
              type: string
    InitiateCustomerContactSessionProcedureResponse:
      type: object
      properties:
        CustomerContactSessionProcedure:
          type: object
          properties:
            SessionStartOrEndTime:
              type: string
            SessionDialogueRecord:
              type: string
            SessionDialogueType:
              type: string
            SessionDialogueScript:
              type: string
            SessionDialogueLogReference:
              type: object
            SessionDialogueResult:
              type: string
    UpdateCustomerContactSessionProcedureRequest:
      type: object
      properties:
        CustomerContactSessionProcedure:
          type: object
          properties:
            CustomerReference:
              type: object
            EmployeeReference:
              type: object
            ServicingPositionReference:
              type: object
            SessionMechanism:
              type: string
            SessionStartOrEndTime:
              type: string
            SessionDialogueRecord:
              type: string
            SessionDialogueType:
              type: string
            SessionDialogueScript:
              type: string
            SessionDialogueLogReference:
              type: object
            SessionDialogueResult:
              type: string
    UpdateCustomerContactSessionProcedureResponse:
      type: object
      properties:
        CustomerContactSessionProcedure:
          type: object
          properties:
            CustomerReference:
              type: object
            EmployeeReference:
              type: object
            ServicingPositionReference:
              type: object
            SessionMechanism:
              type: string
            SessionStartOrEndTime:
              type: string
            SessionDialogueRecord:
              type: string
            SessionDialogueType:
              type: string
            SessionDialogueScript:
              type: string
            SessionDialogueLogReference:
              type: object
            SessionDialogueResult:
              type: string
    ExecuteCustomerContactSessionProcedureRequest:
      type: object
      properties:
        CustomerContactSessionProcedure:
          type: object
          properties:
            CustomerReference:
              type: object
            EmployeeReference:
              type: object
            ServicingPositionReference:
              type: object
            SessionMechanism:
              type: string
            SessionStartOrEndTime:
              type: string
            SessionDialogueRecord:
              type: string
            SessionDialogueType:
              type: string
            SessionDialogueScript:
              type: string
            SessionDialogueLogReference:
              type: object
            SessionDialogueResult:
              type: string
    ExecuteCustomerContactSessionProcedureResponse:
      type: object
      properties:
        CustomerContactSessionProcedure:
          type: object
          properties:
            SessionStartOrEndTime:
              type: string
            SessionDialogueRecord:
              type: string
            SessionDialogueType:
              type: string
            SessionDialogueScript:
              type: string
            SessionDialogueResult:
              type: string
    RequestCustomerContactSessionProcedureRequest:
      type: object
      properties:
        CustomerContactSessionProcedure:
          type: object
          properties:
            CustomerReference:
              type: object
            EmployeeReference:
              type: object
            ServicingPositionReference:
              type: object
            SessionMechanism:
              type: string
            SessionStartOrEndTime:
              type: string
            SessionDialogueRecord:
              type: string
            SessionDialogueType:
              type: string
            SessionDialogueScript:
              type: string
            SessionDialogueLogReference:
              type: object
            SessionDialogueResult:
              type: string
    RequestCustomerContactSessionProcedureResponse:
      type: object
      properties:
        CustomerContactSessionProcedure:
          type: object
          properties:
            SessionStartOrEndTime:
              type: string
            SessionDialogueRecord:
              type: string
            SessionDialogueType:
              type: string
            SessionDialogueScript:
              type: string
            SessionDialogueResult:
              type: string
    RetrieveCustomerContactSessionProcedureResponse:
      type: object
      properties:
        CustomerContactSessionProcedure:
          type: object
          properties:
            CustomerReference:
              type: object
            EmployeeReference:
              type: object
            ServicingPositionReference:
              type: object
            SessionMechanism:
              type: string
            SessionStartOrEndTime:
              type: string
            SessionDialogueRecord:
              type: string
            SessionDialogueType:
              type: string
            SessionDialogueScript:
              type: string
            SessionDialogueLogReference:
              type: object
            SessionDialogueResult:
              type: string
    InitiateQueryRequest:
      type: object
      properties:
        CustomerContactSessionProcedure:
          type: object
          properties:
            CustomerReference:
              type: object
            EmployeeReference:
              type: object
            ServicingPositionReference:
              type: object
            SessionMechanism:
              type: string
            SessionStartOrEndTime:
              type: string
            SessionDialogueRecord:
              type: string
            SessionDialogueType:
              type: string
            SessionDialogueScript:
              type: string
            SessionDialogueLogReference:
              type: object
            SessionDialogueResult:
              type: string
        Query:
          type: object
          properties:
            QueryType:
              type: string
    InitiateQueryResponse:
      type: object
      properties:
        CustomerContactSessionProcedure:
          type: object
          properties:
            SessionStartOrEndTime:
              type: string
            SessionDialogueRecord:
              type: string
            SessionDialogueType:
              type: string
            SessionDialogueScript:
              type: string
            SessionDialogueResult:
              type: string
        Query:
          type: object
          properties:
            QueryTaskResult:
              type: string
    UpdateQueryRequest:
      type: object
      properties:
        CustomerContactSessionProcedure:
          type: object
          properties:
            SessionDialogueRecord:
              type: string
            SessionDialogueLog:
              type: string
            SessionDialogueResult:
              type: string
        Query:
          type: object
          properties:
            QueryType:
              type: string
            QueryTaskResult:
              type: string
    UpdateQueryResponse:
      type: object
      properties:
        CustomerContactSessionProcedure:
          type: object
          properties:
            SessionDialogueRecord:
              type: string
            SessionDialogueLog:
              type: string
            SessionDialogueResult:
              type: string
        Query:
          type: object
          properties:
            QueryType:
              type: string
            QueryTaskResult:
              type: string
    RetrieveQueryResponse:
      type: object
      properties:
        CustomerContactSessionProcedure:
          type: object
          properties:
            CustomerReference:
              type: object
            EmployeeReference:
              type: object
            ServicingPositionReference:
              type: object
            SessionMechanism:
              type: string
            SessionStartOrEndTime:
              type: string
            SessionDialogueRecord:
              type: string
            SessionDialogueType:
              type: string
            SessionDialogueScript:
              type: string
            SessionDialogueLogReference:
              type: object
            SessionDialogueResult:
              type: string
        Query:
          type: object
          properties:
            QueryType:
              type: string
            QueryTaskResult:
              type: string
    UpdateAuthenticationRequest:
      type: object
      properties:
        CustomerContactSessionProcedure:
          type: object
          properties:
            SessionDialogueRecord:
              type: string
            SessionDialogueLog:
              type: string
            SessionDialogueResult:
              type: string
        Authentication:
          type: object
          properties:
            RequiredAuthenticationLevel:
              type: string
            AuthenticationTaskResult:
              type: string
    UpdateAuthenticationResponse:
      type: object
      properties:
        CustomerContactSessionProcedure:
          type: object
          properties:
            SessionDialogueRecord:
              type: string
            SessionDialogueLog:
              type: string
            SessionDialogueResult:
              type: string
        Authentication:
          type: object
          properties:
            RequiredAuthenticationLevel:
              type: string
            AuthenticationTaskResult:
              type: string
    RetrieveAuthenticationResponse:
      type: object
      properties:
        CustomerContactSessionProcedure:
          type: object
          properties:
            CustomerReference:
              type: object
            SessionDialogueRecord:
              type: string
            SessionDialogueLog:
              type: string
            SessionDialogueResult:
              type: string
        Authentication:
          type: object
          properties:
            RequiredAuthenticationLevel:
              type: string
            AuthenticationTaskResult:
              type: string
    InitiateSalesRequest:
      type: object
      properties:
        CustomerContactSessionProcedure:
          type: object
          properties:
            CustomerReference:
              type: object
            EmployeeReference:
              type: object
            ServicingPositionReference:
              type: object
            SessionMechanism:
              type: string
            SessionStartOrEndTime:
              type: string
            SessionDialogueRecord:
              type: string
            SessionDialogueType:
              type: string
            SessionDialogueScript:
              type: string
            SessionDialogueLogReference:
              type: object
            SessionDialogueResult:
              type: string
        Sales:
          type: object
          properties:
            ProductandServiceType:
              type: string
            ProductandServiceProperties:
              type: string
    InitiateSalesResponse:
      type: object
      properties:
        CustomerContactSessionProcedure:
          type: object
          properties:
            SessionStartOrEndTime:
              type: string
            SessionDialogueRecord:
              type: string
            SessionDialogueType:
              type: string
            SessionDialogueScript:
              type: string
            SessionDialogueResult:
              type: string
        Sales:
          type: object
          properties:
            SalesTaskResult:
              type: string
    UpdateSalesRequest:
      type: object
      properties:
        CustomerContactSessionProcedure:
          type: object
          properties:
            SessionDialogueRecord:
              type: string
            SessionDialogueLog:
              type: string
            SessionDialogueResult:
              type: string
        Sales:
          type: object
          properties:
            ProductandServiceType:
              type: string
            ProductandServiceProperties:
              type: string
            SalesTaskResult:
              type: string
    UpdateSalesResponse:
      type: object
      properties:
        CustomerContactSessionProcedure:
          type: object
          properties:
            SessionDialogueRecord:
              type: string
            SessionDialogueLog:
              type: string
            SessionDialogueResult:
              type: string
        Sales:
          type: object
          properties:
            ProductandServiceType:
              type: string
            ProductandServiceProperties:
              type: string
            SalesTaskResult:
              type: string
    RetrieveSalesResponse:
      type: object
      properties:
        CustomerContactSessionProcedure:
          type: object
          properties:
            CustomerReference:
              type: object
            EmployeeReference:
              type: object
            ServicingPositionReference:
              type: object
            SessionMechanism:
              type: string
            SessionStartOrEndTime:
              type: string
            SessionDialogueRecord:
              type: string
            SessionDialogueType:
              type: string
            SessionDialogueScript:
              type: string
            SessionDialogueLogReference:
              type: object
            SessionDialogueResult:
              type: string
        Sales:
          type: object
          properties:
            ProductandServiceType:
              type: string
            ProductandServiceProperties:
              type: string
            SalesTaskResult:
              type: string
    InitiateOfferRequest:
      type: object
      properties:
        CustomerContactSessionProcedure:
          type: object
          properties:
            CustomerReference:
              type: object
            EmployeeReference:
              type: object
            ServicingPositionReference:
              type: object
            SessionMechanism:
              type: string
            SessionStartOrEndTime:
              type: string
            SessionDialogueRecord:
              type: string
            SessionDialogueType:
              type: string
            SessionDialogueScript:
              type: string
            SessionDialogueLogReference:
              type: object
            SessionDialogueResult:
              type: string
        Offer:
          type: object
          properties:
            ProductandServiceType:
              type: string
    InitiateOfferResponse:
      type: object
      properties:
        CustomerContactSessionProcedure:
          type: object
          properties:
            SessionStartOrEndTime:
              type: string
            SessionDialogueRecord:
              type: string
            SessionDialogueType:
              type: string
            SessionDialogueScript:
              type: string
            SessionDialogueResult:
              type: string
        Offer:
          type: object
          properties:
            OfferTaskResult:
              type: string
    UpdateOfferRequest:
      type: object
      properties:
        CustomerContactSessionProcedure:
          type: object
          properties:
            SessionDialogueRecord:
              type: string
            SessionDialogueLog:
              type: string
            SessionDialogueResult:
              type: string
        Offer:
          type: object
          properties:
            ProductandServiceType:
              type: string
            OfferTaskResult:
              type: string
    UpdateOfferResponse:
      type: object
      properties:
        CustomerContactSessionProcedure:
          type: object
          properties:
            SessionDialogueRecord:
              type: string
            SessionDialogueLog:
              type: string
            SessionDialogueResult:
              type: string
        Offer:
          type: object
          properties:
            ProductandServiceType:
              type: string
            OfferTaskResult:
              type: string
    RetrieveOfferResponse:
      type: object
      properties:
        CustomerContactSessionProcedure:
          type: object
          properties:
            CustomerReference:
              type: object
            EmployeeReference:
              type: object
            ServicingPositionReference:
              type: object
            SessionMechanism:
              type: string
            SessionStartOrEndTime:
              type: string
            SessionDialogueRecord:
              type: string
            SessionDialogueType:
              type: string
            SessionDialogueScript:
              type: string
            SessionDialogueLogReference:
              type: object
            SessionDialogueResult:
              type: string
        Offer:
          type: object
          properties:
            ProductandServiceType:
              type: string
            OfferTaskResult:
              type: string
    InitiateProductorServiceRequest:
      type: object
      properties:
        CustomerContactSessionProcedure:
          type: object
          properties:
            CustomerReference:
              type: object
            EmployeeReference:
              type: object
            ServicingPositionReference:
              type: object
            SessionMechanism:
              type: string
            SessionStartOrEndTime:
              type: string
            SessionDialogueRecord:
              type: string
            SessionDialogueType:
              type: string
            SessionDialogueScript:
              type: string
            SessionDialogueLogReference:
              type: object
            SessionDialogueResult:
              type: string
        ProductorService:
          type: object
          properties:
            ProductInstanceReference:
              type: object
    InitiateProductorServiceResponse:
      type: object
      properties:
        CustomerContactSessionProcedure:
          type: object
          properties:
            SessionStartOrEndTime:
              type: string
            SessionDialogueRecord:
              type: string
            SessionDialogueType:
              type: string
            SessionDialogueScript:
              type: string
            SessionDialogueResult:
              type: string
        ProductorService:
          type: object
          properties:
            ProductandServiceTaskResult:
              type: string
    UpdateProductorServiceRequest:
      type: object
      properties:
        CustomerContactSessionProcedure:
          type: object
          properties:
            SessionDialogueRecord:
              type: string
            SessionDialogueLog:
              type: string
            SessionDialogueResult:
              type: string
        ProductorService:
          type: object
          properties:
            ProductInstanceReference:
              type: object
            ProductandServiceTaskResult:
              type: string
    UpdateProductorServiceResponse:
      type: object
      properties:
        CustomerContactSessionProcedure:
          type: object
          properties:
            SessionDialogueRecord:
              type: string
            SessionDialogueLog:
              type: string
            SessionDialogueResult:
              type: string
        ProductorService:
          type: object
          properties:
            ProductInstanceReference:
              type: object
            ProductandServiceTaskResult:
              type: string
    RetrieveProductorServiceResponse:
      type: object
      properties:
        CustomerContactSessionProcedure:
          type: object
          properties:
            CustomerReference:
              type: object
            EmployeeReference:
              type: object
            ServicingPositionReference:
              type: object
            SessionMechanism:
              type: string
            SessionStartOrEndTime:
              type: string
            SessionDialogueRecord:
              type: string
            SessionDialogueType:
              type: string
            SessionDialogueScript:
              type: string
            SessionDialogueLogReference:
              type: object
            SessionDialogueResult:
              type: string
        ProductorService:
          type: object
          properties:
            ProductInstanceReference:
              type: object
            ProductandServiceTaskResult:
              type: string
    InitiateCaseRequest:
      type: object
      properties:
        CustomerContactSessionProcedure:
          type: object
          properties:
            CustomerReference:
              type: object
            EmployeeReference:
              type: object
            ServicingPositionReference:
              type: object
            SessionMechanism:
              type: string
            SessionStartOrEndTime:
              type: string
            SessionDialogueRecord:
              type: string
            SessionDialogueType:
              type: string
            SessionDialogueScript:
              type: string
            SessionDialogueLogReference:
              type: object
            SessionDialogueResult:
              type: string
        Case:
          type: object
          properties:
            ProductInstanceReference:
              type: object
            CustomerCaseType:
              type: string
    InitiateCaseResponse:
      type: object
      properties:
        CustomerContactSessionProcedure:
          type: object
          properties:
            SessionStartOrEndTime:
              type: string
            SessionDialogueRecord:
              type: string
            SessionDialogueType:
              type: string
            SessionDialogueScript:
              type: string
            SessionDialogueResult:
              type: string
        Case:
          type: object
          properties:
            CaseTaskResult:
              type: string
    UpdateCaseRequest:
      type: object
      properties:
        CustomerContactSessionProcedure:
          type: object
          properties:
            SessionDialogueRecord:
              type: string
            SessionDialogueLog:
              type: string
            SessionDialogueResult:
              type: string
        Case:
          type: object
          properties:
            ProductInstanceReference:
              type: object
            CustomerCaseType:
              type: string
            CaseTaskResult:
              type: string
    UpdateCaseResponse:
      type: object
      properties:
        CustomerContactSessionProcedure:
          type: object
          properties:
            SessionDialogueRecord:
              type: string
            SessionDialogueLog:
              type: string
            SessionDialogueResult:
              type: string
        Case:
          type: object
          properties:
            ProductInstanceReference:
              type: object
            CustomerCaseType:
              type: string
            CaseTaskResult:
              type: string
    RetrieveCaseResponse:
      type: object
      properties:
        CustomerContactSessionProcedure:
          type: object
          properties:
            CustomerReference:
              type: object
            EmployeeReference:
              type: object
            ServicingPositionReference:
              type: object
            SessionMechanism:
              type: string
            SessionStartOrEndTime:
              type: string
            SessionDialogueRecord:
              type: string
            SessionDialogueType:
              type: string
            SessionDialogueScript:
              type: string
            SessionDialogueLogReference:
              type: object
            SessionDialogueResult:
              type: string
        Case:
          type: object
          properties:
            ProductInstanceReference:
              type: object
            CustomerCaseType:
              type: string
            CaseTaskResult:
              type: string
    InitiateOrderRequest:
      type: object
      properties:
        CustomerContactSessionProcedure:
          type: object
          properties:
            CustomerReference:
              type: object
            EmployeeReference:
              type: object
            ServicingPositionReference:
              type: object
            SessionMechanism:
              type: string
            SessionStartOrEndTime:
              type: string
            SessionDialogueRecord:
              type: string
            SessionDialogueType:
              type: string
            SessionDialogueScript:
              type: string
            SessionDialogueLogReference:
              type: object
            SessionDialogueResult:
              type: string
        Order:
          type: object
          properties:
            OrderType:
              type: string
            OrderTaskRecord:
              type: string
    InitiateOrderResponse:
      type: object
      properties:
        CustomerContactSessionProcedure:
          type: object
          properties:
            SessionStartOrEndTime:
              type: string
            SessionDialogueRecord:
              type: string
            SessionDialogueType:
              type: string
            SessionDialogueScript:
              type: string
            SessionDialogueResult:
              type: string
        Order:
          type: object
          properties:
            OrderTaskRecord:
              type: string
            OrderTaskWorkProducts:
              type: string
            OrderTaskWorkResult:
              type: string
    UpdateOrderRequest:
      type: object
      properties:
        CustomerContactSessionProcedure:
          type: object
          properties:
            SessionDialogueRecord:
              type: string
            SessionDialogueLog:
              type: string
            SessionDialogueResult:
              type: string
        Order:
          type: object
          properties:
            OrderType:
              type: string
            OrderTaskRecord:
              type: string
            OrderTaskWorkProducts:
              type: string
            OrderTaskWorkResult:
              type: string
    UpdateOrderResponse:
      type: object
      properties:
        CustomerContactSessionProcedure:
          type: object
          properties:
            SessionDialogueRecord:
              type: string
            SessionDialogueLog:
              type: string
            SessionDialogueResult:
              type: string
        Order:
          type: object
          properties:
            OrderType:
              type: string
            OrderTaskRecord:
              type: string
            OrderTaskWorkProducts:
              type: string
            OrderTaskWorkResult:
              type: string
    RetrieveOrderResponse:
      type: object
      properties:
        CustomerContactSessionProcedure:
          type: object
          properties:
            CustomerReference:
              type: object
            EmployeeReference:
              type: object
            ServicingPositionReference:
              type: object
            SessionMechanism:
              type: string
            SessionStartOrEndTime:
              type: string
            SessionDialogueRecord:
              type: string
            SessionDialogueType:
              type: string
            SessionDialogueScript:
              type: string
            SessionDialogueLogReference:
              type: object
            SessionDialogueResult:
              type: string
        Order:
          type: object
          properties:
            OrderType:
              type: string
            OrderTaskRecord:
              type: string
            OrderTaskWorkProducts:
              type: string
            OrderTaskWorkResult:
              type: string
    InitiateIntelligenceRequest:
      type: object
      properties:
        CustomerContactSessionProcedure:
          type: object
          properties:
            CustomerReference:
              type: object
            EmployeeReference:
              type: object
            ServicingPositionReference:
              type: object
            SessionMechanism:
              type: string
            SessionStartOrEndTime:
              type: string
            SessionDialogueRecord:
              type: string
            SessionDialogueType:
              type: string
            SessionDialogueScript:
              type: string
            SessionDialogueLogReference:
              type: object
            SessionDialogueResult:
              type: string
        Intelligence:
          type: object
          properties:
            BQIntelligenceRecord:
              type: string
            CustomerInsightType:
              type: string
    InitiateIntelligenceResponse:
      type: object
      properties:
        CustomerContactSessionProcedure:
          type: object
          properties:
            SessionStartOrEndTime:
              type: string
            SessionDialogueRecord:
              type: string
            SessionDialogueType:
              type: string
            SessionDialogueScript:
              type: string
            SessionDialogueResult:
              type: string
        Intelligence:
          type: object
          properties:
            BQIntelligenceRecord:
              type: string
            CustomerInsightType:
              type: string
            InsightTaskResult:
              type: string
    UpdateIntelligenceRequest:
      type: object
      properties:
        CustomerContactSessionProcedure:
          type: object
          properties:
            SessionDialogueRecord:
              type: string
            SessionDialogueLog:
              type: string
            SessionDialogueResult:
              type: string
        Intelligence:
          type: object
          properties:
            BQIntelligenceRecord:
              type: string
            CustomerInsightType:
              type: string
            InsightTaskResult:
              type: string
    UpdateIntelligenceResponse:
      type: object
      properties:
        CustomerContactSessionProcedure:
          type: object
          properties:
            SessionDialogueRecord:
              type: string
            SessionDialogueLog:
              type: string
            SessionDialogueResult:
              type: string
        Intelligence:
          type: object
          properties:
            BQIntelligenceRecord:
              type: string
            CustomerInsightType:
              type: string
            InsightTaskResult:
              type: string
    RetrieveIntelligenceResponse:
      type: object
      properties:
        CustomerContactSessionProcedure:
          type: object
          properties:
            CustomerReference:
              type: object
            EmployeeReference:
              type: object
            ServicingPositionReference:
              type: object
            SessionMechanism:
              type: string
            SessionStartOrEndTime:
              type: string
            SessionDialogueRecord:
              type: string
            SessionDialogueType:
              type: string
            SessionDialogueScript:
              type: string
            SessionDialogueLogReference:
              type: object
            SessionDialogueResult:
              type: string
        Intelligence:
          type: object
          properties:
            BQIntelligenceRecord:
              type: string
            CustomerInsightType:
              type: string
            InsightTaskResult:
              type: string
    UpdateHistoryRequest:
      type: object
      properties:
        CustomerContactSessionProcedure:
          type: object
          properties:
            SessionDialogueRecord:
              type: string
            SessionDialogueLog:
              type: string
            SessionDialogueResult:
              type: string
        History:
          type: object
          properties:
            HistoryTaskResult:
              type: string
    UpdateHistoryResponse:
      type: object
      properties:
        CustomerContactSessionProcedure:
          type: object
          properties:
            SessionDialogueRecord:
              type: string
            SessionDialogueLog:
              type: string
            SessionDialogueResult:
              type: string
        History:
          type: object
          properties:
            HistoryTaskResult:
              type: string
    RetrieveHistoryResponse:
      type: object
      properties:
        CustomerContactSessionProcedure:
          type: object
          properties:
            CustomerReference:
              type: object
            EmployeeReference:
              type: object
            ServicingPositionReference:
              type: object
            SessionMechanism:
              type: string
            SessionStartOrEndTime:
              type: string
            SessionDialogueRecord:
              type: string
            SessionDialogueType:
              type: string
            SessionDialogueScript:
              type: string
            SessionDialogueLogReference:
              type: object
            SessionDialogueResult:
              type: string
        History:
          type: object
          properties:
            HistoryTaskResult:
              type: string
  parameters:
    SessionDialogueID:
      name: sessiondialogueId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    CaseID:
      name: caseId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    QueryID:
      name: queryId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    IntelligenceID:
      name: intelligenceId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    OrderID:
      name: orderId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    OfferID:
      name: offerId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    HistoryID:
      name: historyId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    SalesID:
      name: salesId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    ProductorServiceID:
      name: productorserviceId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    AuthenticationID:
      name: authenticationId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
  requestBodies:
    InitiateCustomerContactSessionProcedureRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateCustomerContactSessionProcedureRequest'
    UpdateCustomerContactSessionProcedureRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateCustomerContactSessionProcedureRequest'
    ExecuteCustomerContactSessionProcedureRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExecuteCustomerContactSessionProcedureRequest'
    RequestCustomerContactSessionProcedureRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestCustomerContactSessionProcedureRequest'
    InitiateQueryRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateQueryRequest'
    UpdateQueryRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateQueryRequest'
    UpdateAuthenticationRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateAuthenticationRequest'
    InitiateSalesRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateSalesRequest'
    UpdateSalesRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateSalesRequest'
    InitiateOfferRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateOfferRequest'
    UpdateOfferRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateOfferRequest'
    InitiateProductorServiceRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateProductorServiceRequest'
    UpdateProductorServiceRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateProductorServiceRequest'
    InitiateCaseRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateCaseRequest'
    UpdateCaseRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateCaseRequest'
    InitiateOrderRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateOrderRequest'
    UpdateOrderRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateOrderRequest'
    InitiateIntelligenceRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateIntelligenceRequest'
    UpdateIntelligenceRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateIntelligenceRequest'
    UpdateHistoryRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateHistoryRequest'
  responses:
    HTTPError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    BadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequestsError:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
...
