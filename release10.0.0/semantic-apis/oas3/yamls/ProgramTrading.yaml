openapi: 3.0.1
info:
  title: Program Trading
  description: This Service Domain supports a program trading capability where the trading decisions are made based on predefined/programmed rules and policies. Manual oversight and monitoring capabilities are supported as appropriate
  version: 10.0.0
servers:
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/B154/ProgramTrading/10.0.0
paths:
  /ProgramTrading/{programtradingId}/Control:
    put:
      tags:
      - CR - ProgramTradingOperatingSession
      summary: Control Program Trading Operating Session
      description: Control Program Trading Operating Session
      operationId: Control
      parameters:
      - $ref: '#/components/parameters/ProgramTradingID'
      requestBody:
        $ref: '#/components/requestBodies/ProgramTradingOperatingSession'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgramTradingOperatingSession'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProgramTrading/{programtradingId}/Exchange:
    put:
      tags:
      - CR - ProgramTradingOperatingSession
      summary: Exchange Program Trading Operating Session
      description: Exchange Program Trading Operating Session
      operationId: Exchange
      parameters:
      - $ref: '#/components/parameters/ProgramTradingID'
      requestBody:
        $ref: '#/components/requestBodies/ProgramTradingOperatingSession'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgramTradingOperatingSession'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProgramTrading/{programtradingId}/Execute:
    put:
      tags:
      - CR - ProgramTradingOperatingSession
      summary: Execute Program Trading Operating Session
      description: Execute Program Trading Operating Session
      operationId: Execute
      parameters:
      - $ref: '#/components/parameters/ProgramTradingID'
      requestBody:
        $ref: '#/components/requestBodies/ProgramTradingOperatingSession'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgramTradingOperatingSession'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProgramTrading/Initiate:
    post:
      tags:
      - CR - ProgramTradingOperatingSession
      summary: Initiate Program Trading Operating Session
      description: Initiate Program Trading Operating Session
      operationId: Initiate
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/ProgramTradingOperatingSession'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgramTradingOperatingSession'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProgramTrading/{programtradingId}/Notify:
    get:
      tags:
      - CR - ProgramTradingOperatingSession
      summary: Notify Program Trading Operating Session
      description: Notify Program Trading Operating Session
      operationId: Notify
      parameters:
      - $ref: '#/components/parameters/ProgramTradingID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgramTradingOperatingSession'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProgramTrading/{programtradingId}/Request:
    put:
      tags:
      - CR - ProgramTradingOperatingSession
      summary: Request Program Trading Operating Session
      description: Request Program Trading Operating Session
      operationId: Request
      parameters:
      - $ref: '#/components/parameters/ProgramTradingID'
      requestBody:
        $ref: '#/components/requestBodies/ProgramTradingOperatingSession'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgramTradingOperatingSession'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProgramTrading/{programtradingId}/Retrieve:
    get:
      tags:
      - CR - ProgramTradingOperatingSession
      summary: Retrieve Program Trading Operating Session
      description: Retrieve Program Trading Operating Session
      operationId: Retrieve
      parameters:
      - $ref: '#/components/parameters/ProgramTradingID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgramTradingOperatingSession'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProgramTrading/{programtradingId}/Update:
    put:
      tags:
      - CR - ProgramTradingOperatingSession
      summary: Update Program Trading Operating Session
      description: Update Program Trading Operating Session
      operationId: Update
      parameters:
      - $ref: '#/components/parameters/ProgramTradingID'
      requestBody:
        $ref: '#/components/requestBodies/ProgramTradingOperatingSession'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgramTradingOperatingSession'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProgramTrading/{programtradingId}/ProgramTradeExecutionFunction/{programtradeexecutionfunctionId}/Exchange:
    put:
      tags:
      - BQ - ProgramTradeExecutionFunction
      summary: Exchange Program Trade Execution Function
      description: Exchange Program Trade Execution Function
      operationId: ExchangeProgramTradeExecutionFunction
      parameters:
      - $ref: '#/components/parameters/ProgramTradingID'
      - $ref: '#/components/parameters/ProgramTradeExecutionFunctionID'
      requestBody:
        $ref: '#/components/requestBodies/ProgramTradeExecutionFunction'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgramTradeExecutionFunction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProgramTrading/{programtradingId}/ProgramTradedPortfolioAlgorithmFunction/{programtradedportfolioalgorithmfunctionId}/Exchange:
    put:
      tags:
      - BQ - ProgramTradedPortfolioAlgorithmFunction
      summary: Exchange Program Traded Portfolio Algorithm Function
      description: Exchange Program Traded Portfolio Algorithm Function
      operationId: ExchangeProgramTradedPortfolioAlgorithmFunction
      parameters:
      - $ref: '#/components/parameters/ProgramTradingID'
      - $ref: '#/components/parameters/ProgramTradedPortfolioAlgorithmFunctionID'
      requestBody:
        $ref: '#/components/requestBodies/ProgramTradedPortfolioAlgorithmFunction'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgramTradedPortfolioAlgorithmFunction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  ? /ProgramTrading/{programtradingId}/ProgramTradedPortfolioMaintenanceFunction/{programtradedportfoliomaintenancefunctionId}/Exchange
  : put:
      tags:
      - BQ - ProgramTradedPortfolioMaintenanceFunction
      summary: Exchange Program Traded Portfolio Maintenance Function
      description: Exchange Program Traded Portfolio Maintenance Function
      operationId: ExchangeProgramTradedPortfolioMaintenanceFunction
      parameters:
      - $ref: '#/components/parameters/ProgramTradingID'
      - $ref: '#/components/parameters/ProgramTradedPortfolioMaintenanceFunctionID'
      requestBody:
        $ref: '#/components/requestBodies/ProgramTradedPortfolioMaintenanceFunction'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgramTradedPortfolioMaintenanceFunction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProgramTrading/{programtradingId}/ProgramTradeExecutionFunction/{programtradeexecutionfunctionId}/Execute:
    put:
      tags:
      - BQ - ProgramTradeExecutionFunction
      summary: Execute Program Trade Execution Function
      description: Execute Program Trade Execution Function
      operationId: ExecuteProgramTradeExecutionFunction
      parameters:
      - $ref: '#/components/parameters/ProgramTradingID'
      - $ref: '#/components/parameters/ProgramTradeExecutionFunctionID'
      requestBody:
        $ref: '#/components/requestBodies/ProgramTradeExecutionFunction'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgramTradeExecutionFunction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProgramTrading/{programtradingId}/ProgramTradedPortfolioAlgorithmFunction/{programtradedportfolioalgorithmfunctionId}/Execute:
    put:
      tags:
      - BQ - ProgramTradedPortfolioAlgorithmFunction
      summary: Execute Program Traded Portfolio Algorithm Function
      description: Execute Program Traded Portfolio Algorithm Function
      operationId: ExecuteProgramTradedPortfolioAlgorithmFunction
      parameters:
      - $ref: '#/components/parameters/ProgramTradingID'
      - $ref: '#/components/parameters/ProgramTradedPortfolioAlgorithmFunctionID'
      requestBody:
        $ref: '#/components/requestBodies/ProgramTradedPortfolioAlgorithmFunction'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgramTradedPortfolioAlgorithmFunction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  ? /ProgramTrading/{programtradingId}/ProgramTradedPortfolioMaintenanceFunction/{programtradedportfoliomaintenancefunctionId}/Execute
  : put:
      tags:
      - BQ - ProgramTradedPortfolioMaintenanceFunction
      summary: Execute Program Traded Portfolio Maintenance Function
      description: Execute Program Traded Portfolio Maintenance Function
      operationId: ExecuteProgramTradedPortfolioMaintenanceFunction
      parameters:
      - $ref: '#/components/parameters/ProgramTradingID'
      - $ref: '#/components/parameters/ProgramTradedPortfolioMaintenanceFunctionID'
      requestBody:
        $ref: '#/components/requestBodies/ProgramTradedPortfolioMaintenanceFunction'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgramTradedPortfolioMaintenanceFunction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProgramTrading/{programtradingId}/ProgramTradeExecutionFunction/Initiate:
    post:
      tags:
      - BQ - ProgramTradeExecutionFunction
      summary: Initiate Program Trade Execution Function
      description: Initiate Program Trade Execution Function
      operationId: InitiateProgramTradeExecutionFunction
      parameters:
      - $ref: '#/components/parameters/ProgramTradingID'
      requestBody:
        $ref: '#/components/requestBodies/ProgramTradeExecutionFunction'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgramTradeExecutionFunction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProgramTrading/{programtradingId}/ProgramTradedPortfolioAlgorithmFunction/Initiate:
    post:
      tags:
      - BQ - ProgramTradedPortfolioAlgorithmFunction
      summary: Initiate Program Traded Portfolio Algorithm Function
      description: Initiate Program Traded Portfolio Algorithm Function
      operationId: InitiateProgramTradedPortfolioAlgorithmFunction
      parameters:
      - $ref: '#/components/parameters/ProgramTradingID'
      requestBody:
        $ref: '#/components/requestBodies/ProgramTradedPortfolioAlgorithmFunction'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgramTradedPortfolioAlgorithmFunction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProgramTrading/{programtradingId}/ProgramTradedPortfolioMaintenanceFunction/Initiate:
    post:
      tags:
      - BQ - ProgramTradedPortfolioMaintenanceFunction
      summary: Initiate Program Traded Portfolio Maintenance Function
      description: Initiate Program Traded Portfolio Maintenance Function
      operationId: InitiateProgramTradedPortfolioMaintenanceFunction
      parameters:
      - $ref: '#/components/parameters/ProgramTradingID'
      requestBody:
        $ref: '#/components/requestBodies/ProgramTradedPortfolioMaintenanceFunction'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgramTradedPortfolioMaintenanceFunction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProgramTrading/{programtradingId}/ProgramTradeExecutionFunction/{programtradeexecutionfunctionId}/Notify:
    get:
      tags:
      - BQ - ProgramTradeExecutionFunction
      summary: Notify Program Trade Execution Function
      description: Notify Program Trade Execution Function
      operationId: NotifyProgramTradeExecutionFunction
      parameters:
      - $ref: '#/components/parameters/ProgramTradingID'
      - $ref: '#/components/parameters/ProgramTradeExecutionFunctionID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgramTradeExecutionFunction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProgramTrading/{programtradingId}/ProgramTradedPortfolioAlgorithmFunction/{programtradedportfolioalgorithmfunctionId}/Notify:
    get:
      tags:
      - BQ - ProgramTradedPortfolioAlgorithmFunction
      summary: Notify Program Traded Portfolio Algorithm Function
      description: Notify Program Traded Portfolio Algorithm Function
      operationId: NotifyProgramTradedPortfolioAlgorithmFunction
      parameters:
      - $ref: '#/components/parameters/ProgramTradingID'
      - $ref: '#/components/parameters/ProgramTradedPortfolioAlgorithmFunctionID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgramTradedPortfolioAlgorithmFunction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  ? /ProgramTrading/{programtradingId}/ProgramTradedPortfolioMaintenanceFunction/{programtradedportfoliomaintenancefunctionId}/Notify
  : get:
      tags:
      - BQ - ProgramTradedPortfolioMaintenanceFunction
      summary: Notify Program Traded Portfolio Maintenance Function
      description: Notify Program Traded Portfolio Maintenance Function
      operationId: NotifyProgramTradedPortfolioMaintenanceFunction
      parameters:
      - $ref: '#/components/parameters/ProgramTradingID'
      - $ref: '#/components/parameters/ProgramTradedPortfolioMaintenanceFunctionID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgramTradedPortfolioMaintenanceFunction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProgramTrading/{programtradingId}/ProgramTradeExecutionFunction/{programtradeexecutionfunctionId}/Request:
    put:
      tags:
      - BQ - ProgramTradeExecutionFunction
      summary: Request Program Trade Execution Function
      description: Request Program Trade Execution Function
      operationId: RequestProgramTradeExecutionFunction
      parameters:
      - $ref: '#/components/parameters/ProgramTradingID'
      - $ref: '#/components/parameters/ProgramTradeExecutionFunctionID'
      requestBody:
        $ref: '#/components/requestBodies/ProgramTradeExecutionFunction'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgramTradeExecutionFunction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProgramTrading/{programtradingId}/ProgramTradedPortfolioAlgorithmFunction/{programtradedportfolioalgorithmfunctionId}/Request:
    put:
      tags:
      - BQ - ProgramTradedPortfolioAlgorithmFunction
      summary: Request Program Traded Portfolio Algorithm Function
      description: Request Program Traded Portfolio Algorithm Function
      operationId: RequestProgramTradedPortfolioAlgorithmFunction
      parameters:
      - $ref: '#/components/parameters/ProgramTradingID'
      - $ref: '#/components/parameters/ProgramTradedPortfolioAlgorithmFunctionID'
      requestBody:
        $ref: '#/components/requestBodies/ProgramTradedPortfolioAlgorithmFunction'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgramTradedPortfolioAlgorithmFunction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  ? /ProgramTrading/{programtradingId}/ProgramTradedPortfolioMaintenanceFunction/{programtradedportfoliomaintenancefunctionId}/Request
  : put:
      tags:
      - BQ - ProgramTradedPortfolioMaintenanceFunction
      summary: Request Program Traded Portfolio Maintenance Function
      description: Request Program Traded Portfolio Maintenance Function
      operationId: RequestProgramTradedPortfolioMaintenanceFunction
      parameters:
      - $ref: '#/components/parameters/ProgramTradingID'
      - $ref: '#/components/parameters/ProgramTradedPortfolioMaintenanceFunctionID'
      requestBody:
        $ref: '#/components/requestBodies/ProgramTradedPortfolioMaintenanceFunction'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgramTradedPortfolioMaintenanceFunction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProgramTrading/{programtradingId}/ProgramTradeExecutionFunction/{programtradeexecutionfunctionId}/Retrieve:
    get:
      tags:
      - BQ - ProgramTradeExecutionFunction
      summary: Retrieve Program Trade Execution Function
      description: Retrieve Program Trade Execution Function
      operationId: RetrieveProgramTradeExecutionFunction
      parameters:
      - $ref: '#/components/parameters/ProgramTradingID'
      - $ref: '#/components/parameters/ProgramTradeExecutionFunctionID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgramTradeExecutionFunction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProgramTrading/{programtradingId}/ProgramTradedPortfolioAlgorithmFunction/{programtradedportfolioalgorithmfunctionId}/Retrieve:
    get:
      tags:
      - BQ - ProgramTradedPortfolioAlgorithmFunction
      summary: Retrieve Program Traded Portfolio Algorithm Function
      description: Retrieve Program Traded Portfolio Algorithm Function
      operationId: RetrieveProgramTradedPortfolioAlgorithmFunction
      parameters:
      - $ref: '#/components/parameters/ProgramTradingID'
      - $ref: '#/components/parameters/ProgramTradedPortfolioAlgorithmFunctionID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgramTradedPortfolioAlgorithmFunction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  ? /ProgramTrading/{programtradingId}/ProgramTradedPortfolioMaintenanceFunction/{programtradedportfoliomaintenancefunctionId}/Retrieve
  : get:
      tags:
      - BQ - ProgramTradedPortfolioMaintenanceFunction
      summary: Retrieve Program Traded Portfolio Maintenance Function
      description: Retrieve Program Traded Portfolio Maintenance Function
      operationId: RetrieveProgramTradedPortfolioMaintenanceFunction
      parameters:
      - $ref: '#/components/parameters/ProgramTradingID'
      - $ref: '#/components/parameters/ProgramTradedPortfolioMaintenanceFunctionID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgramTradedPortfolioMaintenanceFunction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProgramTrading/{programtradingId}/ProgramTradeExecutionFunction/{programtradeexecutionfunctionId}/Update:
    put:
      tags:
      - BQ - ProgramTradeExecutionFunction
      summary: Update Program Trade Execution Function
      description: Update Program Trade Execution Function
      operationId: UpdateProgramTradeExecutionFunction
      parameters:
      - $ref: '#/components/parameters/ProgramTradingID'
      - $ref: '#/components/parameters/ProgramTradeExecutionFunctionID'
      requestBody:
        $ref: '#/components/requestBodies/ProgramTradeExecutionFunction'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgramTradeExecutionFunction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProgramTrading/{programtradingId}/ProgramTradedPortfolioAlgorithmFunction/{programtradedportfolioalgorithmfunctionId}/Update:
    put:
      tags:
      - BQ - ProgramTradedPortfolioAlgorithmFunction
      summary: Update Program Traded Portfolio Algorithm Function
      description: Update Program Traded Portfolio Algorithm Function
      operationId: UpdateProgramTradedPortfolioAlgorithmFunction
      parameters:
      - $ref: '#/components/parameters/ProgramTradingID'
      - $ref: '#/components/parameters/ProgramTradedPortfolioAlgorithmFunctionID'
      requestBody:
        $ref: '#/components/requestBodies/ProgramTradedPortfolioAlgorithmFunction'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgramTradedPortfolioAlgorithmFunction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  ? /ProgramTrading/{programtradingId}/ProgramTradedPortfolioMaintenanceFunction/{programtradedportfoliomaintenancefunctionId}/Update
  : put:
      tags:
      - BQ - ProgramTradedPortfolioMaintenanceFunction
      summary: Update Program Traded Portfolio Maintenance Function
      description: Update Program Traded Portfolio Maintenance Function
      operationId: UpdateProgramTradedPortfolioMaintenanceFunction
      parameters:
      - $ref: '#/components/parameters/ProgramTradingID'
      - $ref: '#/components/parameters/ProgramTradedPortfolioMaintenanceFunctionID'
      requestBody:
        $ref: '#/components/requestBodies/ProgramTradedPortfolioMaintenanceFunction'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgramTradedPortfolioMaintenanceFunction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    ProgramTradingOperatingSession:
      type: object
      properties:
        ProgramTradingOperatingSessionSchedule:
          type: object
        ProgramTradingOperatingSessionStatus:
          type: string
        ProgramTradingOperatingSessionUsageLog:
          type: string
        ProgramTradingOperatingSessionAssociatedPartyReference:
          type: object
        ProgramTradingOperatingSessionServiceProviderReference:
          type: object
        ProgramTradingOperatingSessionType:
          type: string
        ProgramTradingOperatingSessionServiceProviderSchedule:
          type: object
        ProgramTradingOperatingSessionServiceType:
          type: string
        ProgramTradingOperatingSessionServiceConfiguration:
          type: string
        ProgramTradingOperatingSessionReference:
          type: string
    ProgramTradeExecutionFunction:
      type: object
      properties:
        Preconditions:
          type: object
        Schedule:
          type: object
        BusinessService:
          type: object
        ProgramTradingOperatingSessionReference:
          type: string
        ProgramTradeExecutionFunctionReference:
          type: string
        ProgramTradeExecutionFunctionType:
          type: string
    ProgramTradedPortfolioAlgorithmFunction:
      type: object
      properties:
        Preconditions:
          type: object
        Schedule:
          type: object
        BusinessService:
          type: object
        ProgramTradingOperatingSessionReference:
          type: string
        ProgramTradedPortfolioAlgorithmFunctionReference:
          type: string
        ProgramTradedPortfolioAlgorithmFunctionType:
          type: string
    ProgramTradedPortfolioMaintenanceFunction:
      type: object
      properties:
        Preconditions:
          type: object
        Schedule:
          type: object
        BusinessService:
          type: object
        ProgramTradingOperatingSessionReference:
          type: string
        ProgramTradedPortfolioMaintenanceFunctionReference:
          type: string
        ProgramTradedPortfolioMaintenanceFunctionType:
          type: string
    ProgramTradingOutcome:
      type: object
      properties:
        ProgramTradingIncident:
          type: string
        ProgramTradingProvision:
          type: string
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
        status:
          type: string
        message:
          type: string
  parameters:
    ProgramTradingID:
      name: programtradingId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    ProgramTradeExecutionFunctionID:
      name: programtradeexecutionfunctionId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    ProgramTradedPortfolioAlgorithmFunctionID:
      name: programtradedportfolioalgorithmfunctionId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    ProgramTradedPortfolioMaintenanceFunctionID:
      name: programtradedportfoliomaintenancefunctionId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    ProgramTradingOutcomeID:
      name: programtradingoutcomeId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
  requestBodies:
    ProgramTradingOperatingSession:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProgramTradingOperatingSession'
    ProgramTradeExecutionFunction:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProgramTradeExecutionFunction'
    ProgramTradedPortfolioAlgorithmFunction:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProgramTradedPortfolioAlgorithmFunction'
    ProgramTradedPortfolioMaintenanceFunction:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProgramTradedPortfolioMaintenanceFunction'
  responses:
    HTTPError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    BadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequestsError:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
...
