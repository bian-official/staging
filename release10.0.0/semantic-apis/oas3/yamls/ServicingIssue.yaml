openapi: 3.0.1
info:
  title: Servicing Issue
  description: This Service Domain handles production customer servicing issues detected in the customer servicing environment
  version: 10.0.0
servers:
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/B154/ServicingIssue/10.0.0
paths:
  /ServicingIssue/{servicingissueId}/Control:
    put:
      tags:
      - CR - ServicingIssueProcedure
      summary: Control Servicing Issue Procedure
      description: Control Servicing Issue Procedure
      operationId: Control
      parameters:
      - $ref: '#/components/parameters/ServicingIssueID'
      requestBody:
        $ref: '#/components/requestBodies/ServicingIssueProcedure'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicingIssueProcedure'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ServicingIssue/{servicingissueId}/Exchange:
    put:
      tags:
      - CR - ServicingIssueProcedure
      summary: Exchange Servicing Issue Procedure
      description: Exchange Servicing Issue Procedure
      operationId: Exchange
      parameters:
      - $ref: '#/components/parameters/ServicingIssueID'
      requestBody:
        $ref: '#/components/requestBodies/ServicingIssueProcedure'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicingIssueProcedure'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ServicingIssue/{servicingissueId}/Execute:
    put:
      tags:
      - CR - ServicingIssueProcedure
      summary: Execute Servicing Issue Procedure
      description: Execute Servicing Issue Procedure
      operationId: Execute
      parameters:
      - $ref: '#/components/parameters/ServicingIssueID'
      requestBody:
        $ref: '#/components/requestBodies/ServicingIssueProcedure'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicingIssueProcedure'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ServicingIssue/Initiate:
    post:
      tags:
      - CR - ServicingIssueProcedure
      summary: Initiate Servicing Issue Procedure
      description: Initiate Servicing Issue Procedure
      operationId: Initiate
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/ServicingIssueProcedure'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicingIssueProcedure'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ServicingIssue/{servicingissueId}/Notify:
    get:
      tags:
      - CR - ServicingIssueProcedure
      summary: Notify Servicing Issue Procedure
      description: Notify Servicing Issue Procedure
      operationId: Notify
      parameters:
      - $ref: '#/components/parameters/ServicingIssueID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicingIssueProcedure'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ServicingIssue/{servicingissueId}/Request:
    put:
      tags:
      - CR - ServicingIssueProcedure
      summary: Request Servicing Issue Procedure
      description: Request Servicing Issue Procedure
      operationId: Request
      parameters:
      - $ref: '#/components/parameters/ServicingIssueID'
      requestBody:
        $ref: '#/components/requestBodies/ServicingIssueProcedure'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicingIssueProcedure'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ServicingIssue/{servicingissueId}/Retrieve:
    get:
      tags:
      - CR - ServicingIssueProcedure
      summary: Retrieve Servicing Issue Procedure
      description: Retrieve Servicing Issue Procedure
      operationId: Retrieve
      parameters:
      - $ref: '#/components/parameters/ServicingIssueID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicingIssueProcedure'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ServicingIssue/{servicingissueId}/Update:
    put:
      tags:
      - CR - ServicingIssueProcedure
      summary: Update Servicing Issue Procedure
      description: Update Servicing Issue Procedure
      operationId: Update
      parameters:
      - $ref: '#/components/parameters/ServicingIssueID'
      requestBody:
        $ref: '#/components/requestBodies/ServicingIssueProcedure'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicingIssueProcedure'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ServicingIssue/{servicingissueId}/ProductionIssueAnalysisWorkstep/{productionissueanalysisworkstepId}/Exchange:
    put:
      tags:
      - BQ - ProductionIssueAnalysisWorkstep
      summary: Exchange Production Issue Analysis Workstep
      description: Exchange Production Issue Analysis Workstep
      operationId: ExchangeProductionIssueAnalysisWorkstep
      parameters:
      - $ref: '#/components/parameters/ServicingIssueID'
      - $ref: '#/components/parameters/ProductionIssueAnalysisWorkstepID'
      requestBody:
        $ref: '#/components/requestBodies/ProductionIssueAnalysisWorkstep'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductionIssueAnalysisWorkstep'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ServicingIssue/{servicingissueId}/ProductionIssueDeterminationWorkstep/{productionissuedeterminationworkstepId}/Exchange:
    put:
      tags:
      - BQ - ProductionIssueDeterminationWorkstep
      summary: Exchange Production Issue Determination Workstep
      description: Exchange Production Issue Determination Workstep
      operationId: ExchangeProductionIssueDeterminationWorkstep
      parameters:
      - $ref: '#/components/parameters/ServicingIssueID'
      - $ref: '#/components/parameters/ProductionIssueDeterminationWorkstepID'
      requestBody:
        $ref: '#/components/requestBodies/ProductionIssueDeterminationWorkstep'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductionIssueDeterminationWorkstep'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ServicingIssue/{servicingissueId}/ProductionIssueResolutionWorkstep/{productionissueresolutionworkstepId}/Exchange:
    put:
      tags:
      - BQ - ProductionIssueResolutionWorkstep
      summary: Exchange Production Issue Resolution Workstep
      description: Exchange Production Issue Resolution Workstep
      operationId: ExchangeProductionIssueResolutionWorkstep
      parameters:
      - $ref: '#/components/parameters/ServicingIssueID'
      - $ref: '#/components/parameters/ProductionIssueResolutionWorkstepID'
      requestBody:
        $ref: '#/components/requestBodies/ProductionIssueResolutionWorkstep'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductionIssueResolutionWorkstep'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ServicingIssue/{servicingissueId}/ProductionIssueAnalysisWorkstep/{productionissueanalysisworkstepId}/Execute:
    put:
      tags:
      - BQ - ProductionIssueAnalysisWorkstep
      summary: Execute Production Issue Analysis Workstep
      description: Execute Production Issue Analysis Workstep
      operationId: ExecuteProductionIssueAnalysisWorkstep
      parameters:
      - $ref: '#/components/parameters/ServicingIssueID'
      - $ref: '#/components/parameters/ProductionIssueAnalysisWorkstepID'
      requestBody:
        $ref: '#/components/requestBodies/ProductionIssueAnalysisWorkstep'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductionIssueAnalysisWorkstep'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ServicingIssue/{servicingissueId}/ProductionIssueDeterminationWorkstep/{productionissuedeterminationworkstepId}/Execute:
    put:
      tags:
      - BQ - ProductionIssueDeterminationWorkstep
      summary: Execute Production Issue Determination Workstep
      description: Execute Production Issue Determination Workstep
      operationId: ExecuteProductionIssueDeterminationWorkstep
      parameters:
      - $ref: '#/components/parameters/ServicingIssueID'
      - $ref: '#/components/parameters/ProductionIssueDeterminationWorkstepID'
      requestBody:
        $ref: '#/components/requestBodies/ProductionIssueDeterminationWorkstep'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductionIssueDeterminationWorkstep'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ServicingIssue/{servicingissueId}/ProductionIssueResolutionWorkstep/{productionissueresolutionworkstepId}/Execute:
    put:
      tags:
      - BQ - ProductionIssueResolutionWorkstep
      summary: Execute Production Issue Resolution Workstep
      description: Execute Production Issue Resolution Workstep
      operationId: ExecuteProductionIssueResolutionWorkstep
      parameters:
      - $ref: '#/components/parameters/ServicingIssueID'
      - $ref: '#/components/parameters/ProductionIssueResolutionWorkstepID'
      requestBody:
        $ref: '#/components/requestBodies/ProductionIssueResolutionWorkstep'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductionIssueResolutionWorkstep'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ServicingIssue/{servicingissueId}/ProductionIssueAnalysisWorkstep/Initiate:
    post:
      tags:
      - BQ - ProductionIssueAnalysisWorkstep
      summary: Initiate Production Issue Analysis Workstep
      description: Initiate Production Issue Analysis Workstep
      operationId: InitiateProductionIssueAnalysisWorkstep
      parameters:
      - $ref: '#/components/parameters/ServicingIssueID'
      requestBody:
        $ref: '#/components/requestBodies/ProductionIssueAnalysisWorkstep'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductionIssueAnalysisWorkstep'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ServicingIssue/{servicingissueId}/ProductionIssueDeterminationWorkstep/Initiate:
    post:
      tags:
      - BQ - ProductionIssueDeterminationWorkstep
      summary: Initiate Production Issue Determination Workstep
      description: Initiate Production Issue Determination Workstep
      operationId: InitiateProductionIssueDeterminationWorkstep
      parameters:
      - $ref: '#/components/parameters/ServicingIssueID'
      requestBody:
        $ref: '#/components/requestBodies/ProductionIssueDeterminationWorkstep'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductionIssueDeterminationWorkstep'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ServicingIssue/{servicingissueId}/ProductionIssueResolutionWorkstep/Initiate:
    post:
      tags:
      - BQ - ProductionIssueResolutionWorkstep
      summary: Initiate Production Issue Resolution Workstep
      description: Initiate Production Issue Resolution Workstep
      operationId: InitiateProductionIssueResolutionWorkstep
      parameters:
      - $ref: '#/components/parameters/ServicingIssueID'
      requestBody:
        $ref: '#/components/requestBodies/ProductionIssueResolutionWorkstep'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductionIssueResolutionWorkstep'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ServicingIssue/{servicingissueId}/ProductionIssueAnalysisWorkstep/{productionissueanalysisworkstepId}/Notify:
    get:
      tags:
      - BQ - ProductionIssueAnalysisWorkstep
      summary: Notify Production Issue Analysis Workstep
      description: Notify Production Issue Analysis Workstep
      operationId: NotifyProductionIssueAnalysisWorkstep
      parameters:
      - $ref: '#/components/parameters/ServicingIssueID'
      - $ref: '#/components/parameters/ProductionIssueAnalysisWorkstepID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductionIssueAnalysisWorkstep'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ServicingIssue/{servicingissueId}/ProductionIssueDeterminationWorkstep/{productionissuedeterminationworkstepId}/Notify:
    get:
      tags:
      - BQ - ProductionIssueDeterminationWorkstep
      summary: Notify Production Issue Determination Workstep
      description: Notify Production Issue Determination Workstep
      operationId: NotifyProductionIssueDeterminationWorkstep
      parameters:
      - $ref: '#/components/parameters/ServicingIssueID'
      - $ref: '#/components/parameters/ProductionIssueDeterminationWorkstepID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductionIssueDeterminationWorkstep'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ServicingIssue/{servicingissueId}/ProductionIssueResolutionWorkstep/{productionissueresolutionworkstepId}/Notify:
    get:
      tags:
      - BQ - ProductionIssueResolutionWorkstep
      summary: Notify Production Issue Resolution Workstep
      description: Notify Production Issue Resolution Workstep
      operationId: NotifyProductionIssueResolutionWorkstep
      parameters:
      - $ref: '#/components/parameters/ServicingIssueID'
      - $ref: '#/components/parameters/ProductionIssueResolutionWorkstepID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductionIssueResolutionWorkstep'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ServicingIssue/{servicingissueId}/ProductionIssueAnalysisWorkstep/{productionissueanalysisworkstepId}/Request:
    put:
      tags:
      - BQ - ProductionIssueAnalysisWorkstep
      summary: Request Production Issue Analysis Workstep
      description: Request Production Issue Analysis Workstep
      operationId: RequestProductionIssueAnalysisWorkstep
      parameters:
      - $ref: '#/components/parameters/ServicingIssueID'
      - $ref: '#/components/parameters/ProductionIssueAnalysisWorkstepID'
      requestBody:
        $ref: '#/components/requestBodies/ProductionIssueAnalysisWorkstep'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductionIssueAnalysisWorkstep'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ServicingIssue/{servicingissueId}/ProductionIssueDeterminationWorkstep/{productionissuedeterminationworkstepId}/Request:
    put:
      tags:
      - BQ - ProductionIssueDeterminationWorkstep
      summary: Request Production Issue Determination Workstep
      description: Request Production Issue Determination Workstep
      operationId: RequestProductionIssueDeterminationWorkstep
      parameters:
      - $ref: '#/components/parameters/ServicingIssueID'
      - $ref: '#/components/parameters/ProductionIssueDeterminationWorkstepID'
      requestBody:
        $ref: '#/components/requestBodies/ProductionIssueDeterminationWorkstep'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductionIssueDeterminationWorkstep'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ServicingIssue/{servicingissueId}/ProductionIssueResolutionWorkstep/{productionissueresolutionworkstepId}/Request:
    put:
      tags:
      - BQ - ProductionIssueResolutionWorkstep
      summary: Request Production Issue Resolution Workstep
      description: Request Production Issue Resolution Workstep
      operationId: RequestProductionIssueResolutionWorkstep
      parameters:
      - $ref: '#/components/parameters/ServicingIssueID'
      - $ref: '#/components/parameters/ProductionIssueResolutionWorkstepID'
      requestBody:
        $ref: '#/components/requestBodies/ProductionIssueResolutionWorkstep'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductionIssueResolutionWorkstep'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ServicingIssue/{servicingissueId}/ProductionIssueAnalysisWorkstep/{productionissueanalysisworkstepId}/Retrieve:
    get:
      tags:
      - BQ - ProductionIssueAnalysisWorkstep
      summary: Retrieve Production Issue Analysis Workstep
      description: Retrieve Production Issue Analysis Workstep
      operationId: RetrieveProductionIssueAnalysisWorkstep
      parameters:
      - $ref: '#/components/parameters/ServicingIssueID'
      - $ref: '#/components/parameters/ProductionIssueAnalysisWorkstepID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductionIssueAnalysisWorkstep'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ServicingIssue/{servicingissueId}/ProductionIssueDeterminationWorkstep/{productionissuedeterminationworkstepId}/Retrieve:
    get:
      tags:
      - BQ - ProductionIssueDeterminationWorkstep
      summary: Retrieve Production Issue Determination Workstep
      description: Retrieve Production Issue Determination Workstep
      operationId: RetrieveProductionIssueDeterminationWorkstep
      parameters:
      - $ref: '#/components/parameters/ServicingIssueID'
      - $ref: '#/components/parameters/ProductionIssueDeterminationWorkstepID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductionIssueDeterminationWorkstep'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ServicingIssue/{servicingissueId}/ProductionIssueResolutionWorkstep/{productionissueresolutionworkstepId}/Retrieve:
    get:
      tags:
      - BQ - ProductionIssueResolutionWorkstep
      summary: Retrieve Production Issue Resolution Workstep
      description: Retrieve Production Issue Resolution Workstep
      operationId: RetrieveProductionIssueResolutionWorkstep
      parameters:
      - $ref: '#/components/parameters/ServicingIssueID'
      - $ref: '#/components/parameters/ProductionIssueResolutionWorkstepID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductionIssueResolutionWorkstep'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ServicingIssue/{servicingissueId}/ProductionIssueAnalysisWorkstep/{productionissueanalysisworkstepId}/Update:
    put:
      tags:
      - BQ - ProductionIssueAnalysisWorkstep
      summary: Update Production Issue Analysis Workstep
      description: Update Production Issue Analysis Workstep
      operationId: UpdateProductionIssueAnalysisWorkstep
      parameters:
      - $ref: '#/components/parameters/ServicingIssueID'
      - $ref: '#/components/parameters/ProductionIssueAnalysisWorkstepID'
      requestBody:
        $ref: '#/components/requestBodies/ProductionIssueAnalysisWorkstep'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductionIssueAnalysisWorkstep'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ServicingIssue/{servicingissueId}/ProductionIssueDeterminationWorkstep/{productionissuedeterminationworkstepId}/Update:
    put:
      tags:
      - BQ - ProductionIssueDeterminationWorkstep
      summary: Update Production Issue Determination Workstep
      description: Update Production Issue Determination Workstep
      operationId: UpdateProductionIssueDeterminationWorkstep
      parameters:
      - $ref: '#/components/parameters/ServicingIssueID'
      - $ref: '#/components/parameters/ProductionIssueDeterminationWorkstepID'
      requestBody:
        $ref: '#/components/requestBodies/ProductionIssueDeterminationWorkstep'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductionIssueDeterminationWorkstep'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ServicingIssue/{servicingissueId}/ProductionIssueResolutionWorkstep/{productionissueresolutionworkstepId}/Update:
    put:
      tags:
      - BQ - ProductionIssueResolutionWorkstep
      summary: Update Production Issue Resolution Workstep
      description: Update Production Issue Resolution Workstep
      operationId: UpdateProductionIssueResolutionWorkstep
      parameters:
      - $ref: '#/components/parameters/ServicingIssueID'
      - $ref: '#/components/parameters/ProductionIssueResolutionWorkstepID'
      requestBody:
        $ref: '#/components/requestBodies/ProductionIssueResolutionWorkstep'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductionIssueResolutionWorkstep'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    ServicingIssueProcedure:
      type: object
      properties:
        ServicingIssueProcedureParameterType:
          type: string
        ServicingIssueProcedureSelectedOption:
          type: string
        ServicingIssueProcedureRequest:
          type: string
        ServicingIssueProcedureSchedule:
          type: object
        ServicingIssueProcedureStatus:
          type: string
        ServicingIssueProcedureAssociatedPartyReference:
          type: object
        ServicingIssueProcedureBusinessUnitReference:
          type: object
        ServicingIssueProcedureServiceProviderReference:
          type: object
        ServicingIssueProcedureFinancialFacilityReference:
          type: string
        ServicingIssueProcedureEmployeeReference:
          type: object
        ServicingIssueProcedureCustomerReference:
          type: object
        ServicingIssueProcedureType:
          type: string
        ServicingIssueProcedureServiceProviderSchedule:
          type: object
        ServicingIssueProcedureServiceType:
          type: string
        ServicingIssueProcedureProductandServiceType:
          type: string
        ServicingIssueProcedureProductandServiceInstance:
          type: string
        ServicingIssueProcedureTransactionType:
          type: string
        ServicingIssueProcedureTransaction:
          type: string
        ServicingIssueProcedureFinancialTransactionArrangement:
          type: string
        ServicingIssueProcedureCustomerAgreementReference:
          type: string
        ServicingIssueProcedureReference:
          type: string
    ServicingIssueOutcome:
      type: object
      properties:
        ServicingIssueWorkProduct:
          type: object
        ServicingIssueProcedure:
          type: string
    ProductionIssueAnalysisWorkstep:
      type: object
      properties:
        Preconditions:
          type: object
        BusinessUnit/EmployeeReference:
          type: object
        Schedule:
          type: object
        BusinessService:
          type: object
        Postconditions:
          type: object
        ServicingIssueProcedureReference:
          type: string
        ProductionIssueAnalysisWorkstepReference:
          type: string
        ProductionIssueAnalysisWorkstepType:
          type: string
    ProductionIssueDeterminationWorkstep:
      type: object
      properties:
        Preconditions:
          type: object
        BusinessUnit/EmployeeReference:
          type: object
        Schedule:
          type: object
        BusinessService:
          type: object
        Postconditions:
          type: object
        ServicingIssueProcedureReference:
          type: string
        ProductionIssueDeterminationWorkstepReference:
          type: string
        ProductionIssueDeterminationWorkstepType:
          type: string
    ProductionIssueResolutionWorkstep:
      type: object
      properties:
        Preconditions:
          type: object
        BusinessUnit/EmployeeReference:
          type: object
        Schedule:
          type: object
        BusinessService:
          type: object
        Postconditions:
          type: object
        ServicingIssueProcedureReference:
          type: string
        ProductionIssueResolutionWorkstepReference:
          type: string
        ProductionIssueResolutionWorkstepType:
          type: string
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
        status:
          type: string
        message:
          type: string
  parameters:
    ServicingIssueID:
      name: servicingissueId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    ServicingIssueOutcomeID:
      name: servicingissueoutcomeId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    ProductionIssueAnalysisWorkstepID:
      name: productionissueanalysisworkstepId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    ProductionIssueDeterminationWorkstepID:
      name: productionissuedeterminationworkstepId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    ProductionIssueResolutionWorkstepID:
      name: productionissueresolutionworkstepId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
  requestBodies:
    ServicingIssueProcedure:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServicingIssueProcedure'
    ProductionIssueAnalysisWorkstep:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProductionIssueAnalysisWorkstep'
    ProductionIssueDeterminationWorkstep:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProductionIssueDeterminationWorkstep'
    ProductionIssueResolutionWorkstep:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProductionIssueResolutionWorkstep'
  responses:
    HTTPError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    BadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequestsError:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
...
