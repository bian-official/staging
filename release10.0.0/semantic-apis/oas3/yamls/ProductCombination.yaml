openapi: 3.0.1
info:
  title: Product Combination
  description: Product Combination supports bundled products applying necessary constraints on embedded product fulfillment and ensuring product performance analysis takes correct account of embedded products' contribution
  version: 10.0.0
servers:
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/B154/ProductCombination/10.0.0
paths:
  /ProductCombination/{productcombinationId}/Control:
    put:
      tags:
      - CR - ProductCombinationFacility
      summary: CoCR Control the processing of Product Combination Facility
      description: CoCR Control the processing of Product Combination Facility
      operationId: Control
      parameters:
      - $ref: '#/components/parameters/ProductCombinationID'
      requestBody:
        $ref: '#/components/requestBodies/ProductCombinationFacility'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ControlProductCombinationFacilityResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductCombination/{productcombinationId}/Exchange:
    put:
      tags:
      - CR - ProductCombinationFacility
      summary: EcCR Accept, verify, etc. aspects of Product Combination Facility processing
      description: EcCR Accept, verify, etc. aspects of Product Combination Facility processing
      operationId: Exchange
      parameters:
      - $ref: '#/components/parameters/ProductCombinationID'
      requestBody:
        $ref: '#/components/requestBodies/ProductCombinationFacility'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExchangeProductCombinationFacilityResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductCombination/{productcombinationId}/Execute:
    put:
      tags:
      - CR - ProductCombinationFacility
      summary: ExCR Execute an available automated action for Product Combination Facility
      description: ExCR Execute an available automated action for Product Combination Facility
      operationId: Execute
      parameters:
      - $ref: '#/components/parameters/ProductCombinationID'
      requestBody:
        $ref: '#/components/requestBodies/ProductCombinationFacility'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecuteProductCombinationFacilityResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductCombination/Initiate:
    post:
      tags:
      - CR - ProductCombinationFacility
      summary: InCR Instantiate a new Product Combination Facility
      description: InCR Instantiate a new Product Combination Facility
      operationId: Initiate
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/ProductCombinationFacility'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitiateProductCombinationFacilityResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductCombination/{productcombinationId}/Retrieve:
    get:
      tags:
      - CR - ProductCombinationFacility
      summary: ReCR Retrieve details about any aspect of Product Combination Facility
      description: ReCR Retrieve details about any aspect of Product Combination Facility
      operationId: Retrieve
      parameters:
      - $ref: '#/components/parameters/ProductCombinationID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCombinationFacility'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductCombination/{productcombinationId}/Request:
    put:
      tags:
      - CR - ProductCombinationFacility
      summary: RqCR Request manual intervention or a decision with respect to Product Combination Facility
      description: RqCR Request manual intervention or a decision with respect to Product Combination Facility
      operationId: Request
      parameters:
      - $ref: '#/components/parameters/ProductCombinationID'
      requestBody:
        $ref: '#/components/requestBodies/ProductCombinationFacility'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestProductCombinationFacilityResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductCombination/{productcombinationId}/Update:
    put:
      tags:
      - CR - ProductCombinationFacility
      summary: UpCR Update details relating to Product Combination Facility
      description: UpCR Update details relating to Product Combination Facility
      operationId: Update
      parameters:
      - $ref: '#/components/parameters/ProductCombinationID'
      requestBody:
        $ref: '#/components/requestBodies/ProductCombinationFacility'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProductCombinationFacilityResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductCombination/{productcombinationId}/Fulfillment/{fulfillmentId}/Control:
    put:
      tags:
      - BQ - Fulfillment
      summary: CoBQ Control the processing of Fulfillment
      description: CoBQ Control the processing of Fulfillment
      operationId: ControlFulfillment
      parameters:
      - $ref: '#/components/parameters/ProductCombinationID'
      - $ref: '#/components/parameters/FulfillmentID'
      requestBody:
        $ref: '#/components/requestBodies/Fulfillment'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fulfillment'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductCombination/{productcombinationId}/Fulfillment/{fulfillmentId}/Exchange:
    put:
      tags:
      - BQ - Fulfillment
      summary: EcBQ Accept, verify, etc. aspects of Fulfillment processing
      description: EcBQ Accept, verify, etc. aspects of Fulfillment processing
      operationId: ExchangeFulfillment
      parameters:
      - $ref: '#/components/parameters/ProductCombinationID'
      - $ref: '#/components/parameters/FulfillmentID'
      requestBody:
        $ref: '#/components/requestBodies/Fulfillment'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fulfillment'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductCombination/{productcombinationId}/TransferPricing/{transferpricingId}/Exchange:
    put:
      tags:
      - BQ - TransferPricing
      summary: EcBQ Accept, verify, etc. aspects of Transfer Pricing processing
      description: EcBQ Accept, verify, etc. aspects of Transfer Pricing processing
      operationId: ExchangeTransferPricing
      parameters:
      - $ref: '#/components/parameters/ProductCombinationID'
      - $ref: '#/components/parameters/TransferPricingID'
      requestBody:
        $ref: '#/components/requestBodies/TransferPricing'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferPricing'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductCombination/{productcombinationId}/Fulfillment/{fulfillmentId}/Execute:
    put:
      tags:
      - BQ - Fulfillment
      summary: ExBQ Execute an available automated action for Fulfillment
      description: ExBQ Execute an available automated action for Fulfillment
      operationId: ExecuteFulfillment
      parameters:
      - $ref: '#/components/parameters/ProductCombinationID'
      - $ref: '#/components/parameters/FulfillmentID'
      requestBody:
        $ref: '#/components/requestBodies/Fulfillment'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fulfillment'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductCombination/{productcombinationId}/EmbeddedProductControl/Initiate:
    post:
      tags:
      - BQ - EmbeddedProductControl
      summary: InBQ Instantiate a new Embedded Product Control
      description: InBQ Instantiate a new Embedded Product Control
      operationId: InitiateEmbeddedProductControl
      parameters:
      - $ref: '#/components/parameters/ProductCombinationID'
      requestBody:
        $ref: '#/components/requestBodies/EmbeddedProductControl'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmbeddedProductControl'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductCombination/{productcombinationId}/Fulfillment/Initiate:
    post:
      tags:
      - BQ - Fulfillment
      summary: InBQ Instantiate a new Fulfillment
      description: InBQ Instantiate a new Fulfillment
      operationId: InitiateFulfillment
      parameters:
      - $ref: '#/components/parameters/ProductCombinationID'
      requestBody:
        $ref: '#/components/requestBodies/Fulfillment'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fulfillment'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductCombination/{productcombinationId}/EmbeddedProductControl/{embeddedproductcontrolId}/Retrieve:
    get:
      tags:
      - BQ - EmbeddedProductControl
      summary: ReBQ Retrieve details about any aspect of Embedded Product Control
      description: ReBQ Retrieve details about any aspect of Embedded Product Control
      operationId: RetrieveEmbeddedProductControl
      parameters:
      - $ref: '#/components/parameters/ProductCombinationID'
      - $ref: '#/components/parameters/EmbeddedProductControlID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmbeddedProductControl'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductCombination/{productcombinationId}/Fulfillment/{fulfillmentId}/Retrieve:
    get:
      tags:
      - BQ - Fulfillment
      summary: ReBQ Retrieve details about any aspect of Fulfillment
      description: ReBQ Retrieve details about any aspect of Fulfillment
      operationId: RetrieveFulfillment
      parameters:
      - $ref: '#/components/parameters/ProductCombinationID'
      - $ref: '#/components/parameters/FulfillmentID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fulfillment'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductCombination/{productcombinationId}/TransferPricing/{transferpricingId}/Retrieve:
    get:
      tags:
      - BQ - TransferPricing
      summary: ReBQ Retrieve details about any aspect of Transfer Pricing
      description: ReBQ Retrieve details about any aspect of Transfer Pricing
      operationId: RetrieveTransferPricing
      parameters:
      - $ref: '#/components/parameters/ProductCombinationID'
      - $ref: '#/components/parameters/TransferPricingID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferPricing'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductCombination/{productcombinationId}/Fulfillment/{fulfillmentId}/Request:
    put:
      tags:
      - BQ - Fulfillment
      summary: RqBQ Request manual intervention or a decision with respect to Fulfillment
      description: RqBQ Request manual intervention or a decision with respect to Fulfillment
      operationId: RequestFulfillment
      parameters:
      - $ref: '#/components/parameters/ProductCombinationID'
      - $ref: '#/components/parameters/FulfillmentID'
      requestBody:
        $ref: '#/components/requestBodies/Fulfillment'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fulfillment'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductCombination/{productcombinationId}/TransferPricing/{transferpricingId}/Request:
    put:
      tags:
      - BQ - TransferPricing
      summary: RqBQ Request manual intervention or a decision with respect to Transfer Pricing
      description: RqBQ Request manual intervention or a decision with respect to Transfer Pricing
      operationId: RequestTransferPricing
      parameters:
      - $ref: '#/components/parameters/ProductCombinationID'
      - $ref: '#/components/parameters/TransferPricingID'
      requestBody:
        $ref: '#/components/requestBodies/TransferPricing'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferPricing'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductCombination/{productcombinationId}/EmbeddedProductControl/{embeddedproductcontrolId}/Update:
    put:
      tags:
      - BQ - EmbeddedProductControl
      summary: UpBQ Update details relating to Embedded Product Control
      description: UpBQ Update details relating to Embedded Product Control
      operationId: UpdateEmbeddedProductControl
      parameters:
      - $ref: '#/components/parameters/ProductCombinationID'
      - $ref: '#/components/parameters/EmbeddedProductControlID'
      requestBody:
        $ref: '#/components/requestBodies/EmbeddedProductControl'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmbeddedProductControl'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductCombination/{productcombinationId}/Fulfillment/{fulfillmentId}/Update:
    put:
      tags:
      - BQ - Fulfillment
      summary: UpBQ Update details relating to Fulfillment
      description: UpBQ Update details relating to Fulfillment
      operationId: UpdateFulfillment
      parameters:
      - $ref: '#/components/parameters/ProductCombinationID'
      - $ref: '#/components/parameters/FulfillmentID'
      requestBody:
        $ref: '#/components/requestBodies/Fulfillment'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fulfillment'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductCombination/{productcombinationId}/TransferPricing/{transferpricingId}/Update:
    put:
      tags:
      - BQ - TransferPricing
      summary: UpBQ Update details relating to Transfer Pricing
      description: UpBQ Update details relating to Transfer Pricing
      operationId: UpdateTransferPricing
      parameters:
      - $ref: '#/components/parameters/ProductCombinationID'
      - $ref: '#/components/parameters/TransferPricingID'
      requestBody:
        $ref: '#/components/requestBodies/TransferPricing'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferPricing'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    ProductCombinationFacility:
      type: object
      properties:
        ProductCombinationFacilityParameterType:
          type: string
        ProductCombinationFacilitySelectedOption:
          type: string
        ProductCombinationFacilityType:
          type: string
        ProductCombinationFacilityReference:
          type: object
        ProductCombinationFacilitySchedule:
          type: string
        ProductCombinationFacilityStatus:
          type: string
        ProductCombinationFacilityCurrency:
          type: string
        ProductCombinationFacilityRegulationReference:
          type: object
        ProductCombinationFacilityRegulationType:
          type: string
        ProductCombinationFacilityJurisdiction:
          type: string
        ProductCombinationFacilityBookingLocation:
          type: string
        ProductCombinationFacilityAccountType:
          type: string
        ProductCombinationFacilityAccountReference:
          type: object
    ProductCombinationOutcome:
      type: object
      properties:
        ProductCombinationFinancialFacility:
          type: string
        ProductCombinationWorkProduct:
          type: string
    Fulfillment:
      type: object
      properties:
        FulfillmentPreconditions:
          type: string
        FulfillmentFeatureSchedule:
          type: string
        FiduciaryArrangementFulfillment:
          type: object
        FulfillmentPostconditions:
          type: string
        FulfillmentFiduciaryArrangementFulfillmentServiceType:
          type: string
        FulfillmentFiduciaryArrangementFulfillmentServiceDescription:
          type: string
        FulfillmentFiduciaryArrangementFulfillmentServiceInputsandOuputs:
          type: string
        FulfillmentFiduciaryArrangementFulfillmentServiceWorkProduct:
          type: string
        FulfillmentFiduciaryArrangementFulfillmentServiceName:
          type: string
    EmbeddedProductControl:
      type: object
      properties:
        EmbeddedProductControlPreconditions:
          type: string
        EmbeddedProductControlFeatureSchedule:
          type: string
        CombinedProductControl:
          type: object
        EmbeddedProductControlPostconditions:
          type: string
        EmbeddedProductControlCombinedProductControlServiceType:
          type: string
        EmbeddedProductControlCombinedProductControlServiceDescription:
          type: string
        EmbeddedProductControlCombinedProductControlServiceInputsandOuputs:
          type: string
        EmbeddedProductControlCombinedProductControlServiceWorkProduct:
          type: string
        EmbeddedProductControlCombinedProductControlServiceName:
          type: string
    TransferPricing:
      type: object
      properties:
        TransferPricingPreconditions:
          type: string
        TransferPricingFeatureSchedule:
          type: string
        ProductTransferPricing:
          type: object
        TransferPricingPostconditions:
          type: string
        TransferPricingProductTransferPricingServiceType:
          type: string
        TransferPricingProductTransferPricingServiceDescription:
          type: string
        TransferPricingProductTransferPricingServiceInputsandOuputs:
          type: string
        TransferPricingProductTransferPricingServiceWorkProduct:
          type: string
        TransferPricingProductTransferPricingServiceName:
          type: string
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
        status:
          type: string
        message:
          type: string
    ControlProductCombinationFacilityResponse:
      type: object
      properties:
        ProductCombinationFacility:
          type: object
          properties:
            ProductCombinationFacilityParameterType:
              type: string
            ProductCombinationFacilitySelectedOption:
              type: string
            ProductCombinationFacilitySchedule:
              type: string
            ProductCombinationFacilityStatus:
              type: string
    ExchangeProductCombinationFacilityResponse:
      type: object
      properties:
        ProductCombinationFacility:
          type: object
          properties:
            ProductCombinationFacilityParameterType:
              type: string
            ProductCombinationFacilitySelectedOption:
              type: string
            ProductCombinationFacilitySchedule:
              type: string
            ProductCombinationFacilityStatus:
              type: string
    ExecuteProductCombinationFacilityResponse:
      type: object
      properties:
        ProductCombinationFacility:
          type: object
          properties:
            ProductCombinationFacilityParameterType:
              type: string
            ProductCombinationFacilitySelectedOption:
              type: string
            ProductCombinationFacilitySchedule:
              type: string
            ProductCombinationFacilityStatus:
              type: string
    InitiateProductCombinationFacilityResponse:
      type: object
      properties:
        ProductCombinationFacility:
          type: object
          properties:
            ProductCombinationFacilityParameterType:
              type: string
            ProductCombinationFacilitySelectedOption:
              type: string
            ProductCombinationFacilitySchedule:
              type: string
            ProductCombinationFacilityStatus:
              type: string
    RequestProductCombinationFacilityResponse:
      type: object
      properties:
        ProductCombinationFacility:
          type: object
          properties:
            ProductCombinationFacilityParameterType:
              type: string
            ProductCombinationFacilitySelectedOption:
              type: string
            ProductCombinationFacilitySchedule:
              type: string
            ProductCombinationFacilityStatus:
              type: string
    UpdateProductCombinationFacilityResponse:
      type: object
      properties:
        ProductCombinationFacility:
          type: object
          properties:
            ProductCombinationFacilityParameterType:
              type: string
            ProductCombinationFacilitySelectedOption:
              type: string
            ProductCombinationFacilitySchedule:
              type: string
            ProductCombinationFacilityStatus:
              type: string
  parameters:
    ProductCombinationID:
      name: productcombinationId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    ProductCombinationOutcomeID:
      name: productcombinationoutcomeId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    FulfillmentID:
      name: fulfillmentId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    EmbeddedProductControlID:
      name: embeddedproductcontrolId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    TransferPricingID:
      name: transferpricingId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
  requestBodies:
    ProductCombinationFacility:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProductCombinationFacility'
    Fulfillment:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Fulfillment'
    TransferPricing:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransferPricing'
    EmbeddedProductControl:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmbeddedProductControl'
  responses:
    HTTPError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    BadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequestsError:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
...
