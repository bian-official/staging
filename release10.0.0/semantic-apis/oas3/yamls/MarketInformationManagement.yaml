openapi: 3.0.1
info:
  title: Market Information Management
  description: Market information management consolidates and improves market information from multiple sources in order to build up a bank knowledge base in targeted areas
  version: 10.0.0
servers:
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/B154/MarketInformationManagement/10.0.0
paths:
  /MarketInformationManagement/Create:
    post:
      tags:
      - CR - FinancialMarketInformationAdministrativePlan
      summary: CrCR Create an administrative plan for market information management
      description: CrCR Create an administrative plan for market information management
      operationId: Create
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/CreateFinancialMarketInformationAdministrativePlanRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinancialMarketInformationAdministrativePlan'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /MarketInformationManagement/{marketinformationmanagementId}/Retrieve:
    get:
      tags:
      - CR - FinancialMarketInformationAdministrativePlan
      summary: ReCR Retrieve details about the financial market information management activity
      description: ReCR Retrieve details about the financial market information management activity
      operationId: Retrieve
      parameters:
      - $ref: '#/components/parameters/MarketInformationManagementID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinancialMarketInformationAdministrativePlan'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /MarketInformationManagement/{marketinformationmanagementId}/Consolidation/{consolidationId}/Retrieve:
    get:
      tags:
      - BQ - Consolidation
      summary: ReBQ Retrieve details about the consolidation of source data
      description: ReBQ Retrieve details about the consolidation of source data
      operationId: RetrieveConsolidation
      parameters:
      - $ref: '#/components/parameters/MarketInformationManagementID'
      - $ref: '#/components/parameters/ConsolidationID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Consolidation'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /MarketInformationManagement/{marketinformationmanagementId}/Improvement/{improvementId}/Retrieve:
    get:
      tags:
      - BQ - Improvement
      summary: ReBQ Retrieve details about the data improvement activities
      description: ReBQ Retrieve details about the data improvement activities
      operationId: RetrieveImprovement
      parameters:
      - $ref: '#/components/parameters/MarketInformationManagementID'
      - $ref: '#/components/parameters/ImprovementID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Improvement'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /MarketInformationManagement/{marketinformationmanagementId}/Reporting/Create:
    post:
      tags:
      - BQ - Reporting
      summary: CrBQ Create a specific report view of the financial market information
      description: CrBQ Create a specific report view of the financial market information
      operationId: CreateReporting
      parameters:
      - $ref: '#/components/parameters/MarketInformationManagementID'
      requestBody:
        $ref: '#/components/requestBodies/CreateReportingRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinancialMarketInformationAdministrativePlan'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /MarketInformationManagement/{marketinformationmanagementId}/Reporting/{reportingId}/Update:
    put:
      tags:
      - BQ - Reporting
      summary: UpBQ Update properties of a structured view/report
      description: UpBQ Update properties of a structured view/report
      operationId: UpdateReporting
      parameters:
      - $ref: '#/components/parameters/MarketInformationManagementID'
      - $ref: '#/components/parameters/ReportingID'
      requestBody:
        $ref: '#/components/requestBodies/Reporting'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reporting'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /MarketInformationManagement/{marketinformationmanagementId}/Reporting/{reportingId}/Capture:
    put:
      tags:
      - BQ - Reporting
      summary: CaBQ Capture usage details for the managed financial information/reports
      description: CaBQ Capture usage details for the managed financial information/reports
      operationId: CaptureReporting
      parameters:
      - $ref: '#/components/parameters/MarketInformationManagementID'
      - $ref: '#/components/parameters/ReportingID'
      requestBody:
        $ref: '#/components/requestBodies/CaptureReportingRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaptureReportingResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /MarketInformationManagement/{marketinformationmanagementId}/Reporting/{reportingId}/Execute:
    put:
      tags:
      - BQ - Reporting
      summary: ExBQ Execute an automated action for a report
      description: ExBQ Execute an automated action for a report
      operationId: ExecuteReporting
      parameters:
      - $ref: '#/components/parameters/MarketInformationManagementID'
      - $ref: '#/components/parameters/ReportingID'
      requestBody:
        $ref: '#/components/requestBodies/ExecuteReportingRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reporting'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /MarketInformationManagement/{marketinformationmanagementId}/Reporting/{reportingId}/Request:
    put:
      tags:
      - BQ - Reporting
      summary: RqBQ Request manual intervention
      description: RqBQ Request manual intervention
      operationId: RequestReporting
      parameters:
      - $ref: '#/components/parameters/MarketInformationManagementID'
      - $ref: '#/components/parameters/ReportingID'
      requestBody:
        $ref: '#/components/requestBodies/RequestReportingRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reporting'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /MarketInformationManagement/{marketinformationmanagementId}/Reporting/{reportingId}/Retrieve:
    get:
      tags:
      - BQ - Reporting
      summary: ReBQ Retrieve details about managed financial market reporting activity
      description: ReBQ Retrieve details about managed financial market reporting activity
      operationId: RetrieveReporting
      parameters:
      - $ref: '#/components/parameters/MarketInformationManagementID'
      - $ref: '#/components/parameters/ReportingID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reporting'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    FinancialMarketInformationAdministrativePlan:
      type: object
      properties:
        FinancialMarketInformationService:
          type: string
        FinancialMarketInformationProvider:
          type: string
        FinancialMarketinformationDescription:
          type: string
        FinancialMarketInformationServiceType:
          type: string
        FinancialMarketInformationServiceSchedule:
          type: string
        FinancialMarketInformationServiceAgreement:
          type: string
        FinancialMarketInformationDatabase:
          type: string
        FinancialMarketInformationSubjectArea:
          type: string
        FinancialMarketInformationSubjectAreaDescription:
          type: string
        FinancialMarketInformationSubjectAreaUpdateHistory:
          type: string
        FinancialMarketInformationSubjectAreaRecord:
          type: string
    Improvement:
      type: object
      properties:
        FinancialMarketInformationImprovementTaskType:
          type: string
        FinancialMarketInformationImprovementTaskSources:
          type: string
        FinancialMarketInformationImprovementTaskWorkProducts:
          type: string
        FinancialMarketInformationImprovementTaskResult:
          type: string
    Reporting:
      type: object
      properties:
        FinancialMarketInformationReport:
          type: string
        FinancialMarketInformationReportType:
          type: string
        FinancialMarketInformationReportDescription:
          type: string
        FinancialMarketInformationReportSchedule:
          type: string
        FinancialMarketInformationReportAccessHistory:
          type: string
    Consolidation:
      type: object
      properties:
        FinancialMarketInformationServiceReport:
          type: string
        FinancialMarketInformationServiceReportProperties:
          type: string
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
        status:
          type: string
        message:
          type: string
    CreateFinancialMarketInformationAdministrativePlanRequest:
      type: object
      properties:
        FinancialMarketInformationAdministrativePlan:
          type: object
          properties:
            FinancialMarketInformationService:
              type: string
            FinancialMarketInformationProvider:
              type: string
            FinancialMarketinformationDescription:
              type: string
            FinancialMarketInformationServiceType:
              type: string
            FinancialMarketInformationServiceSchedule:
              type: string
            FinancialMarketInformationServiceAgreement:
              type: string
            FinancialMarketInformationDatabase:
              type: string
            FinancialMarketInformationSubjectArea:
              type: string
            FinancialMarketInformationSubjectAreaUpdateHistory:
              type: string
    CreateReportingRequest:
      type: object
      properties:
        FinancialMarketInformationAdministrativePlan:
          type: object
          properties:
            FinancialMarketInformationService:
              type: string
            FinancialMarketInformationProvider:
              type: string
            FinancialMarketinformationDescription:
              type: string
            FinancialMarketInformationServiceType:
              type: string
            FinancialMarketInformationServiceSchedule:
              type: string
            FinancialMarketInformationServiceAgreement:
              type: string
            FinancialMarketInformationDatabase:
              type: string
            FinancialMarketInformationSubjectArea:
              type: string
            FinancialMarketInformationSubjectAreaDescription:
              type: string
            FinancialMarketInformationSubjectAreaUpdateHistory:
              type: string
            FinancialMarketInformationSubjectAreaRecord:
              type: string
        Reporting:
          type: object
          properties:
            FinancialMarketInformationReport:
              type: string
            FinancialMarketInformationReportType:
              type: string
            FinancialMarketInformationReportSchedule:
              type: string
            FinancialMarketInformationReportAccessHistory:
              type: string
    CaptureReportingRequest:
      type: object
      properties:
        Reporting:
          type: object
          properties:
            FinancialMarketInformationReportAccessHistory:
              type: string
    CaptureReportingResponse:
      type: object
      properties:
        Reporting:
          type: object
          properties:
            FinancialMarketInformationReportAccessHistory:
              type: string
    ExecuteReportingRequest:
      type: object
      properties:
        Reporting:
          type: object
          properties:
            FinancialMarketInformationReport:
              type: string
            FinancialMarketInformationReportType:
              type: string
            FinancialMarketInformationReportSchedule:
              type: string
            FinancialMarketInformationReportAccessHistory:
              type: string
    RequestReportingRequest:
      type: object
      properties:
        Reporting:
          type: object
          properties:
            FinancialMarketInformationReport:
              type: string
            FinancialMarketInformationReportType:
              type: string
            FinancialMarketInformationReportSchedule:
              type: string
            FinancialMarketInformationReportAccessHistory:
              type: string
  parameters:
    MarketInformationManagementID:
      name: marketinformationmanagementId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    ImprovementID:
      name: improvementId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    ReportingID:
      name: reportingId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    ConsolidationID:
      name: consolidationId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
  requestBodies:
    CreateFinancialMarketInformationAdministrativePlanRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateFinancialMarketInformationAdministrativePlanRequest'
    CreateReportingRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateReportingRequest'
    Reporting:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Reporting'
    CaptureReportingRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CaptureReportingRequest'
    ExecuteReportingRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExecuteReportingRequest'
    RequestReportingRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestReportingRequest'
  responses:
    HTTPError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    BadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequestsError:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
...
