openapi: 3.0.1
info:
  title: Sub Custodian Agreement
  description: This Service Domain establishes and maintains the terms governing sub custodian relationship
  version: 10.0.0
servers:
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/B154/SubCustodianAgreement/10.0.0
paths:
  /SubCustodianAgreement/{subcustodianagreementId}/Control:
    put:
      tags:
      - CR - SubCustodianAgreement
      summary: Control Sub Custodian Agreement
      description: Control Sub Custodian Agreement
      operationId: Control
      parameters:
      - $ref: '#/components/parameters/SubCustodianAgreementID'
      requestBody:
        $ref: '#/components/requestBodies/SubCustodianAgreement'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubCustodianAgreement'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SubCustodianAgreement/Evaluate:
    post:
      tags:
      - CR - SubCustodianAgreement
      summary: Evaluate Sub Custodian Agreement
      description: Evaluate Sub Custodian Agreement
      operationId: Evaluate
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/SubCustodianAgreement'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubCustodianAgreement'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SubCustodianAgreement/{subcustodianagreementId}/Exchange:
    put:
      tags:
      - CR - SubCustodianAgreement
      summary: Exchange Sub Custodian Agreement
      description: Exchange Sub Custodian Agreement
      operationId: Exchange
      parameters:
      - $ref: '#/components/parameters/SubCustodianAgreementID'
      requestBody:
        $ref: '#/components/requestBodies/SubCustodianAgreement'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubCustodianAgreement'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SubCustodianAgreement/{subcustodianagreementId}/Grant:
    put:
      tags:
      - CR - SubCustodianAgreement
      summary: Grant Sub Custodian Agreement
      description: Grant Sub Custodian Agreement
      operationId: Grant
      parameters:
      - $ref: '#/components/parameters/SubCustodianAgreementID'
      requestBody:
        $ref: '#/components/requestBodies/SubCustodianAgreement'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubCustodianAgreement'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SubCustodianAgreement/{subcustodianagreementId}/Notify:
    get:
      tags:
      - CR - SubCustodianAgreement
      summary: Notify Sub Custodian Agreement
      description: Notify Sub Custodian Agreement
      operationId: Notify
      parameters:
      - $ref: '#/components/parameters/SubCustodianAgreementID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubCustodianAgreement'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SubCustodianAgreement/{subcustodianagreementId}/Request:
    put:
      tags:
      - CR - SubCustodianAgreement
      summary: Request Sub Custodian Agreement
      description: Request Sub Custodian Agreement
      operationId: Request
      parameters:
      - $ref: '#/components/parameters/SubCustodianAgreementID'
      requestBody:
        $ref: '#/components/requestBodies/SubCustodianAgreement'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubCustodianAgreement'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SubCustodianAgreement/{subcustodianagreementId}/Retrieve:
    get:
      tags:
      - CR - SubCustodianAgreement
      summary: Retrieve Sub Custodian Agreement
      description: Retrieve Sub Custodian Agreement
      operationId: Retrieve
      parameters:
      - $ref: '#/components/parameters/SubCustodianAgreementID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubCustodianAgreement'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SubCustodianAgreement/{subcustodianagreementId}/Update:
    put:
      tags:
      - CR - SubCustodianAgreement
      summary: Update Sub Custodian Agreement
      description: Update Sub Custodian Agreement
      operationId: Update
      parameters:
      - $ref: '#/components/parameters/SubCustodianAgreementID'
      requestBody:
        $ref: '#/components/requestBodies/SubCustodianAgreement'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubCustodianAgreement'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SubCustodianAgreement/{subcustodianagreementId}/LegalTerm/Evaluate:
    post:
      tags:
      - BQ - LegalTerm
      summary: Evaluate Legal Term
      description: Evaluate Legal Term
      operationId: EvaluateLegalTerm
      parameters:
      - $ref: '#/components/parameters/SubCustodianAgreementID'
      requestBody:
        $ref: '#/components/requestBodies/LegalTerm'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalTerm'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SubCustodianAgreement/{subcustodianagreementId}/PolicyTerm/Evaluate:
    post:
      tags:
      - BQ - PolicyTerm
      summary: Evaluate Policy Term
      description: Evaluate Policy Term
      operationId: EvaluatePolicyTerm
      parameters:
      - $ref: '#/components/parameters/SubCustodianAgreementID'
      requestBody:
        $ref: '#/components/requestBodies/PolicyTerm'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyTerm'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SubCustodianAgreement/{subcustodianagreementId}/RegulatoryTerm/Evaluate:
    post:
      tags:
      - BQ - RegulatoryTerm
      summary: Evaluate Regulatory Term
      description: Evaluate Regulatory Term
      operationId: EvaluateRegulatoryTerm
      parameters:
      - $ref: '#/components/parameters/SubCustodianAgreementID'
      requestBody:
        $ref: '#/components/requestBodies/RegulatoryTerm'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegulatoryTerm'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SubCustodianAgreement/{subcustodianagreementId}/LegalTerm/{legaltermId}/Exchange:
    put:
      tags:
      - BQ - LegalTerm
      summary: Exchange Legal Term
      description: Exchange Legal Term
      operationId: ExchangeLegalTerm
      parameters:
      - $ref: '#/components/parameters/SubCustodianAgreementID'
      - $ref: '#/components/parameters/LegalTermID'
      requestBody:
        $ref: '#/components/requestBodies/LegalTerm'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalTerm'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SubCustodianAgreement/{subcustodianagreementId}/PolicyTerm/{policytermId}/Exchange:
    put:
      tags:
      - BQ - PolicyTerm
      summary: Exchange Policy Term
      description: Exchange Policy Term
      operationId: ExchangePolicyTerm
      parameters:
      - $ref: '#/components/parameters/SubCustodianAgreementID'
      - $ref: '#/components/parameters/PolicyTermID'
      requestBody:
        $ref: '#/components/requestBodies/PolicyTerm'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyTerm'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SubCustodianAgreement/{subcustodianagreementId}/RegulatoryTerm/{regulatorytermId}/Exchange:
    put:
      tags:
      - BQ - RegulatoryTerm
      summary: Exchange Regulatory Term
      description: Exchange Regulatory Term
      operationId: ExchangeRegulatoryTerm
      parameters:
      - $ref: '#/components/parameters/SubCustodianAgreementID'
      - $ref: '#/components/parameters/RegulatoryTermID'
      requestBody:
        $ref: '#/components/requestBodies/RegulatoryTerm'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegulatoryTerm'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SubCustodianAgreement/{subcustodianagreementId}/LegalTerm/{legaltermId}/Notify:
    get:
      tags:
      - BQ - LegalTerm
      summary: Notify Legal Term
      description: Notify Legal Term
      operationId: NotifyLegalTerm
      parameters:
      - $ref: '#/components/parameters/SubCustodianAgreementID'
      - $ref: '#/components/parameters/LegalTermID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalTerm'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SubCustodianAgreement/{subcustodianagreementId}/PolicyTerm/{policytermId}/Notify:
    get:
      tags:
      - BQ - PolicyTerm
      summary: Notify Policy Term
      description: Notify Policy Term
      operationId: NotifyPolicyTerm
      parameters:
      - $ref: '#/components/parameters/SubCustodianAgreementID'
      - $ref: '#/components/parameters/PolicyTermID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyTerm'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SubCustodianAgreement/{subcustodianagreementId}/RegulatoryTerm/{regulatorytermId}/Notify:
    get:
      tags:
      - BQ - RegulatoryTerm
      summary: Notify Regulatory Term
      description: Notify Regulatory Term
      operationId: NotifyRegulatoryTerm
      parameters:
      - $ref: '#/components/parameters/SubCustodianAgreementID'
      - $ref: '#/components/parameters/RegulatoryTermID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegulatoryTerm'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SubCustodianAgreement/{subcustodianagreementId}/LegalTerm/{legaltermId}/Request:
    put:
      tags:
      - BQ - LegalTerm
      summary: Request Legal Term
      description: Request Legal Term
      operationId: RequestLegalTerm
      parameters:
      - $ref: '#/components/parameters/SubCustodianAgreementID'
      - $ref: '#/components/parameters/LegalTermID'
      requestBody:
        $ref: '#/components/requestBodies/LegalTerm'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalTerm'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SubCustodianAgreement/{subcustodianagreementId}/PolicyTerm/{policytermId}/Request:
    put:
      tags:
      - BQ - PolicyTerm
      summary: Request Policy Term
      description: Request Policy Term
      operationId: RequestPolicyTerm
      parameters:
      - $ref: '#/components/parameters/SubCustodianAgreementID'
      - $ref: '#/components/parameters/PolicyTermID'
      requestBody:
        $ref: '#/components/requestBodies/PolicyTerm'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyTerm'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SubCustodianAgreement/{subcustodianagreementId}/RegulatoryTerm/{regulatorytermId}/Request:
    put:
      tags:
      - BQ - RegulatoryTerm
      summary: Request Regulatory Term
      description: Request Regulatory Term
      operationId: RequestRegulatoryTerm
      parameters:
      - $ref: '#/components/parameters/SubCustodianAgreementID'
      - $ref: '#/components/parameters/RegulatoryTermID'
      requestBody:
        $ref: '#/components/requestBodies/RegulatoryTerm'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegulatoryTerm'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SubCustodianAgreement/{subcustodianagreementId}/LegalTerm/{legaltermId}/Retrieve:
    get:
      tags:
      - BQ - LegalTerm
      summary: Retrieve Legal Term
      description: Retrieve Legal Term
      operationId: RetrieveLegalTerm
      parameters:
      - $ref: '#/components/parameters/SubCustodianAgreementID'
      - $ref: '#/components/parameters/LegalTermID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalTerm'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SubCustodianAgreement/{subcustodianagreementId}/PolicyTerm/{policytermId}/Retrieve:
    get:
      tags:
      - BQ - PolicyTerm
      summary: Retrieve Policy Term
      description: Retrieve Policy Term
      operationId: RetrievePolicyTerm
      parameters:
      - $ref: '#/components/parameters/SubCustodianAgreementID'
      - $ref: '#/components/parameters/PolicyTermID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyTerm'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SubCustodianAgreement/{subcustodianagreementId}/RegulatoryTerm/{regulatorytermId}/Retrieve:
    get:
      tags:
      - BQ - RegulatoryTerm
      summary: Retrieve Regulatory Term
      description: Retrieve Regulatory Term
      operationId: RetrieveRegulatoryTerm
      parameters:
      - $ref: '#/components/parameters/SubCustodianAgreementID'
      - $ref: '#/components/parameters/RegulatoryTermID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegulatoryTerm'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SubCustodianAgreement/{subcustodianagreementId}/LegalTerm/{legaltermId}/Update:
    put:
      tags:
      - BQ - LegalTerm
      summary: Update Legal Term
      description: Update Legal Term
      operationId: UpdateLegalTerm
      parameters:
      - $ref: '#/components/parameters/SubCustodianAgreementID'
      - $ref: '#/components/parameters/LegalTermID'
      requestBody:
        $ref: '#/components/requestBodies/LegalTerm'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalTerm'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SubCustodianAgreement/{subcustodianagreementId}/PolicyTerm/{policytermId}/Update:
    put:
      tags:
      - BQ - PolicyTerm
      summary: Update Policy Term
      description: Update Policy Term
      operationId: UpdatePolicyTerm
      parameters:
      - $ref: '#/components/parameters/SubCustodianAgreementID'
      - $ref: '#/components/parameters/PolicyTermID'
      requestBody:
        $ref: '#/components/requestBodies/PolicyTerm'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyTerm'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SubCustodianAgreement/{subcustodianagreementId}/RegulatoryTerm/{regulatorytermId}/Update:
    put:
      tags:
      - BQ - RegulatoryTerm
      summary: Update Regulatory Term
      description: Update Regulatory Term
      operationId: UpdateRegulatoryTerm
      parameters:
      - $ref: '#/components/parameters/SubCustodianAgreementID'
      - $ref: '#/components/parameters/RegulatoryTermID'
      requestBody:
        $ref: '#/components/requestBodies/RegulatoryTerm'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegulatoryTerm'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    SubCustodianAgreement:
      type: object
      properties:
        SubCustodianAgreementParameterType:
          type: string
        SubCustodianAgreementSelectedOption:
          type: string
        SubCustodianAgreementType:
          type: string
        SubCustodianAgreementReference:
          type: string
        SubCustodianAgreementDischargeRequest:
          type: string
        SubCustodianAgreementDischargeSchedule:
          type: object
        SubCustodianAgreementStatus:
          type: string
        SubCustodianAgreementAssociatedParty:
          type: object
        SubCustodianAgreementCustomerReference:
          type: object
        SubCustodianAgreementObligation:
          type: string
        SubCustodianAgreementEntitlement:
          type: string
        SubCustodianAgreementRegulationReference:
          type: string
        SubCustodianAgreementRegulationType:
          type: string
        SubCustodianAgreementJurisdiction:
          type: object
        SubCustodianAgreementAccountReference:
          type: string
        SubCustodianAgreementSubjectMatter:
          type: object
        SubCustodianAgreementProductReference:
          type: string
        SubCustodianAgreementCalendarReference:
          type: string
        SubCustodianAgreementAssociatedAgreementReference:
          type: string
    RegulatoryTerm:
      type: object
      properties:
        Preconditions:
          type: object
        Schedule:
          type: object
        BusinessService:
          type: object
        SubCustodianAgreementReference:
          type: string
        RegulatoryTermReference:
          type: string
        RegulatoryTermType:
          type: string
        RegulatoryAuthority:
          type: string
        ApplicableRegulationReference:
          type: object
        ApplicableRegulationInterpretation:
          type: string
    LegalTerm:
      type: object
      properties:
        Preconditions:
          type: object
        Schedule:
          type: object
        BusinessService:
          type: object
        SubCustodianAgreementReference:
          type: string
        LegalTermReference:
          type: string
        LegalTermType:
          type: string
        Jurisdiction:
          type: string
        ApplicableLawReference:
          type: object
        ApplicableLawInterpretation:
          type: string
    PolicyTerm:
      type: object
      properties:
        Preconditions:
          type: object
        Schedule:
          type: object
        BusinessService:
          type: object
        SubCustodianAgreementReference:
          type: string
        PolicyTermReference:
          type: string
        PolicyTermType:
          type: string
        BankPolicy-RuleType:
          type: string
        ApplicableBankPolicy-RuleReference:
          type: object
        ApplicableBankPolicy-RuleInterpretation:
          type: string
    SubCustodianAgreementOutcome:
      type: object
      properties:
        SubCustodianAgreementAgreement:
          type: string
        SubCustodianAgreementWorkProduct:
          type: object
        SubCustodianAgreementWorkProductType:
          type: string
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
        status:
          type: string
        message:
          type: string
  parameters:
    SubCustodianAgreementID:
      name: subcustodianagreementId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    RegulatoryTermID:
      name: regulatorytermId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    LegalTermID:
      name: legaltermId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    PolicyTermID:
      name: policytermId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    SubCustodianAgreementOutcomeID:
      name: subcustodianagreementoutcomeId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
  requestBodies:
    SubCustodianAgreement:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SubCustodianAgreement'
    LegalTerm:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LegalTerm'
    PolicyTerm:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PolicyTerm'
    RegulatoryTerm:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RegulatoryTerm'
  responses:
    HTTPError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    BadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequestsError:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
...
