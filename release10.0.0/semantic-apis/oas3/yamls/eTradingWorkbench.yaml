openapi: 3.0.1
info:
  title: eTrading Workbench
  description: This Service Domain supports consumer securities trading of their investment portfolio through the bank
  version: 10.0.0
servers:
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/B154/eTradingWorkbench/10.0.0
paths:
  /eTradingWorkbench/{etradingworkbenchId}/Control:
    put:
      tags:
      - CR - eTradingWorkbenchOperatingSession
      summary: Control eTrading Workbench Operating Session
      description: Control eTrading Workbench Operating Session
      operationId: Control
      parameters:
      - $ref: '#/components/parameters/eTradingWorkbenchID'
      requestBody:
        $ref: '#/components/requestBodies/eTradingWorkbenchOperatingSession'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/eTradingWorkbenchOperatingSession'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /eTradingWorkbench/{etradingworkbenchId}/Exchange:
    put:
      tags:
      - CR - eTradingWorkbenchOperatingSession
      summary: Exchange eTrading Workbench Operating Session
      description: Exchange eTrading Workbench Operating Session
      operationId: Exchange
      parameters:
      - $ref: '#/components/parameters/eTradingWorkbenchID'
      requestBody:
        $ref: '#/components/requestBodies/eTradingWorkbenchOperatingSession'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/eTradingWorkbenchOperatingSession'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /eTradingWorkbench/{etradingworkbenchId}/Execute:
    put:
      tags:
      - CR - eTradingWorkbenchOperatingSession
      summary: Execute eTrading Workbench Operating Session
      description: Execute eTrading Workbench Operating Session
      operationId: Execute
      parameters:
      - $ref: '#/components/parameters/eTradingWorkbenchID'
      requestBody:
        $ref: '#/components/requestBodies/eTradingWorkbenchOperatingSession'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/eTradingWorkbenchOperatingSession'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /eTradingWorkbench/Initiate:
    post:
      tags:
      - CR - eTradingWorkbenchOperatingSession
      summary: Initiate eTrading Workbench Operating Session
      description: Initiate eTrading Workbench Operating Session
      operationId: Initiate
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/eTradingWorkbenchOperatingSession'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/eTradingWorkbenchOperatingSession'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /eTradingWorkbench/{etradingworkbenchId}/Notify:
    get:
      tags:
      - CR - eTradingWorkbenchOperatingSession
      summary: Notify eTrading Workbench Operating Session
      description: Notify eTrading Workbench Operating Session
      operationId: Notify
      parameters:
      - $ref: '#/components/parameters/eTradingWorkbenchID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/eTradingWorkbenchOperatingSession'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /eTradingWorkbench/{etradingworkbenchId}/Request:
    put:
      tags:
      - CR - eTradingWorkbenchOperatingSession
      summary: Request eTrading Workbench Operating Session
      description: Request eTrading Workbench Operating Session
      operationId: Request
      parameters:
      - $ref: '#/components/parameters/eTradingWorkbenchID'
      requestBody:
        $ref: '#/components/requestBodies/eTradingWorkbenchOperatingSession'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/eTradingWorkbenchOperatingSession'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /eTradingWorkbench/{etradingworkbenchId}/Retrieve:
    get:
      tags:
      - CR - eTradingWorkbenchOperatingSession
      summary: Retrieve eTrading Workbench Operating Session
      description: Retrieve eTrading Workbench Operating Session
      operationId: Retrieve
      parameters:
      - $ref: '#/components/parameters/eTradingWorkbenchID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/eTradingWorkbenchOperatingSession'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /eTradingWorkbench/{etradingworkbenchId}/Update:
    put:
      tags:
      - CR - eTradingWorkbenchOperatingSession
      summary: Update eTrading Workbench Operating Session
      description: Update eTrading Workbench Operating Session
      operationId: Update
      parameters:
      - $ref: '#/components/parameters/eTradingWorkbenchID'
      requestBody:
        $ref: '#/components/requestBodies/eTradingWorkbenchOperatingSession'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/eTradingWorkbenchOperatingSession'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /eTradingWorkbench/{etradingworkbenchId}/InvestmentPortfolioValuationFunction/{investmentportfoliovaluationfunctionId}/Exchange:
    put:
      tags:
      - BQ - InvestmentPortfolioValuationFunction
      summary: Exchange Investment Portfolio Valuation Function
      description: Exchange Investment Portfolio Valuation Function
      operationId: ExchangeInvestmentPortfolioValuationFunction
      parameters:
      - $ref: '#/components/parameters/eTradingWorkbenchID'
      - $ref: '#/components/parameters/InvestmentPortfolioValuationFunctionID'
      requestBody:
        $ref: '#/components/requestBodies/InvestmentPortfolioValuationFunction'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvestmentPortfolioValuationFunction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /eTradingWorkbench/{etradingworkbenchId}/MarketOrderInitiationFunction/{marketorderinitiationfunctionId}/Exchange:
    put:
      tags:
      - BQ - MarketOrderInitiationFunction
      summary: Exchange Market Order Initiation Function
      description: Exchange Market Order Initiation Function
      operationId: ExchangeMarketOrderInitiationFunction
      parameters:
      - $ref: '#/components/parameters/eTradingWorkbenchID'
      - $ref: '#/components/parameters/MarketOrderInitiationFunctionID'
      requestBody:
        $ref: '#/components/requestBodies/MarketOrderInitiationFunction'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketOrderInitiationFunction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /eTradingWorkbench/{etradingworkbenchId}/MarketOrderQuotationFunction/{marketorderquotationfunctionId}/Exchange:
    put:
      tags:
      - BQ - MarketOrderQuotationFunction
      summary: Exchange Market Order Quotation Function
      description: Exchange Market Order Quotation Function
      operationId: ExchangeMarketOrderQuotationFunction
      parameters:
      - $ref: '#/components/parameters/eTradingWorkbenchID'
      - $ref: '#/components/parameters/MarketOrderQuotationFunctionID'
      requestBody:
        $ref: '#/components/requestBodies/MarketOrderQuotationFunction'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketOrderQuotationFunction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /eTradingWorkbench/{etradingworkbenchId}/MarketPriceAnalysisFunction/{marketpriceanalysisfunctionId}/Exchange:
    put:
      tags:
      - BQ - MarketPriceAnalysisFunction
      summary: Exchange Market Price Analysis Function
      description: Exchange Market Price Analysis Function
      operationId: ExchangeMarketPriceAnalysisFunction
      parameters:
      - $ref: '#/components/parameters/eTradingWorkbenchID'
      - $ref: '#/components/parameters/MarketPriceAnalysisFunctionID'
      requestBody:
        $ref: '#/components/requestBodies/MarketPriceAnalysisFunction'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketPriceAnalysisFunction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /eTradingWorkbench/{etradingworkbenchId}/InvestmentPortfolioValuationFunction/{investmentportfoliovaluationfunctionId}/Execute:
    put:
      tags:
      - BQ - InvestmentPortfolioValuationFunction
      summary: Execute Investment Portfolio Valuation Function
      description: Execute Investment Portfolio Valuation Function
      operationId: ExecuteInvestmentPortfolioValuationFunction
      parameters:
      - $ref: '#/components/parameters/eTradingWorkbenchID'
      - $ref: '#/components/parameters/InvestmentPortfolioValuationFunctionID'
      requestBody:
        $ref: '#/components/requestBodies/InvestmentPortfolioValuationFunction'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvestmentPortfolioValuationFunction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /eTradingWorkbench/{etradingworkbenchId}/MarketOrderInitiationFunction/{marketorderinitiationfunctionId}/Execute:
    put:
      tags:
      - BQ - MarketOrderInitiationFunction
      summary: Execute Market Order Initiation Function
      description: Execute Market Order Initiation Function
      operationId: ExecuteMarketOrderInitiationFunction
      parameters:
      - $ref: '#/components/parameters/eTradingWorkbenchID'
      - $ref: '#/components/parameters/MarketOrderInitiationFunctionID'
      requestBody:
        $ref: '#/components/requestBodies/MarketOrderInitiationFunction'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketOrderInitiationFunction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /eTradingWorkbench/{etradingworkbenchId}/MarketOrderQuotationFunction/{marketorderquotationfunctionId}/Execute:
    put:
      tags:
      - BQ - MarketOrderQuotationFunction
      summary: Execute Market Order Quotation Function
      description: Execute Market Order Quotation Function
      operationId: ExecuteMarketOrderQuotationFunction
      parameters:
      - $ref: '#/components/parameters/eTradingWorkbenchID'
      - $ref: '#/components/parameters/MarketOrderQuotationFunctionID'
      requestBody:
        $ref: '#/components/requestBodies/MarketOrderQuotationFunction'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketOrderQuotationFunction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /eTradingWorkbench/{etradingworkbenchId}/MarketPriceAnalysisFunction/{marketpriceanalysisfunctionId}/Execute:
    put:
      tags:
      - BQ - MarketPriceAnalysisFunction
      summary: Execute Market Price Analysis Function
      description: Execute Market Price Analysis Function
      operationId: ExecuteMarketPriceAnalysisFunction
      parameters:
      - $ref: '#/components/parameters/eTradingWorkbenchID'
      - $ref: '#/components/parameters/MarketPriceAnalysisFunctionID'
      requestBody:
        $ref: '#/components/requestBodies/MarketPriceAnalysisFunction'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketPriceAnalysisFunction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /eTradingWorkbench/{etradingworkbenchId}/InvestmentPortfolioValuationFunction/Initiate:
    post:
      tags:
      - BQ - InvestmentPortfolioValuationFunction
      summary: Initiate Investment Portfolio Valuation Function
      description: Initiate Investment Portfolio Valuation Function
      operationId: InitiateInvestmentPortfolioValuationFunction
      parameters:
      - $ref: '#/components/parameters/eTradingWorkbenchID'
      requestBody:
        $ref: '#/components/requestBodies/InvestmentPortfolioValuationFunction'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvestmentPortfolioValuationFunction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /eTradingWorkbench/{etradingworkbenchId}/MarketOrderInitiationFunction/Initiate:
    post:
      tags:
      - BQ - MarketOrderInitiationFunction
      summary: Initiate Market Order Initiation Function
      description: Initiate Market Order Initiation Function
      operationId: InitiateMarketOrderInitiationFunction
      parameters:
      - $ref: '#/components/parameters/eTradingWorkbenchID'
      requestBody:
        $ref: '#/components/requestBodies/MarketOrderInitiationFunction'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketOrderInitiationFunction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /eTradingWorkbench/{etradingworkbenchId}/MarketOrderQuotationFunction/Initiate:
    post:
      tags:
      - BQ - MarketOrderQuotationFunction
      summary: Initiate Market Order Quotation Function
      description: Initiate Market Order Quotation Function
      operationId: InitiateMarketOrderQuotationFunction
      parameters:
      - $ref: '#/components/parameters/eTradingWorkbenchID'
      requestBody:
        $ref: '#/components/requestBodies/MarketOrderQuotationFunction'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketOrderQuotationFunction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /eTradingWorkbench/{etradingworkbenchId}/MarketPriceAnalysisFunction/Initiate:
    post:
      tags:
      - BQ - MarketPriceAnalysisFunction
      summary: Initiate Market Price Analysis Function
      description: Initiate Market Price Analysis Function
      operationId: InitiateMarketPriceAnalysisFunction
      parameters:
      - $ref: '#/components/parameters/eTradingWorkbenchID'
      requestBody:
        $ref: '#/components/requestBodies/MarketPriceAnalysisFunction'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketPriceAnalysisFunction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /eTradingWorkbench/{etradingworkbenchId}/InvestmentPortfolioValuationFunction/{investmentportfoliovaluationfunctionId}/Notify:
    get:
      tags:
      - BQ - InvestmentPortfolioValuationFunction
      summary: Notify Investment Portfolio Valuation Function
      description: Notify Investment Portfolio Valuation Function
      operationId: NotifyInvestmentPortfolioValuationFunction
      parameters:
      - $ref: '#/components/parameters/eTradingWorkbenchID'
      - $ref: '#/components/parameters/InvestmentPortfolioValuationFunctionID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvestmentPortfolioValuationFunction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /eTradingWorkbench/{etradingworkbenchId}/MarketOrderInitiationFunction/{marketorderinitiationfunctionId}/Notify:
    get:
      tags:
      - BQ - MarketOrderInitiationFunction
      summary: Notify Market Order Initiation Function
      description: Notify Market Order Initiation Function
      operationId: NotifyMarketOrderInitiationFunction
      parameters:
      - $ref: '#/components/parameters/eTradingWorkbenchID'
      - $ref: '#/components/parameters/MarketOrderInitiationFunctionID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketOrderInitiationFunction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /eTradingWorkbench/{etradingworkbenchId}/MarketOrderQuotationFunction/{marketorderquotationfunctionId}/Notify:
    get:
      tags:
      - BQ - MarketOrderQuotationFunction
      summary: Notify Market Order Quotation Function
      description: Notify Market Order Quotation Function
      operationId: NotifyMarketOrderQuotationFunction
      parameters:
      - $ref: '#/components/parameters/eTradingWorkbenchID'
      - $ref: '#/components/parameters/MarketOrderQuotationFunctionID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketOrderQuotationFunction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /eTradingWorkbench/{etradingworkbenchId}/MarketPriceAnalysisFunction/{marketpriceanalysisfunctionId}/Notify:
    get:
      tags:
      - BQ - MarketPriceAnalysisFunction
      summary: Notify Market Price Analysis Function
      description: Notify Market Price Analysis Function
      operationId: NotifyMarketPriceAnalysisFunction
      parameters:
      - $ref: '#/components/parameters/eTradingWorkbenchID'
      - $ref: '#/components/parameters/MarketPriceAnalysisFunctionID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketPriceAnalysisFunction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /eTradingWorkbench/{etradingworkbenchId}/InvestmentPortfolioValuationFunction/{investmentportfoliovaluationfunctionId}/Request:
    put:
      tags:
      - BQ - InvestmentPortfolioValuationFunction
      summary: Request Investment Portfolio Valuation Function
      description: Request Investment Portfolio Valuation Function
      operationId: RequestInvestmentPortfolioValuationFunction
      parameters:
      - $ref: '#/components/parameters/eTradingWorkbenchID'
      - $ref: '#/components/parameters/InvestmentPortfolioValuationFunctionID'
      requestBody:
        $ref: '#/components/requestBodies/InvestmentPortfolioValuationFunction'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvestmentPortfolioValuationFunction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /eTradingWorkbench/{etradingworkbenchId}/MarketOrderInitiationFunction/{marketorderinitiationfunctionId}/Request:
    put:
      tags:
      - BQ - MarketOrderInitiationFunction
      summary: Request Market Order Initiation Function
      description: Request Market Order Initiation Function
      operationId: RequestMarketOrderInitiationFunction
      parameters:
      - $ref: '#/components/parameters/eTradingWorkbenchID'
      - $ref: '#/components/parameters/MarketOrderInitiationFunctionID'
      requestBody:
        $ref: '#/components/requestBodies/MarketOrderInitiationFunction'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketOrderInitiationFunction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /eTradingWorkbench/{etradingworkbenchId}/MarketOrderQuotationFunction/{marketorderquotationfunctionId}/Request:
    put:
      tags:
      - BQ - MarketOrderQuotationFunction
      summary: Request Market Order Quotation Function
      description: Request Market Order Quotation Function
      operationId: RequestMarketOrderQuotationFunction
      parameters:
      - $ref: '#/components/parameters/eTradingWorkbenchID'
      - $ref: '#/components/parameters/MarketOrderQuotationFunctionID'
      requestBody:
        $ref: '#/components/requestBodies/MarketOrderQuotationFunction'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketOrderQuotationFunction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /eTradingWorkbench/{etradingworkbenchId}/MarketPriceAnalysisFunction/{marketpriceanalysisfunctionId}/Request:
    put:
      tags:
      - BQ - MarketPriceAnalysisFunction
      summary: Request Market Price Analysis Function
      description: Request Market Price Analysis Function
      operationId: RequestMarketPriceAnalysisFunction
      parameters:
      - $ref: '#/components/parameters/eTradingWorkbenchID'
      - $ref: '#/components/parameters/MarketPriceAnalysisFunctionID'
      requestBody:
        $ref: '#/components/requestBodies/MarketPriceAnalysisFunction'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketPriceAnalysisFunction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /eTradingWorkbench/{etradingworkbenchId}/InvestmentPortfolioValuationFunction/{investmentportfoliovaluationfunctionId}/Retrieve:
    get:
      tags:
      - BQ - InvestmentPortfolioValuationFunction
      summary: Retrieve Investment Portfolio Valuation Function
      description: Retrieve Investment Portfolio Valuation Function
      operationId: RetrieveInvestmentPortfolioValuationFunction
      parameters:
      - $ref: '#/components/parameters/eTradingWorkbenchID'
      - $ref: '#/components/parameters/InvestmentPortfolioValuationFunctionID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvestmentPortfolioValuationFunction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /eTradingWorkbench/{etradingworkbenchId}/MarketOrderInitiationFunction/{marketorderinitiationfunctionId}/Retrieve:
    get:
      tags:
      - BQ - MarketOrderInitiationFunction
      summary: Retrieve Market Order Initiation Function
      description: Retrieve Market Order Initiation Function
      operationId: RetrieveMarketOrderInitiationFunction
      parameters:
      - $ref: '#/components/parameters/eTradingWorkbenchID'
      - $ref: '#/components/parameters/MarketOrderInitiationFunctionID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketOrderInitiationFunction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /eTradingWorkbench/{etradingworkbenchId}/MarketOrderQuotationFunction/{marketorderquotationfunctionId}/Retrieve:
    get:
      tags:
      - BQ - MarketOrderQuotationFunction
      summary: Retrieve Market Order Quotation Function
      description: Retrieve Market Order Quotation Function
      operationId: RetrieveMarketOrderQuotationFunction
      parameters:
      - $ref: '#/components/parameters/eTradingWorkbenchID'
      - $ref: '#/components/parameters/MarketOrderQuotationFunctionID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketOrderQuotationFunction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /eTradingWorkbench/{etradingworkbenchId}/MarketPriceAnalysisFunction/{marketpriceanalysisfunctionId}/Retrieve:
    get:
      tags:
      - BQ - MarketPriceAnalysisFunction
      summary: Retrieve Market Price Analysis Function
      description: Retrieve Market Price Analysis Function
      operationId: RetrieveMarketPriceAnalysisFunction
      parameters:
      - $ref: '#/components/parameters/eTradingWorkbenchID'
      - $ref: '#/components/parameters/MarketPriceAnalysisFunctionID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketPriceAnalysisFunction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /eTradingWorkbench/{etradingworkbenchId}/InvestmentPortfolioValuationFunction/{investmentportfoliovaluationfunctionId}/Update:
    put:
      tags:
      - BQ - InvestmentPortfolioValuationFunction
      summary: Update Investment Portfolio Valuation Function
      description: Update Investment Portfolio Valuation Function
      operationId: UpdateInvestmentPortfolioValuationFunction
      parameters:
      - $ref: '#/components/parameters/eTradingWorkbenchID'
      - $ref: '#/components/parameters/InvestmentPortfolioValuationFunctionID'
      requestBody:
        $ref: '#/components/requestBodies/InvestmentPortfolioValuationFunction'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvestmentPortfolioValuationFunction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /eTradingWorkbench/{etradingworkbenchId}/MarketOrderInitiationFunction/{marketorderinitiationfunctionId}/Update:
    put:
      tags:
      - BQ - MarketOrderInitiationFunction
      summary: Update Market Order Initiation Function
      description: Update Market Order Initiation Function
      operationId: UpdateMarketOrderInitiationFunction
      parameters:
      - $ref: '#/components/parameters/eTradingWorkbenchID'
      - $ref: '#/components/parameters/MarketOrderInitiationFunctionID'
      requestBody:
        $ref: '#/components/requestBodies/MarketOrderInitiationFunction'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketOrderInitiationFunction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /eTradingWorkbench/{etradingworkbenchId}/MarketOrderQuotationFunction/{marketorderquotationfunctionId}/Update:
    put:
      tags:
      - BQ - MarketOrderQuotationFunction
      summary: Update Market Order Quotation Function
      description: Update Market Order Quotation Function
      operationId: UpdateMarketOrderQuotationFunction
      parameters:
      - $ref: '#/components/parameters/eTradingWorkbenchID'
      - $ref: '#/components/parameters/MarketOrderQuotationFunctionID'
      requestBody:
        $ref: '#/components/requestBodies/MarketOrderQuotationFunction'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketOrderQuotationFunction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /eTradingWorkbench/{etradingworkbenchId}/MarketPriceAnalysisFunction/{marketpriceanalysisfunctionId}/Update:
    put:
      tags:
      - BQ - MarketPriceAnalysisFunction
      summary: Update Market Price Analysis Function
      description: Update Market Price Analysis Function
      operationId: UpdateMarketPriceAnalysisFunction
      parameters:
      - $ref: '#/components/parameters/eTradingWorkbenchID'
      - $ref: '#/components/parameters/MarketPriceAnalysisFunctionID'
      requestBody:
        $ref: '#/components/requestBodies/MarketPriceAnalysisFunction'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketPriceAnalysisFunction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    eTradingWorkbenchOperatingSession:
      type: object
      properties:
        eTradingWorkbenchOperatingSessionSchedule:
          type: object
        eTradingWorkbenchOperatingSessionStatus:
          type: string
        eTradingWorkbenchOperatingSessionUsageLog:
          type: string
        eTradingWorkbenchOperatingSessionAssociatedPartyReference:
          type: object
        eTradingWorkbenchOperatingSessionServiceProviderReference:
          type: object
        eTradingWorkbenchOperatingSessionType:
          type: string
        eTradingWorkbenchOperatingSessionServiceProviderSchedule:
          type: object
        eTradingWorkbenchOperatingSessionServiceType:
          type: string
        eTradingWorkbenchOperatingSessionServiceConfiguration:
          type: string
        eTradingWorkbenchOperatingSessionReference:
          type: string
    InvestmentPortfolioValuationFunction:
      type: object
      properties:
        Preconditions:
          type: object
        Schedule:
          type: object
        BusinessService:
          type: object
        eTradingWorkbenchOperatingSessionReference:
          type: string
        InvestmentPortfolioValuationFunctionReference:
          type: string
        InvestmentPortfolioValuationFunctionType:
          type: string
    MarketOrderQuotationFunction:
      type: object
      properties:
        Preconditions:
          type: object
        Schedule:
          type: object
        BusinessService:
          type: object
        eTradingWorkbenchOperatingSessionReference:
          type: string
        MarketOrderQuotationFunctionReference:
          type: string
        MarketOrderQuotationFunctionType:
          type: string
    MarketPriceAnalysisFunction:
      type: object
      properties:
        Preconditions:
          type: object
        Schedule:
          type: object
        BusinessService:
          type: object
        eTradingWorkbenchOperatingSessionReference:
          type: string
        MarketPriceAnalysisFunctionReference:
          type: string
        MarketPriceAnalysisFunctionType:
          type: string
    MarketOrderInitiationFunction:
      type: object
      properties:
        Preconditions:
          type: object
        Schedule:
          type: object
        BusinessService:
          type: object
        eTradingWorkbenchOperatingSessionReference:
          type: string
        MarketOrderInitiationFunctionReference:
          type: string
        MarketOrderInitiationFunctionType:
          type: string
    eTradingWorkbenchOutcome:
      type: object
      properties:
        eTradingWorkbenchIncident:
          type: string
        eTradingWorkbenchProvision:
          type: string
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
        status:
          type: string
        message:
          type: string
  parameters:
    eTradingWorkbenchID:
      name: etradingworkbenchId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    InvestmentPortfolioValuationFunctionID:
      name: investmentportfoliovaluationfunctionId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    MarketOrderQuotationFunctionID:
      name: marketorderquotationfunctionId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    MarketPriceAnalysisFunctionID:
      name: marketpriceanalysisfunctionId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    MarketOrderInitiationFunctionID:
      name: marketorderinitiationfunctionId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    eTradingWorkbenchOutcomeID:
      name: etradingworkbenchoutcomeId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
  requestBodies:
    eTradingWorkbenchOperatingSession:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/eTradingWorkbenchOperatingSession'
    InvestmentPortfolioValuationFunction:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvestmentPortfolioValuationFunction'
    MarketOrderInitiationFunction:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MarketOrderInitiationFunction'
    MarketOrderQuotationFunction:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MarketOrderQuotationFunction'
    MarketPriceAnalysisFunction:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MarketPriceAnalysisFunction'
  responses:
    HTTPError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    BadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequestsError:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
...
