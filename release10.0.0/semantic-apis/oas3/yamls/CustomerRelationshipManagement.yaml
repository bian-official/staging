openapi: 3.0.1
info:
  title: Customer Relationship Management
  description: This service domain develops and executes a customer plan to maintain and build a customer relationship. Activities include ongoing customer contact, tracking internal and external events and activity of interest and relevance, product and service matching and sales, processing ad-hoc queries, trouble shooting and issue resolution including the initial phases of troubled account recovery
  version: 10.0.0
servers:
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/B154/CustomerRelationshipManagement/10.0.0
paths:
  /CustomerRelationshipManagement/Create:
    post:
      tags:
      - CR - CustomerRelationshipManagementPlan
      summary: CrCR Create an initial relationship management plan
      description: CrCR Create an initial relationship management plan
      operationId: Create
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/CustomerRelationshipManagementPlan'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerRelationshipManagementPlan'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerRelationshipManagement/{customerrelationshipmanagementId}/Retrieve:
    get:
      tags:
      - CR - CustomerRelationshipManagementPlan
      summary: ReCR Retrieve details about a relationship plan
      description: ReCR Retrieve details about a relationship plan
      operationId: Retrieve
      parameters:
      - $ref: '#/components/parameters/CustomerRelationshipManagementID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerRelationshipManagementPlan'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerRelationshipManagement/{customerrelationshipmanagementId}/Development/Create:
    post:
      tags:
      - BQ - Development
      summary: CrBQ Create customer development capability  (initialize the capability)
      description: CrBQ Create customer development capability  (initialize the capability)
      operationId: CreateDevelopment
      parameters:
      - $ref: '#/components/parameters/CustomerRelationshipManagementID'
      requestBody:
        $ref: '#/components/requestBodies/CustomerRelationshipManagementPlan'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerRelationshipManagementPlan'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerRelationshipManagement/{customerrelationshipmanagementId}/Development/{developmentId}/Update:
    put:
      tags:
      - BQ - Development
      summary: UpBQ Update details about a relationship development task
      description: UpBQ Update details about a relationship development task
      operationId: UpdateDevelopment
      parameters:
      - $ref: '#/components/parameters/CustomerRelationshipManagementID'
      - $ref: '#/components/parameters/DevelopmentID'
      requestBody:
        $ref: '#/components/requestBodies/UpdateDevelopmentRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDevelopmentResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerRelationshipManagement/{customerrelationshipmanagementId}/Development/{developmentId}/Request:
    put:
      tags:
      - BQ - Development
      summary: RqBQ Request a relationship development task
      description: RqBQ Request a relationship development task
      operationId: RequestDevelopment
      parameters:
      - $ref: '#/components/parameters/CustomerRelationshipManagementID'
      - $ref: '#/components/parameters/DevelopmentID'
      requestBody:
        $ref: '#/components/requestBodies/Development'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Development'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerRelationshipManagement/{customerrelationshipmanagementId}/Development/{developmentId}/Retrieve:
    get:
      tags:
      - BQ - Development
      summary: ReBQ Retrieve details about relationship development activity
      description: ReBQ Retrieve details about relationship development activity
      operationId: RetrieveDevelopment
      parameters:
      - $ref: '#/components/parameters/CustomerRelationshipManagementID'
      - $ref: '#/components/parameters/DevelopmentID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveDevelopmentResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerRelationshipManagement/{customerrelationshipmanagementId}/Incident/Create:
    post:
      tags:
      - BQ - Incident
      summary: CrBQ Create customer incident reporting capability (initialize the capability)
      description: CrBQ Create customer incident reporting capability (initialize the capability)
      operationId: CreateIncident
      parameters:
      - $ref: '#/components/parameters/CustomerRelationshipManagementID'
      requestBody:
        $ref: '#/components/requestBodies/CustomerRelationshipManagementPlan'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerRelationshipManagementPlan'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerRelationshipManagement/{customerrelationshipmanagementId}/Incident/{incidentId}/Update:
    put:
      tags:
      - BQ - Incident
      summary: UpBQ Update details about a customer incident
      description: UpBQ Update details about a customer incident
      operationId: UpdateIncident
      parameters:
      - $ref: '#/components/parameters/CustomerRelationshipManagementID'
      - $ref: '#/components/parameters/IncidentID'
      requestBody:
        $ref: '#/components/requestBodies/Incident'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Incident'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerRelationshipManagement/{customerrelationshipmanagementId}/Incident/{incidentId}/Capture:
    put:
      tags:
      - BQ - Incident
      summary: CaBQ Capture details of a new customer incident
      description: CaBQ Capture details of a new customer incident
      operationId: CaptureIncident
      parameters:
      - $ref: '#/components/parameters/CustomerRelationshipManagementID'
      - $ref: '#/components/parameters/IncidentID'
      requestBody:
        $ref: '#/components/requestBodies/Incident'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Incident'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerRelationshipManagement/{customerrelationshipmanagementId}/Incident/{incidentId}/Retrieve:
    get:
      tags:
      - BQ - Incident
      summary: ReBQ Retrieve details about a customer incident
      description: ReBQ Retrieve details about a customer incident
      operationId: RetrieveIncident
      parameters:
      - $ref: '#/components/parameters/CustomerRelationshipManagementID'
      - $ref: '#/components/parameters/IncidentID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveIncidentResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerRelationshipManagement/{customerrelationshipmanagementId}/Contact/Create:
    post:
      tags:
      - BQ - Contact
      summary: CrBQ Create contact handling capability (initialize and track)
      description: CrBQ Create contact handling capability (initialize and track)
      operationId: CreateContact
      parameters:
      - $ref: '#/components/parameters/CustomerRelationshipManagementID'
      requestBody:
        $ref: '#/components/requestBodies/Contact'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerRelationshipManagement/{customerrelationshipmanagementId}/Contact/{contactId}/Update:
    put:
      tags:
      - BQ - Contact
      summary: UpCR Update details of a customer contact
      description: UpCR Update details of a customer contact
      operationId: UpdateContact
      parameters:
      - $ref: '#/components/parameters/CustomerRelationshipManagementID'
      - $ref: '#/components/parameters/ContactID'
      requestBody:
        $ref: '#/components/requestBodies/Contact'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerRelationshipManagement/{customerrelationshipmanagementId}/Contact/{contactId}/Request:
    put:
      tags:
      - BQ - Contact
      summary: RqBQ Request a customer contact
      description: RqBQ Request a customer contact
      operationId: RequestContact
      parameters:
      - $ref: '#/components/parameters/CustomerRelationshipManagementID'
      - $ref: '#/components/parameters/ContactID'
      requestBody:
        $ref: '#/components/requestBodies/Contact'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerRelationshipManagement/{customerrelationshipmanagementId}/Contact/{contactId}/Retrieve:
    get:
      tags:
      - BQ - Contact
      summary: ReBQ Retrieve details about customer contacts
      description: ReBQ Retrieve details about customer contacts
      operationId: RetrieveContact
      parameters:
      - $ref: '#/components/parameters/CustomerRelationshipManagementID'
      - $ref: '#/components/parameters/ContactID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveContactResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    CustomerRelationshipManagementPlan:
      type: object
      properties:
        CustomerReference:
          type: object
        EmployeeOrBusinessUnitReference:
          type: object
        CustomerRelationshipRatingType:
          type: string
        CustomerRelationshipRating:
          type: string
        CustomerInsightType:
          type: string
        CustomerInsightDescription:
          type: string
        CustomerBudget:
          type: string
        CustomerProductCoverage:
          type: string
        CustomerProductUsage:
          type: string
        CustomerProductEligibilityProfile:
          type: string
        CustomerSalesPlan:
          type: string
        CustomerProfitability:
          type: string
    Incident:
      type: object
      properties:
        RelationshipIncidentRecord:
          type: string
        Employee/BusinessUnitReference:
          type: object
        ProductandServiceActivityReference:
          type: object
        CustomerIncidentType:
          type: string
        CustomerIncidentDescription:
          type: string
        CustomerIncidentResolution:
          type: string
    Development:
      type: object
      properties:
        RelationshipDevelopmentTask:
          type: string
        CustomerDevelopmentTaskType:
          type: string
        CustomerDevelopmentTaskDescription:
          type: string
        CustomerRelationshipDevelopmentPlan:
          type: string
        Employee/BusinessUnitReference:
          type: object
        CustomerDevelopmentWorkProduct:
          type: string
        CustomerDevelopmentTaskResult:
          type: string
    Contact:
      type: object
      properties:
        CustomerRelationshipContactHistory:
          type: string
        CustomerRelationshipContactSchedule:
          type: string
        CustomerRelationshipContactRecord:
          type: string
        CustomerRelationshipContactDate:
          type: string
        EmployeeReference:
          type: object
        CustomerRelationshipContactType:
          type: string
        CustomerRelationshipContactResult:
          type: string
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
        status:
          type: string
        message:
          type: string
    UpdateDevelopmentRequest:
      type: object
      properties:
        CustomerRelationshipManagementPlan:
          type: object
          properties:
            CustomerReference:
              type: object
            EmployeeOrBusinessUnitReference:
              type: object
            CustomerRelationshipRatingType:
              type: string
            CustomerInsightType:
              type: string
            CustomerInsightDescription:
              type: string
            CustomerBudget:
              type: string
            CustomerProductCoverage:
              type: string
            CustomerProductUsage:
              type: string
            CustomerProductEligibilityProfile:
              type: string
            CustomerSalesPlan:
              type: string
            CustomerProfitability:
              type: string
        Development:
          type: object
          properties:
            RelationshipDevelopmentTask:
              type: string
            CustomerDevelopmentTaskType:
              type: string
            CustomerDevelopmentTaskDescription:
              type: string
            CustomerRelationshipDevelopmentPlan:
              type: string
            CustomerDevelopmentWorkProduct:
              type: string
            CustomerDevelopmentTaskResult:
              type: string
    UpdateDevelopmentResponse:
      type: object
      properties:
        CustomerRelationshipManagementPlan:
          type: object
          properties:
            CustomerReference:
              type: object
            EmployeeOrBusinessUnitReference:
              type: object
            CustomerRelationshipRatingType:
              type: string
            CustomerInsightType:
              type: string
            CustomerInsightDescription:
              type: string
            CustomerBudget:
              type: string
            CustomerProductCoverage:
              type: string
            CustomerProductUsage:
              type: string
            CustomerProductEligibilityProfile:
              type: string
            CustomerSalesPlan:
              type: string
            CustomerProfitability:
              type: string
        Development:
          type: object
          properties:
            RelationshipDevelopmentTask:
              type: string
            CustomerDevelopmentTaskType:
              type: string
            CustomerDevelopmentTaskDescription:
              type: string
            CustomerRelationshipDevelopmentPlan:
              type: string
            CustomerDevelopmentWorkProduct:
              type: string
            CustomerDevelopmentTaskResult:
              type: string
    RetrieveDevelopmentResponse:
      type: object
      properties:
        CustomerRelationshipManagementPlan:
          type: object
          properties:
            CustomerReference:
              type: object
            EmployeeOrBusinessUnitReference:
              type: object
            CustomerRelationshipRatingType:
              type: string
            CustomerInsightType:
              type: string
            CustomerInsightDescription:
              type: string
            CustomerBudget:
              type: string
            CustomerProductCoverage:
              type: string
            CustomerProductUsage:
              type: string
            CustomerProductEligibilityProfile:
              type: string
            CustomerSalesPlan:
              type: string
            CustomerProfitability:
              type: string
        Development:
          type: object
          properties:
            RelationshipDevelopmentTask:
              type: string
            CustomerDevelopmentTaskType:
              type: string
            CustomerDevelopmentTaskDescription:
              type: string
            CustomerRelationshipDevelopmentPlan:
              type: string
            CustomerDevelopmentWorkProduct:
              type: string
            CustomerDevelopmentTaskResult:
              type: string
    RetrieveIncidentResponse:
      type: object
      properties:
        CustomerRelationshipManagementPlan:
          type: object
          properties:
            CustomerReference:
              type: object
            EmployeeOrBusinessUnitReference:
              type: object
            CustomerRelationshipRatingType:
              type: string
            CustomerInsightType:
              type: string
            CustomerInsightDescription:
              type: string
            CustomerBudget:
              type: string
            CustomerProductCoverage:
              type: string
            CustomerProductUsage:
              type: string
            CustomerProductEligibilityProfile:
              type: string
            CustomerSalesPlan:
              type: string
            CustomerProfitability:
              type: string
        Incident:
          type: object
          properties:
            RelationshipIncidentRecord:
              type: string
            ProductandServiceActivityReference:
              type: object
            CustomerIncidentType:
              type: string
            CustomerIncidentDescription:
              type: string
            CustomerIncidentResolution:
              type: string
    RetrieveContactResponse:
      type: object
      properties:
        CustomerRelationshipManagementPlan:
          type: object
          properties:
            CustomerReference:
              type: object
            EmployeeOrBusinessUnitReference:
              type: object
            CustomerRelationshipRatingType:
              type: string
            CustomerInsightType:
              type: string
            CustomerInsightDescription:
              type: string
            CustomerBudget:
              type: string
            CustomerProductCoverage:
              type: string
            CustomerProductUsage:
              type: string
            CustomerProductEligibilityProfile:
              type: string
            CustomerSalesPlan:
              type: string
            CustomerProfitability:
              type: string
        Contact:
          type: object
          properties:
            CustomerRelationshipContactHistory:
              type: string
            CustomerRelationshipContactSchedule:
              type: string
            CustomerRelationshipContactRecord:
              type: string
            CustomerRelationshipContactDate:
              type: string
            EmployeeReference:
              type: object
            CustomerRelationshipContactType:
              type: string
            CustomerRelationshipContactResult:
              type: string
  parameters:
    CustomerRelationshipManagementID:
      name: customerrelationshipmanagementId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    IncidentID:
      name: incidentId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    DevelopmentID:
      name: developmentId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    ContactID:
      name: contactId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
  requestBodies:
    CustomerRelationshipManagementPlan:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerRelationshipManagementPlan'
    UpdateDevelopmentRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateDevelopmentRequest'
    Development:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Development'
    Incident:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Incident'
    Contact:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Contact'
  responses:
    HTTPError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    BadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequestsError:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
...
