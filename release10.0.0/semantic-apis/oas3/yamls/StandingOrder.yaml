openapi: 3.0.1
info:
  title: Standing Order
  description: Customers can issue standing orders to the bank. In most cases this is for the execution of a periodical payment, but there are other standing instructions like, sweeping balances at end of month, topping off excess funds for a current account, etc.
  version: 10.0.0
servers:
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/B154/StandingOrder/10.0.0
paths:
  /StandingOrder/{standingorderId}/Control:
    put:
      tags:
      - CR - StandingOrderFacility
      summary: CoCR Control the processing of Standing Order Facility
      description: CoCR Control the processing of Standing Order Facility
      operationId: Control
      parameters:
      - $ref: '#/components/parameters/StandingOrderID'
      requestBody:
        $ref: '#/components/requestBodies/StandingOrderFacility'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandingOrderFacility'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /StandingOrder/{standingorderId}/Exchange:
    put:
      tags:
      - CR - StandingOrderFacility
      summary: EcCR Accept, verify, etc. aspects of Standing Order Facility processing
      description: EcCR Accept, verify, etc. aspects of Standing Order Facility processing
      operationId: Exchange
      parameters:
      - $ref: '#/components/parameters/StandingOrderID'
      requestBody:
        $ref: '#/components/requestBodies/StandingOrderFacility'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandingOrderFacility'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /StandingOrder/{standingorderId}/Execute:
    put:
      tags:
      - CR - StandingOrderFacility
      summary: ExCR Execute an available automated action for Standing Order Facility
      description: ExCR Execute an available automated action for Standing Order Facility
      operationId: Execute
      parameters:
      - $ref: '#/components/parameters/StandingOrderID'
      requestBody:
        $ref: '#/components/requestBodies/StandingOrderFacility'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandingOrderFacility'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /StandingOrder/Initiate:
    post:
      tags:
      - CR - StandingOrderFacility
      summary: InCR Instantiate a new Standing Order Facility
      description: InCR Instantiate a new Standing Order Facility
      operationId: Initiate
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/StandingOrderFacility'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandingOrderFacility'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /StandingOrder/{standingorderId}/Retrieve:
    get:
      tags:
      - CR - StandingOrderFacility
      summary: ReCR Retrieve details about any aspect of Standing Order Facility
      description: ReCR Retrieve details about any aspect of Standing Order Facility
      operationId: Retrieve
      parameters:
      - $ref: '#/components/parameters/StandingOrderID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandingOrderFacility'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /StandingOrder/{standingorderId}/Request:
    put:
      tags:
      - CR - StandingOrderFacility
      summary: RqCR Request manual intervention or a decision with respect to Standing Order Facility
      description: RqCR Request manual intervention or a decision with respect to Standing Order Facility
      operationId: Request
      parameters:
      - $ref: '#/components/parameters/StandingOrderID'
      requestBody:
        $ref: '#/components/requestBodies/StandingOrderFacility'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandingOrderFacility'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /StandingOrder/{standingorderId}/Update:
    put:
      tags:
      - CR - StandingOrderFacility
      summary: UpCR Update details relating to Standing Order Facility
      description: UpCR Update details relating to Standing Order Facility
      operationId: Update
      parameters:
      - $ref: '#/components/parameters/StandingOrderID'
      requestBody:
        $ref: '#/components/requestBodies/StandingOrderFacility'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandingOrderFacility'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /StandingOrder/{standingorderId}/StandingOrderPayment/{standingorderpaymentId}/Exchange:
    put:
      tags:
      - BQ - StandingOrderPayment
      summary: EcBQ Accept, verify, etc. aspects of Standing Order Payment processing
      description: EcBQ Accept, verify, etc. aspects of Standing Order Payment processing
      operationId: ExchangeStandingOrderPayment
      parameters:
      - $ref: '#/components/parameters/StandingOrderID'
      - $ref: '#/components/parameters/StandingOrderPaymentID'
      requestBody:
        $ref: '#/components/requestBodies/StandingOrderPayment'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandingOrderPayment'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /StandingOrder/{standingorderId}/StandingOrderPayment/Initiate:
    post:
      tags:
      - BQ - StandingOrderPayment
      summary: InBQ Instantiate a new Standing Order Payment
      description: InBQ Instantiate a new Standing Order Payment
      operationId: InitiateStandingOrderPayment
      parameters:
      - $ref: '#/components/parameters/StandingOrderID'
      requestBody:
        $ref: '#/components/requestBodies/StandingOrderPayment'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandingOrderPayment'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /StandingOrder/{standingorderId}/StandingOrderPayment/{standingorderpaymentId}/Retrieve:
    get:
      tags:
      - BQ - StandingOrderPayment
      summary: ReBQ Retrieve details about any aspect of Standing Order Payment
      description: ReBQ Retrieve details about any aspect of Standing Order Payment
      operationId: RetrieveStandingOrderPayment
      parameters:
      - $ref: '#/components/parameters/StandingOrderID'
      - $ref: '#/components/parameters/StandingOrderPaymentID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandingOrderPayment'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /StandingOrder/{standingorderId}/StandingOrderPayment/{standingorderpaymentId}/Update:
    put:
      tags:
      - BQ - StandingOrderPayment
      summary: UpBQ Update details relating to Standing Order Payment
      description: UpBQ Update details relating to Standing Order Payment
      operationId: UpdateStandingOrderPayment
      parameters:
      - $ref: '#/components/parameters/StandingOrderID'
      - $ref: '#/components/parameters/StandingOrderPaymentID'
      requestBody:
        $ref: '#/components/requestBodies/StandingOrderPayment'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandingOrderPayment'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    StandingOrderFacility:
      type: object
      properties:
        StandingOrderFacilityParameterType:
          type: string
        StandingOrderFacilitySelectedOption:
          type: string
        StandingOrderFacilityType:
          type: string
        StandingOrderFacilityCalendar:
          type: string
        StandingOrderFacilityStatus:
          type: string
        StandingOrderFacilityAssociatedParty:
          type: object
        StandingOrderFacilityCurrency:
          type: string
        StandingOrderFacilityRegulationReference:
          type: string
        StandingOrderFacilityRegulationType:
          type: string
        StandingOrderFacilityJurisdiction:
          type: object
        StandingOrderFacilityBookingLocation:
          type: object
        StandingOrderFacilityAccountType:
          type: string
        StandingOrderFacilityAccountReference:
          type: string
        StandingOrderFacilityCustomerReference:
          type: object
        StandingOrderFacilityPosition:
          type: string
        StandingOrderFacilityProductReference:
          type: string
        StandingOrderFacilityPositionLimit:
          type: string
        FeeAccountReference:
          type: string
        CounterpartyCustomerReference:
          type: string
        CounterpartyAccountReference:
          type: string
        CounterpartyExternalAccountCode:
          type: string
        PrincipalAmount:
          type: string
        FeeAmount:
          type: string
        PaymentDetailsDescription:
          type: string
        StartDate:
          type: string
        EndDate:
          type: string
        PeriodicityDescription:
          type: string
        DayNumberInPeriodicityDescription:
          type: string
    StandingOrderFulfillment:
      type: object
      properties:
        Preconditions:
          type: object
        Schedule:
          type: object
        BusinessService:
          type: object
        Postconditions:
          type: object
        StandingOrderFacilityReference:
          type: string
        StandingOrderFulfillmentReference:
          type: object
        StandingOrderFulfillmentType:
          type: string
    StandingOrderOutcome:
      type: object
      properties:
        StandingOrderFinancialFacility:
          type: string
        StandingOrderWorkProduct:
          type: string
    StandingOrderPayment:
      type: object
      properties:
        StandingOrderPaymentPreconditions:
          type: object
        StandingOrderPaymentFeatureSchedule:
          type: object
        BusinessService:
          type: object
        StandingOrderPaymentPostconditions:
          type: object
        StandingOrderPaymentServiceType:
          type: string
        StandingOrderPaymentServiceDescription:
          type: string
        StandingOrderPaymentServiceInputsandOuputs:
          type: string
        StandingOrderPaymentServiceWorkProduct:
          type: object
        StandingOrderPaymentServiceName:
          type: string
        StandingOrderExecutionDate:
          type: string
        StandingOrderExecutionResultType:
          type: string
        StandingOrderExecutionNotExecutedReasonDescription:
          type: string
        StandingOrderExecutionPrincipalAmount:
          type: string
        StandingOrderExecutionFeeAmount:
          type: string
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
        status:
          type: string
        message:
          type: string
  parameters:
    StandingOrderID:
      name: standingorderId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    StandingOrderFulfillmentID:
      name: standingorderfulfillmentId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    StandingOrderOutcomeID:
      name: standingorderoutcomeId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    StandingOrderPaymentID:
      name: standingorderpaymentId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
  requestBodies:
    StandingOrderFacility:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StandingOrderFacility'
    StandingOrderPayment:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StandingOrderPayment'
  responses:
    HTTPError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    BadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequestsError:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
...
