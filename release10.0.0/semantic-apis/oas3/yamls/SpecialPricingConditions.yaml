openapi: 3.0.1
info:
  title: Special Pricing Conditions
  description: Maintain a pricing list or conditions (with ranges and optional terms) categorized by various dimensions to impose exceptional product pricing conditions that override standard pricing terms (for special events/situations)
  version: 10.0.0
servers:
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/B154/SpecialPricingConditions/10.0.0
paths:
  /SpecialPricingConditions/{specialpricingconditionsId}/Control:
    put:
      tags:
      - CR - SpecialPricingConditionsDirectoryEntry
      summary: CoCR Control the processing of Special Pricing Conditions Directory Entry
      description: CoCR Control the processing of Special Pricing Conditions Directory Entry
      operationId: Control
      parameters:
      - $ref: '#/components/parameters/SpecialPricingConditionsID'
      requestBody:
        $ref: '#/components/requestBodies/SpecialPricingConditionsDirectoryEntry'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ControlSpecialPricingConditionsDirectoryEntryResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SpecialPricingConditions/{specialpricingconditionsId}/Exchange:
    put:
      tags:
      - CR - SpecialPricingConditionsDirectoryEntry
      summary: EcCR Accept, verify, etc. aspects of Special Pricing Conditions Directory Entry processing
      description: EcCR Accept, verify, etc. aspects of Special Pricing Conditions Directory Entry processing
      operationId: Exchange
      parameters:
      - $ref: '#/components/parameters/SpecialPricingConditionsID'
      requestBody:
        $ref: '#/components/requestBodies/SpecialPricingConditionsDirectoryEntry'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExchangeSpecialPricingConditionsDirectoryEntryResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SpecialPricingConditions/{specialpricingconditionsId}/Execute:
    put:
      tags:
      - CR - SpecialPricingConditionsDirectoryEntry
      summary: ExCR Execute an available automated action for Special Pricing Conditions Directory Entry
      description: ExCR Execute an available automated action for Special Pricing Conditions Directory Entry
      operationId: Execute
      parameters:
      - $ref: '#/components/parameters/SpecialPricingConditionsID'
      requestBody:
        $ref: '#/components/requestBodies/SpecialPricingConditionsDirectoryEntry'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecuteSpecialPricingConditionsDirectoryEntryResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SpecialPricingConditions/Initiate:
    post:
      tags:
      - CR - SpecialPricingConditionsDirectoryEntry
      summary: InCR Instantiate a new Special Pricing Conditions Directory Entry
      description: InCR Instantiate a new Special Pricing Conditions Directory Entry
      operationId: Initiate
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/SpecialPricingConditionsDirectoryEntry'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitiateSpecialPricingConditionsDirectoryEntryResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SpecialPricingConditions/{specialpricingconditionsId}/Retrieve:
    get:
      tags:
      - CR - SpecialPricingConditionsDirectoryEntry
      summary: ReCR Retrieve details about any aspect of Special Pricing Conditions Directory Entry
      description: ReCR Retrieve details about any aspect of Special Pricing Conditions Directory Entry
      operationId: Retrieve
      parameters:
      - $ref: '#/components/parameters/SpecialPricingConditionsID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpecialPricingConditionsDirectoryEntry'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SpecialPricingConditions/{specialpricingconditionsId}/Request:
    put:
      tags:
      - CR - SpecialPricingConditionsDirectoryEntry
      summary: RqCR Request manual intervention or a decision with respect to Special Pricing Conditions Directory Entry
      description: RqCR Request manual intervention or a decision with respect to Special Pricing Conditions Directory Entry
      operationId: Request
      parameters:
      - $ref: '#/components/parameters/SpecialPricingConditionsID'
      requestBody:
        $ref: '#/components/requestBodies/SpecialPricingConditionsDirectoryEntry'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestSpecialPricingConditionsDirectoryEntryResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SpecialPricingConditions/{specialpricingconditionsId}/Update:
    put:
      tags:
      - CR - SpecialPricingConditionsDirectoryEntry
      summary: UpCR Update details relating to Special Pricing Conditions Directory Entry
      description: UpCR Update details relating to Special Pricing Conditions Directory Entry
      operationId: Update
      parameters:
      - $ref: '#/components/parameters/SpecialPricingConditionsID'
      requestBody:
        $ref: '#/components/requestBodies/SpecialPricingConditionsDirectoryEntry'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSpecialPricingConditionsDirectoryEntryResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SpecialPricingConditions/{specialpricingconditionsId}/PricingTerms/Initiate:
    post:
      tags:
      - BQ - PricingTerms
      summary: InBQ Instantiate a new Pricing Terms
      description: InBQ Instantiate a new Pricing Terms
      operationId: InitiatePricingTerms
      parameters:
      - $ref: '#/components/parameters/SpecialPricingConditionsID'
      requestBody:
        $ref: '#/components/requestBodies/PricingTerms'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PricingTerms'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SpecialPricingConditions/{specialpricingconditionsId}/PricingTerms/{pricingtermsId}/Retrieve:
    get:
      tags:
      - BQ - PricingTerms
      summary: ReBQ Retrieve details about any aspect of Pricing Terms
      description: ReBQ Retrieve details about any aspect of Pricing Terms
      operationId: RetrievePricingTerms
      parameters:
      - $ref: '#/components/parameters/SpecialPricingConditionsID'
      - $ref: '#/components/parameters/PricingTermsID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PricingTerms'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SpecialPricingConditions/{specialpricingconditionsId}/PricingTerms/{pricingtermsId}/Update:
    put:
      tags:
      - BQ - PricingTerms
      summary: UpBQ Update details relating to Pricing Terms
      description: UpBQ Update details relating to Pricing Terms
      operationId: UpdatePricingTerms
      parameters:
      - $ref: '#/components/parameters/SpecialPricingConditionsID'
      - $ref: '#/components/parameters/PricingTermsID'
      requestBody:
        $ref: '#/components/requestBodies/PricingTerms'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PricingTerms'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    SpecialPricingConditionsDirectoryEntry:
      type: object
      properties:
        SpecialPricingConditionsDirectoryEntryDescription:
          type: string
        SpecialPricingConditionsDirectoryEntrySchedule:
          type: string
        SpecialPricingConditionsDirectoryEntryVersion:
          type: string
        SpecialPricingConditionsDirectoryEntryStatus:
          type: string
        SpecialPricingConditionsDirectoryEntryUsageLog:
          type: string
        SpecialPricingConditionsDirectoryEntryUpdateLog:
          type: string
        SpecialPricingConditionsDirectoryEntryServiceConfiguration:
          type: string
    SpecialPricingConditionsOutcome:
      type: object
      properties:
        SpecialPricingConditionsEntry:
          type: string
        SpecialPricingConditionsWorkProduct:
          type: string
    PricingTerms:
      type: object
      properties:
        PricingTermsPreconditions:
          type: string
        PricingTermsPropertySchedule:
          type: string
        PricingTermsVersionNumber:
          type: string
        SpecialPricingterms:
          type: object
        SpecialPricingtermsServiceType:
          type: string
        SpecialPricingtermsServiceDescription:
          type: string
        SpecialPricingtermsServiceInputsandOuputs:
          type: string
        SpecialPricingtermsServiceWorkProduct:
          type: string
        SpecialPricingtermsServiceName:
          type: string
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
        status:
          type: string
        message:
          type: string
    ControlSpecialPricingConditionsDirectoryEntryResponse:
      type: object
      properties:
        SpecialPricingConditionsDirectoryEntry:
          type: object
          properties:
            SpecialPricingConditionsDirectoryEntrySchedule:
              type: string
            SpecialPricingConditionsDirectoryEntryVersion:
              type: string
            SpecialPricingConditionsDirectoryEntryStatus:
              type: string
            SpecialPricingConditionsDirectoryEntryUsageLog:
              type: string
            SpecialPricingConditionsDirectoryEntryUpdateLog:
              type: string
            SpecialPricingConditionsDirectoryEntryServiceConfiguration:
              type: string
    ExchangeSpecialPricingConditionsDirectoryEntryResponse:
      type: object
      properties:
        SpecialPricingConditionsDirectoryEntry:
          type: object
          properties:
            SpecialPricingConditionsDirectoryEntrySchedule:
              type: string
            SpecialPricingConditionsDirectoryEntryVersion:
              type: string
            SpecialPricingConditionsDirectoryEntryStatus:
              type: string
            SpecialPricingConditionsDirectoryEntryUsageLog:
              type: string
            SpecialPricingConditionsDirectoryEntryUpdateLog:
              type: string
            SpecialPricingConditionsDirectoryEntryServiceConfiguration:
              type: string
    ExecuteSpecialPricingConditionsDirectoryEntryResponse:
      type: object
      properties:
        SpecialPricingConditionsDirectoryEntry:
          type: object
          properties:
            SpecialPricingConditionsDirectoryEntrySchedule:
              type: string
            SpecialPricingConditionsDirectoryEntryVersion:
              type: string
            SpecialPricingConditionsDirectoryEntryStatus:
              type: string
            SpecialPricingConditionsDirectoryEntryUsageLog:
              type: string
            SpecialPricingConditionsDirectoryEntryUpdateLog:
              type: string
            SpecialPricingConditionsDirectoryEntryServiceConfiguration:
              type: string
    InitiateSpecialPricingConditionsDirectoryEntryResponse:
      type: object
      properties:
        SpecialPricingConditionsDirectoryEntry:
          type: object
          properties:
            SpecialPricingConditionsDirectoryEntrySchedule:
              type: string
            SpecialPricingConditionsDirectoryEntryVersion:
              type: string
            SpecialPricingConditionsDirectoryEntryStatus:
              type: string
            SpecialPricingConditionsDirectoryEntryUsageLog:
              type: string
            SpecialPricingConditionsDirectoryEntryUpdateLog:
              type: string
            SpecialPricingConditionsDirectoryEntryServiceConfiguration:
              type: string
    RequestSpecialPricingConditionsDirectoryEntryResponse:
      type: object
      properties:
        SpecialPricingConditionsDirectoryEntry:
          type: object
          properties:
            SpecialPricingConditionsDirectoryEntrySchedule:
              type: string
            SpecialPricingConditionsDirectoryEntryVersion:
              type: string
            SpecialPricingConditionsDirectoryEntryStatus:
              type: string
            SpecialPricingConditionsDirectoryEntryUsageLog:
              type: string
            SpecialPricingConditionsDirectoryEntryUpdateLog:
              type: string
            SpecialPricingConditionsDirectoryEntryServiceConfiguration:
              type: string
    UpdateSpecialPricingConditionsDirectoryEntryResponse:
      type: object
      properties:
        SpecialPricingConditionsDirectoryEntry:
          type: object
          properties:
            SpecialPricingConditionsDirectoryEntrySchedule:
              type: string
            SpecialPricingConditionsDirectoryEntryVersion:
              type: string
            SpecialPricingConditionsDirectoryEntryStatus:
              type: string
            SpecialPricingConditionsDirectoryEntryUsageLog:
              type: string
            SpecialPricingConditionsDirectoryEntryUpdateLog:
              type: string
            SpecialPricingConditionsDirectoryEntryServiceConfiguration:
              type: string
  parameters:
    SpecialPricingConditionsID:
      name: specialpricingconditionsId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    SpecialPricingConditionsOutcomeID:
      name: specialpricingconditionsoutcomeId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    PricingTermsID:
      name: pricingtermsId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
  requestBodies:
    SpecialPricingConditionsDirectoryEntry:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SpecialPricingConditionsDirectoryEntry'
    PricingTerms:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PricingTerms'
  responses:
    HTTPError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    BadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequestsError:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
...
