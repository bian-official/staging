openapi: 3.0.1
info:
  title: Regulatory Compliance
  description: This service domain provides a service to interpret regulatory requirements, provide guidance and define and implement a portfolio of regulatory compliance tests across all appropriate bank activities
  version: 10.0.0
servers:
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/B154/RegulatoryCompliance/10.0.0
paths:
  /RegulatoryCompliance/Evaluate:
    post:
      tags:
      - CR - RegulatoryComplianceAssessment
      summary: EvCR Start a compliance evaluation assessment
      description: EvCR Start a compliance evaluation assessment
      operationId: Evaluate
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/EvaluateRegulatoryComplianceAssessmentRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvaluateRegulatoryComplianceAssessmentResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /RegulatoryCompliance/{regulatorycomplianceId}/Update:
    put:
      tags:
      - CR - RegulatoryComplianceAssessment
      summary: UpCR Update submitted details or content for an on-going compliance assessment
      description: UpCR Update submitted details or content for an on-going compliance assessment
      operationId: Update
      parameters:
      - $ref: '#/components/parameters/RegulatoryComplianceID'
      requestBody:
        $ref: '#/components/requestBodies/UpdateRegulatoryComplianceAssessmentRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateRegulatoryComplianceAssessmentResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /RegulatoryCompliance/{regulatorycomplianceId}/Request:
    put:
      tags:
      - CR - RegulatoryComplianceAssessment
      summary: RqCR Request a review or adjudication for an assessment
      description: RqCR Request a review or adjudication for an assessment
      operationId: Request
      parameters:
      - $ref: '#/components/parameters/RegulatoryComplianceID'
      requestBody:
        $ref: '#/components/requestBodies/RequestRegulatoryComplianceAssessmentRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestRegulatoryComplianceAssessmentResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /RegulatoryCompliance/{regulatorycomplianceId}/Retrieve:
    get:
      tags:
      - CR - RegulatoryComplianceAssessment
      summary: ReCR Retrieve details and content from an active compliance assessment
      description: ReCR Retrieve details and content from an active compliance assessment
      operationId: Retrieve
      parameters:
      - $ref: '#/components/parameters/RegulatoryComplianceID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegulatoryComplianceAssessment'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    RegulatoryComplianceAssessment:
      type: object
      properties:
        RegulatoryAssessmentType:
          type: string
        BusinessUnitReference:
          type: object
        ProductandServiceReference:
          type: object
        CustomerReference:
          type: object
        RegulatoryAuthorityReference:
          type: object
        RegulationReference:
          type: object
        RegulationDefinition:
          type: string
        RegulationComplianceandReportingRequirements:
          type: string
        RegulationAccountability:
          type: string
        RegulationPenalties:
          type: string
        RegulationGuideline:
          type: string
        DocumentReference:
          type: object
        RegulatoryAssessmentWorkProducts:
          type: string
        RegulatoryAssessmentResult:
          type: string
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
        status:
          type: string
        message:
          type: string
    EvaluateRegulatoryComplianceAssessmentRequest:
      type: object
      properties:
        RegulatoryComplianceAssessment:
          type: object
          properties:
            RegulatoryAssessmentType:
              type: string
            BusinessUnitReference:
              type: object
            ProductandServiceReference:
              type: object
            CustomerReference:
              type: object
            RegulatoryAuthorityReference:
              type: object
            RegulationReference:
              type: object
            DocumentReference:
              type: object
            RegulatoryAssessmentWorkProducts:
              type: string
    EvaluateRegulatoryComplianceAssessmentResponse:
      type: object
      properties:
        RegulatoryComplianceAssessment:
          type: object
          properties:
            RegulatoryAssessmentType:
              type: string
            RegulationDefinition:
              type: string
            RegulationComplianceandReportingRequirements:
              type: string
            RegulationAccountability:
              type: string
            RegulationPenalties:
              type: string
            RegulationGuideline:
              type: string
            DocumentReference:
              type: object
            RegulatoryAssessmentWorkProducts:
              type: string
            RegulatoryAssessmentResult:
              type: string
    UpdateRegulatoryComplianceAssessmentRequest:
      type: object
      properties:
        RegulatoryComplianceAssessment:
          type: object
          properties:
            RegulatoryAssessmentType:
              type: string
            BusinessUnitReference:
              type: object
            ProductandServiceReference:
              type: object
            CustomerReference:
              type: object
            RegulatoryAuthorityReference:
              type: object
            RegulationReference:
              type: object
            DocumentReference:
              type: object
            RegulatoryAssessmentWorkProducts:
              type: string
    UpdateRegulatoryComplianceAssessmentResponse:
      type: object
      properties:
        RegulatoryComplianceAssessment:
          type: object
          properties:
            RegulatoryAssessmentType:
              type: string
            BusinessUnitReference:
              type: object
            ProductandServiceReference:
              type: object
            CustomerReference:
              type: object
            RegulatoryAuthorityReference:
              type: object
            RegulationReference:
              type: object
            DocumentReference:
              type: object
            RegulatoryAssessmentWorkProducts:
              type: string
    RequestRegulatoryComplianceAssessmentRequest:
      type: object
      properties:
        RegulatoryComplianceAssessment:
          type: object
          properties:
            RegulatoryAssessmentType:
              type: string
            BusinessUnitReference:
              type: object
            ProductandServiceReference:
              type: object
            CustomerReference:
              type: object
            RegulatoryAuthorityReference:
              type: object
            RegulationReference:
              type: object
            DocumentReference:
              type: object
            RegulatoryAssessmentWorkProducts:
              type: string
    RequestRegulatoryComplianceAssessmentResponse:
      type: object
      properties:
        RegulatoryComplianceAssessment:
          type: object
          properties:
            RegulatoryAssessmentType:
              type: string
            BusinessUnitReference:
              type: object
            ProductandServiceReference:
              type: object
            CustomerReference:
              type: object
            RegulatoryAuthorityReference:
              type: object
            RegulationReference:
              type: object
            DocumentReference:
              type: object
            RegulatoryAssessmentWorkProducts:
              type: string
            RegulatoryAssessmentResult:
              type: string
  parameters:
    RegulatoryComplianceID:
      name: regulatorycomplianceId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
  requestBodies:
    EvaluateRegulatoryComplianceAssessmentRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EvaluateRegulatoryComplianceAssessmentRequest'
    UpdateRegulatoryComplianceAssessmentRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateRegulatoryComplianceAssessmentRequest'
    RequestRegulatoryComplianceAssessmentRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestRegulatoryComplianceAssessmentRequest'
  responses:
    HTTPError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    BadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequestsError:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
...
