openapi: 3.0.1
info:
  title: Product Directory
  description: This service domain maintains a comprehensive directory of the bank's products and services. It can be referenced to obtain product details used to support activities including product selection, sales and marketing, on-boarding, servicing and product fulfillment.
  version: 10.0.0
servers:
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/B154/ProductDirectory/10.0.0
paths:
  /ProductDirectory/Register:
    post:
      tags:
      - CR - ProductDirectoryEntry
      summary: InCR Register a new product or service in the catalog
      description: InCR Register a new product or service in the catalog
      operationId: Register
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/ProductDirectoryEntry'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: boolean
                example: true
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductDirectory/{productdirectoryId}/Update:
    put:
      tags:
      - CR - ProductDirectoryEntry
      summary: UpCR Update details of a product or service in the catalog
      description: UpCR Update details of a product or service in the catalog
      operationId: Update
      parameters:
      - $ref: '#/components/parameters/ProductDirectoryID'
      requestBody:
        $ref: '#/components/requestBodies/ProductDirectoryEntry'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDirectoryEntry'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductDirectory/{productdirectoryId}/Request:
    put:
      tags:
      - CR - ProductDirectoryEntry
      summary: RqCR Request that an existing entry is updated or revised
      description: RqCR Request that an existing entry is updated or revised
      operationId: Request
      parameters:
      - $ref: '#/components/parameters/ProductDirectoryID'
      requestBody:
        $ref: '#/components/requestBodies/ProductDirectoryEntry'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDirectoryEntry'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductDirectory/{productdirectoryId}/Retrieve:
    get:
      tags:
      - CR - ProductDirectoryEntry
      summary: ReCR Retrieve product or service details from the catalog
      description: ReCR Retrieve product or service details from the catalog
      operationId: Retrieve
      parameters:
      - $ref: '#/components/parameters/ProductDirectoryID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDirectoryEntry'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductDirectory/{productdirectoryId}/Operations/Register:
    post:
      tags:
      - BQ - Operations
      summary: InBQ Register a new product or service operations details in the catalog
      description: InBQ Register a new product or service operations details in the catalog
      operationId: RegisterOperations
      parameters:
      - $ref: '#/components/parameters/ProductDirectoryID'
      requestBody:
        $ref: '#/components/requestBodies/ProductDirectoryEntry'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: boolean
                example: true
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductDirectory/{productdirectoryId}/Operations/{operationsId}/Update:
    put:
      tags:
      - BQ - Operations
      summary: UpBQ Update details of a product or service operations details in the catalog
      description: UpBQ Update details of a product or service operations details in the catalog
      operationId: UpdateOperations
      parameters:
      - $ref: '#/components/parameters/ProductDirectoryID'
      - $ref: '#/components/parameters/OperationsID'
      requestBody:
        $ref: '#/components/requestBodies/ProductDirectoryEntry'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDirectoryEntry'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductDirectory/{productdirectoryId}/Operations/{operationsId}/Retrieve:
    get:
      tags:
      - BQ - Operations
      summary: ReBQ Retrieve product or service operations details from the catalog
      description: ReBQ Retrieve product or service operations details from the catalog
      operationId: RetrieveOperations
      parameters:
      - $ref: '#/components/parameters/ProductDirectoryID'
      - $ref: '#/components/parameters/OperationsID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDirectoryEntry'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductDirectory/{productdirectoryId}/SalesandMarketing/Register:
    post:
      tags:
      - BQ - SalesandMarketing
      summary: InBQ Register a new product or service sales and marketing details in the catalog
      description: InBQ Register a new product or service sales and marketing details in the catalog
      operationId: RegisterSalesandMarketing
      parameters:
      - $ref: '#/components/parameters/ProductDirectoryID'
      requestBody:
        $ref: '#/components/requestBodies/ProductDirectoryEntry'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: boolean
                example: true
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductDirectory/{productdirectoryId}/SalesandMarketing/{salesandmarketingId}/Update:
    put:
      tags:
      - BQ - SalesandMarketing
      summary: UpBQ Update details of a product or service sales and marketing details in the catalog
      description: UpBQ Update details of a product or service sales and marketing details in the catalog
      operationId: UpdateSalesandMarketing
      parameters:
      - $ref: '#/components/parameters/ProductDirectoryID'
      - $ref: '#/components/parameters/SalesandMarketingID'
      requestBody:
        $ref: '#/components/requestBodies/SalesandMarketing'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesandMarketing'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductDirectory/{productdirectoryId}/SalesandMarketing/{salesandmarketingId}/Retrieve:
    get:
      tags:
      - BQ - SalesandMarketing
      summary: ReBQ Retrieve product or service sales and marketing details from the catalog
      description: ReBQ Retrieve product or service sales and marketing details from the catalog
      operationId: RetrieveSalesandMarketing
      parameters:
      - $ref: '#/components/parameters/ProductDirectoryID'
      - $ref: '#/components/parameters/SalesandMarketingID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDirectoryEntry'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductDirectory/{productdirectoryId}/Servicing/Register:
    post:
      tags:
      - BQ - Servicing
      summary: InBQ Register a new product or service servicing details in the catalog
      description: InBQ Register a new product or service servicing details in the catalog
      operationId: RegisterServicing
      parameters:
      - $ref: '#/components/parameters/ProductDirectoryID'
      requestBody:
        $ref: '#/components/requestBodies/ProductDirectoryEntry'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: boolean
                example: true
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductDirectory/{productdirectoryId}/Servicing/{servicingId}/Update:
    put:
      tags:
      - BQ - Servicing
      summary: UpBQ Update details of a product or service servicing details in the catalog
      description: UpBQ Update details of a product or service servicing details in the catalog
      operationId: UpdateServicing
      parameters:
      - $ref: '#/components/parameters/ProductDirectoryID'
      - $ref: '#/components/parameters/ServicingID'
      requestBody:
        $ref: '#/components/requestBodies/Servicing'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Servicing'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductDirectory/{productdirectoryId}/Servicing/{servicingId}/Retrieve:
    get:
      tags:
      - BQ - Servicing
      summary: ReBQ Retrieve product or service servicing details from the catalog
      description: ReBQ Retrieve product or service servicing details from the catalog
      operationId: RetrieveServicing
      parameters:
      - $ref: '#/components/parameters/ProductDirectoryID'
      - $ref: '#/components/parameters/ServicingID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDirectoryEntry'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductDirectory/{productdirectoryId}/Production/Register:
    post:
      tags:
      - BQ - Production
      summary: InBQ Register a new product or service production details in the catalog
      description: InBQ Register a new product or service production details in the catalog
      operationId: RegisterProduction
      parameters:
      - $ref: '#/components/parameters/ProductDirectoryID'
      requestBody:
        $ref: '#/components/requestBodies/ProductDirectoryEntry'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: boolean
                example: true
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductDirectory/{productdirectoryId}/Production/{productionId}/Update:
    put:
      tags:
      - BQ - Production
      summary: UpBQ Update details of a product or service production details in the catalog
      description: UpBQ Update details of a product or service production details in the catalog
      operationId: UpdateProduction
      parameters:
      - $ref: '#/components/parameters/ProductDirectoryID'
      - $ref: '#/components/parameters/ProductionID'
      requestBody:
        $ref: '#/components/requestBodies/Production'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Production'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductDirectory/{productdirectoryId}/Production/{productionId}/Retrieve:
    get:
      tags:
      - BQ - Production
      summary: ReBQ Retrieve product or service production details from the catalog
      description: ReBQ Retrieve product or service production details from the catalog
      operationId: RetrieveProduction
      parameters:
      - $ref: '#/components/parameters/ProductDirectoryID'
      - $ref: '#/components/parameters/ProductionID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDirectoryEntry'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    ProductDirectoryEntry:
      type: object
      properties:
        ProductVersion:
          type: string
        ProductDirectoryEntryConfiguration:
          type: string
    SalesandMarketing:
      type: object
      properties:
        ProductandServiceSalesMaterial:
          type: string
        ProductandServicesFeaturesAndOptions:
          type: string
        ProductandServicePricingTable:
          type: string
        ProductandServiceFees/PenaltiesTable:
          type: string
        ProductSuitabilityGuide:
          type: string
        ProductandServiceEligibilityType:
          type: string
        ProductandServiceEligibilityDescription:
          type: string
        ProductandServiceOfferProcessingRequirements:
          type: string
    Servicing:
      type: object
      properties:
        ProductandServiceFeature:
          type: string
        ProductandServiceFeatureGuideline:
          type: string
        ProductandServiceFeatureProblemDiagnosis:
          type: string
        ProductandServiceFeatureProblemResolution:
          type: string
    Operations:
      type: object
      properties:
        ProductandServiceOperatingSchedule:
          type: string
        ProductandServiceConfigurationParameterType:
          type: string
        ProductandServiceConfigurationParameterDescription:
          type: string
        ProductandServiceConfigurationParameterSetting:
          type: string
    Production:
      type: object
      properties:
        ProductandServiceLocationAvailability:
          type: string
        ProductandServiceTimeAvailability:
          type: string
        ProductandServiceAccessAvailability:
          type: string
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
        status:
          type: string
        message:
          type: string
  parameters:
    ProductDirectoryID:
      name: productdirectoryId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    SalesandMarketingID:
      name: salesandmarketingId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    ServicingID:
      name: servicingId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    OperationsID:
      name: operationsId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    ProductionID:
      name: productionId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
  requestBodies:
    ProductDirectoryEntry:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProductDirectoryEntry'
    SalesandMarketing:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SalesandMarketing'
    Servicing:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Servicing'
    Production:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Production'
  responses:
    HTTPError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    BadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequestsError:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
...
