openapi: 3.0.1
info:
  title: Customer Portfolio
  description: Maintain a portfolio of analytical views of the customer base to support customer segment profitability and performance analysis
  version: 10.0.0
servers:
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/B154/CustomerPortfolio/10.0.0
paths:
  /CustomerPortfolio/Evaluate:
    post:
      tags:
      - CR - CustomerSegmentAnalysis
      summary: EvCR Evaluate customer segment performance
      description: EvCR Evaluate customer segment performance
      operationId: Evaluate
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/CustomerSegmentAnalysis'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerSegmentAnalysis'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerPortfolio/{customerportfolioId}/Update:
    put:
      tags:
      - CR - CustomerSegmentAnalysis
      summary: UpCR Update settings or content for customer segment analysis activity
      description: UpCR Update settings or content for customer segment analysis activity
      operationId: Update
      parameters:
      - $ref: '#/components/parameters/CustomerPortfolioID'
      requestBody:
        $ref: '#/components/requestBodies/CustomerSegmentAnalysis'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerSegmentAnalysis'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerPortfolio/{customerportfolioId}/Request:
    put:
      tags:
      - CR - CustomerSegmentAnalysis
      summary: RqCR Request manual intervention in the customer segment analysis activity
      description: RqCR Request manual intervention in the customer segment analysis activity
      operationId: Request
      parameters:
      - $ref: '#/components/parameters/CustomerPortfolioID'
      requestBody:
        $ref: '#/components/requestBodies/CustomerSegmentAnalysis'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerSegmentAnalysis'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerPortfolio/{customerportfolioId}/Retrieve:
    get:
      tags:
      - CR - CustomerSegmentAnalysis
      summary: ReCR Retrieve details about customer segment analysis activity
      description: ReCR Retrieve details about customer segment analysis activity
      operationId: Retrieve
      parameters:
      - $ref: '#/components/parameters/CustomerPortfolioID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerSegmentAnalysis'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerPortfolio/{customerportfolioId}/PerformanceAnalysis/Evaluate:
    post:
      tags:
      - BQ - PerformanceAnalysis
      summary: EvBQ Evaluate customer segment performance using a specific type of analysis
      description: EvBQ Evaluate customer segment performance using a specific type of analysis
      operationId: EvaluatePerformanceAnalysis
      parameters:
      - $ref: '#/components/parameters/CustomerPortfolioID'
      requestBody:
        $ref: '#/components/requestBodies/EvaluatePerformanceAnalysisRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvaluatePerformanceAnalysisResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerPortfolio/{customerportfolioId}/PerformanceAnalysis/{performanceanalysisId}/Update:
    put:
      tags:
      - BQ - PerformanceAnalysis
      summary: UpBQ Update details of a specific customer segment performance analysis
      description: UpBQ Update details of a specific customer segment performance analysis
      operationId: UpdatePerformanceAnalysis
      parameters:
      - $ref: '#/components/parameters/CustomerPortfolioID'
      - $ref: '#/components/parameters/PerformanceAnalysisID'
      requestBody:
        $ref: '#/components/requestBodies/PerformanceAnalysis'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerformanceAnalysis'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerPortfolio/{customerportfolioId}/PerformanceAnalysis/{performanceanalysisId}/Execute:
    put:
      tags:
      - BQ - PerformanceAnalysis
      summary: ExBQ Execute an automated action against on-going analysis
      description: ExBQ Execute an automated action against on-going analysis
      operationId: ExecutePerformanceAnalysis
      parameters:
      - $ref: '#/components/parameters/CustomerPortfolioID'
      - $ref: '#/components/parameters/PerformanceAnalysisID'
      requestBody:
        $ref: '#/components/requestBodies/PerformanceAnalysis'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerformanceAnalysis'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerPortfolio/{customerportfolioId}/PerformanceAnalysis/{performanceanalysisId}/Request:
    put:
      tags:
      - BQ - PerformanceAnalysis
      summary: RqBQ Request manual intervention to on-going analysis
      description: RqBQ Request manual intervention to on-going analysis
      operationId: RequestPerformanceAnalysis
      parameters:
      - $ref: '#/components/parameters/CustomerPortfolioID'
      - $ref: '#/components/parameters/PerformanceAnalysisID'
      requestBody:
        $ref: '#/components/requestBodies/PerformanceAnalysis'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerformanceAnalysis'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerPortfolio/{customerportfolioId}/PerformanceAnalysis/{performanceanalysisId}/Retrieve:
    get:
      tags:
      - BQ - PerformanceAnalysis
      summary: ReBQ Retrieve details about a specific customer segment performance analysis
      description: ReBQ Retrieve details about a specific customer segment performance analysis
      operationId: RetrievePerformanceAnalysis
      parameters:
      - $ref: '#/components/parameters/CustomerPortfolioID'
      - $ref: '#/components/parameters/PerformanceAnalysisID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerformanceAnalysis'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    CustomerSegmentAnalysis:
      type: object
      properties:
        CustomerSegmentType:
          type: string
        CustomerSegmentTypeDefinition:
          type: string
        CustomerSegmentPerformanceGoals:
          type: string
        CustomerSegmentAnalysisSchedule:
          type: string
        CustomerSegmentAnalysisReport:
          type: string
        CustomerSegmentAnalysisType:
          type: string
        CustomerSegmentAnalysisResult:
          type: string
        CustomerSegmentAnalysisReportingDate:
          type: string
        DocumentDirectoryEntryInstanceReference:
          type: object
    PerformanceAnalysis:
      type: object
      properties:
        CustomerSegmentPerformanceAnalysisType:
          type: string
        CustomerSegmentPerformanceAnalysisTask:
          type: string
        CustomerSegmentPerformanceRequestSpecification:
          type: string
        CustomerSegmentPerformanceModelReference:
          type: object
        CustomerSegmentPerformanceProductandServiceActivityReport:
          type: string
        CustomerSegmentPerformanceFinancialMarketResearchReport:
          type: string
        CustomerSegmentPerformanceWorkProducts:
          type: string
        CustomerSegmentPerformanceRequestResult:
          type: string
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
        status:
          type: string
        message:
          type: string
    EvaluatePerformanceAnalysisRequest:
      type: object
      properties:
        CustomerSegmentAnalysis:
          type: object
          properties:
            CustomerSegmentAnalysisSchedule:
              type: string
            CustomerSegmentAnalysisReport:
              type: string
            CustomerSegmentAnalysisType:
              type: string
            CustomerSegmentAnalysisResult:
              type: string
            CustomerSegmentAnalysisReportingDate:
              type: string
            DocumentDirectoryEntryInstanceReference:
              type: object
        PerformanceAnalysis:
          type: object
          properties:
            CustomerSegmentPerformanceAnalysisType:
              type: string
            CustomerSegmentPerformanceAnalysisTask:
              type: string
            CustomerSegmentPerformanceRequestSpecification:
              type: string
            CustomerSegmentPerformanceModelReference:
              type: object
            CustomerSegmentPerformanceProductandServiceActivityReport:
              type: string
            CustomerSegmentPerformanceFinancialMarketResearchReport:
              type: string
            CustomerSegmentPerformanceWorkProducts:
              type: string
    EvaluatePerformanceAnalysisResponse:
      type: object
      properties:
        CustomerSegmentAnalysis:
          type: object
          properties:
            CustomerSegmentAnalysisSchedule:
              type: string
            CustomerSegmentAnalysisReport:
              type: string
            CustomerSegmentAnalysisType:
              type: string
            CustomerSegmentAnalysisResult:
              type: string
            CustomerSegmentAnalysisReportingDate:
              type: string
            DocumentDirectoryEntryInstanceReference:
              type: object
        PerformanceAnalysis:
          type: object
          properties:
            CustomerSegmentPerformanceAnalysisType:
              type: string
            CustomerSegmentPerformanceAnalysisTask:
              type: string
            CustomerSegmentPerformanceRequestSpecification:
              type: string
            CustomerSegmentPerformanceModelReference:
              type: object
            CustomerSegmentPerformanceProductandServiceActivityReport:
              type: string
            CustomerSegmentPerformanceFinancialMarketResearchReport:
              type: string
            CustomerSegmentPerformanceWorkProducts:
              type: string
            CustomerSegmentPerformanceRequestResult:
              type: string
  parameters:
    CustomerPortfolioID:
      name: customerportfolioId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    PerformanceAnalysisID:
      name: performanceanalysisId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
  requestBodies:
    CustomerSegmentAnalysis:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerSegmentAnalysis'
    EvaluatePerformanceAnalysisRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EvaluatePerformanceAnalysisRequest'
    PerformanceAnalysis:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PerformanceAnalysis'
  responses:
    HTTPError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    BadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequestsError:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
...
