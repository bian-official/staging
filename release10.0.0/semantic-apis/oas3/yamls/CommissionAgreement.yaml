openapi: 3.0.1
info:
  title: Commission Agreement
  description: Maintain and administer the terms and transactions for employee and broker commissions
  version: 10.0.0
servers:
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/B154/CommissionAgreement/10.0.0
paths:
  /CommissionAgreement/{commissionagreementId}/Control:
    put:
      tags:
      - CR - EmployeeCommissionAgreement
      summary: CoCR Control the processing of Employee Commission Agreement
      description: CoCR Control the processing of Employee Commission Agreement
      operationId: Control
      parameters:
      - $ref: '#/components/parameters/CommissionAgreementID'
      requestBody:
        $ref: '#/components/requestBodies/EmployeeCommissionAgreement'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeCommissionAgreement'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CommissionAgreement/{commissionagreementId}/Exchange:
    put:
      tags:
      - CR - EmployeeCommissionAgreement
      summary: EcCR Accept, verify, etc. aspects of Employee Commission Agreement processing
      description: EcCR Accept, verify, etc. aspects of Employee Commission Agreement processing
      operationId: Exchange
      parameters:
      - $ref: '#/components/parameters/CommissionAgreementID'
      requestBody:
        $ref: '#/components/requestBodies/EmployeeCommissionAgreement'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeCommissionAgreement'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CommissionAgreement/{commissionagreementId}/Grant:
    put:
      tags:
      - CR - EmployeeCommissionAgreement
      summary: GrCR Obtain permission to act in relation to Employee Commission Agreement
      description: GrCR Obtain permission to act in relation to Employee Commission Agreement
      operationId: Grant
      parameters:
      - $ref: '#/components/parameters/CommissionAgreementID'
      requestBody:
        $ref: '#/components/requestBodies/EmployeeCommissionAgreement'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeCommissionAgreement'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CommissionAgreement/Initiate:
    post:
      tags:
      - CR - EmployeeCommissionAgreement
      summary: InCR Instantiate a new Employee Commission Agreement
      description: InCR Instantiate a new Employee Commission Agreement
      operationId: Initiate
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/EmployeeCommissionAgreement'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeCommissionAgreement'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CommissionAgreement/{commissionagreementId}/Retrieve:
    get:
      tags:
      - CR - EmployeeCommissionAgreement
      summary: ReCR Retrieve details about any aspect of Employee Commission Agreement
      description: ReCR Retrieve details about any aspect of Employee Commission Agreement
      operationId: Retrieve
      parameters:
      - $ref: '#/components/parameters/CommissionAgreementID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeCommissionAgreement'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CommissionAgreement/{commissionagreementId}/Request:
    put:
      tags:
      - CR - EmployeeCommissionAgreement
      summary: RqCR Request manual intervention or a decision with respect to Employee Commission Agreement
      description: RqCR Request manual intervention or a decision with respect to Employee Commission Agreement
      operationId: Request
      parameters:
      - $ref: '#/components/parameters/CommissionAgreementID'
      requestBody:
        $ref: '#/components/requestBodies/EmployeeCommissionAgreement'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeCommissionAgreement'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CommissionAgreement/{commissionagreementId}/Update:
    put:
      tags:
      - CR - EmployeeCommissionAgreement
      summary: UpCR Update details relating to Employee Commission Agreement
      description: UpCR Update details relating to Employee Commission Agreement
      operationId: Update
      parameters:
      - $ref: '#/components/parameters/CommissionAgreementID'
      requestBody:
        $ref: '#/components/requestBodies/EmployeeCommissionAgreement'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeCommissionAgreement'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CommissionAgreement/{commissionagreementId}/CommissionTerms/{commissiontermsId}/Control:
    put:
      tags:
      - BQ - CommissionTerms
      summary: CoBQ Control the processing of Commission Terms
      description: CoBQ Control the processing of Commission Terms
      operationId: ControlCommissionTerms
      parameters:
      - $ref: '#/components/parameters/CommissionAgreementID'
      - $ref: '#/components/parameters/CommissionTermsID'
      requestBody:
        $ref: '#/components/requestBodies/CommissionTerms'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommissionTerms'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CommissionAgreement/{commissionagreementId}/CommissionTerms/{commissiontermsId}/Exchange:
    put:
      tags:
      - BQ - CommissionTerms
      summary: EcBQ Accept, verify, etc. aspects of Commission Terms processing
      description: EcBQ Accept, verify, etc. aspects of Commission Terms processing
      operationId: ExchangeCommissionTerms
      parameters:
      - $ref: '#/components/parameters/CommissionAgreementID'
      - $ref: '#/components/parameters/CommissionTermsID'
      requestBody:
        $ref: '#/components/requestBodies/CommissionTerms'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommissionTerms'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CommissionAgreement/{commissionagreementId}/CommissionTerms/{commissiontermsId}/Grant:
    put:
      tags:
      - BQ - CommissionTerms
      summary: GrBQ Obtain permission to act in relation to Commission Terms
      description: GrBQ Obtain permission to act in relation to Commission Terms
      operationId: GrantCommissionTerms
      parameters:
      - $ref: '#/components/parameters/CommissionAgreementID'
      - $ref: '#/components/parameters/CommissionTermsID'
      requestBody:
        $ref: '#/components/requestBodies/CommissionTerms'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommissionTerms'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CommissionAgreement/{commissionagreementId}/CommissionTerms/Initiate:
    post:
      tags:
      - BQ - CommissionTerms
      summary: InBQ Instantiate a new Commission Terms
      description: InBQ Instantiate a new Commission Terms
      operationId: InitiateCommissionTerms
      parameters:
      - $ref: '#/components/parameters/CommissionAgreementID'
      requestBody:
        $ref: '#/components/requestBodies/CommissionTerms'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommissionTerms'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CommissionAgreement/{commissionagreementId}/CommissionTerms/{commissiontermsId}/Retrieve:
    get:
      tags:
      - BQ - CommissionTerms
      summary: ReBQ Retrieve details about any aspect of Commission Terms
      description: ReBQ Retrieve details about any aspect of Commission Terms
      operationId: RetrieveCommissionTerms
      parameters:
      - $ref: '#/components/parameters/CommissionAgreementID'
      - $ref: '#/components/parameters/CommissionTermsID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommissionTerms'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CommissionAgreement/{commissionagreementId}/CommissionTerms/{commissiontermsId}/Request:
    put:
      tags:
      - BQ - CommissionTerms
      summary: RqBQ Request manual intervention or a decision with respect to Commission Terms
      description: RqBQ Request manual intervention or a decision with respect to Commission Terms
      operationId: RequestCommissionTerms
      parameters:
      - $ref: '#/components/parameters/CommissionAgreementID'
      - $ref: '#/components/parameters/CommissionTermsID'
      requestBody:
        $ref: '#/components/requestBodies/CommissionTerms'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommissionTerms'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CommissionAgreement/{commissionagreementId}/CommissionTerms/{commissiontermsId}/Update:
    put:
      tags:
      - BQ - CommissionTerms
      summary: UpBQ Update details relating to Commission Terms
      description: UpBQ Update details relating to Commission Terms
      operationId: UpdateCommissionTerms
      parameters:
      - $ref: '#/components/parameters/CommissionAgreementID'
      - $ref: '#/components/parameters/CommissionTermsID'
      requestBody:
        $ref: '#/components/requestBodies/CommissionTerms'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommissionTerms'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    EmployeeCommissionAgreement:
      type: object
      properties:
        EmployeeCommissionAgreementParameterType:
          type: string
        EmployeeCommissionAgreementSelectedOption:
          type: string
        EmployeeCommissionAgreementType:
          type: string
        EmployeeCommissionAgreementReference:
          type: object
        EmployeeCommissionAgreementRequest:
          type: string
        EmployeeCommissionAgreementSchedule:
          type: string
        EmployeeCommissionAgreementStatus:
          type: string
        EmployeeCommissionAgreementAssociatedParty:
          type: string
        EmployeeCommissionAgreementCustomerReference:
          type: object
        EmployeeCommissionAgreementObligation:
          type: string
        EmployeeCommissionAgreementEntitlement:
          type: string
        EmployeeCommissionAgreementRegulationReference:
          type: object
        EmployeeCommissionAgreementRegulationType:
          type: string
        EmployeeCommissionAgreementJurisdiction:
          type: string
        EmployeeCommissionAgreementAccountReference:
          type: object
    CommissionTerms:
      type: object
      properties:
        CommissionTermsPreconditions:
          type: string
        CommissionTermsTermSchedule:
          type: string
        CommissionTerms:
          type: object
        CommissionTermsServiceType:
          type: string
        CommissionTermsServiceDescription:
          type: string
        CommissionTermsServiceInputsandOuputs:
          type: string
        CommissionTermsServiceWorkProduct:
          type: string
        CommissionTermsServiceName:
          type: string
    CommissionAgreementOutcome:
      type: object
      properties:
        CommissionAgreementAgreement:
          type: string
        CommissionAgreementWorkProduct:
          type: string
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
        status:
          type: string
        message:
          type: string
  parameters:
    CommissionAgreementID:
      name: commissionagreementId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    CommissionTermsID:
      name: commissiontermsId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    CommissionAgreementOutcomeID:
      name: commissionagreementoutcomeId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
  requestBodies:
    EmployeeCommissionAgreement:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmployeeCommissionAgreement'
    CommissionTerms:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CommissionTerms'
  responses:
    HTTPError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    BadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequestsError:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
...
