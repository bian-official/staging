openapi: 3.0.1
info:
  title: Customer Behavior Insights
  description: This service domain applies behavioral analysis to customer event history to maintain a range of customer ratings/scores (such as 'propensity to buy') and to detect life events or trends
  version: 10.0.0
servers:
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/B154/CustomerBehaviorInsights/10.0.0
paths:
  /CustomerBehaviorInsights/Evaluate:
    post:
      tags:
      - CR - CustomerBehaviorAnalysis
      summary: EvCR Set-up evaluation of customer behavior insights for a customer
      description: EvCR Set-up evaluation of customer behavior insights for a customer
      operationId: Evaluate
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/CustomerBehaviorAnalysis'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerBehaviorAnalysis'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerBehaviorInsights/{customerbehaviorinsightsId}/Execute:
    put:
      tags:
      - CR - CustomerBehaviorAnalysis
      summary: ExCR Execute an automated task for customer insights (e.g. automated refresh
      description: ExCR Execute an automated task for customer insights (e.g. automated refresh
      operationId: Execute
      parameters:
      - $ref: '#/components/parameters/CustomerBehaviorInsightsID'
      requestBody:
        $ref: '#/components/requestBodies/CustomerBehaviorAnalysis'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerBehaviorAnalysis'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerBehaviorInsights/{customerbehaviorinsightsId}/Request:
    put:
      tags:
      - CR - CustomerBehaviorAnalysis
      summary: RqCR Request manual intervention for customer insights (e.g. unscheduled revision)
      description: RqCR Request manual intervention for customer insights (e.g. unscheduled revision)
      operationId: Request
      parameters:
      - $ref: '#/components/parameters/CustomerBehaviorInsightsID'
      requestBody:
        $ref: '#/components/requestBodies/CustomerBehaviorAnalysis'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerBehaviorAnalysis'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerBehaviorInsights/{customerbehaviorinsightsId}/Retrieve:
    get:
      tags:
      - CR - CustomerBehaviorAnalysis
      summary: ReCR Retrieve details about customer behavior insights
      description: ReCR Retrieve details about customer behavior insights
      operationId: Retrieve
      parameters:
      - $ref: '#/components/parameters/CustomerBehaviorInsightsID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerBehaviorAnalysis'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerBehaviorInsights/{customerbehaviorinsightsId}/Insight/{insightId}/Execute:
    put:
      tags:
      - BQ - Insight
      summary: ExBQ Execute an automated task for a specific customer behavior insight (e.g. refresh)
      description: ExBQ Execute an automated task for a specific customer behavior insight (e.g. refresh)
      operationId: ExecuteInsight
      parameters:
      - $ref: '#/components/parameters/CustomerBehaviorInsightsID'
      - $ref: '#/components/parameters/InsightID'
      requestBody:
        $ref: '#/components/requestBodies/Insight'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Insight'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerBehaviorInsights/{customerbehaviorinsightsId}/Insight/{insightId}/Request:
    put:
      tags:
      - BQ - Insight
      summary: RqBQ Request manual intervention for a specific customer behavior insight (e.g. re-calculate)
      description: RqBQ Request manual intervention for a specific customer behavior insight (e.g. re-calculate)
      operationId: RequestInsight
      parameters:
      - $ref: '#/components/parameters/CustomerBehaviorInsightsID'
      - $ref: '#/components/parameters/InsightID'
      requestBody:
        $ref: '#/components/requestBodies/Insight'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Insight'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerBehaviorInsights/{customerbehaviorinsightsId}/Insight/{insightId}/Retrieve:
    get:
      tags:
      - BQ - Insight
      summary: ReBQ Retrieve details about a specific customer behavior insight
      description: ReBQ Retrieve details about a specific customer behavior insight
      operationId: RetrieveInsight
      parameters:
      - $ref: '#/components/parameters/CustomerBehaviorInsightsID'
      - $ref: '#/components/parameters/InsightID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveInsightResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    CustomerBehaviorAnalysis:
      type: object
      properties:
        CustomerReference:
          type: object
        CustomerInsightAnalysisSchedule:
          type: string
        CustomerBehaviorAnalysisInsightsRecord:
          type: string
        CustomerInsightType:
          type: string
        CustomerInsight:
          type: string
        CustomerInsightCalculationDate:
          type: string
    Insight:
      type: object
      properties:
        InsightEvaluationCustomerInsightType:
          type: string
        InsightEvaluationTask:
          type: string
        InsightEvaluationRequestSpecification:
          type: string
        insightEvaluationCustomerBehaviorModelReference:
          type: object
        InsightEvaluationProductandServiceActivityReport:
          type: string
        InsightEvaluationCustomerEventLogReport:
          type: string
        InsightEvaluationServicingEventLogReport:
          type: string
        InsightEvaluationChannelEventLogReport:
          type: string
        InsightEvaluationMarketResearchReport:
          type: string
        InsightEvaluationWorkProducts:
          type: string
        InsightEvaluationRequestResult:
          type: string
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
        status:
          type: string
        message:
          type: string
    RetrieveInsightResponse:
      type: object
      properties:
        CustomerBehaviorAnalysis:
          type: object
          properties:
            CustomerReference:
              type: object
            CustomerInsightAnalysisSchedule:
              type: string
            CustomerBehaviorAnalysisInsightsRecord:
              type: string
            CustomerInsightType:
              type: string
            CustomerInsightCalculationDate:
              type: string
        Insight:
          type: object
          properties:
            InsightEvaluationCustomerInsightType:
              type: string
            InsightEvaluationTask:
              type: string
            InsightEvaluationRequestSpecification:
              type: string
            insightEvaluationCustomerBehaviorModelReference:
              type: object
            InsightEvaluationProductandServiceActivityReport:
              type: string
            InsightEvaluationCustomerEventLogReport:
              type: string
            InsightEvaluationServicingEventLogReport:
              type: string
            InsightEvaluationChannelEventLogReport:
              type: string
            InsightEvaluationMarketResearchReport:
              type: string
            InsightEvaluationWorkProducts:
              type: string
            InsightEvaluationRequestResult:
              type: string
  parameters:
    CustomerBehaviorInsightsID:
      name: customerbehaviorinsightsId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    InsightID:
      name: insightId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
  requestBodies:
    CustomerBehaviorAnalysis:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerBehaviorAnalysis'
    Insight:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Insight'
  responses:
    HTTPError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    BadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequestsError:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
...
