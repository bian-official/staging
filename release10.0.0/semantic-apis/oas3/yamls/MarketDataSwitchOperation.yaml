openapi: 3.0.1
info:
  title: Market Data Switch Operation
  description: This service domain operates the internal information distribution facility/switch in compliance with administered external subscription information feed service access rights. Note the content is retrieved by the Market Feed Operation service domain from the various external feed services. Internal information can also be published over the switch from various bank sources (such as bank rates provided by treasury).
  version: 10.0.0
servers:
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/B154/MarketDataSwitchOperation/10.0.0
paths:
  /MarketDataSwitchOperation/Initiate:
    post:
      tags:
      - CR - InformationFeedSwitchOperatingSession
      summary: InCR Initiate a market data switch operating session
      description: InCR Initiate a market data switch operating session
      operationId: Initiate
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/InformationFeedSwitchOperatingSession'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: boolean
                example: true
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /MarketDataSwitchOperation/{marketdataswitchoperationId}/Update:
    put:
      tags:
      - CR - InformationFeedSwitchOperatingSession
      summary: UpCR Update details for the market data switch operating session
      description: UpCR Update details for the market data switch operating session
      operationId: Update
      parameters:
      - $ref: '#/components/parameters/MarketDataSwitchOperationID'
      requestBody:
        $ref: '#/components/requestBodies/InformationFeedSwitchOperatingSession'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InformationFeedSwitchOperatingSession'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /MarketDataSwitchOperation/{marketdataswitchoperationId}/Retrieve:
    get:
      tags:
      - CR - InformationFeedSwitchOperatingSession
      summary: ReCR Retrieve details about the market data switch operating session
      description: ReCR Retrieve details about the market data switch operating session
      operationId: Retrieve
      parameters:
      - $ref: '#/components/parameters/MarketDataSwitchOperationID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InformationFeedSwitchOperatingSession'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /MarketDataSwitchOperation/{marketdataswitchoperationId}/FeedUpload/{feeduploadId}/Update:
    put:
      tags:
      - BQ - FeedUpload
      summary: UpBQ Update details for the feed upload
      description: UpBQ Update details for the feed upload
      operationId: UpdateFeedUpload
      parameters:
      - $ref: '#/components/parameters/MarketDataSwitchOperationID'
      - $ref: '#/components/parameters/FeedUploadID'
      requestBody:
        $ref: '#/components/requestBodies/FeedUpload'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedUpload'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /MarketDataSwitchOperation/{marketdataswitchoperationId}/FeedUpload/{feeduploadId}/Retrieve:
    get:
      tags:
      - BQ - FeedUpload
      summary: ReBQ Retrieve details about the feed upload activity
      description: ReBQ Retrieve details about the feed upload activity
      operationId: RetrieveFeedUpload
      parameters:
      - $ref: '#/components/parameters/MarketDataSwitchOperationID'
      - $ref: '#/components/parameters/FeedUploadID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedUpload'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /MarketDataSwitchOperation/{marketdataswitchoperationId}/InternalPublication/Initiate:
    post:
      tags:
      - BQ - InternalPublication
      summary: InBQ Initiate internal publication of information
      description: InBQ Initiate internal publication of information
      operationId: InitiateInternalPublication
      parameters:
      - $ref: '#/components/parameters/MarketDataSwitchOperationID'
      requestBody:
        $ref: '#/components/requestBodies/InternalPublication'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: boolean
                example: true
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /MarketDataSwitchOperation/{marketdataswitchoperationId}/InternalPublication/{internalpublicationId}/Update:
    put:
      tags:
      - BQ - InternalPublication
      summary: UpBQ Update details of internal publication
      description: UpBQ Update details of internal publication
      operationId: UpdateInternalPublication
      parameters:
      - $ref: '#/components/parameters/MarketDataSwitchOperationID'
      - $ref: '#/components/parameters/InternalPublicationID'
      requestBody:
        $ref: '#/components/requestBodies/InternalPublication'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalPublication'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /MarketDataSwitchOperation/{marketdataswitchoperationId}/InternalPublication/{internalpublicationId}/Retrieve:
    get:
      tags:
      - BQ - InternalPublication
      summary: ReBQ Retrieve details about the internal publication task
      description: ReBQ Retrieve details about the internal publication task
      operationId: RetrieveInternalPublication
      parameters:
      - $ref: '#/components/parameters/MarketDataSwitchOperationID'
      - $ref: '#/components/parameters/InternalPublicationID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalPublication'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /MarketDataSwitchOperation/{marketdataswitchoperationId}/Distribution/Initiate:
    post:
      tags:
      - BQ - Distribution
      summary: InBQ User subscription to the switch
      description: InBQ User subscription to the switch
      operationId: InitiateDistribution
      parameters:
      - $ref: '#/components/parameters/MarketDataSwitchOperationID'
      requestBody:
        $ref: '#/components/requestBodies/Distribution'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Distribution'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /MarketDataSwitchOperation/{marketdataswitchoperationId}/Distribution/{distributionId}/Update:
    put:
      tags:
      - BQ - Distribution
      summary: UpBQ User subscription details
      description: UpBQ User subscription details
      operationId: UpdateDistribution
      parameters:
      - $ref: '#/components/parameters/MarketDataSwitchOperationID'
      - $ref: '#/components/parameters/DistributionID'
      requestBody:
        $ref: '#/components/requestBodies/Distribution'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Distribution'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /MarketDataSwitchOperation/{marketdataswitchoperationId}/Distribution/{distributionId}/Execute:
    put:
      tags:
      - BQ - Distribution
      summary: ExBQ Execute an automated action to the service (e.g. select content)
      description: ExBQ Execute an automated action to the service (e.g. select content)
      operationId: ExecuteDistribution
      parameters:
      - $ref: '#/components/parameters/MarketDataSwitchOperationID'
      - $ref: '#/components/parameters/DistributionID'
      requestBody:
        $ref: '#/components/requestBodies/Distribution'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Distribution'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /MarketDataSwitchOperation/{marketdataswitchoperationId}/Distribution/{distributionId}/Request:
    put:
      tags:
      - BQ - Distribution
      summary: RqBQ Request manual intervention for  the service (e.g. request a usage profile change)
      description: RqBQ Request manual intervention for  the service (e.g. request a usage profile change)
      operationId: RequestDistribution
      parameters:
      - $ref: '#/components/parameters/MarketDataSwitchOperationID'
      - $ref: '#/components/parameters/DistributionID'
      requestBody:
        $ref: '#/components/requestBodies/Distribution'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Distribution'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /MarketDataSwitchOperation/{marketdataswitchoperationId}/Distribution/{distributionId}/Retrieve:
    get:
      tags:
      - BQ - Distribution
      summary: ReBQ Retrieve details about the user switch session
      description: ReBQ Retrieve details about the user switch session
      operationId: RetrieveDistribution
      parameters:
      - $ref: '#/components/parameters/MarketDataSwitchOperationID'
      - $ref: '#/components/parameters/DistributionID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Distribution'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    InformationFeedSwitchOperatingSession:
      type: object
      properties:
        MarketInformationFeedServiceReference:
          type: object
        MarketInformationFeedServiceProfile:
          type: string
    Distribution:
      type: object
      properties:
        MarketDataSwitchUserAccessRightsRecordReference:
          type: object
        MarketDataSwitchUserAccessRightsRecord:
          type: string
        MarketDataSwitchServiceUserSessionRecord:
          type: string
    FeedUpload:
      type: object
      properties:
        MarketInformationFeedServiceRecordReference:
          type: object
        MarketInformationFeedServiceRecord:
          type: string
    InternalPublication:
      type: object
      properties:
        InternalInformationFeedServiceReference:
          type: object
        InternalInformationFeedServiceProfile:
          type: string
        InternalInformationFeedServiceRecordReference:
          type: object
        InternalInformationFeedServiceRecord:
          type: string
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
        status:
          type: string
        message:
          type: string
  parameters:
    MarketDataSwitchOperationID:
      name: marketdataswitchoperationId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    DistributionID:
      name: distributionId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    FeedUploadID:
      name: feeduploadId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    InternalPublicationID:
      name: internalpublicationId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
  requestBodies:
    InformationFeedSwitchOperatingSession:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InformationFeedSwitchOperatingSession'
    FeedUpload:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FeedUpload'
    InternalPublication:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InternalPublication'
    Distribution:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Distribution'
  responses:
    HTTPError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    BadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequestsError:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
...
