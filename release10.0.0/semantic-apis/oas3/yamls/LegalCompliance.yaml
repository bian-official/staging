openapi: 3.0.1
info:
  title: Legal Compliance
  description: Provide specialist legal advice, assess for legal compliance and resolve legal cases as they occur
  version: 10.0.0
servers:
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/B154/LegalCompliance/10.0.0
paths:
  /LegalCompliance/Evaluate:
    post:
      tags:
      - CR - LegalComplianceAssessment
      summary: EvCR Start a legal assessment action
      description: EvCR Start a legal assessment action
      operationId: Evaluate
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/LegalComplianceAssessment'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalComplianceAssessment'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /LegalCompliance/{legalcomplianceId}/Update:
    put:
      tags:
      - CR - LegalComplianceAssessment
      summary: UpCR Update submitted details or content for an on-going legal assessment
      description: UpCR Update submitted details or content for an on-going legal assessment
      operationId: Update
      parameters:
      - $ref: '#/components/parameters/LegalComplianceID'
      requestBody:
        $ref: '#/components/requestBodies/LegalComplianceAssessment'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalComplianceAssessment'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /LegalCompliance/{legalcomplianceId}/Request:
    put:
      tags:
      - CR - LegalComplianceAssessment
      summary: RqCR Request a review or adjudication for an assessment
      description: RqCR Request a review or adjudication for an assessment
      operationId: Request
      parameters:
      - $ref: '#/components/parameters/LegalComplianceID'
      requestBody:
        $ref: '#/components/requestBodies/LegalComplianceAssessment'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalComplianceAssessment'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /LegalCompliance/{legalcomplianceId}/Retrieve:
    get:
      tags:
      - CR - LegalComplianceAssessment
      summary: ReCR Retrieve details and content from a legal assessment action
      description: ReCR Retrieve details and content from a legal assessment action
      operationId: Retrieve
      parameters:
      - $ref: '#/components/parameters/LegalComplianceID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalComplianceAssessment'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    LegalComplianceAssessment:
      type: object
      properties:
        LegalAssessmentType:
          type: string
        BusinessUnitReference:
          type: object
        ProductandServiceReference:
          type: object
        CustomerReference:
          type: object
        JurisdictionReference:
          type: object
        LawReference:
          type: object
        LawDefinition:
          type: string
        LawComplianceandReportingRequirements:
          type: string
        LawComplianceAccountability:
          type: string
        LegalPenalties:
          type: string
        LegalGuideline:
          type: string
        DocumentReference:
          type: object
        LegalAssessmentWorkProducts:
          type: string
        LegalAssessmentResult:
          type: string
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
        status:
          type: string
        message:
          type: string
  parameters:
    LegalComplianceID:
      name: legalcomplianceId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
  requestBodies:
    LegalComplianceAssessment:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LegalComplianceAssessment'
  responses:
    HTTPError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    BadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequestsError:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
...
