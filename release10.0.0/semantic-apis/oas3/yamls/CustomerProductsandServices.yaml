openapi: 3.0.1
info:
  title: Customer Products and Services
  description: This Service Domain maintains the most important details of all the products and services that a customer has acquired from the bank.
  version: 10.0.0
servers:
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/B154/CustomerProductsandServices/10.0.0
paths:
  /CustomerProductsandServices/{customerproductsandservicesId}/Control:
    put:
      tags:
      - CR - CustomerProductsAndServicesDirectoryEntry
      summary: Control Customer Products And Services Directory Entry
      description: Control Customer Products And Services Directory Entry
      operationId: Control
      parameters:
      - $ref: '#/components/parameters/CustomerProductsandServicesID'
      requestBody:
        $ref: '#/components/requestBodies/ControlCustomerProductsAndServicesDirectoryEntryRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ControlCustomerProductsAndServicesDirectoryEntryResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerProductsandServices/{customerproductsandservicesId}/Execute:
    put:
      tags:
      - CR - CustomerProductsAndServicesDirectoryEntry
      summary: Execute Customer Products And Services Directory Entry
      description: Execute Customer Products And Services Directory Entry
      operationId: Execute
      parameters:
      - $ref: '#/components/parameters/CustomerProductsandServicesID'
      requestBody:
        $ref: '#/components/requestBodies/ExecuteCustomerProductsAndServicesDirectoryEntryRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecuteCustomerProductsAndServicesDirectoryEntryResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerProductsandServices/{customerproductsandservicesId}/Notify:
    get:
      tags:
      - CR - CustomerProductsAndServicesDirectoryEntry
      summary: Notify Customer Products And Services Directory Entry
      description: Notify Customer Products And Services Directory Entry
      operationId: Notify
      parameters:
      - $ref: '#/components/parameters/CustomerProductsandServicesID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotifyCustomerProductsAndServicesDirectoryEntryResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerProductsandServices/Register:
    post:
      tags:
      - CR - CustomerProductsAndServicesDirectoryEntry
      summary: Register Customer Products And Services Directory Entry
      description: Register Customer Products And Services Directory Entry
      operationId: Register
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/RegisterCustomerProductsAndServicesDirectoryEntryRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterCustomerProductsAndServicesDirectoryEntryResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerProductsandServices/{customerproductsandservicesId}/Request:
    put:
      tags:
      - CR - CustomerProductsAndServicesDirectoryEntry
      summary: Request Customer Products And Services Directory Entry
      description: Request Customer Products And Services Directory Entry
      operationId: Request
      parameters:
      - $ref: '#/components/parameters/CustomerProductsandServicesID'
      requestBody:
        $ref: '#/components/requestBodies/RequestCustomerProductsAndServicesDirectoryEntryRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestCustomerProductsAndServicesDirectoryEntryResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerProductsandServices/{customerproductsandservicesId}/Retrieve:
    get:
      tags:
      - CR - CustomerProductsAndServicesDirectoryEntry
      summary: Retrieve Customer Products And Services Directory Entry
      description: Retrieve Customer Products And Services Directory Entry
      operationId: Retrieve
      parameters:
      - $ref: '#/components/parameters/CustomerProductsandServicesID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveCustomerProductsAndServicesDirectoryEntryResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerProductsandServices/{customerproductsandservicesId}/Update:
    put:
      tags:
      - CR - CustomerProductsAndServicesDirectoryEntry
      summary: Update Customer Products And Services Directory Entry
      description: Update Customer Products And Services Directory Entry
      operationId: Update
      parameters:
      - $ref: '#/components/parameters/CustomerProductsandServicesID'
      requestBody:
        $ref: '#/components/requestBodies/UpdateCustomerProductsAndServicesDirectoryEntryRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCustomerProductsAndServicesDirectoryEntryResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerProductsandServices/{customerproductsandservicesId}/In-forceProductproperty/{in-forceproductpropertyId}/Execute:
    put:
      tags:
      - BQ - In-forceProductproperty
      summary: Execute In-force Product property
      description: Execute In-force Product property
      operationId: ExecuteIn-forceProductproperty
      parameters:
      - $ref: '#/components/parameters/CustomerProductsandServicesID'
      - $ref: '#/components/parameters/In-forceProductpropertyID'
      requestBody:
        $ref: '#/components/requestBodies/In-forceProductproperty'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/In-forceProductproperty'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerProductsandServices/{customerproductsandservicesId}/In-forceServiceproperty/{in-forceservicepropertyId}/Execute:
    put:
      tags:
      - BQ - In-forceServiceproperty
      summary: Execute In-force Service property
      description: Execute In-force Service property
      operationId: ExecuteIn-forceServiceproperty
      parameters:
      - $ref: '#/components/parameters/CustomerProductsandServicesID'
      - $ref: '#/components/parameters/In-forceServicepropertyID'
      requestBody:
        $ref: '#/components/requestBodies/In-forceServiceproperty'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/In-forceServiceproperty'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerProductsandServices/{customerproductsandservicesId}/In-forceProductproperty/{in-forceproductpropertyId}/Notify:
    get:
      tags:
      - BQ - In-forceProductproperty
      summary: Notify In-force Product property
      description: Notify In-force Product property
      operationId: NotifyIn-forceProductproperty
      parameters:
      - $ref: '#/components/parameters/CustomerProductsandServicesID'
      - $ref: '#/components/parameters/In-forceProductpropertyID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/In-forceProductproperty'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerProductsandServices/{customerproductsandservicesId}/In-forceServiceproperty/{in-forceservicepropertyId}/Notify:
    get:
      tags:
      - BQ - In-forceServiceproperty
      summary: Notify In-force Service property
      description: Notify In-force Service property
      operationId: NotifyIn-forceServiceproperty
      parameters:
      - $ref: '#/components/parameters/CustomerProductsandServicesID'
      - $ref: '#/components/parameters/In-forceServicepropertyID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/In-forceServiceproperty'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerProductsandServices/{customerproductsandservicesId}/In-forceProductproperty/Register:
    post:
      tags:
      - BQ - In-forceProductproperty
      summary: Register In-force Product property
      description: Register In-force Product property
      operationId: RegisterIn-forceProductproperty
      parameters:
      - $ref: '#/components/parameters/CustomerProductsandServicesID'
      requestBody:
        $ref: '#/components/requestBodies/In-forceProductproperty'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/In-forceProductproperty'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerProductsandServices/{customerproductsandservicesId}/In-forceServiceproperty/Register:
    post:
      tags:
      - BQ - In-forceServiceproperty
      summary: Register In-force Service property
      description: Register In-force Service property
      operationId: RegisterIn-forceServiceproperty
      parameters:
      - $ref: '#/components/parameters/CustomerProductsandServicesID'
      requestBody:
        $ref: '#/components/requestBodies/In-forceServiceproperty'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/In-forceServiceproperty'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerProductsandServices/{customerproductsandservicesId}/In-forceProductproperty/{in-forceproductpropertyId}/Request:
    put:
      tags:
      - BQ - In-forceProductproperty
      summary: Request In-force Product property
      description: Request In-force Product property
      operationId: RequestIn-forceProductproperty
      parameters:
      - $ref: '#/components/parameters/CustomerProductsandServicesID'
      - $ref: '#/components/parameters/In-forceProductpropertyID'
      requestBody:
        $ref: '#/components/requestBodies/In-forceProductproperty'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/In-forceProductproperty'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerProductsandServices/{customerproductsandservicesId}/In-forceServiceproperty/{in-forceservicepropertyId}/Request:
    put:
      tags:
      - BQ - In-forceServiceproperty
      summary: Request In-force Service property
      description: Request In-force Service property
      operationId: RequestIn-forceServiceproperty
      parameters:
      - $ref: '#/components/parameters/CustomerProductsandServicesID'
      - $ref: '#/components/parameters/In-forceServicepropertyID'
      requestBody:
        $ref: '#/components/requestBodies/In-forceServiceproperty'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/In-forceServiceproperty'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerProductsandServices/{customerproductsandservicesId}/In-forceProductproperty/{in-forceproductpropertyId}/Retrieve:
    get:
      tags:
      - BQ - In-forceProductproperty
      summary: Retrieve In-force Product property
      description: Retrieve In-force Product property
      operationId: RetrieveIn-forceProductproperty
      parameters:
      - $ref: '#/components/parameters/CustomerProductsandServicesID'
      - $ref: '#/components/parameters/In-forceProductpropertyID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/In-forceProductproperty'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerProductsandServices/{customerproductsandservicesId}/In-forceServiceproperty/{in-forceservicepropertyId}/Retrieve:
    get:
      tags:
      - BQ - In-forceServiceproperty
      summary: Retrieve In-force Service property
      description: Retrieve In-force Service property
      operationId: RetrieveIn-forceServiceproperty
      parameters:
      - $ref: '#/components/parameters/CustomerProductsandServicesID'
      - $ref: '#/components/parameters/In-forceServicepropertyID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/In-forceServiceproperty'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerProductsandServices/{customerproductsandservicesId}/In-forceProductproperty/{in-forceproductpropertyId}/Update:
    put:
      tags:
      - BQ - In-forceProductproperty
      summary: Update In-force Product property
      description: Update In-force Product property
      operationId: UpdateIn-forceProductproperty
      parameters:
      - $ref: '#/components/parameters/CustomerProductsandServicesID'
      - $ref: '#/components/parameters/In-forceProductpropertyID'
      requestBody:
        $ref: '#/components/requestBodies/In-forceProductproperty'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/In-forceProductproperty'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CustomerProductsandServices/{customerproductsandservicesId}/In-forceServiceproperty/{in-forceservicepropertyId}/Update:
    put:
      tags:
      - BQ - In-forceServiceproperty
      summary: Update In-force Service property
      description: Update In-force Service property
      operationId: UpdateIn-forceServiceproperty
      parameters:
      - $ref: '#/components/parameters/CustomerProductsandServicesID'
      - $ref: '#/components/parameters/In-forceServicepropertyID'
      requestBody:
        $ref: '#/components/requestBodies/In-forceServiceproperty'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/In-forceServiceproperty'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    CustomerProductsAndServicesDirectoryEntry:
      type: object
      properties:
        CustomerProductsAndServicesDirectoryEntryDescription:
          type: string
        CustomerProductsAndServicesDirectoryEntrySchedule:
          type: object
        CustomerProductsAndServicesDirectoryEntryVersion:
          type: string
        CustomerProductsAndServicesDirectoryEntryStatus:
          type: string
        CustomerProductsAndServicesDirectoryEntryUsageLog:
          type: string
        CustomerProductsAndServicesDirectoryEntryUpdateLog:
          type: string
        CustomerProductsAndServicesDirectoryEntryServiceConfiguration:
          type: string
        CustomerProductsAndServicesDirectoryEntryReference:
          type: string
        CustomerReference:
          type: object
        ProductReference:
          type: object
        ProductSalesAgreementReference:
          type: string
    In-forceServiceproperty:
      type: object
      properties:
        Preconditions:
          type: object
        Schedule:
          type: object
        VersionNumber:
          type: string
        BusinessService:
          type: object
        CustomerProductsAndServicesDirectoryEntryReference:
          type: string
        In-forceServicepropertyReference:
          type: object
        In-forceServicepropertyType:
          type: string
    In-forceProductproperty:
      type: object
      properties:
        Preconditions:
          type: object
        Schedule:
          type: object
        VersionNumber:
          type: string
        BusinessService:
          type: object
        CustomerProductsAndServicesDirectoryEntryReference:
          type: string
        In-forceProductpropertyReference:
          type: object
        In-forceProductpropertyType:
          type: string
    CustomerProductsandServicesOutcome:
      type: object
      properties:
        CustomerProductsandServicesEntry:
          type: string
        CustomerProductsandServicesWorkProduct:
          type: object
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
        status:
          type: string
        message:
          type: string
    ControlCustomerProductsAndServicesDirectoryEntryRequest:
      type: object
      properties:
        CustomerProductsAndServicesDirectoryEntry:
          type: object
          properties:
            CustomerProductsAndServicesDirectoryEntryDescription:
              type: string
            CustomerProductsAndServicesDirectoryEntrySchedule:
              type: object
            CustomerProductsAndServicesDirectoryEntryVersion:
              type: string
            CustomerProductsAndServicesDirectoryEntryStatus:
              type: string
            CustomerProductsAndServicesDirectoryEntryUsageLog:
              type: string
            CustomerProductsAndServicesDirectoryEntryUpdateLog:
              type: string
            CustomerProductsAndServicesDirectoryEntryServiceConfiguration:
              type: string
            CustomerProductsAndServicesDirectoryEntryReference:
              type: string
    ControlCustomerProductsAndServicesDirectoryEntryResponse:
      type: object
      properties:
        CustomerProductsAndServicesDirectoryEntry:
          type: object
          properties:
            CustomerProductsAndServicesDirectoryEntryDescription:
              type: string
            CustomerProductsAndServicesDirectoryEntrySchedule:
              type: object
            CustomerProductsAndServicesDirectoryEntryVersion:
              type: string
            CustomerProductsAndServicesDirectoryEntryStatus:
              type: string
            CustomerProductsAndServicesDirectoryEntryUsageLog:
              type: string
            CustomerProductsAndServicesDirectoryEntryUpdateLog:
              type: string
            CustomerProductsAndServicesDirectoryEntryServiceConfiguration:
              type: string
            CustomerProductsAndServicesDirectoryEntryReference:
              type: string
    ExecuteCustomerProductsAndServicesDirectoryEntryRequest:
      type: object
      properties:
        CustomerProductsAndServicesDirectoryEntry:
          type: object
          properties:
            CustomerProductsAndServicesDirectoryEntryDescription:
              type: string
            CustomerProductsAndServicesDirectoryEntrySchedule:
              type: object
            CustomerProductsAndServicesDirectoryEntryVersion:
              type: string
            CustomerProductsAndServicesDirectoryEntryStatus:
              type: string
            CustomerProductsAndServicesDirectoryEntryUsageLog:
              type: string
            CustomerProductsAndServicesDirectoryEntryUpdateLog:
              type: string
            CustomerProductsAndServicesDirectoryEntryServiceConfiguration:
              type: string
            CustomerProductsAndServicesDirectoryEntryReference:
              type: string
    ExecuteCustomerProductsAndServicesDirectoryEntryResponse:
      type: object
      properties:
        CustomerProductsAndServicesDirectoryEntry:
          type: object
          properties:
            CustomerProductsAndServicesDirectoryEntryDescription:
              type: string
            CustomerProductsAndServicesDirectoryEntrySchedule:
              type: object
            CustomerProductsAndServicesDirectoryEntryVersion:
              type: string
            CustomerProductsAndServicesDirectoryEntryStatus:
              type: string
            CustomerProductsAndServicesDirectoryEntryUsageLog:
              type: string
            CustomerProductsAndServicesDirectoryEntryUpdateLog:
              type: string
            CustomerProductsAndServicesDirectoryEntryServiceConfiguration:
              type: string
            CustomerProductsAndServicesDirectoryEntryReference:
              type: string
    NotifyCustomerProductsAndServicesDirectoryEntryRequest:
      type: object
      properties:
        CustomerProductsAndServicesDirectoryEntry:
          type: object
          properties:
            CustomerProductsAndServicesDirectoryEntryDescription:
              type: string
            CustomerProductsAndServicesDirectoryEntrySchedule:
              type: object
            CustomerProductsAndServicesDirectoryEntryVersion:
              type: string
            CustomerProductsAndServicesDirectoryEntryStatus:
              type: string
            CustomerProductsAndServicesDirectoryEntryUsageLog:
              type: string
            CustomerProductsAndServicesDirectoryEntryUpdateLog:
              type: string
            CustomerProductsAndServicesDirectoryEntryServiceConfiguration:
              type: string
            CustomerProductsAndServicesDirectoryEntryReference:
              type: string
    NotifyCustomerProductsAndServicesDirectoryEntryResponse:
      type: object
      properties:
        CustomerProductsAndServicesDirectoryEntry:
          type: object
          properties:
            CustomerProductsAndServicesDirectoryEntryDescription:
              type: string
            CustomerProductsAndServicesDirectoryEntrySchedule:
              type: object
            CustomerProductsAndServicesDirectoryEntryVersion:
              type: string
            CustomerProductsAndServicesDirectoryEntryStatus:
              type: string
            CustomerProductsAndServicesDirectoryEntryUsageLog:
              type: string
            CustomerProductsAndServicesDirectoryEntryUpdateLog:
              type: string
            CustomerProductsAndServicesDirectoryEntryServiceConfiguration:
              type: string
            CustomerProductsAndServicesDirectoryEntryReference:
              type: string
    RegisterCustomerProductsAndServicesDirectoryEntryRequest:
      type: object
      properties:
        CustomerProductsAndServicesDirectoryEntry:
          type: object
          properties:
            CustomerProductsAndServicesDirectoryEntryDescription:
              type: string
            CustomerProductsAndServicesDirectoryEntrySchedule:
              type: object
            CustomerProductsAndServicesDirectoryEntryVersion:
              type: string
            CustomerProductsAndServicesDirectoryEntryStatus:
              type: string
            CustomerProductsAndServicesDirectoryEntryUsageLog:
              type: string
            CustomerProductsAndServicesDirectoryEntryUpdateLog:
              type: string
            CustomerProductsAndServicesDirectoryEntryServiceConfiguration:
              type: string
            CustomerProductsAndServicesDirectoryEntryReference:
              type: string
    RegisterCustomerProductsAndServicesDirectoryEntryResponse:
      type: object
      properties:
        CustomerProductsAndServicesDirectoryEntry:
          type: object
          properties:
            CustomerProductsAndServicesDirectoryEntryDescription:
              type: string
            CustomerProductsAndServicesDirectoryEntrySchedule:
              type: object
            CustomerProductsAndServicesDirectoryEntryVersion:
              type: string
            CustomerProductsAndServicesDirectoryEntryStatus:
              type: string
            CustomerProductsAndServicesDirectoryEntryUsageLog:
              type: string
            CustomerProductsAndServicesDirectoryEntryUpdateLog:
              type: string
            CustomerProductsAndServicesDirectoryEntryServiceConfiguration:
              type: string
            CustomerProductsAndServicesDirectoryEntryReference:
              type: string
    RequestCustomerProductsAndServicesDirectoryEntryRequest:
      type: object
      properties:
        CustomerProductsAndServicesDirectoryEntry:
          type: object
          properties:
            CustomerProductsAndServicesDirectoryEntryDescription:
              type: string
            CustomerProductsAndServicesDirectoryEntrySchedule:
              type: object
            CustomerProductsAndServicesDirectoryEntryVersion:
              type: string
            CustomerProductsAndServicesDirectoryEntryStatus:
              type: string
            CustomerProductsAndServicesDirectoryEntryUsageLog:
              type: string
            CustomerProductsAndServicesDirectoryEntryUpdateLog:
              type: string
            CustomerProductsAndServicesDirectoryEntryServiceConfiguration:
              type: string
            CustomerProductsAndServicesDirectoryEntryReference:
              type: string
    RequestCustomerProductsAndServicesDirectoryEntryResponse:
      type: object
      properties:
        CustomerProductsAndServicesDirectoryEntry:
          type: object
          properties:
            CustomerProductsAndServicesDirectoryEntryDescription:
              type: string
            CustomerProductsAndServicesDirectoryEntrySchedule:
              type: object
            CustomerProductsAndServicesDirectoryEntryVersion:
              type: string
            CustomerProductsAndServicesDirectoryEntryStatus:
              type: string
            CustomerProductsAndServicesDirectoryEntryUsageLog:
              type: string
            CustomerProductsAndServicesDirectoryEntryUpdateLog:
              type: string
            CustomerProductsAndServicesDirectoryEntryServiceConfiguration:
              type: string
            CustomerProductsAndServicesDirectoryEntryReference:
              type: string
    RetrieveCustomerProductsAndServicesDirectoryEntryRequest:
      type: object
      properties:
        CustomerProductsAndServicesDirectoryEntry:
          type: object
          properties:
            CustomerProductsAndServicesDirectoryEntryDescription:
              type: string
            CustomerProductsAndServicesDirectoryEntrySchedule:
              type: object
            CustomerProductsAndServicesDirectoryEntryVersion:
              type: string
            CustomerProductsAndServicesDirectoryEntryStatus:
              type: string
            CustomerProductsAndServicesDirectoryEntryUsageLog:
              type: string
            CustomerProductsAndServicesDirectoryEntryUpdateLog:
              type: string
            CustomerProductsAndServicesDirectoryEntryServiceConfiguration:
              type: string
            CustomerProductsAndServicesDirectoryEntryReference:
              type: string
    RetrieveCustomerProductsAndServicesDirectoryEntryResponse:
      type: object
      properties:
        CustomerProductsAndServicesDirectoryEntry:
          type: object
          properties:
            CustomerProductsAndServicesDirectoryEntryDescription:
              type: string
            CustomerProductsAndServicesDirectoryEntrySchedule:
              type: object
            CustomerProductsAndServicesDirectoryEntryVersion:
              type: string
            CustomerProductsAndServicesDirectoryEntryStatus:
              type: string
            CustomerProductsAndServicesDirectoryEntryUsageLog:
              type: string
            CustomerProductsAndServicesDirectoryEntryUpdateLog:
              type: string
            CustomerProductsAndServicesDirectoryEntryServiceConfiguration:
              type: string
            CustomerProductsAndServicesDirectoryEntryReference:
              type: string
    UpdateCustomerProductsAndServicesDirectoryEntryRequest:
      type: object
      properties:
        CustomerProductsAndServicesDirectoryEntry:
          type: object
          properties:
            CustomerProductsAndServicesDirectoryEntryDescription:
              type: string
            CustomerProductsAndServicesDirectoryEntrySchedule:
              type: object
            CustomerProductsAndServicesDirectoryEntryVersion:
              type: string
            CustomerProductsAndServicesDirectoryEntryStatus:
              type: string
            CustomerProductsAndServicesDirectoryEntryUsageLog:
              type: string
            CustomerProductsAndServicesDirectoryEntryUpdateLog:
              type: string
            CustomerProductsAndServicesDirectoryEntryServiceConfiguration:
              type: string
            CustomerProductsAndServicesDirectoryEntryReference:
              type: string
    UpdateCustomerProductsAndServicesDirectoryEntryResponse:
      type: object
      properties:
        CustomerProductsAndServicesDirectoryEntry:
          type: object
          properties:
            CustomerProductsAndServicesDirectoryEntryDescription:
              type: string
            CustomerProductsAndServicesDirectoryEntrySchedule:
              type: object
            CustomerProductsAndServicesDirectoryEntryVersion:
              type: string
            CustomerProductsAndServicesDirectoryEntryStatus:
              type: string
            CustomerProductsAndServicesDirectoryEntryUsageLog:
              type: string
            CustomerProductsAndServicesDirectoryEntryUpdateLog:
              type: string
            CustomerProductsAndServicesDirectoryEntryServiceConfiguration:
              type: string
            CustomerProductsAndServicesDirectoryEntryReference:
              type: string
  parameters:
    CustomerProductsandServicesID:
      name: customerproductsandservicesId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    In-forceServicepropertyID:
      name: in-forceservicepropertyId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    In-forceProductpropertyID:
      name: in-forceproductpropertyId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    CustomerProductsandServicesOutcomeID:
      name: customerproductsandservicesoutcomeId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
  requestBodies:
    ControlCustomerProductsAndServicesDirectoryEntryRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ControlCustomerProductsAndServicesDirectoryEntryRequest'
    ExecuteCustomerProductsAndServicesDirectoryEntryRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExecuteCustomerProductsAndServicesDirectoryEntryRequest'
    NotifyCustomerProductsAndServicesDirectoryEntryRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotifyCustomerProductsAndServicesDirectoryEntryRequest'
    RegisterCustomerProductsAndServicesDirectoryEntryRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RegisterCustomerProductsAndServicesDirectoryEntryRequest'
    RequestCustomerProductsAndServicesDirectoryEntryRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestCustomerProductsAndServicesDirectoryEntryRequest'
    RetrieveCustomerProductsAndServicesDirectoryEntryRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveCustomerProductsAndServicesDirectoryEntryRequest'
    UpdateCustomerProductsAndServicesDirectoryEntryRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateCustomerProductsAndServicesDirectoryEntryRequest'
    In-forceProductproperty:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/In-forceProductproperty'
    In-forceServiceproperty:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/In-forceServiceproperty'
  responses:
    HTTPError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    BadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequestsError:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
...
