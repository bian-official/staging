openapi: 3.0.1
info:
  title: Stock Lending and Repos
  description: This Service Domain supports the bank offering tri-party repo transactions made between its customers to support their short term capital management requirements
  version: 10.0.0
servers:
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/B154/StockLendingandRepos/10.0.0
paths:
  /StockLendingandRepos/{stocklendingandreposId}/Control:
    put:
      tags:
      - CR - RepoTransaction
      summary: Control Repo Transaction
      description: Control Repo Transaction
      operationId: Control
      parameters:
      - $ref: '#/components/parameters/StockLendingandReposID'
      requestBody:
        $ref: '#/components/requestBodies/RepoTransaction'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepoTransaction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /StockLendingandRepos/{stocklendingandreposId}/Exchange:
    put:
      tags:
      - CR - RepoTransaction
      summary: Exchange Repo Transaction
      description: Exchange Repo Transaction
      operationId: Exchange
      parameters:
      - $ref: '#/components/parameters/StockLendingandReposID'
      requestBody:
        $ref: '#/components/requestBodies/RepoTransaction'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepoTransaction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /StockLendingandRepos/{stocklendingandreposId}/Execute:
    put:
      tags:
      - CR - RepoTransaction
      summary: Execute Repo Transaction
      description: Execute Repo Transaction
      operationId: Execute
      parameters:
      - $ref: '#/components/parameters/StockLendingandReposID'
      requestBody:
        $ref: '#/components/requestBodies/RepoTransaction'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepoTransaction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /StockLendingandRepos/Initiate:
    post:
      tags:
      - CR - RepoTransaction
      summary: Initiate Repo Transaction
      description: Initiate Repo Transaction
      operationId: Initiate
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/RepoTransaction'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepoTransaction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /StockLendingandRepos/{stocklendingandreposId}/Notify:
    get:
      tags:
      - CR - RepoTransaction
      summary: Notify Repo Transaction
      description: Notify Repo Transaction
      operationId: Notify
      parameters:
      - $ref: '#/components/parameters/StockLendingandReposID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepoTransaction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /StockLendingandRepos/{stocklendingandreposId}/Request:
    put:
      tags:
      - CR - RepoTransaction
      summary: Request Repo Transaction
      description: Request Repo Transaction
      operationId: Request
      parameters:
      - $ref: '#/components/parameters/StockLendingandReposID'
      requestBody:
        $ref: '#/components/requestBodies/RepoTransaction'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepoTransaction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /StockLendingandRepos/{stocklendingandreposId}/Retrieve:
    get:
      tags:
      - CR - RepoTransaction
      summary: Retrieve Repo Transaction
      description: Retrieve Repo Transaction
      operationId: Retrieve
      parameters:
      - $ref: '#/components/parameters/StockLendingandReposID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepoTransaction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /StockLendingandRepos/{stocklendingandreposId}/Update:
    put:
      tags:
      - CR - RepoTransaction
      summary: Update Repo Transaction
      description: Update Repo Transaction
      operationId: Update
      parameters:
      - $ref: '#/components/parameters/StockLendingandReposID'
      requestBody:
        $ref: '#/components/requestBodies/RepoTransaction'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepoTransaction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /StockLendingandRepos/{stocklendingandreposId}/RepoTransactionCashTransferTask/{repotransactioncashtransfertaskId}/Exchange:
    put:
      tags:
      - BQ - RepoTransactionCashTransferTask
      summary: Exchange Repo Transaction Cash Transfer Task
      description: Exchange Repo Transaction Cash Transfer Task
      operationId: ExchangeRepoTransactionCashTransferTask
      parameters:
      - $ref: '#/components/parameters/StockLendingandReposID'
      - $ref: '#/components/parameters/RepoTransactionCashTransferTaskID'
      requestBody:
        $ref: '#/components/requestBodies/RepoTransactionCashTransferTask'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepoTransactionCashTransferTask'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /StockLendingandRepos/{stocklendingandreposId}/RepoTransactionInitiationTask/{repotransactioninitiationtaskId}/Exchange:
    put:
      tags:
      - BQ - RepoTransactionInitiationTask
      summary: Exchange Repo Transaction Initiation Task
      description: Exchange Repo Transaction Initiation Task
      operationId: ExchangeRepoTransactionInitiationTask
      parameters:
      - $ref: '#/components/parameters/StockLendingandReposID'
      - $ref: '#/components/parameters/RepoTransactionInitiationTaskID'
      requestBody:
        $ref: '#/components/requestBodies/RepoTransactionInitiationTask'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepoTransactionInitiationTask'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  ? /StockLendingandRepos/{stocklendingandreposId}/RepoTransactionSecurityTransferTask/{repotransactionsecuritytransfertaskId}/Exchange
  : put:
      tags:
      - BQ - RepoTransactionSecurityTransferTask
      summary: Exchange Repo Transaction Security Transfer Task
      description: Exchange Repo Transaction Security Transfer Task
      operationId: ExchangeRepoTransactionSecurityTransferTask
      parameters:
      - $ref: '#/components/parameters/StockLendingandReposID'
      - $ref: '#/components/parameters/RepoTransactionSecurityTransferTaskID'
      requestBody:
        $ref: '#/components/requestBodies/RepoTransactionSecurityTransferTask'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepoTransactionSecurityTransferTask'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /StockLendingandRepos/{stocklendingandreposId}/RepoTransactionCashTransferTask/{repotransactioncashtransfertaskId}/Execute:
    put:
      tags:
      - BQ - RepoTransactionCashTransferTask
      summary: Execute Repo Transaction Cash Transfer Task
      description: Execute Repo Transaction Cash Transfer Task
      operationId: ExecuteRepoTransactionCashTransferTask
      parameters:
      - $ref: '#/components/parameters/StockLendingandReposID'
      - $ref: '#/components/parameters/RepoTransactionCashTransferTaskID'
      requestBody:
        $ref: '#/components/requestBodies/RepoTransactionCashTransferTask'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepoTransactionCashTransferTask'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /StockLendingandRepos/{stocklendingandreposId}/RepoTransactionInitiationTask/{repotransactioninitiationtaskId}/Execute:
    put:
      tags:
      - BQ - RepoTransactionInitiationTask
      summary: Execute Repo Transaction Initiation Task
      description: Execute Repo Transaction Initiation Task
      operationId: ExecuteRepoTransactionInitiationTask
      parameters:
      - $ref: '#/components/parameters/StockLendingandReposID'
      - $ref: '#/components/parameters/RepoTransactionInitiationTaskID'
      requestBody:
        $ref: '#/components/requestBodies/RepoTransactionInitiationTask'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepoTransactionInitiationTask'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  ? /StockLendingandRepos/{stocklendingandreposId}/RepoTransactionSecurityTransferTask/{repotransactionsecuritytransfertaskId}/Execute
  : put:
      tags:
      - BQ - RepoTransactionSecurityTransferTask
      summary: Execute Repo Transaction Security Transfer Task
      description: Execute Repo Transaction Security Transfer Task
      operationId: ExecuteRepoTransactionSecurityTransferTask
      parameters:
      - $ref: '#/components/parameters/StockLendingandReposID'
      - $ref: '#/components/parameters/RepoTransactionSecurityTransferTaskID'
      requestBody:
        $ref: '#/components/requestBodies/RepoTransactionSecurityTransferTask'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepoTransactionSecurityTransferTask'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /StockLendingandRepos/{stocklendingandreposId}/RepoTransactionCashTransferTask/Initiate:
    post:
      tags:
      - BQ - RepoTransactionCashTransferTask
      summary: Initiate Repo Transaction Cash Transfer Task
      description: Initiate Repo Transaction Cash Transfer Task
      operationId: InitiateRepoTransactionCashTransferTask
      parameters:
      - $ref: '#/components/parameters/StockLendingandReposID'
      requestBody:
        $ref: '#/components/requestBodies/RepoTransactionCashTransferTask'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepoTransactionCashTransferTask'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /StockLendingandRepos/{stocklendingandreposId}/RepoTransactionInitiationTask/Initiate:
    post:
      tags:
      - BQ - RepoTransactionInitiationTask
      summary: Initiate Repo Transaction Initiation Task
      description: Initiate Repo Transaction Initiation Task
      operationId: InitiateRepoTransactionInitiationTask
      parameters:
      - $ref: '#/components/parameters/StockLendingandReposID'
      requestBody:
        $ref: '#/components/requestBodies/RepoTransactionInitiationTask'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepoTransactionInitiationTask'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /StockLendingandRepos/{stocklendingandreposId}/RepoTransactionSecurityTransferTask/Initiate:
    post:
      tags:
      - BQ - RepoTransactionSecurityTransferTask
      summary: Initiate Repo Transaction Security Transfer Task
      description: Initiate Repo Transaction Security Transfer Task
      operationId: InitiateRepoTransactionSecurityTransferTask
      parameters:
      - $ref: '#/components/parameters/StockLendingandReposID'
      requestBody:
        $ref: '#/components/requestBodies/RepoTransactionSecurityTransferTask'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepoTransactionSecurityTransferTask'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /StockLendingandRepos/{stocklendingandreposId}/RepoTransactionCashTransferTask/{repotransactioncashtransfertaskId}/Notify:
    get:
      tags:
      - BQ - RepoTransactionCashTransferTask
      summary: Notify Repo Transaction Cash Transfer Task
      description: Notify Repo Transaction Cash Transfer Task
      operationId: NotifyRepoTransactionCashTransferTask
      parameters:
      - $ref: '#/components/parameters/StockLendingandReposID'
      - $ref: '#/components/parameters/RepoTransactionCashTransferTaskID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepoTransactionCashTransferTask'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /StockLendingandRepos/{stocklendingandreposId}/RepoTransactionInitiationTask/{repotransactioninitiationtaskId}/Notify:
    get:
      tags:
      - BQ - RepoTransactionInitiationTask
      summary: Notify Repo Transaction Initiation Task
      description: Notify Repo Transaction Initiation Task
      operationId: NotifyRepoTransactionInitiationTask
      parameters:
      - $ref: '#/components/parameters/StockLendingandReposID'
      - $ref: '#/components/parameters/RepoTransactionInitiationTaskID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepoTransactionInitiationTask'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  ? /StockLendingandRepos/{stocklendingandreposId}/RepoTransactionSecurityTransferTask/{repotransactionsecuritytransfertaskId}/Notify
  : get:
      tags:
      - BQ - RepoTransactionSecurityTransferTask
      summary: Notify Repo Transaction Security Transfer Task
      description: Notify Repo Transaction Security Transfer Task
      operationId: NotifyRepoTransactionSecurityTransferTask
      parameters:
      - $ref: '#/components/parameters/StockLendingandReposID'
      - $ref: '#/components/parameters/RepoTransactionSecurityTransferTaskID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepoTransactionSecurityTransferTask'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /StockLendingandRepos/{stocklendingandreposId}/RepoTransactionCashTransferTask/{repotransactioncashtransfertaskId}/Request:
    put:
      tags:
      - BQ - RepoTransactionCashTransferTask
      summary: Request Repo Transaction Cash Transfer Task
      description: Request Repo Transaction Cash Transfer Task
      operationId: RequestRepoTransactionCashTransferTask
      parameters:
      - $ref: '#/components/parameters/StockLendingandReposID'
      - $ref: '#/components/parameters/RepoTransactionCashTransferTaskID'
      requestBody:
        $ref: '#/components/requestBodies/RepoTransactionCashTransferTask'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepoTransactionCashTransferTask'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /StockLendingandRepos/{stocklendingandreposId}/RepoTransactionInitiationTask/{repotransactioninitiationtaskId}/Request:
    put:
      tags:
      - BQ - RepoTransactionInitiationTask
      summary: Request Repo Transaction Initiation Task
      description: Request Repo Transaction Initiation Task
      operationId: RequestRepoTransactionInitiationTask
      parameters:
      - $ref: '#/components/parameters/StockLendingandReposID'
      - $ref: '#/components/parameters/RepoTransactionInitiationTaskID'
      requestBody:
        $ref: '#/components/requestBodies/RepoTransactionInitiationTask'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepoTransactionInitiationTask'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  ? /StockLendingandRepos/{stocklendingandreposId}/RepoTransactionSecurityTransferTask/{repotransactionsecuritytransfertaskId}/Request
  : put:
      tags:
      - BQ - RepoTransactionSecurityTransferTask
      summary: Request Repo Transaction Security Transfer Task
      description: Request Repo Transaction Security Transfer Task
      operationId: RequestRepoTransactionSecurityTransferTask
      parameters:
      - $ref: '#/components/parameters/StockLendingandReposID'
      - $ref: '#/components/parameters/RepoTransactionSecurityTransferTaskID'
      requestBody:
        $ref: '#/components/requestBodies/RepoTransactionSecurityTransferTask'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepoTransactionSecurityTransferTask'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /StockLendingandRepos/{stocklendingandreposId}/RepoTransactionCashTransferTask/{repotransactioncashtransfertaskId}/Retrieve:
    get:
      tags:
      - BQ - RepoTransactionCashTransferTask
      summary: Retrieve Repo Transaction Cash Transfer Task
      description: Retrieve Repo Transaction Cash Transfer Task
      operationId: RetrieveRepoTransactionCashTransferTask
      parameters:
      - $ref: '#/components/parameters/StockLendingandReposID'
      - $ref: '#/components/parameters/RepoTransactionCashTransferTaskID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepoTransactionCashTransferTask'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /StockLendingandRepos/{stocklendingandreposId}/RepoTransactionInitiationTask/{repotransactioninitiationtaskId}/Retrieve:
    get:
      tags:
      - BQ - RepoTransactionInitiationTask
      summary: Retrieve Repo Transaction Initiation Task
      description: Retrieve Repo Transaction Initiation Task
      operationId: RetrieveRepoTransactionInitiationTask
      parameters:
      - $ref: '#/components/parameters/StockLendingandReposID'
      - $ref: '#/components/parameters/RepoTransactionInitiationTaskID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepoTransactionInitiationTask'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  ? /StockLendingandRepos/{stocklendingandreposId}/RepoTransactionSecurityTransferTask/{repotransactionsecuritytransfertaskId}/Retrieve
  : get:
      tags:
      - BQ - RepoTransactionSecurityTransferTask
      summary: Retrieve Repo Transaction Security Transfer Task
      description: Retrieve Repo Transaction Security Transfer Task
      operationId: RetrieveRepoTransactionSecurityTransferTask
      parameters:
      - $ref: '#/components/parameters/StockLendingandReposID'
      - $ref: '#/components/parameters/RepoTransactionSecurityTransferTaskID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepoTransactionSecurityTransferTask'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /StockLendingandRepos/{stocklendingandreposId}/RepoTransactionCashTransferTask/{repotransactioncashtransfertaskId}/Update:
    put:
      tags:
      - BQ - RepoTransactionCashTransferTask
      summary: Update Repo Transaction Cash Transfer Task
      description: Update Repo Transaction Cash Transfer Task
      operationId: UpdateRepoTransactionCashTransferTask
      parameters:
      - $ref: '#/components/parameters/StockLendingandReposID'
      - $ref: '#/components/parameters/RepoTransactionCashTransferTaskID'
      requestBody:
        $ref: '#/components/requestBodies/RepoTransactionCashTransferTask'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepoTransactionCashTransferTask'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /StockLendingandRepos/{stocklendingandreposId}/RepoTransactionInitiationTask/{repotransactioninitiationtaskId}/Update:
    put:
      tags:
      - BQ - RepoTransactionInitiationTask
      summary: Update Repo Transaction Initiation Task
      description: Update Repo Transaction Initiation Task
      operationId: UpdateRepoTransactionInitiationTask
      parameters:
      - $ref: '#/components/parameters/StockLendingandReposID'
      - $ref: '#/components/parameters/RepoTransactionInitiationTaskID'
      requestBody:
        $ref: '#/components/requestBodies/RepoTransactionInitiationTask'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepoTransactionInitiationTask'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  ? /StockLendingandRepos/{stocklendingandreposId}/RepoTransactionSecurityTransferTask/{repotransactionsecuritytransfertaskId}/Update
  : put:
      tags:
      - BQ - RepoTransactionSecurityTransferTask
      summary: Update Repo Transaction Security Transfer Task
      description: Update Repo Transaction Security Transfer Task
      operationId: UpdateRepoTransactionSecurityTransferTask
      parameters:
      - $ref: '#/components/parameters/StockLendingandReposID'
      - $ref: '#/components/parameters/RepoTransactionSecurityTransferTaskID'
      requestBody:
        $ref: '#/components/requestBodies/RepoTransactionSecurityTransferTask'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepoTransactionSecurityTransferTask'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    RepoTransaction:
      type: object
      properties:
        RepoTransactionParameterType:
          type: string
        RepoTransactionSelectedOption:
          type: string
        RepoTransactionStatus:
          type: string
        RepoTransactionType:
          type: string
        RepoTransactionReference:
          type: string
    RepoTransactionCashTransferTask:
      type: object
      properties:
        Preconditions:
          type: object
        Schedule:
          type: object
        BusinessService:
          type: object
        Postconditions:
          type: object
        RepoTransactionReference:
          type: string
        RepoTransactionCashTransferTaskReference:
          type: string
        RepoTransactionCashTransferTaskType:
          type: string
    RepoTransactionInitiationTask:
      type: object
      properties:
        Preconditions:
          type: object
        Schedule:
          type: object
        BusinessService:
          type: object
        Postconditions:
          type: object
        RepoTransactionReference:
          type: string
        RepoTransactionInitiationTaskReference:
          type: string
        RepoTransactionInitiationTaskType:
          type: string
    RepoTransactionSecurityTransferTask:
      type: object
      properties:
        Preconditions:
          type: object
        Schedule:
          type: object
        BusinessService:
          type: object
        Postconditions:
          type: object
        RepoTransactionReference:
          type: string
        RepoTransactionSecurityTransferTaskReference:
          type: string
        RepoTransactionSecurityTransferTaskType:
          type: string
    StockLendingandReposOutcome:
      type: object
      properties:
        StockLendingandReposCalendar:
          type: string
        StockLendingandReposCounterparty:
          type: object
        StockLendingandReposDividend:
          type: string
        StockLendingandReposFees:
          type: string
        StockLendingandReposInterest:
          type: string
        StockLendingandReposMargining:
          type: string
        StockLendingandReposNotionalPrincipal:
          type: string
        StockLendingandReposOptions:
          type: string
        StockLendingandReposRates:
          type: object
        StockLendingandReposSettlement:
          type: string
        StockLendingandReposWorkProduct:
          type: object
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
        status:
          type: string
        message:
          type: string
  parameters:
    StockLendingandReposID:
      name: stocklendingandreposId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    RepoTransactionCashTransferTaskID:
      name: repotransactioncashtransfertaskId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    RepoTransactionInitiationTaskID:
      name: repotransactioninitiationtaskId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    RepoTransactionSecurityTransferTaskID:
      name: repotransactionsecuritytransfertaskId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    StockLendingandReposOutcomeID:
      name: stocklendingandreposoutcomeId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
  requestBodies:
    RepoTransaction:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RepoTransaction'
    RepoTransactionCashTransferTask:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RepoTransactionCashTransferTask'
    RepoTransactionInitiationTask:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RepoTransactionInitiationTask'
    RepoTransactionSecurityTransferTask:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RepoTransactionSecurityTransferTask'
  responses:
    HTTPError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    BadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequestsError:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
...
