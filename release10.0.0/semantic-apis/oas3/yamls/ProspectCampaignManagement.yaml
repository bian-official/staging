openapi: 3.0.1
info:
  title: Prospect Campaign Management
  description: Assess the coverage and impact of external/prospect campaigns and redirect campaign development and execution activity accordingly
  version: 10.0.0
servers:
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/B154/ProspectCampaignManagement/10.0.0
paths:
  /ProspectCampaignManagement/Create:
    post:
      tags:
      - CR - ProspectCampaignPortfolioManagementPlan
      summary: CrCR Create and invoke the prospect campaign portfolio management plan
      description: CrCR Create and invoke the prospect campaign portfolio management plan
      operationId: Create
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/CreateProspectCampaignPortfolioManagementPlanRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProspectCampaignPortfolioManagementPlanResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProspectCampaignManagement/{prospectcampaignmanagementId}/Update:
    put:
      tags:
      - CR - ProspectCampaignPortfolioManagementPlan
      summary: UpBQ Update details of the customer campaign portfolio management plan
      description: UpBQ Update details of the customer campaign portfolio management plan
      operationId: Update
      parameters:
      - $ref: '#/components/parameters/ProspectCampaignManagementID'
      requestBody:
        $ref: '#/components/requestBodies/UpdateProspectCampaignPortfolioManagementPlanRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProspectCampaignPortfolioManagementPlanResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProspectCampaignManagement/{prospectcampaignmanagementId}/Request:
    put:
      tags:
      - CR - ProspectCampaignPortfolioManagementPlan
      summary: RqCR Request manual intervention in the campaign plan
      description: RqCR Request manual intervention in the campaign plan
      operationId: Request
      parameters:
      - $ref: '#/components/parameters/ProspectCampaignManagementID'
      requestBody:
        $ref: '#/components/requestBodies/RequestProspectCampaignPortfolioManagementPlanRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestProspectCampaignPortfolioManagementPlanResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProspectCampaignManagement/{prospectcampaignmanagementId}/Retrieve:
    get:
      tags:
      - CR - ProspectCampaignPortfolioManagementPlan
      summary: ReCR Retrieve details about the prospect campaign portfolio management plan
      description: ReCR Retrieve details about the prospect campaign portfolio management plan
      operationId: Retrieve
      parameters:
      - $ref: '#/components/parameters/ProspectCampaignManagementID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveProspectCampaignPortfolioManagementPlanResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProspectCampaignManagement/{prospectcampaignmanagementId}/MarketTracking/{markettrackingId}/Update:
    put:
      tags:
      - BQ - MarketTracking
      summary: UpBQ Update details of the market tracking activity
      description: UpBQ Update details of the market tracking activity
      operationId: UpdateMarketTracking
      parameters:
      - $ref: '#/components/parameters/ProspectCampaignManagementID'
      - $ref: '#/components/parameters/MarketTrackingID'
      requestBody:
        $ref: '#/components/requestBodies/UpdateMarketTrackingRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateMarketTrackingResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProspectCampaignManagement/{prospectcampaignmanagementId}/MarketTracking/{markettrackingId}/Execute:
    put:
      tags:
      - BQ - MarketTracking
      summary: ExBQ Execute an automated task for the tracking activity
      description: ExBQ Execute an automated task for the tracking activity
      operationId: ExecuteMarketTracking
      parameters:
      - $ref: '#/components/parameters/ProspectCampaignManagementID'
      - $ref: '#/components/parameters/MarketTrackingID'
      requestBody:
        $ref: '#/components/requestBodies/ExecuteMarketTrackingRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecuteMarketTrackingResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProspectCampaignManagement/{prospectcampaignmanagementId}/MarketTracking/{markettrackingId}/Request:
    put:
      tags:
      - BQ - MarketTracking
      summary: RqBQ Request manual intervention in the market tracking
      description: RqBQ Request manual intervention in the market tracking
      operationId: RequestMarketTracking
      parameters:
      - $ref: '#/components/parameters/ProspectCampaignManagementID'
      - $ref: '#/components/parameters/MarketTrackingID'
      requestBody:
        $ref: '#/components/requestBodies/RequestMarketTrackingRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestMarketTrackingResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProspectCampaignManagement/{prospectcampaignmanagementId}/MarketTracking/{markettrackingId}/Retrieve:
    get:
      tags:
      - BQ - MarketTracking
      summary: ReBQ Retrieve details about the market tracking activity
      description: ReBQ Retrieve details about the market tracking activity
      operationId: RetrieveMarketTracking
      parameters:
      - $ref: '#/components/parameters/ProspectCampaignManagementID'
      - $ref: '#/components/parameters/MarketTrackingID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveMarketTrackingResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProspectCampaignManagement/{prospectcampaignmanagementId}/PerformanceAssessment/Create:
    post:
      tags:
      - BQ - PerformanceAssessment
      summary: CrBQ Create a performance assessment of the customer campaign portfolio
      description: CrBQ Create a performance assessment of the customer campaign portfolio
      operationId: CreatePerformanceAssessment
      parameters:
      - $ref: '#/components/parameters/ProspectCampaignManagementID'
      requestBody:
        $ref: '#/components/requestBodies/CreatePerformanceAssessmentRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePerformanceAssessmentResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProspectCampaignManagement/{prospectcampaignmanagementId}/PerformanceAssessment/{performanceassessmentId}/Update:
    put:
      tags:
      - BQ - PerformanceAssessment
      summary: UpBQ Update details of a prospect campaign portfolio assessment
      description: UpBQ Update details of a prospect campaign portfolio assessment
      operationId: UpdatePerformanceAssessment
      parameters:
      - $ref: '#/components/parameters/ProspectCampaignManagementID'
      - $ref: '#/components/parameters/PerformanceAssessmentID'
      requestBody:
        $ref: '#/components/requestBodies/UpdatePerformanceAssessmentRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePerformanceAssessmentResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProspectCampaignManagement/{prospectcampaignmanagementId}/PerformanceAssessment/{performanceassessmentId}/Execute:
    put:
      tags:
      - BQ - PerformanceAssessment
      summary: ExBQ Execute an automated action for a performance assessment
      description: ExBQ Execute an automated action for a performance assessment
      operationId: ExecutePerformanceAssessment
      parameters:
      - $ref: '#/components/parameters/ProspectCampaignManagementID'
      - $ref: '#/components/parameters/PerformanceAssessmentID'
      requestBody:
        $ref: '#/components/requestBodies/ExecutePerformanceAssessmentRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutePerformanceAssessmentResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProspectCampaignManagement/{prospectcampaignmanagementId}/PerformanceAssessment/{performanceassessmentId}/Request:
    put:
      tags:
      - BQ - PerformanceAssessment
      summary: RqBQ Request manual intervention to a performance assessment
      description: RqBQ Request manual intervention to a performance assessment
      operationId: RequestPerformanceAssessment
      parameters:
      - $ref: '#/components/parameters/ProspectCampaignManagementID'
      - $ref: '#/components/parameters/PerformanceAssessmentID'
      requestBody:
        $ref: '#/components/requestBodies/RequestPerformanceAssessmentRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestPerformanceAssessmentResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProspectCampaignManagement/{prospectcampaignmanagementId}/PerformanceAssessment/{performanceassessmentId}/Retrieve:
    get:
      tags:
      - BQ - PerformanceAssessment
      summary: ReBQ Retrieve details about prospect campaign performance assessment activity
      description: ReBQ Retrieve details about prospect campaign performance assessment activity
      operationId: RetrievePerformanceAssessment
      parameters:
      - $ref: '#/components/parameters/ProspectCampaignManagementID'
      - $ref: '#/components/parameters/PerformanceAssessmentID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrievePerformanceAssessmentResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProspectCampaignManagement/{prospectcampaignmanagementId}/CampaignDirection/Create:
    post:
      tags:
      - BQ - CampaignDirection
      summary: CrBQ Create prospect campaign direction schedules
      description: CrBQ Create prospect campaign direction schedules
      operationId: CreateCampaignDirection
      parameters:
      - $ref: '#/components/parameters/ProspectCampaignManagementID'
      requestBody:
        $ref: '#/components/requestBodies/CampaignDirection'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignDirection'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProspectCampaignManagement/{prospectcampaignmanagementId}/CampaignDirection/{campaigndirectionId}/Update:
    put:
      tags:
      - BQ - CampaignDirection
      summary: UpBQ Update the prospect campaign design and execution schedules
      description: UpBQ Update the prospect campaign design and execution schedules
      operationId: UpdateCampaignDirection
      parameters:
      - $ref: '#/components/parameters/ProspectCampaignManagementID'
      - $ref: '#/components/parameters/CampaignDirectionID'
      requestBody:
        $ref: '#/components/requestBodies/CampaignDirection'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignDirection'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProspectCampaignManagement/{prospectcampaignmanagementId}/CampaignDirection/{campaigndirectionId}/Request:
    put:
      tags:
      - BQ - CampaignDirection
      summary: RqBQ Request manual intervention to the schedules
      description: RqBQ Request manual intervention to the schedules
      operationId: RequestCampaignDirection
      parameters:
      - $ref: '#/components/parameters/ProspectCampaignManagementID'
      - $ref: '#/components/parameters/CampaignDirectionID'
      requestBody:
        $ref: '#/components/requestBodies/CampaignDirection'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignDirection'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProspectCampaignManagement/{prospectcampaignmanagementId}/CampaignDirection/{campaigndirectionId}/Retrieve:
    get:
      tags:
      - BQ - CampaignDirection
      summary: ReBQ Retrieve details about the campaign design and execution direction and scheduling activity
      description: ReBQ Retrieve details about the campaign design and execution direction and scheduling activity
      operationId: RetrieveCampaignDirection
      parameters:
      - $ref: '#/components/parameters/ProspectCampaignManagementID'
      - $ref: '#/components/parameters/CampaignDirectionID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignDirection'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    ProspectCampaignPortfolioManagementPlan:
      type: object
      properties:
        ProspectCampaignPortfolio:
          type: string
        ProspectCampaignType:
          type: string
        ProspectCampaignDescription:
          type: string
        ProspectCampaignMetrics:
          type: string
        ProspectCampaignMetricDefinition:
          type: string
        ProspectCampaignMetricGoal:
          type: string
        ProspectCampaignPerformanceRecord:
          type: string
        ProspectCampaignProcedureInstanceReference:
          type: object
        EmployeeOrBusinessUnitReference:
          type: object
        ProspectCampaignProcedureSet-up:
          type: string
        ProspectCampaignProcedureVersionNumber:
          type: string
        ProspectCampaignProcedureResult:
          type: string
    PerformanceAssessment:
      type: object
      properties:
        PerformanceAssessmentWorkTaskType:
          type: string
        PerformanceAssessmentWorkTask:
          type: string
        PerformanceAssessmentWorkTaskWorkProducts:
          type: string
        PerformanceAssessmentWorkTaskResult:
          type: string
        PerformanceAssessmentWorkTaskDate-Time:
          type: string
    MarketTracking:
      type: object
      properties:
        MarketTrackingWorkTaskType:
          type: string
        MarketTrackingWorkTask:
          type: string
        GeneralMarketResearchDirectoryEntryInstanceReference:
          type: object
        CompetitorAnalysisInstanceReference:
          type: object
        CustomerSurveyProcedureInstanceReference:
          type: object
        MarketTrackingWorkTaskWorkProducts:
          type: string
        MarketTrackingWorkTaskResult:
          type: string
        MarketTrackingWorkTaskDate-Time:
          type: string
    CampaignDirection:
      type: object
      properties:
        ProspectCampaignDevelopmentSchedule:
          type: string
        ProspectCampaignExecutionSchedule:
          type: string
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
        status:
          type: string
        message:
          type: string
    CreateProspectCampaignPortfolioManagementPlanRequest:
      type: object
      properties:
        ProspectCampaignPortfolioManagementPlan:
          type: object
          properties:
            ProspectCampaignType:
              type: string
            ProspectCampaignDescription:
              type: string
            ProspectCampaignMetrics:
              type: string
            ProspectCampaignMetricDefinition:
              type: string
            ProspectCampaignPerformanceRecord:
              type: string
            ProspectCampaignProcedureInstanceReference:
              type: object
            EmployeeOrBusinessUnitReference:
              type: object
            ProspectCampaignProcedureSet-up:
              type: string
            ProspectCampaignProcedureVersionNumber:
              type: string
            ProspectCampaignProcedureResult:
              type: string
    CreateProspectCampaignPortfolioManagementPlanResponse:
      type: object
      properties:
        ProspectCampaignPortfolioManagementPlan:
          type: object
          properties:
            ProspectCampaignType:
              type: string
            ProspectCampaignDescription:
              type: string
            ProspectCampaignMetrics:
              type: string
            ProspectCampaignMetricDefinition:
              type: string
            ProspectCampaignPerformanceRecord:
              type: string
            ProspectCampaignProcedureInstanceReference:
              type: object
            EmployeeOrBusinessUnitReference:
              type: object
            ProspectCampaignProcedureSet-up:
              type: string
            ProspectCampaignProcedureVersionNumber:
              type: string
    UpdateProspectCampaignPortfolioManagementPlanRequest:
      type: object
      properties:
        ProspectCampaignPortfolioManagementPlan:
          type: object
          properties:
            ProspectCampaignType:
              type: string
            ProspectCampaignDescription:
              type: string
            ProspectCampaignMetrics:
              type: string
            ProspectCampaignMetricDefinition:
              type: string
            ProspectCampaignMetricGoal:
              type: string
            ProspectCampaignPerformanceRecord:
              type: string
            ProspectCampaignProcedureInstanceReference:
              type: object
            EmployeeOrBusinessUnitReference:
              type: object
            ProspectCampaignProcedureSet-up:
              type: string
            ProspectCampaignProcedureVersionNumber:
              type: string
            ProspectCampaignProcedureResult:
              type: string
    UpdateProspectCampaignPortfolioManagementPlanResponse:
      type: object
      properties:
        ProspectCampaignPortfolioManagementPlan:
          type: object
          properties:
            ProspectCampaignType:
              type: string
            ProspectCampaignDescription:
              type: string
            ProspectCampaignMetrics:
              type: string
            ProspectCampaignMetricDefinition:
              type: string
            ProspectCampaignMetricGoal:
              type: string
            ProspectCampaignPerformanceRecord:
              type: string
            ProspectCampaignProcedureInstanceReference:
              type: object
            EmployeeOrBusinessUnitReference:
              type: object
            ProspectCampaignProcedureSet-up:
              type: string
            ProspectCampaignProcedureVersionNumber:
              type: string
            ProspectCampaignProcedureResult:
              type: string
    RequestProspectCampaignPortfolioManagementPlanRequest:
      type: object
      properties:
        ProspectCampaignPortfolioManagementPlan:
          type: object
          properties:
            ProspectCampaignType:
              type: string
            ProspectCampaignDescription:
              type: string
            ProspectCampaignMetrics:
              type: string
            ProspectCampaignMetricDefinition:
              type: string
    RequestProspectCampaignPortfolioManagementPlanResponse:
      type: object
      properties:
        ProspectCampaignPortfolioManagementPlan:
          type: object
          properties:
            ProspectCampaignType:
              type: string
            ProspectCampaignDescription:
              type: string
            ProspectCampaignMetrics:
              type: string
            ProspectCampaignMetricDefinition:
              type: string
    RetrieveProspectCampaignPortfolioManagementPlanResponse:
      type: object
      properties:
        ProspectCampaignPortfolioManagementPlan:
          type: object
          properties:
            ProspectCampaignType:
              type: string
            ProspectCampaignDescription:
              type: string
            ProspectCampaignMetrics:
              type: string
            ProspectCampaignMetricDefinition:
              type: string
            ProspectCampaignMetricGoal:
              type: string
            ProspectCampaignPerformanceRecord:
              type: string
            ProspectCampaignProcedureInstanceReference:
              type: object
            EmployeeOrBusinessUnitReference:
              type: object
            ProspectCampaignProcedureSet-up:
              type: string
            ProspectCampaignProcedureVersionNumber:
              type: string
            ProspectCampaignProcedureResult:
              type: string
    UpdateMarketTrackingRequest:
      type: object
      properties:
        MarketTracking:
          type: object
          properties:
            MarketTrackingWorkTaskType:
              type: string
            GeneralMarketResearchDirectoryEntryInstanceReference:
              type: object
            CompetitorAnalysisInstanceReference:
              type: object
            CustomerSurveyProcedureInstanceReference:
              type: object
            MarketTrackingWorkTaskWorkProducts:
              type: string
            MarketTrackingWorkTaskResult:
              type: string
            MarketTrackingWorkTaskDate-Time:
              type: string
    UpdateMarketTrackingResponse:
      type: object
      properties:
        MarketTracking:
          type: object
          properties:
            MarketTrackingWorkTaskType:
              type: string
            GeneralMarketResearchDirectoryEntryInstanceReference:
              type: object
            CompetitorAnalysisInstanceReference:
              type: object
            CustomerSurveyProcedureInstanceReference:
              type: object
            MarketTrackingWorkTaskWorkProducts:
              type: string
            MarketTrackingWorkTaskResult:
              type: string
            MarketTrackingWorkTaskDate-Time:
              type: string
    ExecuteMarketTrackingRequest:
      type: object
      properties:
        MarketTracking:
          type: object
          properties:
            MarketTrackingWorkTaskType:
              type: string
            GeneralMarketResearchDirectoryEntryInstanceReference:
              type: object
            CompetitorAnalysisInstanceReference:
              type: object
            CustomerSurveyProcedureInstanceReference:
              type: object
            MarketTrackingWorkTaskWorkProducts:
              type: string
            MarketTrackingWorkTaskDate-Time:
              type: string
    ExecuteMarketTrackingResponse:
      type: object
      properties:
        MarketTracking:
          type: object
          properties:
            MarketTrackingWorkTaskType:
              type: string
            GeneralMarketResearchDirectoryEntryInstanceReference:
              type: object
            CompetitorAnalysisInstanceReference:
              type: object
            CustomerSurveyProcedureInstanceReference:
              type: object
            MarketTrackingWorkTaskWorkProducts:
              type: string
            MarketTrackingWorkTaskResult:
              type: string
            MarketTrackingWorkTaskDate-Time:
              type: string
    RequestMarketTrackingRequest:
      type: object
      properties:
        MarketTracking:
          type: object
          properties:
            MarketTrackingWorkTaskType:
              type: string
            GeneralMarketResearchDirectoryEntryInstanceReference:
              type: object
            CompetitorAnalysisInstanceReference:
              type: object
            CustomerSurveyProcedureInstanceReference:
              type: object
            MarketTrackingWorkTaskWorkProducts:
              type: string
            MarketTrackingWorkTaskDate-Time:
              type: string
    RequestMarketTrackingResponse:
      type: object
      properties:
        MarketTracking:
          type: object
          properties:
            MarketTrackingWorkTaskType:
              type: string
            GeneralMarketResearchDirectoryEntryInstanceReference:
              type: object
            CompetitorAnalysisInstanceReference:
              type: object
            CustomerSurveyProcedureInstanceReference:
              type: object
            MarketTrackingWorkTaskWorkProducts:
              type: string
            MarketTrackingWorkTaskResult:
              type: string
            MarketTrackingWorkTaskDate-Time:
              type: string
    RetrieveMarketTrackingResponse:
      type: object
      properties:
        MarketTracking:
          type: object
          properties:
            MarketTrackingWorkTaskType:
              type: string
            GeneralMarketResearchDirectoryEntryInstanceReference:
              type: object
            CompetitorAnalysisInstanceReference:
              type: object
            CustomerSurveyProcedureInstanceReference:
              type: object
            MarketTrackingWorkTaskWorkProducts:
              type: string
            MarketTrackingWorkTaskResult:
              type: string
            MarketTrackingWorkTaskDate-Time:
              type: string
    CreatePerformanceAssessmentRequest:
      type: object
      properties:
        PerformanceAssessment:
          type: object
          properties:
            PerformanceAssessmentWorkTaskType:
              type: string
            PerformanceAssessmentWorkTaskWorkProducts:
              type: string
            PerformanceAssessmentWorkTaskDate-Time:
              type: string
    CreatePerformanceAssessmentResponse:
      type: object
      properties:
        PerformanceAssessment:
          type: object
          properties:
            PerformanceAssessmentWorkTaskType:
              type: string
            PerformanceAssessmentWorkTaskWorkProducts:
              type: string
            PerformanceAssessmentWorkTaskResult:
              type: string
            PerformanceAssessmentWorkTaskDate-Time:
              type: string
    UpdatePerformanceAssessmentRequest:
      type: object
      properties:
        PerformanceAssessment:
          type: object
          properties:
            PerformanceAssessmentWorkTaskType:
              type: string
            PerformanceAssessmentWorkTaskWorkProducts:
              type: string
            PerformanceAssessmentWorkTaskResult:
              type: string
            PerformanceAssessmentWorkTaskDate-Time:
              type: string
    UpdatePerformanceAssessmentResponse:
      type: object
      properties:
        PerformanceAssessment:
          type: object
          properties:
            PerformanceAssessmentWorkTaskType:
              type: string
            PerformanceAssessmentWorkTaskWorkProducts:
              type: string
            PerformanceAssessmentWorkTaskResult:
              type: string
            PerformanceAssessmentWorkTaskDate-Time:
              type: string
    ExecutePerformanceAssessmentRequest:
      type: object
      properties:
        PerformanceAssessment:
          type: object
          properties:
            PerformanceAssessmentWorkTaskType:
              type: string
            PerformanceAssessmentWorkTaskWorkProducts:
              type: string
            PerformanceAssessmentWorkTaskDate-Time:
              type: string
    ExecutePerformanceAssessmentResponse:
      type: object
      properties:
        PerformanceAssessment:
          type: object
          properties:
            PerformanceAssessmentWorkTaskType:
              type: string
            PerformanceAssessmentWorkTaskWorkProducts:
              type: string
            PerformanceAssessmentWorkTaskResult:
              type: string
            PerformanceAssessmentWorkTaskDate-Time:
              type: string
    RequestPerformanceAssessmentRequest:
      type: object
      properties:
        PerformanceAssessment:
          type: object
          properties:
            PerformanceAssessmentWorkTaskType:
              type: string
            PerformanceAssessmentWorkTaskWorkProducts:
              type: string
            PerformanceAssessmentWorkTaskDate-Time:
              type: string
    RequestPerformanceAssessmentResponse:
      type: object
      properties:
        PerformanceAssessment:
          type: object
          properties:
            PerformanceAssessmentWorkTaskType:
              type: string
            PerformanceAssessmentWorkTaskWorkProducts:
              type: string
            PerformanceAssessmentWorkTaskResult:
              type: string
            PerformanceAssessmentWorkTaskDate-Time:
              type: string
    RetrievePerformanceAssessmentResponse:
      type: object
      properties:
        PerformanceAssessment:
          type: object
          properties:
            PerformanceAssessmentWorkTaskType:
              type: string
            PerformanceAssessmentWorkTaskWorkProducts:
              type: string
            PerformanceAssessmentWorkTaskResult:
              type: string
            PerformanceAssessmentWorkTaskDate-Time:
              type: string
  parameters:
    ProspectCampaignManagementID:
      name: prospectcampaignmanagementId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    PerformanceAssessmentID:
      name: performanceassessmentId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    MarketTrackingID:
      name: markettrackingId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    CampaignDirectionID:
      name: campaigndirectionId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
  requestBodies:
    CreateProspectCampaignPortfolioManagementPlanRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateProspectCampaignPortfolioManagementPlanRequest'
    UpdateProspectCampaignPortfolioManagementPlanRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateProspectCampaignPortfolioManagementPlanRequest'
    RequestProspectCampaignPortfolioManagementPlanRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestProspectCampaignPortfolioManagementPlanRequest'
    UpdateMarketTrackingRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateMarketTrackingRequest'
    ExecuteMarketTrackingRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExecuteMarketTrackingRequest'
    RequestMarketTrackingRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestMarketTrackingRequest'
    CreatePerformanceAssessmentRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreatePerformanceAssessmentRequest'
    UpdatePerformanceAssessmentRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdatePerformanceAssessmentRequest'
    ExecutePerformanceAssessmentRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExecutePerformanceAssessmentRequest'
    RequestPerformanceAssessmentRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestPerformanceAssessmentRequest'
    CampaignDirection:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CampaignDirection'
  responses:
    HTTPError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    BadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequestsError:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
...
