openapi: 3.0.1
info:
  title: Product Matching
  description: Capability used to match eligible product and product combinations to a customer based on prevailing conditions such as customer type, product interest, solicitation/retention, campaign alignment
  version: 10.0.0
servers:
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/B154/ProductMatching/10.0.0
paths:
  /ProductMatching/{productmatchingId}/Exchange:
    put:
      tags:
      - CR - Product/CustomerCombinationAssessment
      summary: EcCR Accept, verify, etc. aspects of Product/Customer Combination Assessment processing
      description: EcCR Accept, verify, etc. aspects of Product/Customer Combination Assessment processing
      operationId: Exchange
      parameters:
      - $ref: '#/components/parameters/ProductMatchingID'
      requestBody:
        $ref: '#/components/requestBodies/Product/CustomerCombinationAssessment'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product/CustomerCombinationAssessment'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductMatching/{productmatchingId}/Execute:
    put:
      tags:
      - CR - Product/CustomerCombinationAssessment
      summary: ExCR Execute an available automated action for Product/Customer Combination Assessment
      description: ExCR Execute an available automated action for Product/Customer Combination Assessment
      operationId: Execute
      parameters:
      - $ref: '#/components/parameters/ProductMatchingID'
      requestBody:
        $ref: '#/components/requestBodies/Product/CustomerCombinationAssessment'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product/CustomerCombinationAssessment'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductMatching/{productmatchingId}/Grant:
    put:
      tags:
      - CR - Product/CustomerCombinationAssessment
      summary: GrCR Obtain permission to act in relation to Product/Customer Combination Assessment
      description: GrCR Obtain permission to act in relation to Product/Customer Combination Assessment
      operationId: Grant
      parameters:
      - $ref: '#/components/parameters/ProductMatchingID'
      requestBody:
        $ref: '#/components/requestBodies/Product/CustomerCombinationAssessment'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product/CustomerCombinationAssessment'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductMatching/Initiate:
    post:
      tags:
      - CR - Product/CustomerCombinationAssessment
      summary: InCR Instantiate a new Product/Customer Combination Assessment
      description: InCR Instantiate a new Product/Customer Combination Assessment
      operationId: Initiate
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/Product/CustomerCombinationAssessment'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product/CustomerCombinationAssessment'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductMatching/{productmatchingId}/Retrieve:
    get:
      tags:
      - CR - Product/CustomerCombinationAssessment
      summary: ReCR Retrieve details about any aspect of Product/Customer Combination Assessment
      description: ReCR Retrieve details about any aspect of Product/Customer Combination Assessment
      operationId: Retrieve
      parameters:
      - $ref: '#/components/parameters/ProductMatchingID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product/CustomerCombinationAssessment'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductMatching/{productmatchingId}/Request:
    put:
      tags:
      - CR - Product/CustomerCombinationAssessment
      summary: RqCR Request manual intervention or a decision with respect to Product/Customer Combination Assessment
      description: RqCR Request manual intervention or a decision with respect to Product/Customer Combination Assessment
      operationId: Request
      parameters:
      - $ref: '#/components/parameters/ProductMatchingID'
      requestBody:
        $ref: '#/components/requestBodies/Product/CustomerCombinationAssessment'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product/CustomerCombinationAssessment'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductMatching/{productmatchingId}/Update:
    put:
      tags:
      - CR - Product/CustomerCombinationAssessment
      summary: UpCR Update details relating to Product/Customer Combination Assessment
      description: UpCR Update details relating to Product/Customer Combination Assessment
      operationId: Update
      parameters:
      - $ref: '#/components/parameters/ProductMatchingID'
      requestBody:
        $ref: '#/components/requestBodies/Product/CustomerCombinationAssessment'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product/CustomerCombinationAssessment'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductMatching/{productmatchingId}/BankandCampaignAlignment/Initiate:
    post:
      tags:
      - BQ - BankandCampaignAlignment
      summary: InBQ Instantiate a new Bank and Campaign Alignment
      description: InBQ Instantiate a new Bank and Campaign Alignment
      operationId: InitiateBankandCampaignAlignment
      parameters:
      - $ref: '#/components/parameters/ProductMatchingID'
      requestBody:
        $ref: '#/components/requestBodies/BankandCampaignAlignment'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankandCampaignAlignment'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductMatching/{productmatchingId}/ContextCriteria/Initiate:
    post:
      tags:
      - BQ - ContextCriteria
      summary: InBQ Instantiate a new Context Criteria
      description: InBQ Instantiate a new Context Criteria
      operationId: InitiateContextCriteria
      parameters:
      - $ref: '#/components/parameters/ProductMatchingID'
      requestBody:
        $ref: '#/components/requestBodies/ContextCriteria'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContextCriteria'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductMatching/{productmatchingId}/ProductEligibility/Initiate:
    post:
      tags:
      - BQ - ProductEligibility
      summary: InBQ Instantiate a new Product Eligibility
      description: InBQ Instantiate a new Product Eligibility
      operationId: InitiateProductEligibility
      parameters:
      - $ref: '#/components/parameters/ProductMatchingID'
      requestBody:
        $ref: '#/components/requestBodies/ProductEligibility'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductEligibility'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductMatching/{productmatchingId}/ProductTypeSelection/Initiate:
    post:
      tags:
      - BQ - ProductTypeSelection
      summary: InBQ Instantiate a new Product Type Selection
      description: InBQ Instantiate a new Product Type Selection
      operationId: InitiateProductTypeSelection
      parameters:
      - $ref: '#/components/parameters/ProductMatchingID'
      requestBody:
        $ref: '#/components/requestBodies/ProductTypeSelection'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductTypeSelection'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductMatching/{productmatchingId}/BankandCampaignAlignment/{bankandcampaignalignmentId}/Retrieve:
    get:
      tags:
      - BQ - BankandCampaignAlignment
      summary: ReBQ Retrieve details about any aspect of Bank and Campaign Alignment
      description: ReBQ Retrieve details about any aspect of Bank and Campaign Alignment
      operationId: RetrieveBankandCampaignAlignment
      parameters:
      - $ref: '#/components/parameters/ProductMatchingID'
      - $ref: '#/components/parameters/BankandCampaignAlignmentID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankandCampaignAlignment'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductMatching/{productmatchingId}/ContextCriteria/{contextcriteriaId}/Retrieve:
    get:
      tags:
      - BQ - ContextCriteria
      summary: ReBQ Retrieve details about any aspect of Context Criteria
      description: ReBQ Retrieve details about any aspect of Context Criteria
      operationId: RetrieveContextCriteria
      parameters:
      - $ref: '#/components/parameters/ProductMatchingID'
      - $ref: '#/components/parameters/ContextCriteriaID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContextCriteria'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductMatching/{productmatchingId}/ProductEligibility/{producteligibilityId}/Retrieve:
    get:
      tags:
      - BQ - ProductEligibility
      summary: ReBQ Retrieve details about any aspect of Product Eligibility
      description: ReBQ Retrieve details about any aspect of Product Eligibility
      operationId: RetrieveProductEligibility
      parameters:
      - $ref: '#/components/parameters/ProductMatchingID'
      - $ref: '#/components/parameters/ProductEligibilityID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductEligibility'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductMatching/{productmatchingId}/ProductTypeSelection/{producttypeselectionId}/Retrieve:
    get:
      tags:
      - BQ - ProductTypeSelection
      summary: ReBQ Retrieve details about any aspect of Product Type Selection
      description: ReBQ Retrieve details about any aspect of Product Type Selection
      operationId: RetrieveProductTypeSelection
      parameters:
      - $ref: '#/components/parameters/ProductMatchingID'
      - $ref: '#/components/parameters/ProductTypeSelectionID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductTypeSelection'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductMatching/{productmatchingId}/BankandCampaignAlignment/{bankandcampaignalignmentId}/Update:
    put:
      tags:
      - BQ - BankandCampaignAlignment
      summary: UpBQ Update details relating to Bank and Campaign Alignment
      description: UpBQ Update details relating to Bank and Campaign Alignment
      operationId: UpdateBankandCampaignAlignment
      parameters:
      - $ref: '#/components/parameters/ProductMatchingID'
      - $ref: '#/components/parameters/BankandCampaignAlignmentID'
      requestBody:
        $ref: '#/components/requestBodies/BankandCampaignAlignment'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankandCampaignAlignment'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductMatching/{productmatchingId}/ContextCriteria/{contextcriteriaId}/Update:
    put:
      tags:
      - BQ - ContextCriteria
      summary: UpBQ Update details relating to Context Criteria
      description: UpBQ Update details relating to Context Criteria
      operationId: UpdateContextCriteria
      parameters:
      - $ref: '#/components/parameters/ProductMatchingID'
      - $ref: '#/components/parameters/ContextCriteriaID'
      requestBody:
        $ref: '#/components/requestBodies/ContextCriteria'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContextCriteria'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductMatching/{productmatchingId}/ProductEligibility/{producteligibilityId}/Update:
    put:
      tags:
      - BQ - ProductEligibility
      summary: UpBQ Update details relating to Product Eligibility
      description: UpBQ Update details relating to Product Eligibility
      operationId: UpdateProductEligibility
      parameters:
      - $ref: '#/components/parameters/ProductMatchingID'
      - $ref: '#/components/parameters/ProductEligibilityID'
      requestBody:
        $ref: '#/components/requestBodies/ProductEligibility'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductEligibility'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductMatching/{productmatchingId}/ProductTypeSelection/{producttypeselectionId}/Update:
    put:
      tags:
      - BQ - ProductTypeSelection
      summary: UpBQ Update details relating to Product Type Selection
      description: UpBQ Update details relating to Product Type Selection
      operationId: UpdateProductTypeSelection
      parameters:
      - $ref: '#/components/parameters/ProductMatchingID'
      - $ref: '#/components/parameters/ProductTypeSelectionID'
      requestBody:
        $ref: '#/components/requestBodies/ProductTypeSelection'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductTypeSelection'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    Product/CustomerCombinationAssessment:
      type: object
      properties:
        ProductOrCustomerCombinationAssessmentParameterType:
          type: string
        ProductOrCustomerCombinationAssessmentSelectedOption:
          type: string
        ProductOrCustomerCombinationAssessmentType:
          type: string
        ProductOrCustomerCombinationAssessmentReference:
          type: object
        ProductOrCustomerCombinationAssessmentRequest:
          type: string
        ProductOrCustomerCombinationAssessmentSchedule:
          type: string
        ProductOrCustomerCombinationAssessmentStatus:
          type: string
        ProductOrCustomerCombinationAssessmentUsageLog:
          type: string
        ProductOrCustomerCombinationAssessmentAssociatedParty:
          type: string
        ProductOrCustomerCombinationAssessmentServiceProviderReference:
          type: object
        ProductOrCustomerCombinationAssessmentRequesterReference:
          type: object
    ContextCriteria:
      type: object
      properties:
        ContextCriteriaPreconditions:
          type: string
        ContextCriteriaAnalysisSchedule:
          type: string
        ContextCriteriaVersionNumber:
          type: string
        ContextCriteria:
          type: object
        ContextCriteriaServiceType:
          type: string
        ContextCriteriaServiceDescription:
          type: string
        ContextCriteriaServiceInputsandOuputs:
          type: string
        ContextCriteriaServiceWorkProduct:
          type: string
        ContextCriteriaServiceName:
          type: string
    BankandCampaignAlignment:
      type: object
      properties:
        BankandCampaignAlignmentPreconditions:
          type: string
        BankandCampaignAlignmentAnalysisSchedule:
          type: string
        BankandCampaignAlignmentVersionNumber:
          type: string
        BankandCampaignAlignment:
          type: object
        BankandCampaignAlignmentServiceType:
          type: string
        BankandCampaignAlignmentServiceDescription:
          type: string
        BankandCampaignAlignmentServiceInputsandOuputs:
          type: string
        BankandCampaignAlignmentServiceWorkProduct:
          type: string
        BankandCampaignAlignmentServiceName:
          type: string
    ProductTypeSelection:
      type: object
      properties:
        ProductTypeSelectionPreconditions:
          type: string
        ProductTypeSelectionAnalysisSchedule:
          type: string
        ProductTypeSelectionVersionNumber:
          type: string
        ProductTypeSelection:
          type: object
        ProductTypeSelectionServiceType:
          type: string
        ProductTypeSelectionServiceDescription:
          type: string
        ProductTypeSelectionServiceInputsandOuputs:
          type: string
        ProductTypeSelectionServiceWorkProduct:
          type: string
        ProductTypeSelectionServiceName:
          type: string
    ProductEligibility:
      type: object
      properties:
        ProductEligibilityPreconditions:
          type: string
        ProductEligibilityAnalysisSchedule:
          type: string
        ProductEligibilityVersionNumber:
          type: string
        ProductEligibility:
          type: object
        ProductEligibilityServiceType:
          type: string
        ProductEligibilityServiceDescription:
          type: string
        ProductEligibilityServiceInputsandOuputs:
          type: string
        ProductEligibilityServiceWorkProduct:
          type: string
        ProductEligibilityServiceName:
          type: string
    ProductMatchingOutcome:
      type: object
      properties:
        ProductMatchingWorkProduct:
          type: string
        ProductMatchingAssessmentType:
          type: string
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
        status:
          type: string
        message:
          type: string
  parameters:
    ProductMatchingID:
      name: productmatchingId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    ContextCriteriaID:
      name: contextcriteriaId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    BankandCampaignAlignmentID:
      name: bankandcampaignalignmentId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    ProductTypeSelectionID:
      name: producttypeselectionId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    ProductEligibilityID:
      name: producteligibilityId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    ProductMatchingOutcomeID:
      name: productmatchingoutcomeId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
  requestBodies:
    Product/CustomerCombinationAssessment:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Product/CustomerCombinationAssessment'
    BankandCampaignAlignment:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BankandCampaignAlignment'
    ContextCriteria:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContextCriteria'
    ProductEligibility:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProductEligibility'
    ProductTypeSelection:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProductTypeSelection'
  responses:
    HTTPError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    BadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequestsError:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
...
