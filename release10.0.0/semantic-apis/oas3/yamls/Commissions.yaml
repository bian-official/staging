openapi: 3.0.1
info:
  title: Commissions
  description: The service domain processes commissions for transactions for eligible employees
  version: 10.0.0
servers:
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/B154/Commissions/10.0.0
paths:
  /Commissions/{commissionsId}/Control:
    put:
      tags:
      - CR - CommissionTransaction
      summary: CoCR Control the processing of Commission Transaction
      description: CoCR Control the processing of Commission Transaction
      operationId: Control
      parameters:
      - $ref: '#/components/parameters/CommissionsID'
      requestBody:
        $ref: '#/components/requestBodies/CommissionTransaction'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommissionTransaction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Commissions/{commissionsId}/Exchange:
    put:
      tags:
      - CR - CommissionTransaction
      summary: EcCR Accept, verify, etc. aspects of Commission Transaction processing
      description: EcCR Accept, verify, etc. aspects of Commission Transaction processing
      operationId: Exchange
      parameters:
      - $ref: '#/components/parameters/CommissionsID'
      requestBody:
        $ref: '#/components/requestBodies/CommissionTransaction'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommissionTransaction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Commissions/{commissionsId}/Execute:
    put:
      tags:
      - CR - CommissionTransaction
      summary: ExCR Execute an available automated action for Commission Transaction
      description: ExCR Execute an available automated action for Commission Transaction
      operationId: Execute
      parameters:
      - $ref: '#/components/parameters/CommissionsID'
      requestBody:
        $ref: '#/components/requestBodies/CommissionTransaction'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommissionTransaction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Commissions/Initiate:
    post:
      tags:
      - CR - CommissionTransaction
      summary: InCR Instantiate a new Commission Transaction
      description: InCR Instantiate a new Commission Transaction
      operationId: Initiate
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/CommissionTransaction'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommissionTransaction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Commissions/{commissionsId}/Retrieve:
    get:
      tags:
      - CR - CommissionTransaction
      summary: ReCR Retrieve details about any aspect of Commission Transaction
      description: ReCR Retrieve details about any aspect of Commission Transaction
      operationId: Retrieve
      parameters:
      - $ref: '#/components/parameters/CommissionsID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommissionTransaction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Commissions/{commissionsId}/Request:
    put:
      tags:
      - CR - CommissionTransaction
      summary: RqCR Request manual intervention or a decision with respect to Commission Transaction
      description: RqCR Request manual intervention or a decision with respect to Commission Transaction
      operationId: Request
      parameters:
      - $ref: '#/components/parameters/CommissionsID'
      requestBody:
        $ref: '#/components/requestBodies/CommissionTransaction'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommissionTransaction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Commissions/{commissionsId}/Update:
    put:
      tags:
      - CR - CommissionTransaction
      summary: UpCR Update details relating to Commission Transaction
      description: UpCR Update details relating to Commission Transaction
      operationId: Update
      parameters:
      - $ref: '#/components/parameters/CommissionsID'
      requestBody:
        $ref: '#/components/requestBodies/CommissionTransaction'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommissionTransaction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Commissions/{commissionsId}/Calculation/{calculationId}/Exchange:
    put:
      tags:
      - BQ - Calculation
      summary: EcBQ Accept, verify, etc. aspects of Calculation processing
      description: EcBQ Accept, verify, etc. aspects of Calculation processing
      operationId: ExchangeCalculation
      parameters:
      - $ref: '#/components/parameters/CommissionsID'
      - $ref: '#/components/parameters/CalculationID'
      requestBody:
        $ref: '#/components/requestBodies/Calculation'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Calculation'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Commissions/{commissionsId}/Check/{checkId}/Exchange:
    put:
      tags:
      - BQ - Check
      summary: EcBQ Accept, verify, etc. aspects of Check processing
      description: EcBQ Accept, verify, etc. aspects of Check processing
      operationId: ExchangeCheck
      parameters:
      - $ref: '#/components/parameters/CommissionsID'
      - $ref: '#/components/parameters/CheckID'
      requestBody:
        $ref: '#/components/requestBodies/Check'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Check'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Commissions/{commissionsId}/Payment/{paymentId}/Exchange:
    put:
      tags:
      - BQ - Payment
      summary: EcBQ Accept, verify, etc. aspects of Payment processing
      description: EcBQ Accept, verify, etc. aspects of Payment processing
      operationId: ExchangePayment
      parameters:
      - $ref: '#/components/parameters/CommissionsID'
      - $ref: '#/components/parameters/PaymentID'
      requestBody:
        $ref: '#/components/requestBodies/Payment'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Commissions/{commissionsId}/Check/Initiate:
    post:
      tags:
      - BQ - Check
      summary: InBQ Instantiate a new Check
      description: InBQ Instantiate a new Check
      operationId: InitiateCheck
      parameters:
      - $ref: '#/components/parameters/CommissionsID'
      requestBody:
        $ref: '#/components/requestBodies/Check'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Check'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Commissions/{commissionsId}/Calculation/{calculationId}/Retrieve:
    get:
      tags:
      - BQ - Calculation
      summary: ReBQ Retrieve details about any aspect of Calculation
      description: ReBQ Retrieve details about any aspect of Calculation
      operationId: RetrieveCalculation
      parameters:
      - $ref: '#/components/parameters/CommissionsID'
      - $ref: '#/components/parameters/CalculationID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Calculation'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Commissions/{commissionsId}/Check/{checkId}/Retrieve:
    get:
      tags:
      - BQ - Check
      summary: ReBQ Retrieve details about any aspect of Check
      description: ReBQ Retrieve details about any aspect of Check
      operationId: RetrieveCheck
      parameters:
      - $ref: '#/components/parameters/CommissionsID'
      - $ref: '#/components/parameters/CheckID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Check'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Commissions/{commissionsId}/Payment/{paymentId}/Retrieve:
    get:
      tags:
      - BQ - Payment
      summary: ReBQ Retrieve details about any aspect of Payment
      description: ReBQ Retrieve details about any aspect of Payment
      operationId: RetrievePayment
      parameters:
      - $ref: '#/components/parameters/CommissionsID'
      - $ref: '#/components/parameters/PaymentID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Commissions/{commissionsId}/Calculation/{calculationId}/Update:
    put:
      tags:
      - BQ - Calculation
      summary: UpBQ Update details relating to Calculation
      description: UpBQ Update details relating to Calculation
      operationId: UpdateCalculation
      parameters:
      - $ref: '#/components/parameters/CommissionsID'
      - $ref: '#/components/parameters/CalculationID'
      requestBody:
        $ref: '#/components/requestBodies/Calculation'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Calculation'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Commissions/{commissionsId}/Check/{checkId}/Update:
    put:
      tags:
      - BQ - Check
      summary: UpBQ Update details relating to Check
      description: UpBQ Update details relating to Check
      operationId: UpdateCheck
      parameters:
      - $ref: '#/components/parameters/CommissionsID'
      - $ref: '#/components/parameters/CheckID'
      requestBody:
        $ref: '#/components/requestBodies/Check'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Check'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Commissions/{commissionsId}/Payment/{paymentId}/Update:
    put:
      tags:
      - BQ - Payment
      summary: UpBQ Update details relating to Payment
      description: UpBQ Update details relating to Payment
      operationId: UpdatePayment
      parameters:
      - $ref: '#/components/parameters/CommissionsID'
      - $ref: '#/components/parameters/PaymentID'
      requestBody:
        $ref: '#/components/requestBodies/Payment'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    CommissionTransaction:
      type: object
      properties:
        CommissionTransactionParameterType:
          type: string
        CommissionTransactionSelectedOption:
          type: string
        CommissionTransactionStatus:
          type: string
        CommissionTransactionType:
          type: string
        CommissionTransactionTransactionType:
          type: string
        CommissionTransactionTransaction:
          type: string
    Calculation:
      type: object
      properties:
        CalculationPreconditions:
          type: string
        CalculationTaskSchedule:
          type: string
        CommissionCalculation:
          type: object
        CalculationPostconditions:
          type: string
        CalculationCommissionCalculationServiceType:
          type: string
        CalculationCommissionCalculationServiceDescription:
          type: string
        CalculationCommissionCalculationServiceInputsandOuputs:
          type: string
        CalculationCommissionCalculationServiceWorkProduct:
          type: string
        CalculationCommissionCalculationServiceName:
          type: string
    Check:
      type: object
      properties:
        CheckPreconditions:
          type: string
        CheckTaskSchedule:
          type: string
        BusinessService:
          type: object
        CheckPostconditions:
          type: string
        CheckServiceType:
          type: string
        CheckServiceDescription:
          type: string
        CheckServiceInputsandOuputs:
          type: string
        CheckServiceWorkProduct:
          type: string
        CheckServiceName:
          type: string
    CommissionsOutcome:
      type: object
      properties:
        CommissionsCalendar:
          type: string
        CommissionsCounterparty:
          type: string
        CommissionsDividend:
          type: string
        CommissionsFees:
          type: string
        CommissionsInterest:
          type: string
        CommissionsMargining:
          type: string
        CommissionsNotionalPrincipal:
          type: string
        CommissionsOptions:
          type: string
        CommissionsRates:
          type: object
        CommissionsSettlement:
          type: string
        CommissionsWorkProduct:
          type: string
    Payment:
      type: object
      properties:
        PaymentPreconditions:
          type: string
        PaymentTaskSchedule:
          type: string
        BusinessService:
          type: object
        PaymentPostconditions:
          type: string
        PaymentServiceType:
          type: string
        PaymentServiceDescription:
          type: string
        PaymentServiceInputsandOuputs:
          type: string
        PaymentServiceWorkProduct:
          type: string
        PaymentServiceName:
          type: string
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
        status:
          type: string
        message:
          type: string
  parameters:
    CommissionsID:
      name: commissionsId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    CalculationID:
      name: calculationId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    CheckID:
      name: checkId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    CommissionsOutcomeID:
      name: commissionsoutcomeId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    PaymentID:
      name: paymentId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
  requestBodies:
    CommissionTransaction:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CommissionTransaction'
    Calculation:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Calculation'
    Check:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Check'
    Payment:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Payment'
  responses:
    HTTPError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    BadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequestsError:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
...
