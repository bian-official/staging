openapi: 3.0.1
info:
  title: Counterparty Administration
  description: This Service Domain maintains key counterparty reference information used in the clearing and settlement of wholesale trading
  version: 10.0.0
servers:
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/B154/CounterpartyAdministration/10.0.0
paths:
  /CounterpartyAdministration/{counterpartyadministrationId}/Control:
    put:
      tags:
      - CR - CounterpartyDirectoryEntry
      summary: Control Counterparty Directory Entry
      description: Control Counterparty Directory Entry
      operationId: Control
      parameters:
      - $ref: '#/components/parameters/CounterpartyAdministrationID'
      requestBody:
        $ref: '#/components/requestBodies/ControlCounterpartyDirectoryEntryRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ControlCounterpartyDirectoryEntryResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CounterpartyAdministration/{counterpartyadministrationId}/Execute:
    put:
      tags:
      - CR - CounterpartyDirectoryEntry
      summary: Execute Counterparty Directory Entry
      description: Execute Counterparty Directory Entry
      operationId: Execute
      parameters:
      - $ref: '#/components/parameters/CounterpartyAdministrationID'
      requestBody:
        $ref: '#/components/requestBodies/ExecuteCounterpartyDirectoryEntryRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecuteCounterpartyDirectoryEntryResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CounterpartyAdministration/{counterpartyadministrationId}/Notify:
    get:
      tags:
      - CR - CounterpartyDirectoryEntry
      summary: Notify Counterparty Directory Entry
      description: Notify Counterparty Directory Entry
      operationId: Notify
      parameters:
      - $ref: '#/components/parameters/CounterpartyAdministrationID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotifyCounterpartyDirectoryEntryResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CounterpartyAdministration/Register:
    post:
      tags:
      - CR - CounterpartyDirectoryEntry
      summary: Register Counterparty Directory Entry
      description: Register Counterparty Directory Entry
      operationId: Register
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/RegisterCounterpartyDirectoryEntryRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterCounterpartyDirectoryEntryResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CounterpartyAdministration/{counterpartyadministrationId}/Request:
    put:
      tags:
      - CR - CounterpartyDirectoryEntry
      summary: Request Counterparty Directory Entry
      description: Request Counterparty Directory Entry
      operationId: Request
      parameters:
      - $ref: '#/components/parameters/CounterpartyAdministrationID'
      requestBody:
        $ref: '#/components/requestBodies/RequestCounterpartyDirectoryEntryRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestCounterpartyDirectoryEntryResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CounterpartyAdministration/{counterpartyadministrationId}/Retrieve:
    get:
      tags:
      - CR - CounterpartyDirectoryEntry
      summary: Retrieve Counterparty Directory Entry
      description: Retrieve Counterparty Directory Entry
      operationId: Retrieve
      parameters:
      - $ref: '#/components/parameters/CounterpartyAdministrationID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveCounterpartyDirectoryEntryResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CounterpartyAdministration/{counterpartyadministrationId}/Update:
    put:
      tags:
      - CR - CounterpartyDirectoryEntry
      summary: Update Counterparty Directory Entry
      description: Update Counterparty Directory Entry
      operationId: Update
      parameters:
      - $ref: '#/components/parameters/CounterpartyAdministrationID'
      requestBody:
        $ref: '#/components/requestBodies/UpdateCounterpartyDirectoryEntryRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCounterpartyDirectoryEntryResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  ? /CounterpartyAdministration/{counterpartyadministrationId}/CounterpartyEntityReferenceproperty/{counterpartyentityreferencepropertyId}/Execute
  : put:
      tags:
      - BQ - CounterpartyEntityReferenceproperty
      summary: Execute Counterparty Entity Reference property
      description: Execute Counterparty Entity Reference property
      operationId: ExecuteCounterpartyEntityReferenceproperty
      parameters:
      - $ref: '#/components/parameters/CounterpartyAdministrationID'
      - $ref: '#/components/parameters/CounterpartyEntityReferencepropertyID'
      requestBody:
        $ref: '#/components/requestBodies/CounterpartyEntityReferenceproperty'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CounterpartyEntityReferenceproperty'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  ? /CounterpartyAdministration/{counterpartyadministrationId}/CounterpartyPermittedTransactionproperty/{counterpartypermittedtransactionpropertyId}/Execute
  : put:
      tags:
      - BQ - CounterpartyPermittedTransactionproperty
      summary: Execute Counterparty Permitted Transaction property
      description: Execute Counterparty Permitted Transaction property
      operationId: ExecuteCounterpartyPermittedTransactionproperty
      parameters:
      - $ref: '#/components/parameters/CounterpartyAdministrationID'
      - $ref: '#/components/parameters/CounterpartyPermittedTransactionpropertyID'
      requestBody:
        $ref: '#/components/requestBodies/CounterpartyPermittedTransactionproperty'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CounterpartyPermittedTransactionproperty'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  ? /CounterpartyAdministration/{counterpartyadministrationId}/CounterpartyEntityReferenceproperty/{counterpartyentityreferencepropertyId}/Notify
  : get:
      tags:
      - BQ - CounterpartyEntityReferenceproperty
      summary: Notify Counterparty Entity Reference property
      description: Notify Counterparty Entity Reference property
      operationId: NotifyCounterpartyEntityReferenceproperty
      parameters:
      - $ref: '#/components/parameters/CounterpartyAdministrationID'
      - $ref: '#/components/parameters/CounterpartyEntityReferencepropertyID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CounterpartyEntityReferenceproperty'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  ? /CounterpartyAdministration/{counterpartyadministrationId}/CounterpartyPermittedTransactionproperty/{counterpartypermittedtransactionpropertyId}/Notify
  : get:
      tags:
      - BQ - CounterpartyPermittedTransactionproperty
      summary: Notify Counterparty Permitted Transaction property
      description: Notify Counterparty Permitted Transaction property
      operationId: NotifyCounterpartyPermittedTransactionproperty
      parameters:
      - $ref: '#/components/parameters/CounterpartyAdministrationID'
      - $ref: '#/components/parameters/CounterpartyPermittedTransactionpropertyID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CounterpartyPermittedTransactionproperty'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CounterpartyAdministration/{counterpartyadministrationId}/CounterpartyEntityReferenceproperty/Register:
    post:
      tags:
      - BQ - CounterpartyEntityReferenceproperty
      summary: Register Counterparty Entity Reference property
      description: Register Counterparty Entity Reference property
      operationId: RegisterCounterpartyEntityReferenceproperty
      parameters:
      - $ref: '#/components/parameters/CounterpartyAdministrationID'
      requestBody:
        $ref: '#/components/requestBodies/CounterpartyEntityReferenceproperty'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CounterpartyEntityReferenceproperty'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CounterpartyAdministration/{counterpartyadministrationId}/CounterpartyPermittedTransactionproperty/Register:
    post:
      tags:
      - BQ - CounterpartyPermittedTransactionproperty
      summary: Register Counterparty Permitted Transaction property
      description: Register Counterparty Permitted Transaction property
      operationId: RegisterCounterpartyPermittedTransactionproperty
      parameters:
      - $ref: '#/components/parameters/CounterpartyAdministrationID'
      requestBody:
        $ref: '#/components/requestBodies/CounterpartyPermittedTransactionproperty'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CounterpartyPermittedTransactionproperty'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  ? /CounterpartyAdministration/{counterpartyadministrationId}/CounterpartyEntityReferenceproperty/{counterpartyentityreferencepropertyId}/Request
  : put:
      tags:
      - BQ - CounterpartyEntityReferenceproperty
      summary: Request Counterparty Entity Reference property
      description: Request Counterparty Entity Reference property
      operationId: RequestCounterpartyEntityReferenceproperty
      parameters:
      - $ref: '#/components/parameters/CounterpartyAdministrationID'
      - $ref: '#/components/parameters/CounterpartyEntityReferencepropertyID'
      requestBody:
        $ref: '#/components/requestBodies/CounterpartyEntityReferenceproperty'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CounterpartyEntityReferenceproperty'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  ? /CounterpartyAdministration/{counterpartyadministrationId}/CounterpartyPermittedTransactionproperty/{counterpartypermittedtransactionpropertyId}/Request
  : put:
      tags:
      - BQ - CounterpartyPermittedTransactionproperty
      summary: Request Counterparty Permitted Transaction property
      description: Request Counterparty Permitted Transaction property
      operationId: RequestCounterpartyPermittedTransactionproperty
      parameters:
      - $ref: '#/components/parameters/CounterpartyAdministrationID'
      - $ref: '#/components/parameters/CounterpartyPermittedTransactionpropertyID'
      requestBody:
        $ref: '#/components/requestBodies/CounterpartyPermittedTransactionproperty'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CounterpartyPermittedTransactionproperty'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  ? /CounterpartyAdministration/{counterpartyadministrationId}/CounterpartyEntityReferenceproperty/{counterpartyentityreferencepropertyId}/Retrieve
  : get:
      tags:
      - BQ - CounterpartyEntityReferenceproperty
      summary: Retrieve Counterparty Entity Reference property
      description: Retrieve Counterparty Entity Reference property
      operationId: RetrieveCounterpartyEntityReferenceproperty
      parameters:
      - $ref: '#/components/parameters/CounterpartyAdministrationID'
      - $ref: '#/components/parameters/CounterpartyEntityReferencepropertyID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CounterpartyEntityReferenceproperty'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  ? /CounterpartyAdministration/{counterpartyadministrationId}/CounterpartyPermittedTransactionproperty/{counterpartypermittedtransactionpropertyId}/Retrieve
  : get:
      tags:
      - BQ - CounterpartyPermittedTransactionproperty
      summary: Retrieve Counterparty Permitted Transaction property
      description: Retrieve Counterparty Permitted Transaction property
      operationId: RetrieveCounterpartyPermittedTransactionproperty
      parameters:
      - $ref: '#/components/parameters/CounterpartyAdministrationID'
      - $ref: '#/components/parameters/CounterpartyPermittedTransactionpropertyID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CounterpartyPermittedTransactionproperty'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  ? /CounterpartyAdministration/{counterpartyadministrationId}/CounterpartyEntityReferenceproperty/{counterpartyentityreferencepropertyId}/Update
  : put:
      tags:
      - BQ - CounterpartyEntityReferenceproperty
      summary: Update Counterparty Entity Reference property
      description: Update Counterparty Entity Reference property
      operationId: UpdateCounterpartyEntityReferenceproperty
      parameters:
      - $ref: '#/components/parameters/CounterpartyAdministrationID'
      - $ref: '#/components/parameters/CounterpartyEntityReferencepropertyID'
      requestBody:
        $ref: '#/components/requestBodies/CounterpartyEntityReferenceproperty'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CounterpartyEntityReferenceproperty'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  ? /CounterpartyAdministration/{counterpartyadministrationId}/CounterpartyPermittedTransactionproperty/{counterpartypermittedtransactionpropertyId}/Update
  : put:
      tags:
      - BQ - CounterpartyPermittedTransactionproperty
      summary: Update Counterparty Permitted Transaction property
      description: Update Counterparty Permitted Transaction property
      operationId: UpdateCounterpartyPermittedTransactionproperty
      parameters:
      - $ref: '#/components/parameters/CounterpartyAdministrationID'
      - $ref: '#/components/parameters/CounterpartyPermittedTransactionpropertyID'
      requestBody:
        $ref: '#/components/requestBodies/CounterpartyPermittedTransactionproperty'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CounterpartyPermittedTransactionproperty'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    CounterpartyDirectoryEntry:
      type: object
      properties:
        CounterpartyDirectoryEntryDescription:
          type: string
        CounterpartyDirectoryEntrySchedule:
          type: object
        CounterpartyDirectoryEntryVersion:
          type: string
        CounterpartyDirectoryEntryStatus:
          type: string
        CounterpartyDirectoryEntryUsageLog:
          type: string
        CounterpartyDirectoryEntryUpdateLog:
          type: string
        CounterpartyDirectoryEntryServiceConfiguration:
          type: string
        CounterpartyDirectoryEntryReference:
          type: string
        ConterpartyReference:
          type: object
        AgreementReference:
          type: string
        FinancialTransactionReference:
          type: string
    CounterpartyEntityReferenceproperty:
      type: object
      properties:
        Preconditions:
          type: object
        Schedule:
          type: object
        VersionNumber:
          type: string
        BusinessService:
          type: object
        CounterpartyDirectoryEntryReference:
          type: string
        CounterpartyEntityReferencepropertyReference:
          type: object
        CounterpartyEntityReferencepropertyType:
          type: string
    CounterpartyPermittedTransactionproperty:
      type: object
      properties:
        Preconditions:
          type: object
        Schedule:
          type: object
        VersionNumber:
          type: string
        BusinessService:
          type: object
        CounterpartyDirectoryEntryReference:
          type: string
        CounterpartyPermittedTransactionpropertyReference:
          type: object
        CounterpartyPermittedTransactionpropertyType:
          type: string
    CounterpartyAdministrationOutcome:
      type: object
      properties:
        CounterpartyAdministrationEntry:
          type: string
        CounterpartyAdministrationWorkProduct:
          type: object
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
        status:
          type: string
        message:
          type: string
    ControlCounterpartyDirectoryEntryRequest:
      type: object
      properties:
        CounterpartyDirectoryEntry:
          type: object
          properties:
            CounterpartyDirectoryEntryDescription:
              type: string
            CounterpartyDirectoryEntrySchedule:
              type: object
            CounterpartyDirectoryEntryVersion:
              type: string
            CounterpartyDirectoryEntryStatus:
              type: string
            CounterpartyDirectoryEntryUsageLog:
              type: string
            CounterpartyDirectoryEntryUpdateLog:
              type: string
            CounterpartyDirectoryEntryServiceConfiguration:
              type: string
            CounterpartyDirectoryEntryReference:
              type: string
    ControlCounterpartyDirectoryEntryResponse:
      type: object
      properties:
        CounterpartyDirectoryEntry:
          type: object
          properties:
            CounterpartyDirectoryEntryDescription:
              type: string
            CounterpartyDirectoryEntrySchedule:
              type: object
            CounterpartyDirectoryEntryVersion:
              type: string
            CounterpartyDirectoryEntryStatus:
              type: string
            CounterpartyDirectoryEntryUsageLog:
              type: string
            CounterpartyDirectoryEntryUpdateLog:
              type: string
            CounterpartyDirectoryEntryServiceConfiguration:
              type: string
            CounterpartyDirectoryEntryReference:
              type: string
    ExecuteCounterpartyDirectoryEntryRequest:
      type: object
      properties:
        CounterpartyDirectoryEntry:
          type: object
          properties:
            CounterpartyDirectoryEntryDescription:
              type: string
            CounterpartyDirectoryEntrySchedule:
              type: object
            CounterpartyDirectoryEntryVersion:
              type: string
            CounterpartyDirectoryEntryStatus:
              type: string
            CounterpartyDirectoryEntryUsageLog:
              type: string
            CounterpartyDirectoryEntryUpdateLog:
              type: string
            CounterpartyDirectoryEntryServiceConfiguration:
              type: string
            CounterpartyDirectoryEntryReference:
              type: string
    ExecuteCounterpartyDirectoryEntryResponse:
      type: object
      properties:
        CounterpartyDirectoryEntry:
          type: object
          properties:
            CounterpartyDirectoryEntryDescription:
              type: string
            CounterpartyDirectoryEntrySchedule:
              type: object
            CounterpartyDirectoryEntryVersion:
              type: string
            CounterpartyDirectoryEntryStatus:
              type: string
            CounterpartyDirectoryEntryUsageLog:
              type: string
            CounterpartyDirectoryEntryUpdateLog:
              type: string
            CounterpartyDirectoryEntryServiceConfiguration:
              type: string
            CounterpartyDirectoryEntryReference:
              type: string
    NotifyCounterpartyDirectoryEntryRequest:
      type: object
      properties:
        CounterpartyDirectoryEntry:
          type: object
          properties:
            CounterpartyDirectoryEntryDescription:
              type: string
            CounterpartyDirectoryEntrySchedule:
              type: object
            CounterpartyDirectoryEntryVersion:
              type: string
            CounterpartyDirectoryEntryStatus:
              type: string
            CounterpartyDirectoryEntryUsageLog:
              type: string
            CounterpartyDirectoryEntryUpdateLog:
              type: string
            CounterpartyDirectoryEntryServiceConfiguration:
              type: string
            CounterpartyDirectoryEntryReference:
              type: string
    NotifyCounterpartyDirectoryEntryResponse:
      type: object
      properties:
        CounterpartyDirectoryEntry:
          type: object
          properties:
            CounterpartyDirectoryEntryDescription:
              type: string
            CounterpartyDirectoryEntrySchedule:
              type: object
            CounterpartyDirectoryEntryVersion:
              type: string
            CounterpartyDirectoryEntryStatus:
              type: string
            CounterpartyDirectoryEntryUsageLog:
              type: string
            CounterpartyDirectoryEntryUpdateLog:
              type: string
            CounterpartyDirectoryEntryServiceConfiguration:
              type: string
            CounterpartyDirectoryEntryReference:
              type: string
    RegisterCounterpartyDirectoryEntryRequest:
      type: object
      properties:
        CounterpartyDirectoryEntry:
          type: object
          properties:
            CounterpartyDirectoryEntryDescription:
              type: string
            CounterpartyDirectoryEntrySchedule:
              type: object
            CounterpartyDirectoryEntryVersion:
              type: string
            CounterpartyDirectoryEntryStatus:
              type: string
            CounterpartyDirectoryEntryUsageLog:
              type: string
            CounterpartyDirectoryEntryUpdateLog:
              type: string
            CounterpartyDirectoryEntryServiceConfiguration:
              type: string
            CounterpartyDirectoryEntryReference:
              type: string
    RegisterCounterpartyDirectoryEntryResponse:
      type: object
      properties:
        CounterpartyDirectoryEntry:
          type: object
          properties:
            CounterpartyDirectoryEntryDescription:
              type: string
            CounterpartyDirectoryEntrySchedule:
              type: object
            CounterpartyDirectoryEntryVersion:
              type: string
            CounterpartyDirectoryEntryStatus:
              type: string
            CounterpartyDirectoryEntryUsageLog:
              type: string
            CounterpartyDirectoryEntryUpdateLog:
              type: string
            CounterpartyDirectoryEntryServiceConfiguration:
              type: string
            CounterpartyDirectoryEntryReference:
              type: string
    RequestCounterpartyDirectoryEntryRequest:
      type: object
      properties:
        CounterpartyDirectoryEntry:
          type: object
          properties:
            CounterpartyDirectoryEntryDescription:
              type: string
            CounterpartyDirectoryEntrySchedule:
              type: object
            CounterpartyDirectoryEntryVersion:
              type: string
            CounterpartyDirectoryEntryStatus:
              type: string
            CounterpartyDirectoryEntryUsageLog:
              type: string
            CounterpartyDirectoryEntryUpdateLog:
              type: string
            CounterpartyDirectoryEntryServiceConfiguration:
              type: string
            CounterpartyDirectoryEntryReference:
              type: string
    RequestCounterpartyDirectoryEntryResponse:
      type: object
      properties:
        CounterpartyDirectoryEntry:
          type: object
          properties:
            CounterpartyDirectoryEntryDescription:
              type: string
            CounterpartyDirectoryEntrySchedule:
              type: object
            CounterpartyDirectoryEntryVersion:
              type: string
            CounterpartyDirectoryEntryStatus:
              type: string
            CounterpartyDirectoryEntryUsageLog:
              type: string
            CounterpartyDirectoryEntryUpdateLog:
              type: string
            CounterpartyDirectoryEntryServiceConfiguration:
              type: string
            CounterpartyDirectoryEntryReference:
              type: string
    RetrieveCounterpartyDirectoryEntryRequest:
      type: object
      properties:
        CounterpartyDirectoryEntry:
          type: object
          properties:
            CounterpartyDirectoryEntryDescription:
              type: string
            CounterpartyDirectoryEntrySchedule:
              type: object
            CounterpartyDirectoryEntryVersion:
              type: string
            CounterpartyDirectoryEntryStatus:
              type: string
            CounterpartyDirectoryEntryUsageLog:
              type: string
            CounterpartyDirectoryEntryUpdateLog:
              type: string
            CounterpartyDirectoryEntryServiceConfiguration:
              type: string
            CounterpartyDirectoryEntryReference:
              type: string
    RetrieveCounterpartyDirectoryEntryResponse:
      type: object
      properties:
        CounterpartyDirectoryEntry:
          type: object
          properties:
            CounterpartyDirectoryEntryDescription:
              type: string
            CounterpartyDirectoryEntrySchedule:
              type: object
            CounterpartyDirectoryEntryVersion:
              type: string
            CounterpartyDirectoryEntryStatus:
              type: string
            CounterpartyDirectoryEntryUsageLog:
              type: string
            CounterpartyDirectoryEntryUpdateLog:
              type: string
            CounterpartyDirectoryEntryServiceConfiguration:
              type: string
            CounterpartyDirectoryEntryReference:
              type: string
    UpdateCounterpartyDirectoryEntryRequest:
      type: object
      properties:
        CounterpartyDirectoryEntry:
          type: object
          properties:
            CounterpartyDirectoryEntryDescription:
              type: string
            CounterpartyDirectoryEntrySchedule:
              type: object
            CounterpartyDirectoryEntryVersion:
              type: string
            CounterpartyDirectoryEntryStatus:
              type: string
            CounterpartyDirectoryEntryUsageLog:
              type: string
            CounterpartyDirectoryEntryUpdateLog:
              type: string
            CounterpartyDirectoryEntryServiceConfiguration:
              type: string
            CounterpartyDirectoryEntryReference:
              type: string
    UpdateCounterpartyDirectoryEntryResponse:
      type: object
      properties:
        CounterpartyDirectoryEntry:
          type: object
          properties:
            CounterpartyDirectoryEntryDescription:
              type: string
            CounterpartyDirectoryEntrySchedule:
              type: object
            CounterpartyDirectoryEntryVersion:
              type: string
            CounterpartyDirectoryEntryStatus:
              type: string
            CounterpartyDirectoryEntryUsageLog:
              type: string
            CounterpartyDirectoryEntryUpdateLog:
              type: string
            CounterpartyDirectoryEntryServiceConfiguration:
              type: string
            CounterpartyDirectoryEntryReference:
              type: string
  parameters:
    CounterpartyAdministrationID:
      name: counterpartyadministrationId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    CounterpartyEntityReferencepropertyID:
      name: counterpartyentityreferencepropertyId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    CounterpartyPermittedTransactionpropertyID:
      name: counterpartypermittedtransactionpropertyId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    CounterpartyAdministrationOutcomeID:
      name: counterpartyadministrationoutcomeId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
  requestBodies:
    ControlCounterpartyDirectoryEntryRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ControlCounterpartyDirectoryEntryRequest'
    ExecuteCounterpartyDirectoryEntryRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExecuteCounterpartyDirectoryEntryRequest'
    NotifyCounterpartyDirectoryEntryRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotifyCounterpartyDirectoryEntryRequest'
    RegisterCounterpartyDirectoryEntryRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RegisterCounterpartyDirectoryEntryRequest'
    RequestCounterpartyDirectoryEntryRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestCounterpartyDirectoryEntryRequest'
    RetrieveCounterpartyDirectoryEntryRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveCounterpartyDirectoryEntryRequest'
    UpdateCounterpartyDirectoryEntryRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateCounterpartyDirectoryEntryRequest'
    CounterpartyEntityReferenceproperty:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CounterpartyEntityReferenceproperty'
    CounterpartyPermittedTransactionproperty:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CounterpartyPermittedTransactionproperty'
  responses:
    HTTPError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    BadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequestsError:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
...
