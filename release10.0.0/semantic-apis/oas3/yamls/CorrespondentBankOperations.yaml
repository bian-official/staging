openapi: 3.0.1
info:
  title: Correspondent Bank Operations
  description: This service domain fulfils correspondent banking arrangements between the bank and its correspondent banking partners.  This includes handling the clearing and settlement of payments to/from the correspondent banks, typically using the SWIFT payment network.
  version: 10.0.0
servers:
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/B154/CorrespondentBankOperations/10.0.0
paths:
  /CorrespondentBankOperations/Initiate:
    post:
      tags:
      - CR - CorrespondentBankOperatingSession
      summary: Initiate a correspondent fulfillment arrangement
      description: Initiate a correspondent fulfillment arrangement
      operationId: Initiate
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/CorrespondentBankOperatingSession'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CorrespondentBankOperatingSession'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CorrespondentBankOperations/{correspondentbankoperationsId}/Update:
    put:
      tags:
      - CR - CorrespondentBankOperatingSession
      summary: Update correspondent fulfillment arrangement
      description: Update correspondent fulfillment arrangement
      operationId: Update
      parameters:
      - $ref: '#/components/parameters/CorrespondentBankOperationsID'
      requestBody:
        $ref: '#/components/requestBodies/CorrespondentBankOperatingSession'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CorrespondentBankOperatingSession'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CorrespondentBankOperations/{correspondentbankoperationsId}/Retrieve:
    get:
      tags:
      - CR - CorrespondentBankOperatingSession
      summary: Retrieve a correspondent fulfillment arrangement
      description: Retrieve a correspondent fulfillment arrangement
      operationId: Retrieve
      parameters:
      - $ref: '#/components/parameters/CorrespondentBankOperationsID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveCorrespondentBankOperatingSessionResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CorrespondentBankOperations/{correspondentbankoperationsId}/Exchange:
    put:
      tags:
      - CR - CorrespondentBankOperatingSession
      summary: Exchange Correspondent Bank Operating Session
      description: Exchange Correspondent Bank Operating Session
      operationId: Exchange
      parameters:
      - $ref: '#/components/parameters/CorrespondentBankOperationsID'
      requestBody:
        $ref: '#/components/requestBodies/CorrespondentBankOperatingSession'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CorrespondentBankOperatingSession'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CorrespondentBankOperations/{correspondentbankoperationsId}/Execute:
    put:
      tags:
      - CR - CorrespondentBankOperatingSession
      summary: Execute Correspondent Bank Operating Session
      description: Execute Correspondent Bank Operating Session
      operationId: Execute
      parameters:
      - $ref: '#/components/parameters/CorrespondentBankOperationsID'
      requestBody:
        $ref: '#/components/requestBodies/CorrespondentBankOperatingSession'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CorrespondentBankOperatingSession'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CorrespondentBankOperations/{correspondentbankoperationsId}/Notify:
    get:
      tags:
      - CR - CorrespondentBankOperatingSession
      summary: Notify Correspondent Bank Operating Session
      description: Notify Correspondent Bank Operating Session
      operationId: Notify
      parameters:
      - $ref: '#/components/parameters/CorrespondentBankOperationsID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CorrespondentBankOperatingSession'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CorrespondentBankOperations/{correspondentbankoperationsId}/Request:
    put:
      tags:
      - CR - CorrespondentBankOperatingSession
      summary: Request Correspondent Bank Operating Session
      description: Request Correspondent Bank Operating Session
      operationId: Request
      parameters:
      - $ref: '#/components/parameters/CorrespondentBankOperationsID'
      requestBody:
        $ref: '#/components/requestBodies/CorrespondentBankOperatingSession'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CorrespondentBankOperatingSession'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CorrespondentBankOperations/{correspondentbankoperationsId}/InboundPayments/{inboundpaymentsId}/Update:
    put:
      tags:
      - BQ - InboundPayments
      summary: Update inbound payment transactions
      description: Update inbound payment transactions
      operationId: UpdateInboundPayments
      parameters:
      - $ref: '#/components/parameters/CorrespondentBankOperationsID'
      - $ref: '#/components/parameters/InboundPaymentsID'
      requestBody:
        $ref: '#/components/requestBodies/InboundPayments'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboundPayments'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CorrespondentBankOperations/{correspondentbankoperationsId}/InboundPayments/{inboundpaymentsId}/Execute:
    put:
      tags:
      - BQ - InboundPayments
      summary: Execute inbound payment transactions from a correspondent
      description: Execute inbound payment transactions from a correspondent
      operationId: ExecuteInboundPayments
      parameters:
      - $ref: '#/components/parameters/CorrespondentBankOperationsID'
      - $ref: '#/components/parameters/InboundPaymentsID'
      requestBody:
        $ref: '#/components/requestBodies/InboundPayments'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: boolean
                example: true
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CorrespondentBankOperations/{correspondentbankoperationsId}/InboundPayments/{inboundpaymentsId}/Retrieve:
    get:
      tags:
      - BQ - InboundPayments
      summary: Retrieve inbound payments
      description: Retrieve inbound payments
      operationId: RetrieveInboundPayments
      parameters:
      - $ref: '#/components/parameters/CorrespondentBankOperationsID'
      - $ref: '#/components/parameters/InboundPaymentsID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveInboundPaymentsResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CorrespondentBankOperations/{correspondentbankoperationsId}/OutboundPayments/{outboundpaymentsId}/Update:
    put:
      tags:
      - BQ - OutboundPayments
      summary: Update outbound payment transactions
      description: Update outbound payment transactions
      operationId: UpdateOutboundPayments
      parameters:
      - $ref: '#/components/parameters/CorrespondentBankOperationsID'
      - $ref: '#/components/parameters/OutboundPaymentsID'
      requestBody:
        $ref: '#/components/requestBodies/OutboundPayments'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutboundPayments'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CorrespondentBankOperations/{correspondentbankoperationsId}/OutboundPayments/{outboundpaymentsId}/Execute:
    put:
      tags:
      - BQ - OutboundPayments
      summary: Execute outbound payment transactions to a correspondent
      description: Execute outbound payment transactions to a correspondent
      operationId: ExecuteOutboundPayments
      parameters:
      - $ref: '#/components/parameters/CorrespondentBankOperationsID'
      - $ref: '#/components/parameters/OutboundPaymentsID'
      requestBody:
        $ref: '#/components/requestBodies/OutboundPayments'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: boolean
                example: true
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CorrespondentBankOperations/{correspondentbankoperationsId}/OutboundPayments/{outboundpaymentsId}/Retrieve:
    get:
      tags:
      - BQ - OutboundPayments
      summary: Retrieve outbound payments
      description: Retrieve outbound payments
      operationId: RetrieveOutboundPayments
      parameters:
      - $ref: '#/components/parameters/CorrespondentBankOperationsID'
      - $ref: '#/components/parameters/OutboundPaymentsID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveOutboundPaymentsResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CorrespondentBankOperations/{correspondentbankoperationsId}/ClearingandSettlement/{clearingandsettlementId}/Update:
    put:
      tags:
      - BQ - ClearingandSettlement
      summary: Update a clearing and settlement transaction
      description: Update a clearing and settlement transaction
      operationId: UpdateClearingandSettlement
      parameters:
      - $ref: '#/components/parameters/CorrespondentBankOperationsID'
      - $ref: '#/components/parameters/ClearingandSettlementID'
      requestBody:
        $ref: '#/components/requestBodies/ClearingandSettlement'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClearingandSettlement'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CorrespondentBankOperations/{correspondentbankoperationsId}/ClearingandSettlement/{clearingandsettlementId}/Request:
    put:
      tags:
      - BQ - ClearingandSettlement
      summary: Request clearing and settlement processing for a correspondent
      description: Request clearing and settlement processing for a correspondent
      operationId: RequestClearingandSettlement
      parameters:
      - $ref: '#/components/parameters/CorrespondentBankOperationsID'
      - $ref: '#/components/parameters/ClearingandSettlementID'
      requestBody:
        $ref: '#/components/requestBodies/ClearingandSettlement'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: boolean
                example: true
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CorrespondentBankOperations/{correspondentbankoperationsId}/ClearingandSettlement/{clearingandsettlementId}/Retrieve:
    get:
      tags:
      - BQ - ClearingandSettlement
      summary: Retrieve clearing and settlement activity with a correspondent
      description: Retrieve clearing and settlement activity with a correspondent
      operationId: RetrieveClearingandSettlement
      parameters:
      - $ref: '#/components/parameters/CorrespondentBankOperationsID'
      - $ref: '#/components/parameters/ClearingandSettlementID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveClearingandSettlementResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CorrespondentBankOperations/{correspondentbankoperationsId}/Reconciliation/{reconciliationId}/Update:
    put:
      tags:
      - BQ - Reconciliation
      summary: Update a reconciliation task
      description: Update a reconciliation task
      operationId: UpdateReconciliation
      parameters:
      - $ref: '#/components/parameters/CorrespondentBankOperationsID'
      - $ref: '#/components/parameters/ReconciliationID'
      requestBody:
        $ref: '#/components/requestBodies/Reconciliation'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reconciliation'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CorrespondentBankOperations/{correspondentbankoperationsId}/Reconciliation/{reconciliationId}/Request:
    put:
      tags:
      - BQ - Reconciliation
      summary: Request reconciliation processing for a correspondent
      description: Request reconciliation processing for a correspondent
      operationId: RequestReconciliation
      parameters:
      - $ref: '#/components/parameters/CorrespondentBankOperationsID'
      - $ref: '#/components/parameters/ReconciliationID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reconciliation'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CorrespondentBankOperations/{correspondentbankoperationsId}/Reconciliation/{reconciliationId}/Retrieve:
    get:
      tags:
      - BQ - Reconciliation
      summary: Retrieve reconciliation activity with a correspondent
      description: Retrieve reconciliation activity with a correspondent
      operationId: RetrieveReconciliation
      parameters:
      - $ref: '#/components/parameters/CorrespondentBankOperationsID'
      - $ref: '#/components/parameters/ReconciliationID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveReconciliationResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CorrespondentBankOperations/{correspondentbankoperationsId}/InboundPayments/{inboundpaymentsId}/Exchange:
    put:
      tags:
      - BQ - InboundPayments
      summary: Exchange Inbound Payments
      description: Exchange Inbound Payments
      operationId: ExchangeInboundPayments
      parameters:
      - $ref: '#/components/parameters/CorrespondentBankOperationsID'
      - $ref: '#/components/parameters/InboundPaymentsID'
      requestBody:
        $ref: '#/components/requestBodies/InboundPayments'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboundPayments'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CorrespondentBankOperations/{correspondentbankoperationsId}/OutboundPayments/{outboundpaymentsId}/Exchange:
    put:
      tags:
      - BQ - OutboundPayments
      summary: Exchange Outbound Payments
      description: Exchange Outbound Payments
      operationId: ExchangeOutboundPayments
      parameters:
      - $ref: '#/components/parameters/CorrespondentBankOperationsID'
      - $ref: '#/components/parameters/OutboundPaymentsID'
      requestBody:
        $ref: '#/components/requestBodies/OutboundPayments'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutboundPayments'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CorrespondentBankOperations/{correspondentbankoperationsId}/Reconciliation/{reconciliationId}/Execute:
    put:
      tags:
      - BQ - Reconciliation
      summary: Execute Reconciliation
      description: Execute Reconciliation
      operationId: ExecuteReconciliation
      parameters:
      - $ref: '#/components/parameters/CorrespondentBankOperationsID'
      - $ref: '#/components/parameters/ReconciliationID'
      requestBody:
        $ref: '#/components/requestBodies/Reconciliation'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reconciliation'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CorrespondentBankOperations/{correspondentbankoperationsId}/InboundPayments/Initiate:
    post:
      tags:
      - BQ - InboundPayments
      summary: Initiate Inbound Payments
      description: Initiate Inbound Payments
      operationId: InitiateInboundPayments
      parameters:
      - $ref: '#/components/parameters/CorrespondentBankOperationsID'
      requestBody:
        $ref: '#/components/requestBodies/InboundPayments'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboundPayments'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CorrespondentBankOperations/{correspondentbankoperationsId}/OutboundPayments/Initiate:
    post:
      tags:
      - BQ - OutboundPayments
      summary: Initiate Outbound Payments
      description: Initiate Outbound Payments
      operationId: InitiateOutboundPayments
      parameters:
      - $ref: '#/components/parameters/CorrespondentBankOperationsID'
      requestBody:
        $ref: '#/components/requestBodies/OutboundPayments'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutboundPayments'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CorrespondentBankOperations/{correspondentbankoperationsId}/InboundPayments/{inboundpaymentsId}/Notify:
    get:
      tags:
      - BQ - InboundPayments
      summary: Notify Inbound Payments
      description: Notify Inbound Payments
      operationId: NotifyInboundPayments
      parameters:
      - $ref: '#/components/parameters/CorrespondentBankOperationsID'
      - $ref: '#/components/parameters/InboundPaymentsID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboundPayments'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CorrespondentBankOperations/{correspondentbankoperationsId}/OutboundPayments/{outboundpaymentsId}/Notify:
    get:
      tags:
      - BQ - OutboundPayments
      summary: Notify Outbound Payments
      description: Notify Outbound Payments
      operationId: NotifyOutboundPayments
      parameters:
      - $ref: '#/components/parameters/CorrespondentBankOperationsID'
      - $ref: '#/components/parameters/OutboundPaymentsID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutboundPayments'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CorrespondentBankOperations/{correspondentbankoperationsId}/Reconciliation/{reconciliationId}/Notify:
    get:
      tags:
      - BQ - Reconciliation
      summary: Notify Reconciliation
      description: Notify Reconciliation
      operationId: NotifyReconciliation
      parameters:
      - $ref: '#/components/parameters/CorrespondentBankOperationsID'
      - $ref: '#/components/parameters/ReconciliationID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reconciliation'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CorrespondentBankOperations/{correspondentbankoperationsId}/InboundPayments/{inboundpaymentsId}/Request:
    put:
      tags:
      - BQ - InboundPayments
      summary: Request Inbound Payments
      description: Request Inbound Payments
      operationId: RequestInboundPayments
      parameters:
      - $ref: '#/components/parameters/CorrespondentBankOperationsID'
      - $ref: '#/components/parameters/InboundPaymentsID'
      requestBody:
        $ref: '#/components/requestBodies/InboundPayments'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboundPayments'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CorrespondentBankOperations/{correspondentbankoperationsId}/OutboundPayments/{outboundpaymentsId}/Request:
    put:
      tags:
      - BQ - OutboundPayments
      summary: Request Outbound Payments
      description: Request Outbound Payments
      operationId: RequestOutboundPayments
      parameters:
      - $ref: '#/components/parameters/CorrespondentBankOperationsID'
      - $ref: '#/components/parameters/OutboundPaymentsID'
      requestBody:
        $ref: '#/components/requestBodies/OutboundPayments'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutboundPayments'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    CorrespondentBankOperatingSession:
      type: object
      properties:
        CorrespondentBankFacilityReference:
          type: object
        CorrespondentBankFacility:
          type: string
        CorrespondentBankServicingSchedule:
          type: string
        HolidayOrTimezoneSchedule:
          type: string
        VostroAccountReference:
          type: object
        NostroMirrorAccountReference:
          type: object
    OutboundPayments:
      type: object
      properties:
        CorrespondentTransactionRecord:
          type: string
        SWIFTTransactionReference:
          type: object
        PayerBankReference:
          type: object
        PayerReference:
          type: object
        CorrespondedBankReference:
          type: object
        PayerProductInstanceReference:
          type: object
        PayeeReference:
          type: object
        PayeeProductInstanceReference:
          type: object
        PayeeBankReference:
          type: object
        SpecialInstructions:
          type: string
        Amount:
          type: string
        Currency:
          type: string
        DateType:
          type: string
        Date:
          type: string
    InboundPayments:
      type: object
      properties:
        CorrespondentTransactionRecord:
          type: string
        SWIFTTransactionReference:
          type: object
        PayerBankReference:
          type: object
        PayerReference:
          type: object
        CorrespondedBankReference:
          type: object
        PayerProductInstanceReference:
          type: object
        PayeeReference:
          type: object
        PayeeProductInstanceReference:
          type: object
        PayeeBankReference:
          type: object
        SpecialInstructions:
          type: string
        Amount:
          type: string
        Currency:
          type: string
        DateType:
          type: string
        Date:
          type: string
    ClearingandSettlement:
      type: object
      properties:
        CorrespondentBankClearingArrangementReference:
          type: object
        CorrespondentBankClearingArrangementClearingInstructions:
          type: string
        CorrespondentBankClearingArrangementSettlementInstructions:
          type: string
        MirrorNostroAccountReference:
          type: object
        ClearingTransaction:
          type: string
        SettlementTransaction:
          type: string
    Reconciliation:
      type: object
      properties:
        CorrespondentBankReconciliationTaskReference:
          type: object
        CorrespondentBankReconciliationTaskWorkProducts:
          type: string
        CorrespondentBankReconciliationTaskResult:
          type: string
    CorrespondentBankOperationsOutcome:
      type: object
      properties:
        CorrespondentBankOperationsIncident:
          type: string
        CorrespondentBankOperationsProvision:
          type: string
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
        status:
          type: string
        message:
          type: string
    RetrieveCorrespondentBankOperatingSessionResponse:
      type: object
      properties:
        CorrespondentBankOperatingSession:
          type: object
          properties:
            CorrespondentBankFacilityReference:
              type: object
            CorrespondentBankServicingSchedule:
              type: string
            HolidayOrTimezoneSchedule:
              type: string
            VostroAccountReference:
              type: object
            NostroMirrorAccountReference:
              type: object
        InboundPayments:
          type: object
          properties:
            PayerBankReference:
              type: object
            PayerReference:
              type: object
            CorrespondedBankReference:
              type: object
            PayeeReference:
              type: object
            PayeeProductInstanceReference:
              type: object
            PayeeBankReference:
              type: object
            SpecialInstructions:
              type: string
            Currency:
              type: string
            DateType:
              type: string
    RetrieveInboundPaymentsResponse:
      type: object
      properties:
        CorrespondentBankOperatingSession:
          type: object
          properties:
            CorrespondentBankFacilityReference:
              type: object
            CorrespondentBankServicingSchedule:
              type: string
            HolidayOrTimezoneSchedule:
              type: string
            VostroAccountReference:
              type: object
            NostroMirrorAccountReference:
              type: object
        InboundPayments:
          type: object
          properties:
            CorrespondentTransactionRecord:
              type: string
            SWIFTTransactionReference:
              type: object
            PayerBankReference:
              type: object
            PayerReference:
              type: object
            CorrespondedBankReference:
              type: object
            PayerProductInstanceReference:
              type: object
            PayeeReference:
              type: object
            PayeeProductInstanceReference:
              type: object
            PayeeBankReference:
              type: object
            SpecialInstructions:
              type: string
            Amount:
              type: string
            Currency:
              type: string
            DateType:
              type: string
    RetrieveOutboundPaymentsResponse:
      type: object
      properties:
        CorrespondentBankOperatingSession:
          type: object
          properties:
            CorrespondentBankFacilityReference:
              type: object
            CorrespondentBankServicingSchedule:
              type: string
            HolidayOrTimezoneSchedule:
              type: string
            VostroAccountReference:
              type: object
            NostroMirrorAccountReference:
              type: object
        OutboundPayments:
          type: object
          properties:
            CorrespondentTransactionRecord:
              type: string
            SWIFTTransactionReference:
              type: object
            PayerBankReference:
              type: object
            PayerReference:
              type: object
            CorrespondedBankReference:
              type: object
            PayerProductInstanceReference:
              type: object
            PayeeReference:
              type: object
            PayeeProductInstanceReference:
              type: object
            PayeeBankReference:
              type: object
            SpecialInstructions:
              type: string
            Amount:
              type: string
            Currency:
              type: string
            DateType:
              type: string
    RetrieveClearingandSettlementResponse:
      type: object
      properties:
        CorrespondentBankOperatingSession:
          type: object
          properties:
            CorrespondentBankFacilityReference:
              type: object
            CorrespondentBankServicingSchedule:
              type: string
            HolidayOrTimezoneSchedule:
              type: string
            VostroAccountReference:
              type: object
            NostroMirrorAccountReference:
              type: object
        ClearingandSettlement:
          type: object
          properties:
            ClearingTransaction:
              type: string
            SettlementTransaction:
              type: string
    RetrieveReconciliationResponse:
      type: object
      properties:
        CorrespondentBankOperatingSession:
          type: object
          properties:
            CorrespondentBankFacilityReference:
              type: object
            CorrespondentBankServicingSchedule:
              type: string
            HolidayOrTimezoneSchedule:
              type: string
            VostroAccountReference:
              type: object
            NostroMirrorAccountReference:
              type: object
        Reconciliation:
          type: object
          properties:
            CorrespondentBankReconciliationTaskReference:
              type: object
            CorrespondentBankReconciliationTaskWorkProducts:
              type: string
            CorrespondentBankReconciliationTaskResult:
              type: string
  parameters:
    CorrespondentBankOperationsID:
      name: correspondentbankoperationsId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    OutboundPaymentsID:
      name: outboundpaymentsId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    InboundPaymentsID:
      name: inboundpaymentsId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    ClearingandSettlementID:
      name: clearingandsettlementId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    ReconciliationID:
      name: reconciliationId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    CorrespondentBankOperationsOutcomeID:
      name: correspondentbankoperationsoutcomeId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
  requestBodies:
    CorrespondentBankOperatingSession:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CorrespondentBankOperatingSession'
    InboundPayments:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InboundPayments'
    OutboundPayments:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OutboundPayments'
    ClearingandSettlement:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ClearingandSettlement'
    Reconciliation:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Reconciliation'
  responses:
    HTTPError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    BadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequestsError:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
...
