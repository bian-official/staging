openapi: 3.0.1
info:
  title: Branch Currency Management
  description: Track cash inventory, project demand and ensure all cash is accounted for within the branch
  version: 10.0.0
servers:
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/B154/BranchCurrencyManagement/10.0.0
paths:
  /BranchCurrencyManagement/{branchcurrencymanagementId}/Capture:
    put:
      tags:
      - CR - BranchCashAllocation
      summary: CaCR Capture Branch Cash Allocation activity or event related information
      description: CaCR Capture Branch Cash Allocation activity or event related information
      operationId: Capture
      parameters:
      - $ref: '#/components/parameters/BranchCurrencyManagementID'
      requestBody:
        $ref: '#/components/requestBodies/BranchCashAllocation'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchCashAllocation'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /BranchCurrencyManagement/{branchcurrencymanagementId}/Control:
    put:
      tags:
      - CR - BranchCashAllocation
      summary: CoCR Control the processing of Branch Cash Allocation
      description: CoCR Control the processing of Branch Cash Allocation
      operationId: Control
      parameters:
      - $ref: '#/components/parameters/BranchCurrencyManagementID'
      requestBody:
        $ref: '#/components/requestBodies/BranchCashAllocation'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchCashAllocation'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /BranchCurrencyManagement/{branchcurrencymanagementId}/Exchange:
    put:
      tags:
      - CR - BranchCashAllocation
      summary: EcCR Accept, verify, etc. aspects of Branch Cash Allocation processing
      description: EcCR Accept, verify, etc. aspects of Branch Cash Allocation processing
      operationId: Exchange
      parameters:
      - $ref: '#/components/parameters/BranchCurrencyManagementID'
      requestBody:
        $ref: '#/components/requestBodies/BranchCashAllocation'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchCashAllocation'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /BranchCurrencyManagement/Initiate:
    post:
      tags:
      - CR - BranchCashAllocation
      summary: InCR Instantiate a new Branch Cash Allocation
      description: InCR Instantiate a new Branch Cash Allocation
      operationId: Initiate
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/BranchCashAllocation'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchCashAllocation'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /BranchCurrencyManagement/{branchcurrencymanagementId}/Retrieve:
    get:
      tags:
      - CR - BranchCashAllocation
      summary: ReCR Retrieve details about any aspect of Branch Cash Allocation
      description: ReCR Retrieve details about any aspect of Branch Cash Allocation
      operationId: Retrieve
      parameters:
      - $ref: '#/components/parameters/BranchCurrencyManagementID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchCashAllocation'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /BranchCurrencyManagement/{branchcurrencymanagementId}/Update:
    put:
      tags:
      - CR - BranchCashAllocation
      summary: UpCR Update details relating to Branch Cash Allocation
      description: UpCR Update details relating to Branch Cash Allocation
      operationId: Update
      parameters:
      - $ref: '#/components/parameters/BranchCurrencyManagementID'
      requestBody:
        $ref: '#/components/requestBodies/BranchCashAllocation'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchCashAllocation'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /BranchCurrencyManagement/{branchcurrencymanagementId}/InventoryAllocation/{inventoryallocationId}/Capture:
    put:
      tags:
      - BQ - InventoryAllocation
      summary: CaBQ Capture Inventory Allocation activity or event related information
      description: CaBQ Capture Inventory Allocation activity or event related information
      operationId: CaptureInventoryAllocation
      parameters:
      - $ref: '#/components/parameters/BranchCurrencyManagementID'
      - $ref: '#/components/parameters/InventoryAllocationID'
      requestBody:
        $ref: '#/components/requestBodies/InventoryAllocation'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryAllocation'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /BranchCurrencyManagement/{branchcurrencymanagementId}/InventoryAllocation/{inventoryallocationId}/Control:
    put:
      tags:
      - BQ - InventoryAllocation
      summary: CoBQ Control the processing of Inventory Allocation
      description: CoBQ Control the processing of Inventory Allocation
      operationId: ControlInventoryAllocation
      parameters:
      - $ref: '#/components/parameters/BranchCurrencyManagementID'
      - $ref: '#/components/parameters/InventoryAllocationID'
      requestBody:
        $ref: '#/components/requestBodies/InventoryAllocation'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryAllocation'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /BranchCurrencyManagement/{branchcurrencymanagementId}/InventoryAllocation/{inventoryallocationId}/Exchange:
    put:
      tags:
      - BQ - InventoryAllocation
      summary: EcBQ Accept, verify, etc. aspects of Inventory Allocation processing
      description: EcBQ Accept, verify, etc. aspects of Inventory Allocation processing
      operationId: ExchangeInventoryAllocation
      parameters:
      - $ref: '#/components/parameters/BranchCurrencyManagementID'
      - $ref: '#/components/parameters/InventoryAllocationID'
      requestBody:
        $ref: '#/components/requestBodies/InventoryAllocation'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryAllocation'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /BranchCurrencyManagement/{branchcurrencymanagementId}/InventoryAllocation/Initiate:
    post:
      tags:
      - BQ - InventoryAllocation
      summary: InBQ Instantiate a new Inventory Allocation
      description: InBQ Instantiate a new Inventory Allocation
      operationId: InitiateInventoryAllocation
      parameters:
      - $ref: '#/components/parameters/BranchCurrencyManagementID'
      requestBody:
        $ref: '#/components/requestBodies/InventoryAllocation'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryAllocation'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /BranchCurrencyManagement/{branchcurrencymanagementId}/InventoryAllocation/{inventoryallocationId}/Retrieve:
    get:
      tags:
      - BQ - InventoryAllocation
      summary: ReBQ Retrieve details about any aspect of Inventory Allocation
      description: ReBQ Retrieve details about any aspect of Inventory Allocation
      operationId: RetrieveInventoryAllocation
      parameters:
      - $ref: '#/components/parameters/BranchCurrencyManagementID'
      - $ref: '#/components/parameters/InventoryAllocationID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryAllocation'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /BranchCurrencyManagement/{branchcurrencymanagementId}/InventoryAllocation/{inventoryallocationId}/Update:
    put:
      tags:
      - BQ - InventoryAllocation
      summary: UpBQ Update details relating to Inventory Allocation
      description: UpBQ Update details relating to Inventory Allocation
      operationId: UpdateInventoryAllocation
      parameters:
      - $ref: '#/components/parameters/BranchCurrencyManagementID'
      - $ref: '#/components/parameters/InventoryAllocationID'
      requestBody:
        $ref: '#/components/requestBodies/InventoryAllocation'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryAllocation'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    BranchCashAllocation:
      type: object
      properties:
        BranchCashAllocationParameterType:
          type: string
        BranchCashAllocationSelectedOption:
          type: string
        BranchCashAllocation<SubjectArea>Type:
          type: string
        BranchCashAllocationDescription:
          type: string
        BranchCashAllocationRequest:
          type: string
        BranchCashAllocationSchedule:
          type: string
        BranchCashAllocationStatus:
          type: string
        BranchCashAllocationReference:
          type: object
        BranchCashAllocationCustomerReference:
          type: object
        BranchCashAllocationCurrency:
          type: string
        BranchCashAllocationRegulationReference:
          type: object
        BranchCashAllocationRegulationType:
          type: string
        BranchCashAllocationJurisdiction:
          type: string
        BranchCashAllocationBookingLocation:
          type: string
        BranchCashAllocationAccountType:
          type: string
        BranchCashAllocationAccountReference:
          type: object
        BranchCashAllocationInstance:
          type: string
    BranchCurrencyManagementOutcome:
      type: object
      properties:
        BranchCurrencyManagementAllocation:
          type: string
        BranchCurrencyManagementWorkProduct:
          type: string
    InventoryAllocation:
      type: object
      properties:
        InventoryAllocationPreconditions:
          type: string
        InventoryAllocationAllocationSchedule:
          type: string
        CashInventoryAllocation:
          type: object
        CashInventoryAllocationServiceType:
          type: string
        CashInventoryAllocationServiceDescription:
          type: string
        CashInventoryAllocationServiceInputsandOuputs:
          type: string
        CashInventoryAllocationServiceWorkProduct:
          type: string
        CashInventoryAllocationServiceName:
          type: string
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
        status:
          type: string
        message:
          type: string
  parameters:
    BranchCurrencyManagementID:
      name: branchcurrencymanagementId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    BranchCurrencyManagementOutcomeID:
      name: branchcurrencymanagementoutcomeId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    InventoryAllocationID:
      name: inventoryallocationId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
  requestBodies:
    BranchCashAllocation:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BranchCashAllocation'
    InventoryAllocation:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InventoryAllocation'
  responses:
    HTTPError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    BadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequestsError:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
...
