openapi: 3.0.1
info:
  title: Syndicate Management
  description: This Service Domain manages syndicate membership and compliance
  version: 10.0.0
servers:
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/B154/SyndicateManagement/10.0.0
paths:
  /SyndicateManagement/{syndicatemanagementId}/Control:
    put:
      tags:
      - CR - SyndicateMembership
      summary: Control Syndicate Membership
      description: Control Syndicate Membership
      operationId: Control
      parameters:
      - $ref: '#/components/parameters/SyndicateManagementID'
      requestBody:
        $ref: '#/components/requestBodies/SyndicateMembership'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyndicateMembership'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SyndicateManagement/{syndicatemanagementId}/Grant:
    put:
      tags:
      - CR - SyndicateMembership
      summary: Grant Syndicate Membership
      description: Grant Syndicate Membership
      operationId: Grant
      parameters:
      - $ref: '#/components/parameters/SyndicateManagementID'
      requestBody:
        $ref: '#/components/requestBodies/SyndicateMembership'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyndicateMembership'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SyndicateManagement/{syndicatemanagementId}/Notify:
    get:
      tags:
      - CR - SyndicateMembership
      summary: Notify Syndicate Membership
      description: Notify Syndicate Membership
      operationId: Notify
      parameters:
      - $ref: '#/components/parameters/SyndicateManagementID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyndicateMembership'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SyndicateManagement/Register:
    post:
      tags:
      - CR - SyndicateMembership
      summary: Register Syndicate Membership
      description: Register Syndicate Membership
      operationId: Register
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/SyndicateMembership'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyndicateMembership'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SyndicateManagement/{syndicatemanagementId}/Request:
    put:
      tags:
      - CR - SyndicateMembership
      summary: Request Syndicate Membership
      description: Request Syndicate Membership
      operationId: Request
      parameters:
      - $ref: '#/components/parameters/SyndicateManagementID'
      requestBody:
        $ref: '#/components/requestBodies/SyndicateMembership'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyndicateMembership'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SyndicateManagement/{syndicatemanagementId}/Retrieve:
    get:
      tags:
      - CR - SyndicateMembership
      summary: Retrieve Syndicate Membership
      description: Retrieve Syndicate Membership
      operationId: Retrieve
      parameters:
      - $ref: '#/components/parameters/SyndicateManagementID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyndicateMembership'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SyndicateManagement/{syndicatemanagementId}/Update:
    put:
      tags:
      - CR - SyndicateMembership
      summary: Update Syndicate Membership
      description: Update Syndicate Membership
      operationId: Update
      parameters:
      - $ref: '#/components/parameters/SyndicateManagementID'
      requestBody:
        $ref: '#/components/requestBodies/SyndicateMembership'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyndicateMembership'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SyndicateManagement/{syndicatemanagementId}/SyndicateComplianceClauses/{syndicatecomplianceclausesId}/Notify:
    get:
      tags:
      - BQ - SyndicateComplianceClauses
      summary: Notify Syndicate Compliance Clauses
      description: Notify Syndicate Compliance Clauses
      operationId: NotifySyndicateComplianceClauses
      parameters:
      - $ref: '#/components/parameters/SyndicateManagementID'
      - $ref: '#/components/parameters/SyndicateComplianceClausesID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyndicateComplianceClauses'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SyndicateManagement/{syndicatemanagementId}/SyndicateEligibilityClauses/{syndicateeligibilityclausesId}/Notify:
    get:
      tags:
      - BQ - SyndicateEligibilityClauses
      summary: Notify Syndicate Eligibility Clauses
      description: Notify Syndicate Eligibility Clauses
      operationId: NotifySyndicateEligibilityClauses
      parameters:
      - $ref: '#/components/parameters/SyndicateManagementID'
      - $ref: '#/components/parameters/SyndicateEligibilityClausesID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyndicateEligibilityClauses'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SyndicateManagement/{syndicatemanagementId}/SyndicateComplianceClauses/{syndicatecomplianceclausesId}/Retrieve:
    get:
      tags:
      - BQ - SyndicateComplianceClauses
      summary: Retrieve Syndicate Compliance Clauses
      description: Retrieve Syndicate Compliance Clauses
      operationId: RetrieveSyndicateComplianceClauses
      parameters:
      - $ref: '#/components/parameters/SyndicateManagementID'
      - $ref: '#/components/parameters/SyndicateComplianceClausesID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyndicateComplianceClauses'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SyndicateManagement/{syndicatemanagementId}/SyndicateEligibilityClauses/{syndicateeligibilityclausesId}/Retrieve:
    get:
      tags:
      - BQ - SyndicateEligibilityClauses
      summary: Retrieve Syndicate Eligibility Clauses
      description: Retrieve Syndicate Eligibility Clauses
      operationId: RetrieveSyndicateEligibilityClauses
      parameters:
      - $ref: '#/components/parameters/SyndicateManagementID'
      - $ref: '#/components/parameters/SyndicateEligibilityClausesID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyndicateEligibilityClauses'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SyndicateManagement/{syndicatemanagementId}/SyndicateComplianceClauses/{syndicatecomplianceclausesId}/Update:
    put:
      tags:
      - BQ - SyndicateComplianceClauses
      summary: Update Syndicate Compliance Clauses
      description: Update Syndicate Compliance Clauses
      operationId: UpdateSyndicateComplianceClauses
      parameters:
      - $ref: '#/components/parameters/SyndicateManagementID'
      - $ref: '#/components/parameters/SyndicateComplianceClausesID'
      requestBody:
        $ref: '#/components/requestBodies/SyndicateComplianceClauses'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyndicateComplianceClauses'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /SyndicateManagement/{syndicatemanagementId}/SyndicateEligibilityClauses/{syndicateeligibilityclausesId}/Update:
    put:
      tags:
      - BQ - SyndicateEligibilityClauses
      summary: Update Syndicate Eligibility Clauses
      description: Update Syndicate Eligibility Clauses
      operationId: UpdateSyndicateEligibilityClauses
      parameters:
      - $ref: '#/components/parameters/SyndicateManagementID'
      - $ref: '#/components/parameters/SyndicateEligibilityClausesID'
      requestBody:
        $ref: '#/components/requestBodies/SyndicateEligibilityClauses'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyndicateEligibilityClauses'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    SyndicateMembership:
      type: object
      properties:
        SyndicateMembershipParameterType:
          type: string
          description: A Classification value that distinguishes between enrollments according to the type of business services and/or type of concern defined within Syndicate Membership
        SyndicateMembershipSelectedOption:
          type: string
          description: A selected optional business service as subject matter of Syndicate Membership
        SyndicateMembershipRequest:
          type: string
          description: Request to enroll Syndicate Membership
        SyndicateMembershipPlan:
          type: string
          description: Reference to  Syndicate Membership Plan
        SyndicateMembershipObligation:
          type: string
          description: Liability or duty to do something under the terms of Syndicate Membership
        SyndicateMembershipEntitlement:
          type: string
          description: Right to do something under the terms of Syndicate Membership
        SyndicateMembershipReference:
          type: object
          description: An unique reference to an item or an occurrence of Syndicate Membership
    SyndicateComplianceClauses:
      type: object
      properties:
        SyndicateMembershipReference:
          type: object
          description: Reference to Syndicate Compliance Clauses
        SyndicateComplianceClausesReference:
          type: object
          description: Reference to Syndicate Compliance Clauses
        SyndicateComplianceClausesType:
          type: string
          description: The type of Syndicate Compliance Clauses
        BusinessService:
          type: object
          description: The Syndicate Compliance Clauses specific Business Service
        BusinessUnit/EmployeeReference:
          type: object
          description: The operating unit/employee responsible for governing Syndicate Compliance Clauses by applying the Syndicate Compliance Clauses clause
        Postconditions:
          type: object
          description: The completion status once Syndicate Compliance Clauses has been governed by applying the Syndicate Compliance Clauses clause
        Preconditions:
          type: object
          description: The required status/situation before Syndicate Compliance Clauses can be governed by applying the Syndicate Compliance Clauses clause
        Schedule:
          type: object
          description: The timing and key actions/milestones involved in governing Syndicate Compliance Clauses by applying the Syndicate Compliance Clauses clause
    SyndicateEligibilityClauses:
      type: object
      properties:
        SyndicateMembershipReference:
          type: object
          description: Reference to Syndicate Eligibility Clauses
        SyndicateEligibilityClausesReference:
          type: object
          description: Reference to Syndicate Eligibility Clauses
        SyndicateEligibilityClausesType:
          type: string
          description: The type of Syndicate Eligibility Clauses
        BusinessService:
          type: object
          description: The Syndicate Eligibility Clauses specific Business Service
        BusinessUnit/EmployeeReference:
          type: object
          description: The operating unit/employee responsible for governing Syndicate Eligibility Clauses by applying the Syndicate Eligibility Clauses clause
        Postconditions:
          type: object
          description: The completion status once Syndicate Eligibility Clauses has been governed by applying the Syndicate Eligibility Clauses clause
        Preconditions:
          type: object
          description: The required status/situation before Syndicate Eligibility Clauses can be governed by applying the Syndicate Eligibility Clauses clause
        Schedule:
          type: object
          description: The timing and key actions/milestones involved in governing Syndicate Eligibility Clauses by applying the Syndicate Eligibility Clauses clause
    SyndicateManagementOutcome:
      type: object
      properties:
        SyndicateManagementTask:
          type: string
          description: ''
        SyndicateManagementEntry:
          type: string
          description: ''
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          description: NA
        status:
          type: string
          description: NA
        message:
          type: string
          description: NA
  parameters:
    SyndicateManagementID:
      name: syndicatemanagementId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    SyndicateComplianceClausesID:
      name: syndicatecomplianceclausesId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    SyndicateEligibilityClausesID:
      name: syndicateeligibilityclausesId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    SyndicateManagementOutcomeID:
      name: syndicatemanagementoutcomeId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
  requestBodies:
    SyndicateMembership:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SyndicateMembership'
    SyndicateComplianceClauses:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SyndicateComplianceClauses'
    SyndicateEligibilityClauses:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SyndicateEligibilityClauses'
  responses:
    HTTPError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    BadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequestsError:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
...
