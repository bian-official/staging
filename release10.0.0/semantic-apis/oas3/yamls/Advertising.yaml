openapi: 3.0.1
info:
  title: Advertising
  description: Develop the plan for and oversee advertising campaign activity, including budget and resource management
  version: 10.0.0
servers:
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/B154/Advertising/10.0.0
paths:
  /Advertising/Create:
    post:
      tags:
      - CR - AdvertisingCampaignManagementPlan
      summary: CrCR Create and invoke the advertising campaign management plan
      description: CrCR Create and invoke the advertising campaign management plan
      operationId: Create
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/AdvertisingCampaignManagementPlan'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvertisingCampaignManagementPlan'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Advertising/{advertisingId}/Update:
    put:
      tags:
      - CR - AdvertisingCampaignManagementPlan
      summary: UpCR Update details of the advertising campaign management plan
      description: UpCR Update details of the advertising campaign management plan
      operationId: Update
      parameters:
      - $ref: '#/components/parameters/AdvertisingID'
      requestBody:
        $ref: '#/components/requestBodies/AdvertisingCampaignManagementPlan'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvertisingCampaignManagementPlan'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Advertising/{advertisingId}/Request:
    put:
      tags:
      - CR - AdvertisingCampaignManagementPlan
      summary: RqCR Request manual intervention in the campaign plan (e.g. rework campaign priorities)
      description: RqCR Request manual intervention in the campaign plan (e.g. rework campaign priorities)
      operationId: Request
      parameters:
      - $ref: '#/components/parameters/AdvertisingID'
      requestBody:
        $ref: '#/components/requestBodies/AdvertisingCampaignManagementPlan'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvertisingCampaignManagementPlan'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Advertising/{advertisingId}/Retrieve:
    get:
      tags:
      - CR - AdvertisingCampaignManagementPlan
      summary: ReCR Retrieve details about the advertising campaign management plan
      description: ReCR Retrieve details about the advertising campaign management plan
      operationId: Retrieve
      parameters:
      - $ref: '#/components/parameters/AdvertisingID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvertisingCampaignManagementPlan'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Advertising/{advertisingId}/MarketTracking/{markettrackingId}/Update:
    put:
      tags:
      - BQ - MarketTracking
      summary: UpBQ Update details of the market tracking activity (e.g. change source)
      description: UpBQ Update details of the market tracking activity (e.g. change source)
      operationId: UpdateMarketTracking
      parameters:
      - $ref: '#/components/parameters/AdvertisingID'
      - $ref: '#/components/parameters/MarketTrackingID'
      requestBody:
        $ref: '#/components/requestBodies/MarketTracking'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketTracking'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Advertising/{advertisingId}/MarketTracking/{markettrackingId}/Execute:
    put:
      tags:
      - BQ - MarketTracking
      summary: ExBQ Execute an automated task for the tracking activity (e.g. upload new data)
      description: ExBQ Execute an automated task for the tracking activity (e.g. upload new data)
      operationId: ExecuteMarketTracking
      parameters:
      - $ref: '#/components/parameters/AdvertisingID'
      - $ref: '#/components/parameters/MarketTrackingID'
      requestBody:
        $ref: '#/components/requestBodies/MarketTracking'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketTracking'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Advertising/{advertisingId}/MarketTracking/{markettrackingId}/Request:
    put:
      tags:
      - BQ - MarketTracking
      summary: RqBQ Request manual intervention in the market tracking (e.g. request reworking of the analysis)
      description: RqBQ Request manual intervention in the market tracking (e.g. request reworking of the analysis)
      operationId: RequestMarketTracking
      parameters:
      - $ref: '#/components/parameters/AdvertisingID'
      - $ref: '#/components/parameters/MarketTrackingID'
      requestBody:
        $ref: '#/components/requestBodies/MarketTracking'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketTracking'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Advertising/{advertisingId}/MarketTracking/{markettrackingId}/Retrieve:
    get:
      tags:
      - BQ - MarketTracking
      summary: ReBQ Retrieve details about the market tracking activity
      description: ReBQ Retrieve details about the market tracking activity
      operationId: RetrieveMarketTracking
      parameters:
      - $ref: '#/components/parameters/AdvertisingID'
      - $ref: '#/components/parameters/MarketTrackingID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketTracking'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Advertising/{advertisingId}/PerformanceAssessment/Create:
    post:
      tags:
      - BQ - PerformanceAssessment
      summary: CrBQ Create a performance assessment of the advertising campaign portfolio
      description: CrBQ Create a performance assessment of the advertising campaign portfolio
      operationId: CreatePerformanceAssessment
      parameters:
      - $ref: '#/components/parameters/AdvertisingID'
      requestBody:
        $ref: '#/components/requestBodies/PerformanceAssessment'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerformanceAssessment'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Advertising/{advertisingId}/PerformanceAssessment/{performanceassessmentId}/Update:
    put:
      tags:
      - BQ - PerformanceAssessment
      summary: UpBQ Update details of a advertising campaign portfolio assessment
      description: UpBQ Update details of a advertising campaign portfolio assessment
      operationId: UpdatePerformanceAssessment
      parameters:
      - $ref: '#/components/parameters/AdvertisingID'
      - $ref: '#/components/parameters/PerformanceAssessmentID'
      requestBody:
        $ref: '#/components/requestBodies/PerformanceAssessment'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerformanceAssessment'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Advertising/{advertisingId}/PerformanceAssessment/{performanceassessmentId}/Execute:
    put:
      tags:
      - BQ - PerformanceAssessment
      summary: ExBQ Execute an automated action for a performance assessment (e.g. trigger assessment report)
      description: ExBQ Execute an automated action for a performance assessment (e.g. trigger assessment report)
      operationId: ExecutePerformanceAssessment
      parameters:
      - $ref: '#/components/parameters/AdvertisingID'
      - $ref: '#/components/parameters/PerformanceAssessmentID'
      requestBody:
        $ref: '#/components/requestBodies/PerformanceAssessment'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerformanceAssessment'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Advertising/{advertisingId}/PerformanceAssessment/{performanceassessmentId}/Request:
    put:
      tags:
      - BQ - PerformanceAssessment
      summary: RqBQ Request manual intervention to a performance assessment (e.g. request specific analysis)
      description: RqBQ Request manual intervention to a performance assessment (e.g. request specific analysis)
      operationId: RequestPerformanceAssessment
      parameters:
      - $ref: '#/components/parameters/AdvertisingID'
      - $ref: '#/components/parameters/PerformanceAssessmentID'
      requestBody:
        $ref: '#/components/requestBodies/PerformanceAssessment'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerformanceAssessment'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Advertising/{advertisingId}/PerformanceAssessment/{performanceassessmentId}/Retrieve:
    get:
      tags:
      - BQ - PerformanceAssessment
      summary: ReBQ Retrieve details about advertising campaign performance assessment activity
      description: ReBQ Retrieve details about advertising campaign performance assessment activity
      operationId: RetrievePerformanceAssessment
      parameters:
      - $ref: '#/components/parameters/AdvertisingID'
      - $ref: '#/components/parameters/PerformanceAssessmentID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerformanceAssessment'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Advertising/{advertisingId}/CampaignDirection/Create:
    post:
      tags:
      - BQ - CampaignDirection
      summary: CrBQ Create advertising campaign direction schedules (e.g. create the schedules for design or execution activity)
      description: CrBQ Create advertising campaign direction schedules (e.g. create the schedules for design or execution activity)
      operationId: CreateCampaignDirection
      parameters:
      - $ref: '#/components/parameters/AdvertisingID'
      requestBody:
        $ref: '#/components/requestBodies/CampaignDirection'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignDirection'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Advertising/{advertisingId}/CampaignDirection/{campaigndirectionId}/Update:
    put:
      tags:
      - BQ - CampaignDirection
      summary: UpBQ Update the advertising campaign design and execution schedules
      description: UpBQ Update the advertising campaign design and execution schedules
      operationId: UpdateCampaignDirection
      parameters:
      - $ref: '#/components/parameters/AdvertisingID'
      - $ref: '#/components/parameters/CampaignDirectionID'
      requestBody:
        $ref: '#/components/requestBodies/CampaignDirection'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignDirection'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Advertising/{advertisingId}/CampaignDirection/{campaigndirectionId}/Request:
    put:
      tags:
      - BQ - CampaignDirection
      summary: RqBQ Request manual intervention to the schedules (e.g. rework priorities)
      description: RqBQ Request manual intervention to the schedules (e.g. rework priorities)
      operationId: RequestCampaignDirection
      parameters:
      - $ref: '#/components/parameters/AdvertisingID'
      - $ref: '#/components/parameters/CampaignDirectionID'
      requestBody:
        $ref: '#/components/requestBodies/CampaignDirection'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignDirection'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /Advertising/{advertisingId}/CampaignDirection/{campaigndirectionId}/Retrieve:
    get:
      tags:
      - BQ - CampaignDirection
      summary: ReBQ Retrieve details about advertising campaign design and execution direction and scheduling activities
      description: ReBQ Retrieve details about advertising campaign design and execution direction and scheduling activities
      operationId: RetrieveCampaignDirection
      parameters:
      - $ref: '#/components/parameters/AdvertisingID'
      - $ref: '#/components/parameters/CampaignDirectionID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignDirection'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    AdvertisingCampaignManagementPlan:
      type: object
      properties:
        AdvertisingCampaignPortfolio:
          type: string
        AdvertisingCampaignType:
          type: string
        AdvertisingCampaignDescription:
          type: string
        AdvertisingCampaignMetrics:
          type: string
        AdvertisingCampaignMetricDefinition:
          type: string
        AdvertisingCampaignMetricGoal:
          type: string
        AdvertisingCampaignPerformanceRecord:
          type: string
        AdvertisingCampaignProcedureInstanceReference:
          type: object
        AdvertisingCampaignExecutionPlan:
          type: string
        EmployeeOrBusinessUnitReference:
          type: object
        AdvertisingCampaignDuration:
          type: string
        AdvertisingCampaignProcedureResult:
          type: string
    PerformanceAssessment:
      type: object
      properties:
        PerformanceAssessmentWorkTaskType:
          type: string
        PerformanceAssessmentWorkTask:
          type: string
        PerformanceAssessmentWorkTaskWorkProducts:
          type: string
        PerformanceAssessmentWorkTaskResult:
          type: string
        PerformanceAssessmentWorkTaskDate-Time:
          type: string
    CampaignDirection:
      type: object
      properties:
        AdvertisingCampaignDevelopmentSchedule:
          type: string
        AdvertisingCampaignExecutionSchedule:
          type: string
    MarketTracking:
      type: object
      properties:
        MarketTrackingWorkTaskType:
          type: string
        MarketTrackingWorkTask:
          type: string
        GeneralMarketResearchDirectoryEntryInstanceReference:
          type: object
        MarketTrackingWorkTaskWorkProducts:
          type: string
        MarketTrackingWorkTaskResult:
          type: string
        MarketTrackingWorkTaskDate-Time:
          type: string
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
        status:
          type: string
        message:
          type: string
  parameters:
    AdvertisingID:
      name: advertisingId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    PerformanceAssessmentID:
      name: performanceassessmentId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    CampaignDirectionID:
      name: campaigndirectionId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    MarketTrackingID:
      name: markettrackingId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
  requestBodies:
    AdvertisingCampaignManagementPlan:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AdvertisingCampaignManagementPlan'
    MarketTracking:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MarketTracking'
    PerformanceAssessment:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PerformanceAssessment'
    CampaignDirection:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CampaignDirection'
  responses:
    HTTPError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    BadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequestsError:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
...
