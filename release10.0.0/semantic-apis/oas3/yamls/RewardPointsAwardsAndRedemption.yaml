openapi: 3.0.1
info:
  title: Reward Points Awards And Redemption
  description: Handle the allocation and redemption of rewards points for customer transaction activity
  version: 10.0.0
servers:
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/B154/RewardPointsAwardsAndRedemption/10.0.0
paths:
  /RewardPointsAwardsAndRedemption/{rewardpointsawardsandredemptionId}/Exchange:
    put:
      tags:
      - CR - RewardPointsTransaction
      summary: EcCR Accept, verify, etc. aspects of Reward Points Transaction processing
      description: EcCR Accept, verify, etc. aspects of Reward Points Transaction processing
      operationId: Exchange
      parameters:
      - $ref: '#/components/parameters/RewardPointsAwardsAndRedemptionID'
      requestBody:
        $ref: '#/components/requestBodies/RewardPointsTransaction'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardPointsTransaction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /RewardPointsAwardsAndRedemption/{rewardpointsawardsandredemptionId}/Execute:
    put:
      tags:
      - CR - RewardPointsTransaction
      summary: ExCR Execute an available automated action for Reward Points Transaction
      description: ExCR Execute an available automated action for Reward Points Transaction
      operationId: Execute
      parameters:
      - $ref: '#/components/parameters/RewardPointsAwardsAndRedemptionID'
      requestBody:
        $ref: '#/components/requestBodies/RewardPointsTransaction'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardPointsTransaction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /RewardPointsAwardsAndRedemption/Initiate:
    post:
      tags:
      - CR - RewardPointsTransaction
      summary: InCR Instantiate a new Reward Points Transaction
      description: InCR Instantiate a new Reward Points Transaction
      operationId: Initiate
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/RewardPointsTransaction'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardPointsTransaction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /RewardPointsAwardsAndRedemption/{rewardpointsawardsandredemptionId}/Retrieve:
    get:
      tags:
      - CR - RewardPointsTransaction
      summary: ReCR Retrieve details about any aspect of Reward Points Transaction
      description: ReCR Retrieve details about any aspect of Reward Points Transaction
      operationId: Retrieve
      parameters:
      - $ref: '#/components/parameters/RewardPointsAwardsAndRedemptionID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardPointsTransaction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /RewardPointsAwardsAndRedemption/{rewardpointsawardsandredemptionId}/Request:
    put:
      tags:
      - CR - RewardPointsTransaction
      summary: RqCR Request manual intervention or a decision with respect to Reward Points Transaction
      description: RqCR Request manual intervention or a decision with respect to Reward Points Transaction
      operationId: Request
      parameters:
      - $ref: '#/components/parameters/RewardPointsAwardsAndRedemptionID'
      requestBody:
        $ref: '#/components/requestBodies/RewardPointsTransaction'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardPointsTransaction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /RewardPointsAwardsAndRedemption/{rewardpointsawardsandredemptionId}/Update:
    put:
      tags:
      - CR - RewardPointsTransaction
      summary: UpCR Update details relating to Reward Points Transaction
      description: UpCR Update details relating to Reward Points Transaction
      operationId: Update
      parameters:
      - $ref: '#/components/parameters/RewardPointsAwardsAndRedemptionID'
      requestBody:
        $ref: '#/components/requestBodies/RewardPointsTransaction'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardPointsTransaction'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /RewardPointsAwardsAndRedemption/{rewardpointsawardsandredemptionId}/Award/{awardId}/Exchange:
    put:
      tags:
      - BQ - Award
      summary: EcBQ Accept, verify, etc. aspects of Award processing
      description: EcBQ Accept, verify, etc. aspects of Award processing
      operationId: ExchangeAward
      parameters:
      - $ref: '#/components/parameters/RewardPointsAwardsAndRedemptionID'
      - $ref: '#/components/parameters/AwardID'
      requestBody:
        $ref: '#/components/requestBodies/Award'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Award'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /RewardPointsAwardsAndRedemption/{rewardpointsawardsandredemptionId}/Redemption/{redemptionId}/Exchange:
    put:
      tags:
      - BQ - Redemption
      summary: EcBQ Accept, verify, etc. aspects of Redemption processing
      description: EcBQ Accept, verify, etc. aspects of Redemption processing
      operationId: ExchangeRedemption
      parameters:
      - $ref: '#/components/parameters/RewardPointsAwardsAndRedemptionID'
      - $ref: '#/components/parameters/RedemptionID'
      requestBody:
        $ref: '#/components/requestBodies/Redemption'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Redemption'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /RewardPointsAwardsAndRedemption/{rewardpointsawardsandredemptionId}/Award/Initiate:
    post:
      tags:
      - BQ - Award
      summary: InBQ Instantiate a new Award
      description: InBQ Instantiate a new Award
      operationId: InitiateAward
      parameters:
      - $ref: '#/components/parameters/RewardPointsAwardsAndRedemptionID'
      requestBody:
        $ref: '#/components/requestBodies/Award'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Award'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /RewardPointsAwardsAndRedemption/{rewardpointsawardsandredemptionId}/Redemption/Initiate:
    post:
      tags:
      - BQ - Redemption
      summary: InBQ Instantiate a new Redemption
      description: InBQ Instantiate a new Redemption
      operationId: InitiateRedemption
      parameters:
      - $ref: '#/components/parameters/RewardPointsAwardsAndRedemptionID'
      requestBody:
        $ref: '#/components/requestBodies/Redemption'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Redemption'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /RewardPointsAwardsAndRedemption/{rewardpointsawardsandredemptionId}/Award/{awardId}/Retrieve:
    get:
      tags:
      - BQ - Award
      summary: ReBQ Retrieve details about any aspect of Award
      description: ReBQ Retrieve details about any aspect of Award
      operationId: RetrieveAward
      parameters:
      - $ref: '#/components/parameters/RewardPointsAwardsAndRedemptionID'
      - $ref: '#/components/parameters/AwardID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Award'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /RewardPointsAwardsAndRedemption/{rewardpointsawardsandredemptionId}/Redemption/{redemptionId}/Retrieve:
    get:
      tags:
      - BQ - Redemption
      summary: ReBQ Retrieve details about any aspect of Redemption
      description: ReBQ Retrieve details about any aspect of Redemption
      operationId: RetrieveRedemption
      parameters:
      - $ref: '#/components/parameters/RewardPointsAwardsAndRedemptionID'
      - $ref: '#/components/parameters/RedemptionID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Redemption'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /RewardPointsAwardsAndRedemption/{rewardpointsawardsandredemptionId}/Award/{awardId}/Update:
    put:
      tags:
      - BQ - Award
      summary: UpBQ Update details relating to Award
      description: UpBQ Update details relating to Award
      operationId: UpdateAward
      parameters:
      - $ref: '#/components/parameters/RewardPointsAwardsAndRedemptionID'
      - $ref: '#/components/parameters/AwardID'
      requestBody:
        $ref: '#/components/requestBodies/Award'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Award'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /RewardPointsAwardsAndRedemption/{rewardpointsawardsandredemptionId}/Redemption/{redemptionId}/Update:
    put:
      tags:
      - BQ - Redemption
      summary: UpBQ Update details relating to Redemption
      description: UpBQ Update details relating to Redemption
      operationId: UpdateRedemption
      parameters:
      - $ref: '#/components/parameters/RewardPointsAwardsAndRedemptionID'
      - $ref: '#/components/parameters/RedemptionID'
      requestBody:
        $ref: '#/components/requestBodies/Redemption'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Redemption'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    RewardPointsTransaction:
      type: object
      properties:
        RewardPointsTransactionParameterType:
          type: string
        RewardPointsTransactionSelectedOption:
          type: string
        RewardPointsTransactionStatus:
          type: string
        RewardPointsTransactionType:
          type: string
        RewardPointsTransactionTransactionType:
          type: string
        RewardPointsTransactionTransaction:
          type: string
    RewardPointsAwardsAndRedemptionOutcome:
      type: object
      properties:
        RewardPointsAwardsAndRedemptionCalendar:
          type: string
        RewardPointsAwardsAndRedemptionCounterparty:
          type: string
        RewardPointsAwardsAndRedemptionDividend:
          type: string
        RewardPointsAwardsAndRedemptionFees:
          type: string
        RewardPointsAwardsAndRedemptionInterest:
          type: string
        RewardPointsAwardsAndRedemptionMargining:
          type: string
        RewardPointsAwardsAndRedemptionNotionalPrincipal:
          type: string
        RewardPointsAwardsAndRedemptionOptions:
          type: string
        RewardPointsAwardsAndRedemptionRates:
          type: object
        RewardPointsAwardsAndRedemptionSettlement:
          type: string
        RewardPointsAwardsAndRedemptionWorkProduct:
          type: string
    Award:
      type: object
      properties:
        AwardPreconditions:
          type: string
        AwardTaskSchedule:
          type: string
        Awards:
          type: object
        AwardPostconditions:
          type: string
        AwardAwardsServiceType:
          type: string
        AwardAwardsServiceDescription:
          type: string
        AwardAwardsServiceInputsandOuputs:
          type: string
        AwardAwardsServiceWorkProduct:
          type: string
        AwardAwardsServiceName:
          type: string
    Redemption:
      type: object
      properties:
        RedemptionPreconditions:
          type: string
        RedemptionTaskSchedule:
          type: string
        AwardsRedemption:
          type: object
        RedemptionPostconditions:
          type: string
        RedemptionAwardsRedemptionServiceType:
          type: string
        RedemptionAwardsRedemptionServiceDescription:
          type: string
        RedemptionAwardsRedemptionServiceInputsandOuputs:
          type: string
        RedemptionAwardsRedemptionServiceWorkProduct:
          type: string
        RedemptionAwardsRedemptionServiceName:
          type: string
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
        status:
          type: string
        message:
          type: string
  parameters:
    RewardPointsAwardsAndRedemptionID:
      name: rewardpointsawardsandredemptionId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    RewardPointsAwardsAndRedemptionOutcomeID:
      name: rewardpointsawardsandredemptionoutcomeId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    AwardID:
      name: awardId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    RedemptionID:
      name: redemptionId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
  requestBodies:
    RewardPointsTransaction:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RewardPointsTransaction'
    Award:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Award'
    Redemption:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Redemption'
  responses:
    HTTPError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    BadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequestsError:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
...
