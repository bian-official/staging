openapi: 3.0.1
info:
  title: Quote Management
  description: This service domain handles the procedure used by traders to obtain and selecting quotes from market makers
  version: 10.0.0
servers:
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/B154/QuoteManagement/10.0.0
paths:
  /QuoteManagement/{quotemanagementId}/Control:
    put:
      tags:
      - CR - QuotationProcedure
      summary: Control Quotation Procedure
      description: Control Quotation Procedure
      operationId: Control
      parameters:
      - $ref: '#/components/parameters/QuoteManagementID'
      requestBody:
        $ref: '#/components/requestBodies/QuotationProcedure'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuotationProcedure'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /QuoteManagement/{quotemanagementId}/Exchange:
    put:
      tags:
      - CR - QuotationProcedure
      summary: Exchange Quotation Procedure
      description: Exchange Quotation Procedure
      operationId: Exchange
      parameters:
      - $ref: '#/components/parameters/QuoteManagementID'
      requestBody:
        $ref: '#/components/requestBodies/QuotationProcedure'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuotationProcedure'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /QuoteManagement/{quotemanagementId}/Execute:
    put:
      tags:
      - CR - QuotationProcedure
      summary: Execute Quotation Procedure
      description: Execute Quotation Procedure
      operationId: Execute
      parameters:
      - $ref: '#/components/parameters/QuoteManagementID'
      requestBody:
        $ref: '#/components/requestBodies/QuotationProcedure'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuotationProcedure'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /QuoteManagement/Initiate:
    post:
      tags:
      - CR - QuotationProcedure
      summary: Initiate Quotation Procedure
      description: Initiate Quotation Procedure
      operationId: Initiate
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/QuotationProcedure'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuotationProcedure'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /QuoteManagement/{quotemanagementId}/Notify:
    get:
      tags:
      - CR - QuotationProcedure
      summary: Notify Quotation Procedure
      description: Notify Quotation Procedure
      operationId: Notify
      parameters:
      - $ref: '#/components/parameters/QuoteManagementID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuotationProcedure'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /QuoteManagement/{quotemanagementId}/Request:
    put:
      tags:
      - CR - QuotationProcedure
      summary: Request Quotation Procedure
      description: Request Quotation Procedure
      operationId: Request
      parameters:
      - $ref: '#/components/parameters/QuoteManagementID'
      requestBody:
        $ref: '#/components/requestBodies/QuotationProcedure'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuotationProcedure'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /QuoteManagement/{quotemanagementId}/Retrieve:
    get:
      tags:
      - CR - QuotationProcedure
      summary: Retrieve Quotation Procedure
      description: Retrieve Quotation Procedure
      operationId: Retrieve
      parameters:
      - $ref: '#/components/parameters/QuoteManagementID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuotationProcedure'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /QuoteManagement/{quotemanagementId}/Update:
    put:
      tags:
      - CR - QuotationProcedure
      summary: Update Quotation Procedure
      description: Update Quotation Procedure
      operationId: Update
      parameters:
      - $ref: '#/components/parameters/QuoteManagementID'
      requestBody:
        $ref: '#/components/requestBodies/QuotationProcedure'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuotationProcedure'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /QuoteManagement/{quotemanagementId}/MarketQuoteRequestWorkstep/{marketquoterequestworkstepId}/Exchange:
    put:
      tags:
      - BQ - MarketQuoteRequestWorkstep
      summary: Exchange Market Quote Request Workstep
      description: Exchange Market Quote Request Workstep
      operationId: ExchangeMarketQuoteRequestWorkstep
      parameters:
      - $ref: '#/components/parameters/QuoteManagementID'
      - $ref: '#/components/parameters/MarketQuoteRequestWorkstepID'
      requestBody:
        $ref: '#/components/requestBodies/MarketQuoteRequestWorkstep'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketQuoteRequestWorkstep'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /QuoteManagement/{quotemanagementId}/MarketQuoteSelectionWorkstep/{marketquoteselectionworkstepId}/Exchange:
    put:
      tags:
      - BQ - MarketQuoteSelectionWorkstep
      summary: Exchange Market Quote Selection Workstep
      description: Exchange Market Quote Selection Workstep
      operationId: ExchangeMarketQuoteSelectionWorkstep
      parameters:
      - $ref: '#/components/parameters/QuoteManagementID'
      - $ref: '#/components/parameters/MarketQuoteSelectionWorkstepID'
      requestBody:
        $ref: '#/components/requestBodies/MarketQuoteSelectionWorkstep'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketQuoteSelectionWorkstep'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /QuoteManagement/{quotemanagementId}/MarketQuoteRequestWorkstep/{marketquoterequestworkstepId}/Execute:
    put:
      tags:
      - BQ - MarketQuoteRequestWorkstep
      summary: Execute Market Quote Request Workstep
      description: Execute Market Quote Request Workstep
      operationId: ExecuteMarketQuoteRequestWorkstep
      parameters:
      - $ref: '#/components/parameters/QuoteManagementID'
      - $ref: '#/components/parameters/MarketQuoteRequestWorkstepID'
      requestBody:
        $ref: '#/components/requestBodies/MarketQuoteRequestWorkstep'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketQuoteRequestWorkstep'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /QuoteManagement/{quotemanagementId}/MarketQuoteSelectionWorkstep/{marketquoteselectionworkstepId}/Execute:
    put:
      tags:
      - BQ - MarketQuoteSelectionWorkstep
      summary: Execute Market Quote Selection Workstep
      description: Execute Market Quote Selection Workstep
      operationId: ExecuteMarketQuoteSelectionWorkstep
      parameters:
      - $ref: '#/components/parameters/QuoteManagementID'
      - $ref: '#/components/parameters/MarketQuoteSelectionWorkstepID'
      requestBody:
        $ref: '#/components/requestBodies/MarketQuoteSelectionWorkstep'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketQuoteSelectionWorkstep'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /QuoteManagement/{quotemanagementId}/MarketQuoteRequestWorkstep/Initiate:
    post:
      tags:
      - BQ - MarketQuoteRequestWorkstep
      summary: Initiate Market Quote Request Workstep
      description: Initiate Market Quote Request Workstep
      operationId: InitiateMarketQuoteRequestWorkstep
      parameters:
      - $ref: '#/components/parameters/QuoteManagementID'
      requestBody:
        $ref: '#/components/requestBodies/MarketQuoteRequestWorkstep'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketQuoteRequestWorkstep'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /QuoteManagement/{quotemanagementId}/MarketQuoteSelectionWorkstep/Initiate:
    post:
      tags:
      - BQ - MarketQuoteSelectionWorkstep
      summary: Initiate Market Quote Selection Workstep
      description: Initiate Market Quote Selection Workstep
      operationId: InitiateMarketQuoteSelectionWorkstep
      parameters:
      - $ref: '#/components/parameters/QuoteManagementID'
      requestBody:
        $ref: '#/components/requestBodies/MarketQuoteSelectionWorkstep'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketQuoteSelectionWorkstep'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /QuoteManagement/{quotemanagementId}/MarketQuoteRequestWorkstep/{marketquoterequestworkstepId}/Notify:
    get:
      tags:
      - BQ - MarketQuoteRequestWorkstep
      summary: Notify Market Quote Request Workstep
      description: Notify Market Quote Request Workstep
      operationId: NotifyMarketQuoteRequestWorkstep
      parameters:
      - $ref: '#/components/parameters/QuoteManagementID'
      - $ref: '#/components/parameters/MarketQuoteRequestWorkstepID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketQuoteRequestWorkstep'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /QuoteManagement/{quotemanagementId}/MarketQuoteSelectionWorkstep/{marketquoteselectionworkstepId}/Notify:
    get:
      tags:
      - BQ - MarketQuoteSelectionWorkstep
      summary: Notify Market Quote Selection Workstep
      description: Notify Market Quote Selection Workstep
      operationId: NotifyMarketQuoteSelectionWorkstep
      parameters:
      - $ref: '#/components/parameters/QuoteManagementID'
      - $ref: '#/components/parameters/MarketQuoteSelectionWorkstepID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketQuoteSelectionWorkstep'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /QuoteManagement/{quotemanagementId}/MarketQuoteRequestWorkstep/{marketquoterequestworkstepId}/Request:
    put:
      tags:
      - BQ - MarketQuoteRequestWorkstep
      summary: Request Market Quote Request Workstep
      description: Request Market Quote Request Workstep
      operationId: RequestMarketQuoteRequestWorkstep
      parameters:
      - $ref: '#/components/parameters/QuoteManagementID'
      - $ref: '#/components/parameters/MarketQuoteRequestWorkstepID'
      requestBody:
        $ref: '#/components/requestBodies/MarketQuoteRequestWorkstep'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketQuoteRequestWorkstep'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /QuoteManagement/{quotemanagementId}/MarketQuoteSelectionWorkstep/{marketquoteselectionworkstepId}/Request:
    put:
      tags:
      - BQ - MarketQuoteSelectionWorkstep
      summary: Request Market Quote Selection Workstep
      description: Request Market Quote Selection Workstep
      operationId: RequestMarketQuoteSelectionWorkstep
      parameters:
      - $ref: '#/components/parameters/QuoteManagementID'
      - $ref: '#/components/parameters/MarketQuoteSelectionWorkstepID'
      requestBody:
        $ref: '#/components/requestBodies/MarketQuoteSelectionWorkstep'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketQuoteSelectionWorkstep'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /QuoteManagement/{quotemanagementId}/MarketQuoteRequestWorkstep/{marketquoterequestworkstepId}/Retrieve:
    get:
      tags:
      - BQ - MarketQuoteRequestWorkstep
      summary: Retrieve Market Quote Request Workstep
      description: Retrieve Market Quote Request Workstep
      operationId: RetrieveMarketQuoteRequestWorkstep
      parameters:
      - $ref: '#/components/parameters/QuoteManagementID'
      - $ref: '#/components/parameters/MarketQuoteRequestWorkstepID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketQuoteRequestWorkstep'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /QuoteManagement/{quotemanagementId}/MarketQuoteSelectionWorkstep/{marketquoteselectionworkstepId}/Retrieve:
    get:
      tags:
      - BQ - MarketQuoteSelectionWorkstep
      summary: Retrieve Market Quote Selection Workstep
      description: Retrieve Market Quote Selection Workstep
      operationId: RetrieveMarketQuoteSelectionWorkstep
      parameters:
      - $ref: '#/components/parameters/QuoteManagementID'
      - $ref: '#/components/parameters/MarketQuoteSelectionWorkstepID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketQuoteSelectionWorkstep'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /QuoteManagement/{quotemanagementId}/MarketQuoteRequestWorkstep/{marketquoterequestworkstepId}/Update:
    put:
      tags:
      - BQ - MarketQuoteRequestWorkstep
      summary: Update Market Quote Request Workstep
      description: Update Market Quote Request Workstep
      operationId: UpdateMarketQuoteRequestWorkstep
      parameters:
      - $ref: '#/components/parameters/QuoteManagementID'
      - $ref: '#/components/parameters/MarketQuoteRequestWorkstepID'
      requestBody:
        $ref: '#/components/requestBodies/MarketQuoteRequestWorkstep'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketQuoteRequestWorkstep'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /QuoteManagement/{quotemanagementId}/MarketQuoteSelectionWorkstep/{marketquoteselectionworkstepId}/Update:
    put:
      tags:
      - BQ - MarketQuoteSelectionWorkstep
      summary: Update Market Quote Selection Workstep
      description: Update Market Quote Selection Workstep
      operationId: UpdateMarketQuoteSelectionWorkstep
      parameters:
      - $ref: '#/components/parameters/QuoteManagementID'
      - $ref: '#/components/parameters/MarketQuoteSelectionWorkstepID'
      requestBody:
        $ref: '#/components/requestBodies/MarketQuoteSelectionWorkstep'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketQuoteSelectionWorkstep'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    QuotationProcedure:
      type: object
      properties:
        QuotationProcedureParameterType:
          type: string
        QuotationProcedureSelectedOption:
          type: string
        QuotationProcedureRequest:
          type: string
        QuotationProcedureSchedule:
          type: object
        QuotationProcedureStatus:
          type: string
        QuotationProcedureAssociatedPartyReference:
          type: object
        QuotationProcedureBusinessUnitReference:
          type: object
        QuotationProcedureServiceProviderReference:
          type: object
        QuotationProcedureFinancialFacilityReference:
          type: string
        QuotationProcedureEmployeeReference:
          type: object
        QuotationProcedureCustomerReference:
          type: object
        QuotationProcedureType:
          type: string
        QuotationProcedureServiceProviderSchedule:
          type: object
        QuotationProcedureServiceType:
          type: string
        QuotationProcedureProductandServiceType:
          type: string
        QuotationProcedureProductandServiceInstance:
          type: string
        QuotationProcedureTransactionType:
          type: string
        QuotationProcedureTransaction:
          type: string
        QuotationProcedureFinancialTransactionArrangement:
          type: string
        QuotationProcedureCustomerAgreementReference:
          type: string
        QuotationProcedureReference:
          type: string
    MarketQuoteRequestWorkstep:
      type: object
      properties:
        Preconditions:
          type: object
        BusinessUnit/EmployeeReference:
          type: object
        Schedule:
          type: object
        BusinessService:
          type: object
        Postconditions:
          type: object
        QuotationProcedureReference:
          type: string
        MarketQuoteRequestWorkstepReference:
          type: string
        MarketQuoteRequestWorkstepType:
          type: string
    MarketQuoteSelectionWorkstep:
      type: object
      properties:
        Preconditions:
          type: object
        BusinessUnit/EmployeeReference:
          type: object
        Schedule:
          type: object
        BusinessService:
          type: object
        Postconditions:
          type: object
        QuotationProcedureReference:
          type: string
        MarketQuoteSelectionWorkstepReference:
          type: string
        MarketQuoteSelectionWorkstepType:
          type: string
    QuoteManagementOutcome:
      type: object
      properties:
        QuoteManagementWorkProduct:
          type: object
        QuoteManagementProcedure:
          type: string
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
        status:
          type: string
        message:
          type: string
  parameters:
    QuoteManagementID:
      name: quotemanagementId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    MarketQuoteRequestWorkstepID:
      name: marketquoterequestworkstepId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    MarketQuoteSelectionWorkstepID:
      name: marketquoteselectionworkstepId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    QuoteManagementOutcomeID:
      name: quotemanagementoutcomeId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
  requestBodies:
    QuotationProcedure:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/QuotationProcedure'
    MarketQuoteRequestWorkstep:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MarketQuoteRequestWorkstep'
    MarketQuoteSelectionWorkstep:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MarketQuoteSelectionWorkstep'
  responses:
    HTTPError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    BadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequestsError:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
...
