openapi: 3.0.1
info:
  title: Product Broker Agreement
  description: This service domain maintains product broker contractual and service level agreements and tracks and confirms compliance and service related activity/volume goals when necessary
  version: 10.0.0
servers:
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/B154/ProductBrokerAgreement/10.0.0
paths:
  /ProductBrokerAgreement/Evaluate:
    post:
      tags:
      - CR - BrokerAgreement
      summary: EvCR Establish a product broker agreement (evaluate applicable rules)
      description: EvCR Establish a product broker agreement (evaluate applicable rules)
      operationId: Evaluate
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/EvaluateBrokerAgreementRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvaluateBrokerAgreementResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductBrokerAgreement/{productbrokeragreementId}/Update:
    put:
      tags:
      - CR - BrokerAgreement
      summary: UpCR Update details of an active product broker agreement
      description: UpCR Update details of an active product broker agreement
      operationId: Update
      parameters:
      - $ref: '#/components/parameters/ProductBrokerAgreementID'
      requestBody:
        $ref: '#/components/requestBodies/BrokerAgreement'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrokerAgreement'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductBrokerAgreement/{productbrokeragreementId}/Retrieve:
    get:
      tags:
      - CR - BrokerAgreement
      summary: ReCR Retrieve details about a broker agreement
      description: ReCR Retrieve details about a broker agreement
      operationId: Retrieve
      parameters:
      - $ref: '#/components/parameters/ProductBrokerAgreementID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrokerAgreement'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductBrokerAgreement/{productbrokeragreementId}/LegalTerms/Evaluate:
    post:
      tags:
      - BQ - LegalTerms
      summary: EvBQ Establish the legal terms for a broker agreement
      description: EvBQ Establish the legal terms for a broker agreement
      operationId: EvaluateLegalTerms
      parameters:
      - $ref: '#/components/parameters/ProductBrokerAgreementID'
      requestBody:
        $ref: '#/components/requestBodies/EvaluateLegalTermsRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvaluateLegalTermsResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductBrokerAgreement/{productbrokeragreementId}/LegalTerms/{legaltermsId}/Update:
    put:
      tags:
      - BQ - LegalTerms
      summary: UpBQ Update the legal terms for a broker agreement
      description: UpBQ Update the legal terms for a broker agreement
      operationId: UpdateLegalTerms
      parameters:
      - $ref: '#/components/parameters/ProductBrokerAgreementID'
      - $ref: '#/components/parameters/LegalTermsID'
      requestBody:
        $ref: '#/components/requestBodies/UpdateLegalTermsRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateLegalTermsResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductBrokerAgreement/{productbrokeragreementId}/LegalTerms/{legaltermsId}/Retrieve:
    get:
      tags:
      - BQ - LegalTerms
      summary: ReBQ Retrieve details about the legal terms of an agreement
      description: ReBQ Retrieve details about the legal terms of an agreement
      operationId: RetrieveLegalTerms
      parameters:
      - $ref: '#/components/parameters/ProductBrokerAgreementID'
      - $ref: '#/components/parameters/LegalTermsID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveLegalTermsResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductBrokerAgreement/{productbrokeragreementId}/RegulatoryTerms/Evaluate:
    post:
      tags:
      - BQ - RegulatoryTerms
      summary: EvBQ Establish the regulatory terms for a broker agreement
      description: EvBQ Establish the regulatory terms for a broker agreement
      operationId: EvaluateRegulatoryTerms
      parameters:
      - $ref: '#/components/parameters/ProductBrokerAgreementID'
      requestBody:
        $ref: '#/components/requestBodies/EvaluateRegulatoryTermsRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvaluateRegulatoryTermsResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductBrokerAgreement/{productbrokeragreementId}/RegulatoryTerms/{regulatorytermsId}/Update:
    put:
      tags:
      - BQ - RegulatoryTerms
      summary: UpBQ Update the regulatory terms for a broker agreement
      description: UpBQ Update the regulatory terms for a broker agreement
      operationId: UpdateRegulatoryTerms
      parameters:
      - $ref: '#/components/parameters/ProductBrokerAgreementID'
      - $ref: '#/components/parameters/RegulatoryTermsID'
      requestBody:
        $ref: '#/components/requestBodies/UpdateRegulatoryTermsRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateRegulatoryTermsResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductBrokerAgreement/{productbrokeragreementId}/RegulatoryTerms/{regulatorytermsId}/Retrieve:
    get:
      tags:
      - BQ - RegulatoryTerms
      summary: ReBQ Retrieve details about the regulatory terms of an agreement
      description: ReBQ Retrieve details about the regulatory terms of an agreement
      operationId: RetrieveRegulatoryTerms
      parameters:
      - $ref: '#/components/parameters/ProductBrokerAgreementID'
      - $ref: '#/components/parameters/RegulatoryTermsID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrokerAgreement'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductBrokerAgreement/{productbrokeragreementId}/PolicyTerms/Evaluate:
    post:
      tags:
      - BQ - PolicyTerms
      summary: EvBQ Establish the corporate policy terms for a broker agreement
      description: EvBQ Establish the corporate policy terms for a broker agreement
      operationId: EvaluatePolicyTerms
      parameters:
      - $ref: '#/components/parameters/ProductBrokerAgreementID'
      requestBody:
        $ref: '#/components/requestBodies/EvaluatePolicyTermsRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvaluatePolicyTermsResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductBrokerAgreement/{productbrokeragreementId}/PolicyTerms/{policytermsId}/Update:
    put:
      tags:
      - BQ - PolicyTerms
      summary: UpBQ Update the corporate policy terms for a broker agreement
      description: UpBQ Update the corporate policy terms for a broker agreement
      operationId: UpdatePolicyTerms
      parameters:
      - $ref: '#/components/parameters/ProductBrokerAgreementID'
      - $ref: '#/components/parameters/PolicyTermsID'
      requestBody:
        $ref: '#/components/requestBodies/UpdatePolicyTermsRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePolicyTermsResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ProductBrokerAgreement/{productbrokeragreementId}/PolicyTerms/{policytermsId}/Retrieve:
    get:
      tags:
      - BQ - PolicyTerms
      summary: ReBQ Retrieve details about the corporate policy terms of an agreement
      description: ReBQ Retrieve details about the corporate policy terms of an agreement
      operationId: RetrievePolicyTerms
      parameters:
      - $ref: '#/components/parameters/ProductBrokerAgreementID'
      - $ref: '#/components/parameters/PolicyTermsID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrokerAgreement'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    BrokerAgreement:
      type: object
      properties:
        PartyReference:
          type: object
          description: Reference to the broker organization
        AgreementType:
          type: string
          description: The type of agreement (e.g. service provider, product alliance)
        AgreementJurisdiction:
          type: string
          description: The contractual jurisdiction or coverage of the agreement (e.g. "governed by State")
        AgreementValidFromOrToDate:
          type: string
          description: The term of the agreement
        AgreementSignaturesOrResponsibleParties:
          type: string
          description: Reference to signatories
        DocumentDirectoryEntryInstanceReference:
          type: object
          description: Reference to any associated documents
    RegulatoryTerms:
      type: object
      properties:
        RegulatoryAuthority:
          type: string
          description: The applicable regulatory authority
        ApplicableRegulationReference:
          type: object
          description: Reference to any regulatory requirements
        ApplicableRegulationInterpretation:
          type: string
          description: Explanation or interpretation of the regulation as applied
    PolicyTerms:
      type: object
      properties:
        BankPolicy-RuleType:
          type: string
          description: The type of bank policy referenced (e.g. staff certification)
        ApplicableBankPolicy-RuleReference:
          type: object
          description: Reference to the bank's policies or rules
        ApplicableBankPolicy-RuleInterpretation:
          type: string
          description: Explanation or interpretation of the policy or rule as applied
    LegalTerms:
      type: object
      properties:
        Jurisdiction:
          type: string
          description: The legal jurisdiction
        ApplicableLawReference:
          type: object
          description: Reference to any legal requirements
        ApplicableLawInterpretation:
          type: string
          description: Explanation or interpretation of the law as applied
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          description: NA
        status:
          type: string
          description: NA
        message:
          type: string
          description: NA
    EvaluateBrokerAgreementRequest:
      type: object
      properties:
        BrokerAgreement:
          type: object
          properties:
            PartyReference:
              type: object
              description: NA
            AgreementType:
              type: string
              description: NA
            AgreementValidFromOrToDate:
              type: string
              description: NA
            AgreementSignaturesOrResponsibleParties:
              type: string
              description: NA
            DocumentDirectoryEntryInstanceReference:
              type: object
              description: NA
    EvaluateBrokerAgreementResponse:
      type: object
      properties:
        BrokerAgreement:
          type: object
          properties:
            AgreementJurisdiction:
              type: string
              description: NA
            AgreementValidFromOrToDate:
              type: string
              description: NA
            AgreementSignaturesOrResponsibleParties:
              type: string
              description: NA
            DocumentDirectoryEntryInstanceReference:
              type: object
              description: NA
    EvaluateLegalTermsRequest:
      type: object
      properties:
        BrokerAgreement:
          type: object
          properties:
            PartyReference:
              type: object
              description: NA
            AgreementType:
              type: string
              description: NA
            AgreementJurisdiction:
              type: string
              description: NA
            AgreementValidFromOrToDate:
              type: string
              description: NA
            AgreementSignaturesOrResponsibleParties:
              type: string
              description: NA
            DocumentDirectoryEntryInstanceReference:
              type: object
              description: NA
        LegalTerms:
          type: object
          properties:
            ApplicableLawReference:
              type: object
              description: NA
    EvaluateLegalTermsResponse:
      type: object
      properties:
        LegalTerms:
          type: object
          properties:
            ApplicableLawInterpretation:
              type: string
              description: NA
    UpdateLegalTermsRequest:
      type: object
      properties:
        LegalTerms:
          type: object
          properties:
            Jurisdiction:
              type: string
              description: NA
            ApplicableLawReference:
              type: object
              description: NA
    UpdateLegalTermsResponse:
      type: object
      properties:
        LegalTerms:
          type: object
          properties:
            Jurisdiction:
              type: string
              description: NA
            ApplicableLawReference:
              type: object
              description: NA
    RetrieveLegalTermsResponse:
      type: object
      properties:
        BrokerAgreement:
          type: object
          properties:
            PartyReference:
              type: object
              description: NA
            AgreementType:
              type: string
              description: NA
            AgreementJurisdiction:
              type: string
              description: NA
            AgreementValidFromOrToDate:
              type: string
              description: NA
            AgreementSignaturesOrResponsibleParties:
              type: string
              description: NA
            DocumentDirectoryEntryInstanceReference:
              type: object
              description: NA
        LegalTerms:
          type: object
          properties:
            ApplicableLawReference:
              type: object
              description: NA
            ApplicableLawInterpretation:
              type: string
              description: NA
    EvaluateRegulatoryTermsRequest:
      type: object
      properties:
        BrokerAgreement:
          type: object
          properties:
            PartyReference:
              type: object
              description: NA
            AgreementType:
              type: string
              description: NA
            AgreementJurisdiction:
              type: string
              description: NA
            AgreementValidFromOrToDate:
              type: string
              description: NA
            AgreementSignaturesOrResponsibleParties:
              type: string
              description: NA
            DocumentDirectoryEntryInstanceReference:
              type: object
              description: NA
        RegulatoryTerms:
          type: object
          properties:
            RegulatoryAuthority:
              type: string
              description: NA
            ApplicableRegulationReference:
              type: object
              description: NA
    EvaluateRegulatoryTermsResponse:
      type: object
      properties:
        RegulatoryTerms:
          type: object
          properties:
            ApplicableRegulationInterpretation:
              type: string
              description: NA
    UpdateRegulatoryTermsRequest:
      type: object
      properties:
        RegulatoryTerms:
          type: object
          properties:
            RegulatoryAuthority:
              type: string
              description: NA
            ApplicableRegulationReference:
              type: object
              description: NA
    UpdateRegulatoryTermsResponse:
      type: object
      properties:
        RegulatoryTerms:
          type: object
          properties:
            RegulatoryAuthority:
              type: string
              description: NA
            ApplicableRegulationReference:
              type: object
              description: NA
    EvaluatePolicyTermsRequest:
      type: object
      properties:
        BrokerAgreement:
          type: object
          properties:
            PartyReference:
              type: object
              description: NA
            AgreementType:
              type: string
              description: NA
            AgreementJurisdiction:
              type: string
              description: NA
            AgreementValidFromOrToDate:
              type: string
              description: NA
            AgreementSignaturesOrResponsibleParties:
              type: string
              description: NA
            DocumentDirectoryEntryInstanceReference:
              type: object
              description: NA
        PolicyTerms:
          type: object
          properties:
            BankPolicy-RuleType:
              type: string
              description: NA
            ApplicableBankPolicy-RuleReference:
              type: object
              description: NA
    EvaluatePolicyTermsResponse:
      type: object
      properties:
        PolicyTerms:
          type: object
          properties:
            ApplicableBankPolicy-RuleInterpretation:
              type: string
              description: NA
    UpdatePolicyTermsRequest:
      type: object
      properties:
        PolicyTerms:
          type: object
          properties:
            BankPolicy-RuleType:
              type: string
              description: NA
            ApplicableBankPolicy-RuleReference:
              type: object
              description: NA
    UpdatePolicyTermsResponse:
      type: object
      properties:
        PolicyTerms:
          type: object
          properties:
            BankPolicy-RuleType:
              type: string
              description: NA
            ApplicableBankPolicy-RuleReference:
              type: object
              description: NA
  parameters:
    ProductBrokerAgreementID:
      name: productbrokeragreementId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    RegulatoryTermsID:
      name: regulatorytermsId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    PolicyTermsID:
      name: policytermsId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    LegalTermsID:
      name: legaltermsId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
  requestBodies:
    EvaluateBrokerAgreementRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EvaluateBrokerAgreementRequest'
    BrokerAgreement:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BrokerAgreement'
    EvaluateLegalTermsRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EvaluateLegalTermsRequest'
    UpdateLegalTermsRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateLegalTermsRequest'
    EvaluateRegulatoryTermsRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EvaluateRegulatoryTermsRequest'
    UpdateRegulatoryTermsRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateRegulatoryTermsRequest'
    EvaluatePolicyTermsRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EvaluatePolicyTermsRequest'
    UpdatePolicyTermsRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdatePolicyTermsRequest'
  responses:
    HTTPError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    BadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequestsError:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
...
