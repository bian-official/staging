openapi: 3.0.1
info:
  title: Contact Handler
  description: This service domain handles a customer's interactive contact with the bank. This will typically involve launching of one or more channel/device specific dialogue sessions as necessary within the customer contact
  version: 10.0.0
servers:
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/B154/ContactHandler/10.0.0
paths:
  /ContactHandler/Initiate:
    post:
      tags:
      - CR - CustomerContactOperatingSession
      summary: InCR Initiate a contact (can be inbound or outbound)
      description: InCR Initiate a contact (can be inbound or outbound)
      operationId: Initiate
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/CustomerContactOperatingSession'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerContactOperatingSession'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ContactHandler/{contacthandlerId}/Update:
    put:
      tags:
      - CR - CustomerContactOperatingSession
      summary: UpCR Update details for a customer contact
      description: UpCR Update details for a customer contact
      operationId: Update
      parameters:
      - $ref: '#/components/parameters/ContactHandlerID'
      requestBody:
        $ref: '#/components/requestBodies/CustomerContactOperatingSession'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerContactOperatingSession'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ContactHandler/{contacthandlerId}/Execute:
    put:
      tags:
      - CR - CustomerContactOperatingSession
      summary: ExCR Execute an automated task for a contact (e.g. route to specialist)
      description: ExCR Execute an automated task for a contact (e.g. route to specialist)
      operationId: Execute
      parameters:
      - $ref: '#/components/parameters/ContactHandlerID'
      requestBody:
        $ref: '#/components/requestBodies/CustomerContactOperatingSession'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerContactOperatingSession'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ContactHandler/{contacthandlerId}/Request:
    put:
      tags:
      - CR - CustomerContactOperatingSession
      summary: RqCR Request manual intervention in a contact (e.g. override routing decision)
      description: RqCR Request manual intervention in a contact (e.g. override routing decision)
      operationId: Request
      parameters:
      - $ref: '#/components/parameters/ContactHandlerID'
      requestBody:
        $ref: '#/components/requestBodies/CustomerContactOperatingSession'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerContactOperatingSession'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ContactHandler/{contacthandlerId}/Retrieve:
    get:
      tags:
      - CR - CustomerContactOperatingSession
      summary: ReCR Retrieve details about a customer contact
      description: ReCR Retrieve details about a customer contact
      operationId: Retrieve
      parameters:
      - $ref: '#/components/parameters/ContactHandlerID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerContactOperatingSession'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ContactHandler/{contacthandlerId}/Authentication/{authenticationId}/Retrieve:
    get:
      tags:
      - BQ - Authentication
      summary: ReBQ Retrieve details about an authentication task
      description: ReBQ Retrieve details about an authentication task
      operationId: RetrieveAuthentication
      parameters:
      - $ref: '#/components/parameters/ContactHandlerID'
      - $ref: '#/components/parameters/AuthenticationID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveAuthenticationResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ContactHandler/{contacthandlerId}/Routing/{routingId}/Retrieve:
    get:
      tags:
      - BQ - Routing
      summary: ReBQ Retrieve details about a routing task
      description: ReBQ Retrieve details about a routing task
      operationId: RetrieveRouting
      parameters:
      - $ref: '#/components/parameters/ContactHandlerID'
      - $ref: '#/components/parameters/RoutingID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveRoutingResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ContactHandler/{contacthandlerId}/Session/Initiate:
    post:
      tags:
      - BQ - Session
      summary: InBQ Initiate a servicing session (from within an active contact)
      description: InBQ Initiate a servicing session (from within an active contact)
      operationId: InitiateSession
      parameters:
      - $ref: '#/components/parameters/ContactHandlerID'
      requestBody:
        $ref: '#/components/requestBodies/CustomerContactOperatingSession'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitiateSessionResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ContactHandler/{contacthandlerId}/Session/{sessionId}/Update:
    put:
      tags:
      - BQ - Session
      summary: UpBQ Update details about a servicing session
      description: UpBQ Update details about a servicing session
      operationId: UpdateSession
      parameters:
      - $ref: '#/components/parameters/ContactHandlerID'
      - $ref: '#/components/parameters/SessionID'
      requestBody:
        $ref: '#/components/requestBodies/CustomerContactOperatingSession'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerContactOperatingSession'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ContactHandler/{contacthandlerId}/Session/{sessionId}/Execute:
    put:
      tags:
      - BQ - Session
      summary: ExBQ Execute an automated task in a session (e.g. re-authenticate)
      description: ExBQ Execute an automated task in a session (e.g. re-authenticate)
      operationId: ExecuteSession
      parameters:
      - $ref: '#/components/parameters/ContactHandlerID'
      - $ref: '#/components/parameters/SessionID'
      requestBody:
        $ref: '#/components/requestBodies/CustomerContactOperatingSession'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerContactOperatingSession'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ContactHandler/{contacthandlerId}/Session/{sessionId}/Retrieve:
    get:
      tags:
      - BQ - Session
      summary: ReBQ Retrieve details about a customer servicing session
      description: ReBQ Retrieve details about a customer servicing session
      operationId: RetrieveSession
      parameters:
      - $ref: '#/components/parameters/ContactHandlerID'
      - $ref: '#/components/parameters/SessionID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveSessionResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ContactHandler/{contacthandlerId}/History/{historyId}/Update:
    put:
      tags:
      - BQ - History
      summary: UpBQ Update a contact history record content
      description: UpBQ Update a contact history record content
      operationId: UpdateHistory
      parameters:
      - $ref: '#/components/parameters/ContactHandlerID'
      - $ref: '#/components/parameters/HistoryID'
      requestBody:
        $ref: '#/components/requestBodies/UpdateHistoryRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateHistoryResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /ContactHandler/{contacthandlerId}/History/{historyId}/Retrieve:
    get:
      tags:
      - BQ - History
      summary: ReBQ Retrieve historical details about a contact event
      description: ReBQ Retrieve historical details about a contact event
      operationId: RetrieveHistory
      parameters:
      - $ref: '#/components/parameters/ContactHandlerID'
      - $ref: '#/components/parameters/HistoryID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveHistoryResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    CustomerContactOperatingSession:
      type: object
      properties:
        CustomerContactInboundorOutboundIndicator:
          type: boolean
        eBranchOperatingSessionReference:
          type: object
        AdvancedVoiceServiceOperatingSessionReference:
          type: object
        CustomerContactRecordReference:
          type: object
        CustomerContactRecord:
          type: string
        CustomerContactRecordCustomerReference:
          type: object
        CustomerContactRecordContactDevice:
          type: string
        CustomerContactRecordAuthenticationStatus:
          type: string
        CustomerContactRecordRoutingSelectionStatus:
          type: string
        CustomerContactRecordMenuSelection:
          type: string
        CustomerContactRecordServicingRequest:
          type: string
        CustomerContactRecordServicingEventHistory:
          type: string
        CustomerContactRecordServicingPositionReference:
          type: object
        CustomerContactRecordServicingResourceReference:
          type: object
        CustomerContactRecordActivityRecord:
          type: string
        CustomerSessionDialogueReference:
          type: object
        CustomerSessionDialogueRecord:
          type: string
        CustomerContactRecordDuration:
          type: string
        CustomerContactRecordResult:
          type: string
    Routing:
      type: object
      properties:
        RoutingTaskRecord:
          type: string
    Session:
      type: object
      properties:
        SessionTaskRecord:
          type: string
        SessionResult:
          type: string
    History:
      type: object
      properties:
        HistoryTaskRecord:
          type: string
    Authentication:
      type: object
      properties:
        AuthenticationTaskRecord:
          type: string
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
        status:
          type: string
        message:
          type: string
    RetrieveAuthenticationResponse:
      type: object
      properties:
        CustomerContactOperatingSession:
          type: object
          properties:
            CustomerContactInboundorOutboundIndicator:
              type: boolean
            eBranchOperatingSessionReference:
              type: object
            AdvancedVoiceServiceOperatingSessionReference:
              type: object
            CustomerContactRecordReference:
              type: object
            CustomerContactRecordCustomerReference:
              type: object
            CustomerContactRecordContactDevice:
              type: string
            CustomerContactRecordAuthenticationStatus:
              type: string
            CustomerContactRecordRoutingSelectionStatus:
              type: string
            CustomerContactRecordMenuSelection:
              type: string
            CustomerContactRecordServicingRequest:
              type: string
            CustomerContactRecordServicingEventHistory:
              type: string
            CustomerContactRecordActivityRecord:
              type: string
            CustomerSessionDialogueReference:
              type: object
            CustomerSessionDialogueRecord:
              type: string
        Authentication:
          type: object
          properties:
            AuthenticationTaskRecord:
              type: string
    RetrieveRoutingResponse:
      type: object
      properties:
        CustomerContactOperatingSession:
          type: object
          properties:
            CustomerContactInboundorOutboundIndicator:
              type: boolean
            eBranchOperatingSessionReference:
              type: object
            AdvancedVoiceServiceOperatingSessionReference:
              type: object
            CustomerContactRecordReference:
              type: object
            CustomerContactRecordCustomerReference:
              type: object
            CustomerContactRecordContactDevice:
              type: string
            CustomerContactRecordAuthenticationStatus:
              type: string
            CustomerContactRecordRoutingSelectionStatus:
              type: string
            CustomerContactRecordMenuSelection:
              type: string
            CustomerContactRecordServicingRequest:
              type: string
            CustomerContactRecordServicingEventHistory:
              type: string
            CustomerContactRecordActivityRecord:
              type: string
            CustomerSessionDialogueReference:
              type: object
            CustomerSessionDialogueRecord:
              type: string
        Routing:
          type: object
          properties:
            RoutingTaskRecord:
              type: string
    InitiateSessionResponse:
      type: object
      properties:
        CustomerContactOperatingSession:
          type: object
          properties:
            CustomerContactRecordAuthenticationStatus:
              type: string
            CustomerContactRecordRoutingSelectionStatus:
              type: string
            CustomerContactRecordActivityRecord:
              type: string
            CustomerSessionDialogueReference:
              type: object
            CustomerSessionDialogueRecord:
              type: string
            CustomerContactRecordDuration:
              type: string
            CustomerContactRecordResult:
              type: string
        Session:
          type: object
          properties:
            SessionTaskRecord:
              type: string
            SessionResult:
              type: string
    RetrieveSessionResponse:
      type: object
      properties:
        CustomerContactOperatingSession:
          type: object
          properties:
            CustomerContactRecord:
              type: string
            CustomerContactRecordCustomerReference:
              type: object
            CustomerContactRecordContactDevice:
              type: string
            CustomerContactRecordAuthenticationStatus:
              type: string
            CustomerContactRecordRoutingSelectionStatus:
              type: string
            CustomerContactRecordMenuSelection:
              type: string
            CustomerContactRecordServicingRequest:
              type: string
            CustomerContactRecordServicingEventHistory:
              type: string
            CustomerContactRecordServicingPositionReference:
              type: object
            CustomerContactRecordServicingResourceReference:
              type: object
            CustomerContactRecordActivityRecord:
              type: string
            CustomerSessionDialogueReference:
              type: object
            CustomerSessionDialogueRecord:
              type: string
            CustomerContactRecordDuration:
              type: string
            CustomerContactRecordResult:
              type: string
        Session:
          type: object
          properties:
            SessionTaskRecord:
              type: string
            SessionResult:
              type: string
    UpdateHistoryRequest:
      type: object
      properties:
        CustomerContactOperatingSession:
          type: object
          properties:
            CustomerContactInboundorOutboundIndicator:
              type: boolean
            eBranchOperatingSessionReference:
              type: object
            AdvancedVoiceServiceOperatingSessionReference:
              type: object
            CustomerContactRecordReference:
              type: object
            CustomerContactRecordCustomerReference:
              type: object
            CustomerContactRecordContactDevice:
              type: string
            CustomerContactRecordAuthenticationStatus:
              type: string
            CustomerContactRecordRoutingSelectionStatus:
              type: string
            CustomerContactRecordMenuSelection:
              type: string
            CustomerContactRecordServicingRequest:
              type: string
            CustomerContactRecordServicingEventHistory:
              type: string
            CustomerContactRecordServicingPositionReference:
              type: object
            CustomerContactRecordServicingResourceReference:
              type: object
            CustomerContactRecordActivityRecord:
              type: string
            CustomerSessionDialogueReference:
              type: object
            CustomerSessionDialogueRecord:
              type: string
            CustomerContactRecordDuration:
              type: string
            CustomerContactRecordResult:
              type: string
        History:
          type: object
          properties:
            HistoryTaskRecord:
              type: string
    UpdateHistoryResponse:
      type: object
      properties:
        CustomerContactOperatingSession:
          type: object
          properties:
            CustomerContactInboundorOutboundIndicator:
              type: boolean
            eBranchOperatingSessionReference:
              type: object
            AdvancedVoiceServiceOperatingSessionReference:
              type: object
            CustomerContactRecordReference:
              type: object
            CustomerContactRecordCustomerReference:
              type: object
            CustomerContactRecordContactDevice:
              type: string
            CustomerContactRecordAuthenticationStatus:
              type: string
            CustomerContactRecordRoutingSelectionStatus:
              type: string
            CustomerContactRecordMenuSelection:
              type: string
            CustomerContactRecordServicingRequest:
              type: string
            CustomerContactRecordServicingEventHistory:
              type: string
            CustomerContactRecordServicingPositionReference:
              type: object
            CustomerContactRecordServicingResourceReference:
              type: object
            CustomerContactRecordActivityRecord:
              type: string
            CustomerSessionDialogueReference:
              type: object
            CustomerSessionDialogueRecord:
              type: string
            CustomerContactRecordDuration:
              type: string
            CustomerContactRecordResult:
              type: string
        History:
          type: object
          properties:
            HistoryTaskRecord:
              type: string
    RetrieveHistoryResponse:
      type: object
      properties:
        CustomerContactOperatingSession:
          type: object
          properties:
            CustomerContactInboundorOutboundIndicator:
              type: boolean
            eBranchOperatingSessionReference:
              type: object
            AdvancedVoiceServiceOperatingSessionReference:
              type: object
            CustomerContactRecordReference:
              type: object
            CustomerContactRecordCustomerReference:
              type: object
            CustomerContactRecordContactDevice:
              type: string
            CustomerContactRecordAuthenticationStatus:
              type: string
            CustomerContactRecordRoutingSelectionStatus:
              type: string
            CustomerContactRecordMenuSelection:
              type: string
            CustomerContactRecordServicingRequest:
              type: string
            CustomerContactRecordServicingEventHistory:
              type: string
            CustomerContactRecordServicingPositionReference:
              type: object
            CustomerContactRecordServicingResourceReference:
              type: object
            CustomerContactRecordActivityRecord:
              type: string
            CustomerSessionDialogueReference:
              type: object
            CustomerSessionDialogueRecord:
              type: string
            CustomerContactRecordDuration:
              type: string
            CustomerContactRecordResult:
              type: string
        History:
          type: object
          properties:
            HistoryTaskRecord:
              type: string
  parameters:
    ContactHandlerID:
      name: contacthandlerId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    RoutingID:
      name: routingId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    SessionID:
      name: sessionId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    HistoryID:
      name: historyId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    AuthenticationID:
      name: authenticationId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
  requestBodies:
    CustomerContactOperatingSession:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerContactOperatingSession'
    UpdateHistoryRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateHistoryRequest'
  responses:
    HTTPError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    BadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequestsError:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
...
