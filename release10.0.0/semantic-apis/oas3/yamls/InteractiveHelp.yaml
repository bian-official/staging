openapi: 3.0.1
info:
  title: Interactive Help
  description: Operate the automated facility that provides interactive context sensitive servicing guidance to employees and self-serve customers
  version: 10.0.0
servers:
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/B154/InteractiveHelp/10.0.0
paths:
  /InteractiveHelp/{interactivehelpId}/HelpServiceSelection/Initiate:
    post:
      tags:
      - BQ - HelpServiceSelection
      summary: InBQ Initiate an interactive help service exchange
      description: InBQ Initiate an interactive help service exchange
      operationId: InitiateHelpServiceSelection
      parameters:
      - $ref: '#/components/parameters/InteractiveHelpID'
      requestBody:
        $ref: '#/components/requestBodies/HelpServiceSelection'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelpServiceSelection'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /InteractiveHelp/{interactivehelpId}/HelpServiceSelection/{helpserviceselectionId}/Capture:
    put:
      tags:
      - BQ - HelpServiceSelection
      summary: CaBQ Capture user feedback relating to the service exchange
      description: CaBQ Capture user feedback relating to the service exchange
      operationId: CaptureHelpServiceSelection
      parameters:
      - $ref: '#/components/parameters/InteractiveHelpID'
      - $ref: '#/components/parameters/HelpServiceSelectionID'
      requestBody:
        $ref: '#/components/requestBodies/HelpServiceSelection'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelpServiceSelection'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /InteractiveHelp/{interactivehelpId}/HelpServiceSelection/{helpserviceselectionId}/Execute:
    put:
      tags:
      - BQ - HelpServiceSelection
      summary: ExBQ Execute an automated action within the exchange
      description: ExBQ Execute an automated action within the exchange
      operationId: ExecuteHelpServiceSelection
      parameters:
      - $ref: '#/components/parameters/InteractiveHelpID'
      - $ref: '#/components/parameters/HelpServiceSelectionID'
      requestBody:
        $ref: '#/components/requestBodies/HelpServiceSelection'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelpServiceSelection'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /InteractiveHelp/{interactivehelpId}/HelpServiceSelection/{helpserviceselectionId}/Retrieve:
    get:
      tags:
      - BQ - HelpServiceSelection
      summary: ReBQ Retrieve details about an interactive help service exchange
      description: ReBQ Retrieve details about an interactive help service exchange
      operationId: RetrieveHelpServiceSelection
      parameters:
      - $ref: '#/components/parameters/InteractiveHelpID'
      - $ref: '#/components/parameters/HelpServiceSelectionID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelpServiceSelection'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    interactiveHelpServiceOperatingSession:
      type: object
      properties: {}
    HelpServiceSelection:
      type: object
      properties:
        HelpSelectionInteractionType:
          type: string
        HelpSelectionProductandServiceType:
          type: string
        HelpSelectionProductFeatureType:
          type: string
        SessionDialogueRecord:
          type: string
        HelpSelectionKeyWordMenu:
          type: string
        HelpSelectionKeyWordSelection:
          type: string
        InteractiveHelp:
          type: string
        HelpSelectionTaskResult:
          type: string
        HelpSelectionFeedback:
          type: string
        Employee/BusinessUnitReference:
          type: object
        Date/Time:
          type: string
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
        status:
          type: string
        message:
          type: string
  parameters:
    InteractiveHelpID:
      name: interactivehelpId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    HelpServiceSelectionID:
      name: helpserviceselectionId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
  requestBodies:
    HelpServiceSelection:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HelpServiceSelection'
  responses:
    HTTPError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    BadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequestsError:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
...
